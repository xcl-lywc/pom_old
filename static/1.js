webpackJsonplensyn_ui([1],{

/***/ 1142:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_PartyManage_vue__ = __webpack_require__(1461);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_PartyManage_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_PartyManage_vue__);
/* harmony namespace reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_PartyManage_vue__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_PartyManage_vue__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_13_7_3_vue_loader_lib_template_compiler_index_id_data_v_6af5d53e_hasScoped_true_buble_transforms_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_template_index_0_PartyManage_vue__ = __webpack_require__(1695);
var disposed = false
function injectStyle (ssrContext) {
  if (disposed) return
  __webpack_require__(1645)
  __webpack_require__(1647)
}
var normalizeComponent = __webpack_require__(42)
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = "data-v-6af5d53e"
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_PartyManage_vue___default.a,
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_13_7_3_vue_loader_lib_template_compiler_index_id_data_v_6af5d53e_hasScoped_true_buble_transforms_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_template_index_0_PartyManage_vue__["a" /* default */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "devPkg/components/organization/PartyManage.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-loader/node_modules/vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-6af5d53e", Component.options)
  } else {
    hotAPI.reload("data-v-6af5d53e", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),

/***/ 1243:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_Show_Tree_Selected_Last_vue__ = __webpack_require__(1244);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_Show_Tree_Selected_Last_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_Show_Tree_Selected_Last_vue__);
/* harmony namespace reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_Show_Tree_Selected_Last_vue__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_Show_Tree_Selected_Last_vue__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_13_7_3_vue_loader_lib_template_compiler_index_id_data_v_20f8a7dc_hasScoped_false_buble_transforms_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_template_index_0_Show_Tree_Selected_Last_vue__ = __webpack_require__(1269);
var disposed = false
var normalizeComponent = __webpack_require__(42)
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_Show_Tree_Selected_Last_vue___default.a,
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_13_7_3_vue_loader_lib_template_compiler_index_id_data_v_20f8a7dc_hasScoped_false_buble_transforms_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_template_index_0_Show_Tree_Selected_Last_vue__["a" /* default */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "devPkg/components/task_manage/detail/Show_Tree_Selected_Last.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-loader/node_modules/vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-20f8a7dc", Component.options)
  } else {
    hotAPI.reload("data-v-20f8a7dc", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),

/***/ 1244:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _Show_Tree_Selected_Last = __webpack_require__(1243);

var _Show_Tree_Selected_Last2 = _interopRequireDefault(_Show_Tree_Selected_Last);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
  name: 'items',
  props: {
    treeData: null, //树结构数据
    layer: null, //第几层
    paramsData: null, //需要参数
    isCheckbox: { //0为多选，1为单选
      default: 0
    },
    isEditPage: { //0为编辑状态，1为只显示，
      default: 0
    }
  },
  data: function data() {
    return {
      checkedCities: null
    };
  },
  mounted: function mounted() {},

  watch: {},
  destoryed: function destoryed() {},

  methods: {
    showChildren: function showChildren(item) {
      item.isShow = !item.isShow;
    }
  }
}; //
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

/***/ }),

/***/ 1245:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

__webpack_require__(1262);

__webpack_require__(1263);

__webpack_require__(1264);

exports.default = {
  name: "UEditor",
  props: {
    id: {
      type: String
    },
    config: {
      type: Object,
      default: ""
    }
  },
  watch: {
    // config: {
    //   handler (newV, oldV) {
    //     UE.delEditor('editor');
    //     this.editor = UE.getEditor('editor', newV);
    //     //this.editor.setContent(newV.initialContent)
    //     console.log(newV.initialContent)     
    //   },
    //   deep: true
    // }
  },
  data: function data() {
    return {
      editor: null
    };
  },
  created: function created() {},
  mounted: function mounted() {
    if (document.getElementById("editor")) {
      UE.delEditor('editor');
    }
    this.editor = UE.getEditor('editor', this.config);
  },

  methods: {
    getUEContent: function getUEContent() {
      return this.editor.getContent();
    },
    /**
     * 设置编辑器内的值
     */
    setContent: function setContent(content) {
      this.editor.setContent(content);
    }
  }
}; //
//
//
//
//
//
//
//
//

/***/ }),

/***/ 1248:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _defineProperty = __webpack_require__(1277);

var _defineProperty2 = _interopRequireDefault(_defineProperty);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function (obj, key, value) {
  if (key in obj) {
    (0, _defineProperty2.default)(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
};

/***/ }),

/***/ 1257:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

exports.default = {
  props: {
    dateType: { //时间类型 
      default: '1' //1为年，2为年-月，3为年-月-日 4为年-月-日 时:分:秒
    },
    isDisabled: { //为true禁用时间器
      default: false
    },
    value: { //时间值
      default: null
    },
    isTimeRange: { //true是一个时间区间，否则不是
      default: false
    },
    beginDatetime: { //用于时间区间
      default: null
    },
    endDatetime: { //用于时间区间
      default: null
    }
  },
  computed: {
    dateTypeCom: function dateTypeCom() {
      // ------------------ 将数字转为字符串 ----------------- 
      this.dateType = this.dateType ? this.dateType.toString() : '';

      if (this.dateType == 1) {
        return 'year';
      } else if (this.dateType == 2) {
        return 'month';
      } else if (this.dateType == 3) {
        return 'date';
      } else {
        return 'datetime';
      }
    }
  },
  components: {},
  data: function data() {
    return {
      dateTypeString: '1', //用于下拉
      minTime: null // 日期区间中结束日期的最小值
    };
  },

  watch: {},
  mounted: function mounted() {},

  methods: {
    /*
     * 广播时间类型
     */
    selectChange: function selectChange(val) {
      this.$emit('dateTypeEmit', val);
    },

    /*
     * 广播时间
     */
    dateChange: function dateChange(val) {
      this.$emit('dateEmit', new Date(val).getTime());
    },

    /*
     * 时间区间
     */
    dataRangeChange: function dataRangeChange(val, dataType) {
      if (dataType == 'bengin') {
        // ----------- 结束时间小于开始时间，将结束时间绑定为开始时间
        if (this.endDatetime < this.beginDatetime) {
          this.endDatetime = this.beginDatetime;
          this.$emit('dateEmit', [this.beginDatetime, this.beginDatetime]);
        } else {
          this.$emit('dateEmit', [this.beginDatetime, this.endDatetime]);
        }
      } else {
        if (this.endDatetime < this.beginDatetime) {
          this.beginDatetime = this.endDatetime;
          this.$emit('dateEmit', [this.beginDatetime, this.beginDatetime]);
        } else {
          this.$emit('dateEmit', [this.beginDatetime, this.endDatetime]);
        }
      }
    }
  }
};

/***/ }),

/***/ 1260:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_Date_vue__ = __webpack_require__(1257);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_Date_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_Date_vue__);
/* harmony namespace reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_Date_vue__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_Date_vue__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_13_7_3_vue_loader_lib_template_compiler_index_id_data_v_93ee3f4c_hasScoped_false_buble_transforms_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_template_index_0_Date_vue__ = __webpack_require__(1306);
var disposed = false
function injectStyle (ssrContext) {
  if (disposed) return
  __webpack_require__(1304)
}
var normalizeComponent = __webpack_require__(42)
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_Date_vue___default.a,
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_13_7_3_vue_loader_lib_template_compiler_index_id_data_v_93ee3f4c_hasScoped_false_buble_transforms_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_template_index_0_Date_vue__["a" /* default */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "devPkg/components/personal_manage/messageComponents/Date.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-loader/node_modules/vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-93ee3f4c", Component.options)
  } else {
    hotAPI.reload("data-v-93ee3f4c", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),

/***/ 1262:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * ueditor完整配置项
 * 可以在这里配置整个编辑器的特性
 */
/**************************提示********************************
 * 所有被注释的配置项均为UEditor默认值。
 * 修改默认配置请首先确保已经完全明确该参数的真实用途。
 * 主要有两种修改方案，一种是取消此处注释，然后修改成对应参数；另一种是在实例化编辑器时传入对应参数。
 * 当升级编辑器时，可直接使用旧版配置文件替换新版配置文件,不用担心旧版配置文件中因缺少新功能所需的参数而导致脚本报错。
 **************************提示********************************/

(function () {

        /**
         * 编辑器资源文件根路径。它所表示的含义是：以编辑器实例化页面为当前路径，指向编辑器资源文件（即dialog等文件夹）的路径。
         * 鉴于很多同学在使用编辑器的时候出现的种种路径问题，此处强烈建议大家使用"相对于网站根目录的相对路径"进行配置。
         * "相对于网站根目录的相对路径"也就是以斜杠开头的形如"/myProject/ueditor/"这样的路径。
         * 如果站点中有多个不在同一层级的页面需要实例化编辑器，且引用了同一UEditor的时候，此处的URL可能不适用于每个页面的编辑器。
         * 因此，UEditor提供了针对不同页面的编辑器可单独配置的根路径，具体来说，在需要实例化编辑器的页面最顶部写上如下代码即可。当然，需要令此处的URL等于对应的配置。
         * window.UEDITOR_HOME_URL = "/xxxx/xxxx/";
         */
        //window.UEDITOR_HOME_URL = "/static/ueditor/";
        var URL = window.UEDITOR_HOME_URL || getUEBasePath();

        /**
         * 配置项主体。注意，此处所有涉及到路径的配置别遗漏URL变量。
         */
        window.UEDITOR_CONFIG = {

                //为编辑器实例添加一个路径，这个不能被注释
                UEDITOR_HOME_URL: URL

                // 服务器统一请求接口路径 //192.168.31.9 
                , serverUrl: window.location.origin + "/api/sys/ueditor/exec"

                //工具栏上的所有的功能按钮和下拉框，可以在new编辑器的实例时选择自己需要的重新定义
                , toolbars: [['fullscreen', 'source', '|', 'undo', 'redo', '|', 'bold', 'italic', 'underline', 'fontborder', 'strikethrough', 'superscript', 'subscript', 'removeformat', 'formatmatch', 'autotypeset', 'blockquote', 'pasteplain', '|', 'forecolor', 'backcolor', 'insertorderedlist', 'insertunorderedlist', 'selectall', 'cleardoc', '|', 'rowspacingtop', 'rowspacingbottom', 'lineheight', '|', 'customstyle', 'paragraph', 'fontfamily', 'fontsize', '|', 'directionalityltr', 'directionalityrtl', 'indent', '|', 'justifyleft', 'justifycenter', 'justifyright', 'justifyjustify', '|', 'touppercase', 'tolowercase', '|', 'link', 'unlink', 'anchor', '|', 'imagenone', 'imageleft', 'imageright', 'imagecenter', '|', 'simpleupload', '|', 'horizontal', 'date', 'time', 'spechars', '|', 'inserttable', 'deletetable', 'insertparagraphbeforetable', 'insertrow', 'deleterow', 'insertcol', 'deletecol', 'mergecells', 'mergeright', 'mergedown', 'splittocells', 'splittorows', 'splittocols', 'charts', '|', 'preview', 'attachment' //'print', 'preview', 'searchreplace', 'drafts', 'help'
                ]]
                //当鼠标放在工具栏上时显示的tooltip提示,留空支持自动多语言配置，否则以配置值为准
                // ,labelMap: {
                //    simpleupload:'添加图片'
                // }


                //语言配置项,默认是zh-cn。有需要的话也可以使用如下这样的方式来自动多语言切换，当然，前提条件是lang文件夹下存在对应的语言文件：
                //lang值也可以通过自动获取 (navigator.language||navigator.browserLanguage ||navigator.userLanguage).toLowerCase()
                //,lang:"zh-cn"
                //,langPath:URL +"lang/"

                //主题配置项,默认是default。有需要的话也可以使用如下这样的方式来自动多主题切换，当然，前提条件是themes文件夹下存在对应的主题文件：
                //现有如下皮肤:default
                //,theme:'default'
                //,themePath:URL +"themes/"

                //,zIndex : 900     //编辑器层级的基数,默认是900

                //针对getAllHtml方法，会在对应的head标签中增加该编码设置。
                //,charset:"utf-8"

                //若实例化编辑器的页面手动修改的domain，此处需要设置为true
                //,customDomain:false

                //常用配置项目
                //,isShow : true    //默认显示编辑器

                //,textarea:'editorValue' // 提交表单时，服务器获取编辑器提交内容的所用的参数，多实例时可以给容器name属性，会将name给定的值最为每个实例的键值，不用每次实例化的时候都设置这个值

                //,initialContent:'欢迎使用ueditor!'    //初始化编辑器的内容,也可以通过textarea/script给值，看官网例子

                //,autoClearinitialContent:true //是否自动清除编辑器初始内容，注意：如果focus属性设置为true,这个也为真，那么编辑器一上来就会触发导致初始化的内容看不到了

                //,focus:false //初始化时，是否让编辑器获得焦点true或false

                //如果自定义，最好给p标签如下的行高，要不输入中文时，会有跳动感
                //,initialStyle:'p{line-height:1em}'//编辑器层级的基数,可以用来改变字体等

                //,iframeCssUrl: URL + '/themes/iframe.css' //给编辑区域的iframe引入一个css文件

                //indentValue
                //首行缩进距离,默认是2em
                //,indentValue:'2em'

                //,initialFrameWidth:1000  //初始化编辑器宽度,默认1000
                //,initialFrameHeight:320  //初始化编辑器高度,默认320

                //,readonly : false //编辑器初始化结束后,编辑区域是否是只读的，默认是false

                //,autoClearEmptyNode : true //getContent时，是否删除空的inlineElement节点（包括嵌套的情况）

                //启用自动保存
                //,enableAutoSave: true
                //自动保存间隔时间， 单位ms
                //,saveInterval: 500

                //,fullscreen : false //是否开启初始化时即全屏，默认关闭

                //,imagePopup:true      //图片操作的浮层开关，默认打开

                //,autoSyncData:true //自动同步编辑器要提交的数据
                //,emotionLocalization:false //是否开启表情本地化，默认关闭。若要开启请确保emotion文件夹下包含官网提供的images表情文件夹

                //粘贴只保留标签，去除标签所有属性
                //,retainOnlyLabelPasted: false

                //,pasteplain:false  //是否默认为纯文本粘贴。false为不使用纯文本粘贴，true为使用纯文本粘贴
                //纯文本粘贴模式下的过滤规则
                //'filterTxtRules' : function(){
                //    function transP(node){
                //        node.tagName = 'p';
                //        node.setStyle();
                //    }
                //    return {
                //        //直接删除及其字节点内容
                //        '-' : 'script style object iframe embed input select',
                //        'p': {$:{}},
                //        'br':{$:{}},
                //        'div':{'$':{}},
                //        'li':{'$':{}},
                //        'caption':transP,
                //        'th':transP,
                //        'tr':transP,
                //        'h1':transP,'h2':transP,'h3':transP,'h4':transP,'h5':transP,'h6':transP,
                //        'td':function(node){
                //            //没有内容的td直接删掉
                //            var txt = !!node.innerText();
                //            if(txt){
                //                node.parentNode.insertAfter(UE.uNode.createText(' &nbsp; &nbsp;'),node);
                //            }
                //            node.parentNode.removeChild(node,node.innerText())
                //        }
                //    }
                //}()

                //,allHtmlEnabled:false //提交到后台的数据是否包含整个html字符串

                //insertorderedlist
                //有序列表的下拉配置,值留空时支持多语言自动识别，若配置值，则以此值为准
                //,'insertorderedlist':{
                //      //自定的样式
                //        'num':'1,2,3...',
                //        'num1':'1),2),3)...',
                //        'num2':'(1),(2),(3)...',
                //        'cn':'一,二,三....',
                //        'cn1':'一),二),三)....',
                //        'cn2':'(一),(二),(三)....',
                //     //系统自带
                //     'decimal' : '' ,         //'1,2,3...'
                //     'lower-alpha' : '' ,    // 'a,b,c...'
                //     'lower-roman' : '' ,    //'i,ii,iii...'
                //     'upper-alpha' : '' , lang   //'A,B,C'
                //     'upper-roman' : ''      //'I,II,III...'
                //}

                //insertunorderedlist
                //无序列表的下拉配置，值留空时支持多语言自动识别，若配置值，则以此值为准
                //,insertunorderedlist : { //自定的样式
                //    'dash' :'— 破折号', //-破折号
                //    'dot':' 。 小圆圈', //系统自带
                //    'circle' : '',  // '○ 小圆圈'
                //    'disc' : '',    // '● 小圆点'
                //    'square' : ''   //'■ 小方块'
                //}
                //,listDefaultPaddingLeft : '30'//默认的左边缩进的基数倍
                //,listiconpath : 'http://bs.baidu.com/listicon/'//自定义标号的路径
                //,maxListLevel : 3 //限制可以tab的级数, 设置-1为不限制

                //,autoTransWordToList:false  //禁止word中粘贴进来的列表自动变成列表标签

                //fontfamily
                //字体设置 label留空支持多语言自动切换，若配置，则以配置值为准
                //,'fontfamily':[
                //    { label:'',name:'songti',val:'宋体,SimSun'},
                //    { label:'',name:'kaiti',val:'楷体,楷体_GB2312, SimKai'},
                //    { label:'',name:'yahei',val:'微软雅黑,Microsoft YaHei'},
                //    { label:'',name:'heiti',val:'黑体, SimHei'},
                //    { label:'',name:'lishu',val:'隶书, SimLi'},
                //    { label:'',name:'andaleMono',val:'andale mono'},
                //    { label:'',name:'arial',val:'arial, helvetica,sans-serif'},
                //    { label:'',name:'arialBlack',val:'arial black,avant garde'},
                //    { label:'',name:'comicSansMs',val:'comic sans ms'},
                //    { label:'',name:'impact',val:'impact,chicago'},
                //    { label:'',name:'timesNewRoman',val:'times new roman'}
                //]

                //fontsize
                //字号
                //,'fontsize':[10, 11, 12, 14, 16, 18, 20, 24, 36]

                //paragraph
                //段落格式 值留空时支持多语言自动识别，若配置，则以配置值为准
                //,'paragraph':{'p':'', 'h1':'', 'h2':'', 'h3':'', 'h4':'', 'h5':'', 'h6':''}

                //rowspacingtop
                //段间距 值和显示的名字相同
                //,'rowspacingtop':['5', '10', '15', '20', '25']

                //rowspacingBottom
                //段间距 值和显示的名字相同
                //,'rowspacingbottom':['5', '10', '15', '20', '25']

                //lineheight
                //行内间距 值和显示的名字相同
                //,'lineheight':['1', '1.5','1.75','2', '3', '4', '5']

                //customstyle
                //自定义样式，不支持国际化，此处配置值即可最后显示值
                //block的元素是依据设置段落的逻辑设置的，inline的元素依据BIU的逻辑设置
                //尽量使用一些常用的标签
                //参数说明
                //tag 使用的标签名字
                //label 显示的名字也是用来标识不同类型的标识符，注意这个值每个要不同，
                //style 添加的样式
                //每一个对象就是一个自定义的样式
                //,'customstyle':[
                //    {tag:'h1', name:'tc', label:'', style:'border-bottom:#ccc 2px solid;padding:0 4px 0 0;text-align:center;margin:0 0 20px 0;'},
                //    {tag:'h1', name:'tl',label:'', style:'border-bottom:#ccc 2px solid;padding:0 4px 0 0;margin:0 0 10px 0;'},
                //    {tag:'span',name:'im', label:'', style:'font-style:italic;font-weight:bold'},
                //    {tag:'span',name:'hi', label:'', style:'font-style:italic;font-weight:bold;color:rgb(51, 153, 204)'}
                //]

                //打开右键菜单功能
                //,enableContextMenu: true
                //右键菜单的内容，可以参考plugins/contextmenu.js里边的默认菜单的例子，label留空支持国际化，否则以此配置为准
                //,contextMenu:[
                //    {
                //        label:'',       //显示的名称
                //        cmdName:'selectall',//执行的command命令，当点击这个右键菜单时
                //        //exec可选，有了exec就会在点击时执行这个function，优先级高于cmdName
                //        exec:function () {
                //            //this是当前编辑器的实例
                //            //this.ui._dialogs['inserttableDialog'].open();
                //        }
                //    }
                //]

                //快捷菜单
                //,shortcutMenu:["fontfamily", "fontsize", "bold", "italic", "underline", "forecolor", "backcolor", "insertorderedlist", "insertunorderedlist"]

                //elementPathEnabled
                //是否启用元素路径，默认是显示
                //,elementPathEnabled : true

                //wordCount
                //,wordCount:true          //是否开启字数统计
                //,maximumWords:10000       //允许的最大字符数
                //字数统计提示，{#count}代表当前字数，{#leave}代表还可以输入多少字符数,留空支持多语言自动切换，否则按此配置显示
                //,wordCountMsg:''   //当前已输入 {#count} 个字符，您还可以输入{#leave} 个字符
                //超出字数限制提示  留空支持多语言自动切换，否则按此配置显示
                //,wordOverFlowMsg:''    //<span style="color:red;">你输入的字符个数已经超出最大允许值，服务器可能会拒绝保存！</span>

                //tab
                //点击tab键时移动的距离,tabSize倍数，tabNode什么字符做为单位
                //,tabSize:4
                //,tabNode:'&nbsp;'

                //removeFormat
                //清除格式时可以删除的标签和属性
                //removeForamtTags标签
                //,removeFormatTags:'b,big,code,del,dfn,em,font,i,ins,kbd,q,samp,small,span,strike,strong,sub,sup,tt,u,var'
                //removeFormatAttributes属性
                //,removeFormatAttributes:'class,style,lang,width,height,align,hspace,valign'

                //undo
                //可以最多回退的次数,默认20
                //,maxUndoCount:20
                //当输入的字符数超过该值时，保存一次现场
                //,maxInputCount:1

                //autoHeightEnabled
                // 是否自动长高,默认true
                //,autoHeightEnabled:true

                //scaleEnabled
                //是否可以拉伸长高,默认true(当开启时，自动长高失效)
                //,scaleEnabled:false
                //,minFrameWidth:800    //编辑器拖动时最小宽度,默认800
                //,minFrameHeight:220  //编辑器拖动时最小高度,默认220

                //autoFloatEnabled
                //是否保持toolbar的位置不动,默认true
                //,autoFloatEnabled:true
                //浮动时工具栏距离浏览器顶部的高度，用于某些具有固定头部的页面
                //,topOffset:30
                //编辑器底部距离工具栏高度(如果参数大于等于编辑器高度，则设置无效)
                //,toolbarTopOffset:400

                //设置远程图片是否抓取到本地保存
                //,catchRemoteImageEnable: true //设置是否抓取远程图片

                //pageBreakTag
                //分页标识符,默认是_ueditor_page_break_tag_
                //,pageBreakTag:'_ueditor_page_break_tag_'

                //autotypeset
                //自动排版参数
                //,autotypeset: {
                //    mergeEmptyline: true,           //合并空行
                //    removeClass: true,              //去掉冗余的class
                //    removeEmptyline: false,         //去掉空行
                //    textAlign:"left",               //段落的排版方式，可以是 left,right,center,justify 去掉这个属性表示不执行排版
                //    imageBlockLine: 'center',       //图片的浮动方式，独占一行剧中,左右浮动，默认: center,left,right,none 去掉这个属性表示不执行排版
                //    pasteFilter: false,             //根据规则过滤没事粘贴进来的内容
                //    clearFontSize: false,           //去掉所有的内嵌字号，使用编辑器默认的字号
                //    clearFontFamily: false,         //去掉所有的内嵌字体，使用编辑器默认的字体
                //    removeEmptyNode: false,         // 去掉空节点
                //    //可以去掉的标签
                //    removeTagNames: {标签名字:1},
                //    indent: false,                  // 行首缩进
                //    indentValue : '2em',            //行首缩进的大小
                //    bdc2sb: false,
                //    tobdc: false
                //}

                //tableDragable
                //表格是否可以拖拽
                //,tableDragable: true


                //sourceEditor
                //源码的查看方式,codemirror 是代码高亮，textarea是文本框,默认是codemirror
                //注意默认codemirror只能在ie8+和非ie中使用
                //,sourceEditor:"codemirror"
                //如果sourceEditor是codemirror，还用配置一下两个参数
                //codeMirrorJsUrl js加载的路径，默认是 URL + "third-party/codemirror/codemirror.js"
                //,codeMirrorJsUrl:URL + "third-party/codemirror/codemirror.js"
                //codeMirrorCssUrl css加载的路径，默认是 URL + "third-party/codemirror/codemirror.css"
                //,codeMirrorCssUrl:URL + "third-party/codemirror/codemirror.css"
                //编辑器初始化完成后是否进入源码模式，默认为否。
                //,sourceEditorFirst:false

                //iframeUrlMap
                //dialog内容的路径 ～会被替换成URL,垓属性一旦打开，将覆盖所有的dialog的默认路径
                //,iframeUrlMap:{
                //    'anchor':'~/dialogs/anchor/anchor.html',
                //}

                //allowLinkProtocol 允许的链接地址，有这些前缀的链接地址不会自动添加http
                //, allowLinkProtocols: ['http:', 'https:', '#', '/', 'ftp:', 'mailto:', 'tel:', 'git:', 'svn:']

                //webAppKey 百度应用的APIkey，每个站长必须首先去百度官网注册一个key后方能正常使用app功能，注册介绍，http://app.baidu.com/static/cms/getapikey.html
                //, webAppKey: ""

                //默认过滤规则相关配置项目
                //,disabledTableInTable:true  //禁止表格嵌套
                //,allowDivTransToP:true      //允许进入编辑器的div标签自动变成p标签
                //,rgb2Hex:true               //默认产出的数据中的color自动从rgb格式变成16进制格式

                // xss 过滤是否开启,inserthtml等操作
                , xssFilterRules: true
                //input xss过滤
                , inputXssFilter: true
                //output xss过滤
                , outputXssFilter: true
                // xss过滤白名单 名单来源: https://raw.githubusercontent.com/leizongmin/js-xss/master/lib/default.js
                , whiteList: {
                        a: ['target', 'href', 'title', 'class', 'style'],
                        abbr: ['title', 'class', 'style'],
                        address: ['class', 'style'],
                        area: ['shape', 'coords', 'href', 'alt'],
                        article: [],
                        aside: [],
                        audio: ['autoplay', 'controls', 'loop', 'preload', 'src', 'class', 'style'],
                        b: ['class', 'style'],
                        bdi: ['dir'],
                        bdo: ['dir'],
                        big: [],
                        blockquote: ['cite', 'class', 'style'],
                        br: [],
                        caption: ['class', 'style'],
                        center: [],
                        cite: [],
                        code: ['class', 'style'],
                        col: ['align', 'valign', 'span', 'width', 'class', 'style'],
                        colgroup: ['align', 'valign', 'span', 'width', 'class', 'style'],
                        dd: ['class', 'style'],
                        del: ['datetime'],
                        details: ['open'],
                        div: ['class', 'style'],
                        dl: ['class', 'style'],
                        dt: ['class', 'style'],
                        em: ['class', 'style'],
                        font: ['color', 'size', 'face'],
                        footer: [],
                        h1: ['class', 'style'],
                        h2: ['class', 'style'],
                        h3: ['class', 'style'],
                        h4: ['class', 'style'],
                        h5: ['class', 'style'],
                        h6: ['class', 'style'],
                        header: [],
                        hr: [],
                        i: ['class', 'style'],
                        img: ['src', 'alt', 'title', 'width', 'height', 'id', '_src', 'loadingclass', 'class', 'data-latex'],
                        ins: ['datetime'],
                        li: ['class', 'style'],
                        mark: [],
                        nav: [],
                        ol: ['class', 'style'],
                        p: ['class', 'style'],
                        pre: ['class', 'style'],
                        s: [],
                        section: [],
                        small: [],
                        span: ['class', 'style'],
                        sub: ['class', 'style'],
                        sup: ['class', 'style'],
                        strong: ['class', 'style'],
                        table: ['width', 'border', 'align', 'valign', 'class', 'style'],
                        tbody: ['align', 'valign', 'class', 'style'],
                        td: ['width', 'rowspan', 'colspan', 'align', 'valign', 'class', 'style'],
                        tfoot: ['align', 'valign', 'class', 'style'],
                        th: ['width', 'rowspan', 'colspan', 'align', 'valign', 'class', 'style'],
                        thead: ['align', 'valign', 'class', 'style'],
                        tr: ['rowspan', 'align', 'valign', 'class', 'style'],
                        tt: [],
                        u: [],
                        ul: ['class', 'style'],
                        video: ['autoplay', 'controls', 'loop', 'preload', 'poster', 'onclick', 'src', 'height', 'width', 'class', 'style']
                        // ['autoplay', 'controls', 'loop', 'preload', 'src', 'height', 'width', 'class', 'style']
                }
        };
        // console.log(window.UEDITOR_CONFIG);

        function getUEBasePath(docUrl, confUrl) {

                return getBasePath(docUrl || self.document.URL || self.location.href, confUrl || getConfigFilePath());
        }

        function getConfigFilePath() {

                var configPath = document.getElementsByTagName('script');

                return configPath[configPath.length - 1].src;
        }

        function getBasePath(docUrl, confUrl) {

                var basePath = confUrl;

                if (/^(\/|\\\\)/.test(confUrl)) {

                        basePath = /^.+?\w(\/|\\\\)/.exec(docUrl)[0] + confUrl.replace(/^(\/|\\\\)/, '');
                } else if (!/^[a-z]+:/i.test(confUrl)) {

                        docUrl = docUrl.split("#")[0].split("?")[0].replace(/[^\\\/]+$/, '');

                        basePath = docUrl + "" + confUrl;
                }

                return optimizationPath(basePath);
        }

        function optimizationPath(path) {

                var protocol = /^[a-z]+:\/\//.exec(path)[0],
                    tmp = null,
                    res = [];

                path = path.replace(protocol, "").split("?")[0].split("#")[0];

                path = path.replace(/\\/g, '/').split(/\//);

                path[path.length - 1] = "";

                while (path.length) {

                        if ((tmp = path.shift()) === "..") {
                                res.pop();
                        } else if (tmp !== ".") {
                                res.push(tmp);
                        }
                }

                return protocol + res.join("/");
        }

        window.UE = {
                getUEBasePath: getUEBasePath
        };
})();

/***/ }),

/***/ 1263:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _stringify=__webpack_require__(188);var _stringify2=_interopRequireDefault(_stringify);var _typeof2=__webpack_require__(142);var _typeof3=_interopRequireDefault(_typeof2);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}/*!
 * UEditor
 * version: ueditor
 * build: Wed Aug 10 2016 11:06:16 GMT+0800 (CST)
 */(function(){// editor.js
UEDITOR_CONFIG=window.UEDITOR_CONFIG||{};var baidu=window.baidu||{};window.baidu=baidu;window.UE=baidu.editor=window.UE||{};UE.plugins={};UE.commands={};UE.instants={};UE.I18N={};UE._customizeUI={};UE.version="1.4.3";var dom=UE.dom={};// core/browser.js
/**
 * 浏览器判断模块
 * @file
 * @module UE.browser
 * @since 1.2.6.1
 *//**
 * 提供浏览器检测的模块
 * @unfile
 * @module UE.browser
 */var browser=UE.browser=function(){var agent=navigator.userAgent.toLowerCase(),opera=window.opera,browser={/**
         * @property {boolean} ie 检测当前浏览器是否为IE
         * @example
         * ```javascript
         * if ( UE.browser.ie ) {
         *     console.log( '当前浏览器是IE' );
         * }
         * ```
         */ie:/(msie\s|trident.*rv:)([\w.]+)/.test(agent),/**
         * @property {boolean} opera 检测当前浏览器是否为Opera
         * @example
         * ```javascript
         * if ( UE.browser.opera ) {
         *     console.log( '当前浏览器是Opera' );
         * }
         * ```
         */opera:!!opera&&opera.version,/**
         * @property {boolean} webkit 检测当前浏览器是否是webkit内核的浏览器
         * @example
         * ```javascript
         * if ( UE.browser.webkit ) {
         *     console.log( '当前浏览器是webkit内核浏览器' );
         * }
         * ```
         */webkit:agent.indexOf(' applewebkit/')>-1,/**
         * @property {boolean} mac 检测当前浏览器是否是运行在mac平台下
         * @example
         * ```javascript
         * if ( UE.browser.mac ) {
         *     console.log( '当前浏览器运行在mac平台下' );
         * }
         * ```
         */mac:agent.indexOf('macintosh')>-1,/**
         * @property {boolean} quirks 检测当前浏览器是否处于“怪异模式”下
         * @example
         * ```javascript
         * if ( UE.browser.quirks ) {
         *     console.log( '当前浏览器运行处于“怪异模式”' );
         * }
         * ```
         */quirks:document.compatMode=='BackCompat'};/**
    * @property {boolean} gecko 检测当前浏览器内核是否是gecko内核
    * @example
    * ```javascript
    * if ( UE.browser.gecko ) {
    *     console.log( '当前浏览器内核是gecko内核' );
    * }
    * ```
    */browser.gecko=navigator.product=='Gecko'&&!browser.webkit&&!browser.opera&&!browser.ie;var version=0;// Internet Explorer 6.0+
if(browser.ie){var v1=agent.match(/(?:msie\s([\w.]+))/);var v2=agent.match(/(?:trident.*rv:([\w.]+))/);if(v1&&v2&&v1[1]&&v2[1]){version=Math.max(v1[1]*1,v2[1]*1);}else if(v1&&v1[1]){version=v1[1]*1;}else if(v2&&v2[1]){version=v2[1]*1;}else{version=0;}browser.ie11Compat=document.documentMode==11;/**
         * @property { boolean } ie9Compat 检测浏览器模式是否为 IE9 兼容模式
         * @warning 如果浏览器不是IE， 则该值为undefined
         * @example
         * ```javascript
         * if ( UE.browser.ie9Compat ) {
         *     console.log( '当前浏览器运行在IE9兼容模式下' );
         * }
         * ```
         */browser.ie9Compat=document.documentMode==9;/**
         * @property { boolean } ie8 检测浏览器是否是IE8浏览器
         * @warning 如果浏览器不是IE， 则该值为undefined
         * @example
         * ```javascript
         * if ( UE.browser.ie8 ) {
         *     console.log( '当前浏览器是IE8浏览器' );
         * }
         * ```
         */browser.ie8=!!document.documentMode;/**
         * @property { boolean } ie8Compat 检测浏览器模式是否为 IE8 兼容模式
         * @warning 如果浏览器不是IE， 则该值为undefined
         * @example
         * ```javascript
         * if ( UE.browser.ie8Compat ) {
         *     console.log( '当前浏览器运行在IE8兼容模式下' );
         * }
         * ```
         */browser.ie8Compat=document.documentMode==8;/**
         * @property { boolean } ie7Compat 检测浏览器模式是否为 IE7 兼容模式
         * @warning 如果浏览器不是IE， 则该值为undefined
         * @example
         * ```javascript
         * if ( UE.browser.ie7Compat ) {
         *     console.log( '当前浏览器运行在IE7兼容模式下' );
         * }
         * ```
         */browser.ie7Compat=version==7&&!document.documentMode||document.documentMode==7;/**
         * @property { boolean } ie6Compat 检测浏览器模式是否为 IE6 模式 或者怪异模式
         * @warning 如果浏览器不是IE， 则该值为undefined
         * @example
         * ```javascript
         * if ( UE.browser.ie6Compat ) {
         *     console.log( '当前浏览器运行在IE6模式或者怪异模式下' );
         * }
         * ```
         */browser.ie6Compat=version<7||browser.quirks;browser.ie9above=version>8;browser.ie9below=version<9;browser.ie11above=version>10;browser.ie11below=version<11;}// Gecko.
if(browser.gecko){var geckoRelease=agent.match(/rv:([\d\.]+)/);if(geckoRelease){geckoRelease=geckoRelease[1].split('.');version=geckoRelease[0]*10000+(geckoRelease[1]||0)*100+(geckoRelease[2]||0)*1;}}/**
     * @property { Number } chrome 检测当前浏览器是否为Chrome, 如果是，则返回Chrome的大版本号
     * @warning 如果浏览器不是chrome， 则该值为undefined
     * @example
     * ```javascript
     * if ( UE.browser.chrome ) {
     *     console.log( '当前浏览器是Chrome' );
     * }
     * ```
     */if(/chrome\/(\d+\.\d)/i.test(agent)){browser.chrome=+RegExp['\x241'];}/**
     * @property { Number } safari 检测当前浏览器是否为Safari, 如果是，则返回Safari的大版本号
     * @warning 如果浏览器不是safari， 则该值为undefined
     * @example
     * ```javascript
     * if ( UE.browser.safari ) {
     *     console.log( '当前浏览器是Safari' );
     * }
     * ```
     */if(/(\d+\.\d)?(?:\.\d)?\s+safari\/?(\d+\.\d+)?/i.test(agent)&&!/chrome/i.test(agent)){browser.safari=+(RegExp['\x241']||RegExp['\x242']);}// Opera 9.50+
if(browser.opera)version=parseFloat(opera.version());// WebKit 522+ (Safari 3+)
if(browser.webkit)version=parseFloat(agent.match(/ applewebkit\/(\d+)/)[1]);/**
     * @property { Number } version 检测当前浏览器版本号
     * @remind
     * <ul>
     *     <li>IE系列返回值为5,6,7,8,9,10等</li>
     *     <li>gecko系列会返回10900，158900等</li>
     *     <li>webkit系列会返回其build号 (如 522等)</li>
     * </ul>
     * @example
     * ```javascript
     * console.log( '当前浏览器版本号是： ' + UE.browser.version );
     * ```
     */browser.version=version;/**
     * @property { boolean } isCompatible 检测当前浏览器是否能够与UEditor良好兼容
     * @example
     * ```javascript
     * if ( UE.browser.isCompatible ) {
     *     console.log( '浏览器与UEditor能够良好兼容' );
     * }
     * ```
     */browser.isCompatible=!browser.mobile&&(browser.ie&&version>=6||browser.gecko&&version>=10801||browser.opera&&version>=9.5||browser.air&&version>=1||browser.webkit&&version>=522||false);return browser;}();//快捷方式
var ie=browser.ie,webkit=browser.webkit,gecko=browser.gecko,opera=browser.opera;// core/utils.js
/**
 * 工具函数包
 * @file
 * @module UE.utils
 * @since 1.2.6.1
 *//**
 * UEditor封装使用的静态工具函数
 * @module UE.utils
 * @unfile
 */var utils=UE.utils={/**
     * 用给定的迭代器遍历对象
     * @method each
     * @param { Object } obj 需要遍历的对象
     * @param { Function } iterator 迭代器， 该方法接受两个参数， 第一个参数是当前所处理的value， 第二个参数是当前遍历对象的key
     * @example
     * ```javascript
     * var demoObj = {
     *     key1: 1,
     *     key2: 2
     * };
     *
     * //output: key1: 1, key2: 2
     * UE.utils.each( demoObj, funciton ( value, key ) {
     *
     *     console.log( key + ":" + value );
     *
     * } );
     * ```
     *//**
     * 用给定的迭代器遍历数组或类数组对象
     * @method each
     * @param { Array } array 需要遍历的数组或者类数组
     * @param { Function } iterator 迭代器， 该方法接受两个参数， 第一个参数是当前所处理的value， 第二个参数是当前遍历对象的key
     * @example
     * ```javascript
     * var divs = document.getElmentByTagNames( "div" );
     *
     * //output: 0: DIV, 1: DIV ...
     * UE.utils.each( divs, funciton ( value, key ) {
     *
     *     console.log( key + ":" + value.tagName );
     *
     * } );
     * ```
     */each:function each(obj,iterator,context){if(obj==null)return;if(obj.length===+obj.length){for(var i=0,l=obj.length;i<l;i++){if(iterator.call(context,obj[i],i,obj)===false)return false;}}else{for(var key in obj){if(obj.hasOwnProperty(key)){if(iterator.call(context,obj[key],key,obj)===false)return false;}}}},/**
     * 以给定对象作为原型创建一个新对象
     * @method makeInstance
     * @param { Object } protoObject 该对象将作为新创建对象的原型
     * @return { Object } 新的对象， 该对象的原型是给定的protoObject对象
     * @example
     * ```javascript
     *
     * var protoObject = { sayHello: function () { console.log('Hello UEditor!'); } };
     *
     * var newObject = UE.utils.makeInstance( protoObject );
     * //output: Hello UEditor!
     * newObject.sayHello();
     * ```
     */makeInstance:function makeInstance(obj){var noop=new Function();noop.prototype=obj;obj=new noop();noop.prototype=null;return obj;},/**
     * 将source对象中的属性扩展到target对象上
     * @method extend
     * @remind 该方法将强制把source对象上的属性复制到target对象上
     * @see UE.utils.extend(Object,Object,Boolean)
     * @param { Object } target 目标对象， 新的属性将附加到该对象上
     * @param { Object } source 源对象， 该对象的属性会被附加到target对象上
     * @return { Object } 返回target对象
     * @example
     * ```javascript
     *
     * var target = { name: 'target', sex: 1 },
     *      source = { name: 'source', age: 17 };
     *
     * UE.utils.extend( target, source );
     *
     * //output: { name: 'source', sex: 1, age: 17 }
     * console.log( target );
     *
     * ```
     *//**
     * 将source对象中的属性扩展到target对象上， 根据指定的isKeepTarget值决定是否保留目标对象中与
     * 源对象属性名相同的属性值。
     * @method extend
     * @param { Object } target 目标对象， 新的属性将附加到该对象上
     * @param { Object } source 源对象， 该对象的属性会被附加到target对象上
     * @param { Boolean } isKeepTarget 是否保留目标对象中与源对象中属性名相同的属性
     * @return { Object } 返回target对象
     * @example
     * ```javascript
     *
     * var target = { name: 'target', sex: 1 },
     *      source = { name: 'source', age: 17 };
     *
     * UE.utils.extend( target, source, true );
     *
     * //output: { name: 'target', sex: 1, age: 17 }
     * console.log( target );
     *
     * ```
     */extend:function extend(t,s,b){if(s){for(var k in s){if(!b||!t.hasOwnProperty(k)){t[k]=s[k];}}}return t;},/**
     * 将给定的多个对象的属性复制到目标对象target上
     * @method extend2
     * @remind 该方法将强制把源对象上的属性复制到target对象上
     * @remind 该方法支持两个及以上的参数， 从第二个参数开始， 其属性都会被复制到第一个参数上。 如果遇到同名的属性，
     *          将会覆盖掉之前的值。
     * @param { Object } target 目标对象， 新的属性将附加到该对象上
     * @param { Object... } source 源对象， 支持多个对象， 该对象的属性会被附加到target对象上
     * @return { Object } 返回target对象
     * @example
     * ```javascript
     *
     * var target = {},
     *     source1 = { name: 'source', age: 17 },
     *     source2 = { title: 'dev' };
     *
     * UE.utils.extend2( target, source1, source2 );
     *
     * //output: { name: 'source', age: 17, title: 'dev' }
     * console.log( target );
     *
     * ```
     */extend2:function extend2(t){var a=arguments;for(var i=1;i<a.length;i++){var x=a[i];for(var k in x){if(!t.hasOwnProperty(k)){t[k]=x[k];}}}return t;},/**
     * 模拟继承机制， 使得subClass继承自superClass
     * @method inherits
     * @param { Object } subClass 子类对象
     * @param { Object } superClass 超类对象
     * @warning 该方法只能让subClass继承超类的原型， subClass对象自身的属性和方法不会被继承
     * @return { Object } 继承superClass后的子类对象
     * @example
     * ```javascript
     * function SuperClass(){
     *     this.name = "小李";
     * }
     *
     * SuperClass.prototype = {
     *     hello:function(str){
     *         console.log(this.name + str);
     *     }
     * }
     *
     * function SubClass(){
     *     this.name = "小张";
     * }
     *
     * UE.utils.inherits(SubClass,SuperClass);
     *
     * var sub = new SubClass();
     * //output: '小张早上好!
     * sub.hello("早上好!");
     * ```
     */inherits:function inherits(subClass,superClass){var oldP=subClass.prototype,newP=utils.makeInstance(superClass.prototype);utils.extend(newP,oldP,true);subClass.prototype=newP;return newP.constructor=subClass;},/**
     * 用指定的context对象作为函数fn的上下文
     * @method bind
     * @param { Function } fn 需要绑定上下文的函数对象
     * @param { Object } content 函数fn新的上下文对象
     * @return { Function } 一个新的函数， 该函数作为原始函数fn的代理， 将完成fn的上下文调换工作。
     * @example
     * ```javascript
     *
     * var name = 'window',
     *     newTest = null;
     *
     * function test () {
     *     console.log( this.name );
     * }
     *
     * newTest = UE.utils.bind( test, { name: 'object' } );
     *
     * //output: object
     * newTest();
     *
     * //output: window
     * test();
     *
     * ```
     */bind:function bind(fn,context){return function(){return fn.apply(context,arguments);};},/**
     * 创建延迟指定时间后执行的函数fn
     * @method defer
     * @param { Function } fn 需要延迟执行的函数对象
     * @param { int } delay 延迟的时间， 单位是毫秒
     * @warning 该方法的时间控制是不精确的，仅仅只能保证函数的执行是在给定的时间之后，
     *           而不能保证刚好到达延迟时间时执行。
     * @return { Function } 目标函数fn的代理函数， 只有执行该函数才能起到延时效果
     * @example
     * ```javascript
     * var start = 0;
     *
     * function test(){
     *     console.log( new Date() - start );
     * }
     *
     * var testDefer = UE.utils.defer( test, 1000 );
     * //
     * start = new Date();
     * //output: (大约在1000毫秒之后输出) 1000
     * testDefer();
     * ```
     *//**
     * 创建延迟指定时间后执行的函数fn, 如果在延迟时间内再次执行该方法， 将会根据指定的exclusion的值，
     * 决定是否取消前一次函数的执行， 如果exclusion的值为true， 则取消执行，反之，将继续执行前一个方法。
     * @method defer
     * @param { Function } fn 需要延迟执行的函数对象
     * @param { int } delay 延迟的时间， 单位是毫秒
     * @param { Boolean } exclusion 如果在延迟时间内再次执行该函数，该值将决定是否取消执行前一次函数的执行，
     *                     值为true表示取消执行， 反之则将在执行前一次函数之后才执行本次函数调用。
     * @warning 该方法的时间控制是不精确的，仅仅只能保证函数的执行是在给定的时间之后，
     *           而不能保证刚好到达延迟时间时执行。
     * @return { Function } 目标函数fn的代理函数， 只有执行该函数才能起到延时效果
     * @example
     * ```javascript
     *
     * function test(){
     *     console.log(1);
     * }
     *
     * var testDefer = UE.utils.defer( test, 1000, true );
     *
     * //output: (两次调用仅有一次输出) 1
     * testDefer();
     * testDefer();
     * ```
     */defer:function defer(fn,delay,exclusion){var timerID;return function(){if(exclusion){clearTimeout(timerID);}timerID=setTimeout(fn,delay);};},/**
     * 获取元素item在数组array中首次出现的位置, 如果未找到item， 则返回-1
     * @method indexOf
     * @remind 该方法的匹配过程使用的是恒等“===”
     * @param { Array } array 需要查找的数组对象
     * @param { * } item 需要在目标数组中查找的值
     * @return { int } 返回item在目标数组array中首次出现的位置， 如果在数组中未找到item， 则返回-1
     * @example
     * ```javascript
     * var item = 1,
     *     arr = [ 3, 4, 6, 8, 1, 1, 2 ];
     *
     * //output: 4
     * console.log( UE.utils.indexOf( arr, item ) );
     * ```
     *//**
     * 获取元素item数组array中首次出现的位置, 如果未找到item， 则返回-1。通过start的值可以指定搜索的起始位置。
     * @method indexOf
     * @remind 该方法的匹配过程使用的是恒等“===”
     * @param { Array } array 需要查找的数组对象
     * @param { * } item 需要在目标数组中查找的值
     * @param { int } start 搜索的起始位置
     * @return { int } 返回item在目标数组array中的start位置之后首次出现的位置， 如果在数组中未找到item， 则返回-1
     * @example
     * ```javascript
     * var item = 1,
     *     arr = [ 3, 4, 6, 8, 1, 2, 8, 3, 2, 1, 1, 4 ];
     *
     * //output: 9
     * console.log( UE.utils.indexOf( arr, item, 5 ) );
     * ```
     */indexOf:function indexOf(array,item,start){var index=-1;start=this.isNumber(start)?start:0;this.each(array,function(v,i){if(i>=start&&v===item){index=i;return false;}});return index;},/**
     * 移除数组array中所有的元素item
     * @method removeItem
     * @param { Array } array 要移除元素的目标数组
     * @param { * } item 将要被移除的元素
     * @remind 该方法的匹配过程使用的是恒等“===”
     * @example
     * ```javascript
     * var arr = [ 4, 5, 7, 1, 3, 4, 6 ];
     *
     * UE.utils.removeItem( arr, 4 );
     * //output: [ 5, 7, 1, 3, 6 ]
     * console.log( arr );
     *
     * ```
     */removeItem:function removeItem(array,item){for(var i=0,l=array.length;i<l;i++){if(array[i]===item){array.splice(i,1);i--;}}},/**
     * 删除字符串str的首尾空格
     * @method trim
     * @param { String } str 需要删除首尾空格的字符串
     * @return { String } 删除了首尾的空格后的字符串
     * @example
     * ```javascript
     *
     * var str = " UEdtior ";
     *
     * //output: 9
     * console.log( str.length );
     *
     * //output: 7
     * console.log( UE.utils.trim( " UEdtior " ).length );
     *
     * //output: 9
     * console.log( str.length );
     *
     *  ```
     */trim:function trim(str){return str.replace(/(^[ \t\n\r]+)|([ \t\n\r]+$)/g,'');},/**
     * 将字符串str以','分隔成数组后，将该数组转换成哈希对象， 其生成的hash对象的key为数组中的元素， value为1
     * @method listToMap
     * @warning 该方法在生成的hash对象中，会为每一个key同时生成一个另一个全大写的key。
     * @param { String } str 该字符串将被以','分割为数组， 然后进行转化
     * @return { Object } 转化之后的hash对象
     * @example
     * ```javascript
     *
     * //output: Object {UEdtior: 1, UEDTIOR: 1, Hello: 1, HELLO: 1}
     * console.log( UE.utils.listToMap( 'UEdtior,Hello' ) );
     *
     * ```
     *//**
     * 将字符串数组转换成哈希对象， 其生成的hash对象的key为数组中的元素， value为1
     * @method listToMap
     * @warning 该方法在生成的hash对象中，会为每一个key同时生成一个另一个全大写的key。
     * @param { Array } arr 字符串数组
     * @return { Object } 转化之后的hash对象
     * @example
     * ```javascript
     *
     * //output: Object {UEdtior: 1, UEDTIOR: 1, Hello: 1, HELLO: 1}
     * console.log( UE.utils.listToMap( [ 'UEdtior', 'Hello' ] ) );
     *
     * ```
     */listToMap:function listToMap(list){if(!list)return{};list=utils.isArray(list)?list:list.split(',');for(var i=0,ci,obj={};ci=list[i++];){obj[ci.toUpperCase()]=obj[ci]=1;}return obj;},/**
     * 将str中的html符号转义,将转义“'，&，<，"，>”五个字符
     * @method unhtml
     * @param { String } str 需要转义的字符串
     * @return { String } 转义后的字符串
     * @example
     * ```javascript
     * var html = '<body>&</body>';
     *
     * //output: &lt;body&gt;&amp;&lt;/body&gt;
     * console.log( UE.utils.unhtml( html ) );
     *
     * ```
     */unhtml:function unhtml(str,reg){return str?str.replace(reg||/[&<">'](?:(amp|lt|quot|gt|#39|nbsp|#\d+);)?/g,function(a,b){if(b){return a;}else{return{'<':'&lt;','&':'&amp;','"':'&quot;','>':'&gt;',"'":'&#39;'}[a];}}):'';},/**
     * 将url中的html字符转义， 仅转义  ', ", <, > 四个字符
     * @param  { String } str 需要转义的字符串
     * @param  { RegExp } reg 自定义的正则
     * @return { String }     转义后的字符串
     */unhtmlForUrl:function unhtmlForUrl(str,reg){return str?str.replace(reg||/[<">']/g,function(a){return{'<':'&lt;','&':'&amp;','"':'&quot;','>':'&gt;',"'":'&#39;'}[a];}):'';},/**
     * 将str中的转义字符还原成html字符
     * @see UE.utils.unhtml(String);
     * @method html
     * @param { String } str 需要逆转义的字符串
     * @return { String } 逆转义后的字符串
     * @example
     * ```javascript
     *
     * var str = '&lt;body&gt;&amp;&lt;/body&gt;';
     *
     * //output: <body>&</body>
     * console.log( UE.utils.html( str ) );
     *
     * ```
     */html:function html(str){return str?str.replace(/&((g|l|quo)t|amp|#39|nbsp);/g,function(m){return{'&lt;':'<','&amp;':'&','&quot;':'"','&gt;':'>','&#39;':"'",'&nbsp;':' '}[m];}):'';},/**
     * 将css样式转换为驼峰的形式
     * @method cssStyleToDomStyle
     * @param { String } cssName 需要转换的css样式名
     * @return { String } 转换成驼峰形式后的css样式名
     * @example
     * ```javascript
     *
     * var str = 'border-top';
     *
     * //output: borderTop
     * console.log( UE.utils.cssStyleToDomStyle( str ) );
     *
     * ```
     */cssStyleToDomStyle:function(){var test=document.createElement('div').style,cache={'float':test.cssFloat!=undefined?'cssFloat':test.styleFloat!=undefined?'styleFloat':'float'};return function(cssName){return cache[cssName]||(cache[cssName]=cssName.toLowerCase().replace(/-./g,function(match){return match.charAt(1).toUpperCase();}));};}(),/**
     * 动态加载文件到doc中
     * @method loadFile
     * @param { DomDocument } document 需要加载资源文件的文档对象
     * @param { Object } options 加载资源文件的属性集合， 取值请参考代码示例
     * @example
     * ```javascript
     *
     * UE.utils.loadFile( document, {
     *     src:"test.js",
     *     tag:"script",
     *     type:"text/javascript",
     *     defer:"defer"
     * } );
     *
     * ```
     *//**
     * 动态加载文件到doc中，加载成功后执行的回调函数fn
     * @method loadFile
     * @param { DomDocument } document 需要加载资源文件的文档对象
     * @param { Object } options 加载资源文件的属性集合， 该集合支持的值是script标签和style标签支持的所有属性。
     * @param { Function } fn 资源文件加载成功之后执行的回调
     * @warning 对于在同一个文档中多次加载同一URL的文件， 该方法会在第一次加载之后缓存该请求，
     *           在此之后的所有同一URL的请求， 将会直接触发回调。
     * @example
     * ```javascript
     *
     * UE.utils.loadFile( document, {
     *     src:"test.js",
     *     tag:"script",
     *     type:"text/javascript",
     *     defer:"defer"
     * }, function () {
     *     console.log('加载成功');
     * } );
     *
     * ```
     */loadFile:function(){var tmpList=[];function getItem(doc,obj){try{for(var i=0,ci;ci=tmpList[i++];){if(ci.doc===doc&&ci.url==(obj.src||obj.href)){return ci;}}}catch(e){return null;}}return function(doc,obj,fn){var item=getItem(doc,obj);if(item){if(item.ready){fn&&fn();}else{item.funs.push(fn);}return;}tmpList.push({doc:doc,url:obj.src||obj.href,funs:[fn]});if(!doc.body){var html=[];for(var p in obj){if(p=='tag')continue;html.push(p+'="'+obj[p]+'"');}doc.write('<'+obj.tag+' '+html.join(' ')+' ></'+obj.tag+'>');return;}if(obj.id&&doc.getElementById(obj.id)){return;}var element=doc.createElement(obj.tag);delete obj.tag;for(var p in obj){element.setAttribute(p,obj[p]);}element.onload=element.onreadystatechange=function(){if(!this.readyState||/loaded|complete/.test(this.readyState)){item=getItem(doc,obj);if(item.funs.length>0){item.ready=1;for(var fi;fi=item.funs.pop();){fi();}}element.onload=element.onreadystatechange=null;}};element.onerror=function(){throw Error('The load '+(obj.href||obj.src)+' fails,check the url settings of file ueditor.config.js ');};doc.getElementsByTagName("head")[0].appendChild(element);};}(),/**
     * 判断obj对象是否为空
     * @method isEmptyObject
     * @param { * } obj 需要判断的对象
     * @remind 如果判断的对象是NULL， 将直接返回true， 如果是数组且为空， 返回true， 如果是字符串， 且字符串为空，
     *          返回true， 如果是普通对象， 且该对象没有任何实例属性， 返回true
     * @return { Boolean } 对象是否为空
     * @example
     * ```javascript
     *
     * //output: true
     * console.log( UE.utils.isEmptyObject( {} ) );
     *
     * //output: true
     * console.log( UE.utils.isEmptyObject( [] ) );
     *
     * //output: true
     * console.log( UE.utils.isEmptyObject( "" ) );
     *
     * //output: false
     * console.log( UE.utils.isEmptyObject( { key: 1 } ) );
     *
     * //output: false
     * console.log( UE.utils.isEmptyObject( [1] ) );
     *
     * //output: false
     * console.log( UE.utils.isEmptyObject( "1" ) );
     *
     * ```
     */isEmptyObject:function isEmptyObject(obj){if(obj==null)return true;if(this.isArray(obj)||this.isString(obj))return obj.length===0;for(var key in obj){if(obj.hasOwnProperty(key))return false;}return true;},/**
     * 把rgb格式的颜色值转换成16进制格式
     * @method fixColor
     * @param { String } rgb格式的颜色值
     * @param { String }
     * @example
     * rgb(255,255,255)  => "#ffffff"
     */fixColor:function fixColor(name,value){if(/color/i.test(name)&&/rgba?/.test(value)){var array=value.split(",");if(array.length>3)return"";value="#";for(var i=0,color;color=array[i++];){color=parseInt(color.replace(/[^\d]/gi,''),10).toString(16);value+=color.length==1?"0"+color:color;}value=value.toUpperCase();}return value;},/**
     * 只针对border,padding,margin做了处理，因为性能问题
     * @public
     * @function
     * @param {String}    val style字符串
     */optCss:function optCss(val){var padding,margin,border;val=val.replace(/(padding|margin|border)\-([^:]+):([^;]+);?/gi,function(str,key,name,val){if(val.split(' ').length==1){switch(key){case'padding':!padding&&(padding={});padding[name]=val;return'';case'margin':!margin&&(margin={});margin[name]=val;return'';case'border':return val=='initial'?'':str;}}return str;});function opt(obj,name){if(!obj){return'';}var t=obj.top,b=obj.bottom,l=obj.left,r=obj.right,val='';if(!t||!l||!b||!r){for(var p in obj){val+=';'+name+'-'+p+':'+obj[p]+';';}}else{val+=';'+name+':'+(t==b&&b==l&&l==r?t:t==b&&l==r?t+' '+l:l==r?t+' '+l+' '+b:t+' '+r+' '+b+' '+l)+';';}return val;}val+=opt(padding,'padding')+opt(margin,'margin');return val.replace(/^[ \n\r\t;]*|[ \n\r\t]*$/,'').replace(/;([ \n\r\t]+)|\1;/g,';').replace(/(&((l|g)t|quot|#39))?;{2,}/g,function(a,b){return b?b+";;":';';});},/**
     * 克隆对象
     * @method clone
     * @param { Object } source 源对象
     * @return { Object } source的一个副本
     *//**
     * 深度克隆对象，将source的属性克隆到target对象， 会覆盖target重名的属性。
     * @method clone
     * @param { Object } source 源对象
     * @param { Object } target 目标对象
     * @return { Object } 附加了source对象所有属性的target对象
     */clone:function clone(source,target){var tmp;target=target||{};for(var i in source){if(source.hasOwnProperty(i)){tmp=source[i];if((typeof tmp==='undefined'?'undefined':(0,_typeof3.default)(tmp))=='object'){target[i]=utils.isArray(tmp)?[]:{};utils.clone(source[i],target[i]);}else{target[i]=tmp;}}}return target;},/**
     * 把cm／pt为单位的值转换为px为单位的值
     * @method transUnitToPx
     * @param { String } 待转换的带单位的字符串
     * @return { String } 转换为px为计量单位的值的字符串
     * @example
     * ```javascript
     *
     * //output: 500px
     * console.log( UE.utils.transUnitToPx( '20cm' ) );
     *
     * //output: 27px
     * console.log( UE.utils.transUnitToPx( '20pt' ) );
     *
     * ```
     */transUnitToPx:function transUnitToPx(val){if(!/(pt|cm)/.test(val)){return val;}var unit;val.replace(/([\d.]+)(\w+)/,function(str,v,u){val=v;unit=u;});switch(unit){case'cm':val=parseFloat(val)*25;break;case'pt':val=Math.round(parseFloat(val)*96/72);}return val+(val?'px':'');},/**
     * 在dom树ready之后执行给定的回调函数
     * @method domReady
     * @remind 如果在执行该方法的时候， dom树已经ready， 那么回调函数将立刻执行
     * @param { Function } fn dom树ready之后的回调函数
     * @example
     * ```javascript
     *
     * UE.utils.domReady( function () {
     *
     *     console.log('123');
     *
     * } );
     *
     * ```
     */domReady:function(){var fnArr=[];function doReady(doc){//确保onready只执行一次
doc.isReady=true;for(var ci;ci=fnArr.pop();ci()){}}return function(onready,win){win=win||window;var doc=win.document;onready&&fnArr.push(onready);if(doc.readyState==="complete"){doReady(doc);}else{doc.isReady&&doReady(doc);if(browser.ie&&browser.version!=11){(function(){if(doc.isReady)return;try{doc.documentElement.doScroll("left");}catch(error){setTimeout(arguments.callee,0);return;}doReady(doc);})();win.attachEvent('onload',function(){doReady(doc);});}else{doc.addEventListener("DOMContentLoaded",function(){doc.removeEventListener("DOMContentLoaded",arguments.callee,false);doReady(doc);},false);win.addEventListener('load',function(){doReady(doc);},false);}}};}(),/**
     * 动态添加css样式
     * @method cssRule
     * @param { String } 节点名称
     * @grammar UE.utils.cssRule('添加的样式的节点名称',['样式'，'放到哪个document上'])
     * @grammar UE.utils.cssRule('body','body{background:#ccc}') => null  //给body添加背景颜色
     * @grammar UE.utils.cssRule('body') =>样式的字符串  //取得key值为body的样式的内容,如果没有找到key值先关的样式将返回空，例如刚才那个背景颜色，将返回 body{background:#ccc}
     * @grammar UE.utils.cssRule('body',document) => 返回指定key的样式，并且指定是哪个document
     * @grammar UE.utils.cssRule('body','') =>null //清空给定的key值的背景颜色
     */cssRule:browser.ie&&browser.version!=11?function(key,style,doc){var indexList,index;if(style===undefined||style&&style.nodeType&&style.nodeType==9){//获取样式
doc=style&&style.nodeType&&style.nodeType==9?style:doc||document;indexList=doc.indexList||(doc.indexList={});index=indexList[key];if(index!==undefined){return doc.styleSheets[index].cssText;}return undefined;}doc=doc||document;indexList=doc.indexList||(doc.indexList={});index=indexList[key];//清除样式
if(style===''){if(index!==undefined){doc.styleSheets[index].cssText='';delete indexList[key];return true;}return false;}//添加样式
if(index!==undefined){sheetStyle=doc.styleSheets[index];}else{sheetStyle=doc.createStyleSheet('',index=doc.styleSheets.length);indexList[key]=index;}sheetStyle.cssText=style;}:function(key,style,doc){var head,node;if(style===undefined||style&&style.nodeType&&style.nodeType==9){//获取样式
doc=style&&style.nodeType&&style.nodeType==9?style:doc||document;node=doc.getElementById(key);return node?node.innerHTML:undefined;}doc=doc||document;node=doc.getElementById(key);//清除样式
if(style===''){if(node){node.parentNode.removeChild(node);return true;}return false;}//添加样式
if(node){node.innerHTML=style;}else{node=doc.createElement('style');node.id=key;node.innerHTML=style;doc.getElementsByTagName('head')[0].appendChild(node);}},sort:function sort(array,compareFn){compareFn=compareFn||function(item1,item2){return item1.localeCompare(item2);};for(var i=0,len=array.length;i<len;i++){for(var j=i,length=array.length;j<length;j++){if(compareFn(array[i],array[j])>0){var t=array[i];array[i]=array[j];array[j]=t;}}}return array;},serializeParam:function serializeParam(json){var strArr=[];for(var i in json){//忽略默认的几个参数
if(i=="method"||i=="timeout"||i=="async")continue;//传递过来的对象和函数不在提交之列
if(!((0,_typeof3.default)(json[i]).toLowerCase()=="function"||(0,_typeof3.default)(json[i]).toLowerCase()=="object")){strArr.push(encodeURIComponent(i)+"="+encodeURIComponent(json[i]));}else if(utils.isArray(json[i])){//支持传数组内容
for(var j=0;j<json[i].length;j++){strArr.push(encodeURIComponent(i)+"[]="+encodeURIComponent(json[i][j]));}}}return strArr.join("&");},formatUrl:function formatUrl(url){var u=url.replace(/&&/g,'&');u=u.replace(/\?&/g,'?');u=u.replace(/&$/g,'');u=u.replace(/&#/g,'#');u=u.replace(/&+/g,'&');return u;},isCrossDomainUrl:function isCrossDomainUrl(url){var a=document.createElement('a');a.href=url;if(browser.ie){a.href=a.href;}return!(a.protocol==location.protocol&&a.hostname==location.hostname&&(a.port==location.port||a.port=='80'&&location.port==''||a.port==''&&location.port=='80'));},clearEmptyAttrs:function clearEmptyAttrs(obj){for(var p in obj){if(obj[p]===''){delete obj[p];}}return obj;},str2json:function str2json(s){if(!utils.isString(s))return null;if(window.JSON){return JSON.parse(s);}else{return new Function("return "+utils.trim(s||''))();}},json2str:function(){if(window.JSON){return _stringify2.default;}else{var encodeString=function encodeString(source){if(/["\\\x00-\x1f]/.test(source)){source=source.replace(/["\\\x00-\x1f]/g,function(match){var c=escapeMap[match];if(c){return c;}c=match.charCodeAt();return'\\u00'+Math.floor(c/16).toString(16)+(c%16).toString(16);});}return'"'+source+'"';};var encodeArray=function encodeArray(source){var result=["["],l=source.length,preComma,i,item;for(i=0;i<l;i++){item=source[i];switch(typeof item==='undefined'?'undefined':(0,_typeof3.default)(item)){case"undefined":case"function":case"unknown":break;default:if(preComma){result.push(',');}result.push(utils.json2str(item));preComma=1;}}result.push("]");return result.join("");};var pad=function pad(source){return source<10?'0'+source:source;};var encodeDate=function encodeDate(source){return'"'+source.getFullYear()+"-"+pad(source.getMonth()+1)+"-"+pad(source.getDate())+"T"+pad(source.getHours())+":"+pad(source.getMinutes())+":"+pad(source.getSeconds())+'"';};var escapeMap={"\b":'\\b',"\t":'\\t',"\n":'\\n',"\f":'\\f',"\r":'\\r','"':'\\"',"\\":'\\\\'};return function(value){switch(typeof value==='undefined'?'undefined':(0,_typeof3.default)(value)){case'undefined':return'undefined';case'number':return isFinite(value)?String(value):"null";case'string':return encodeString(value);case'boolean':return String(value);default:if(value===null){return'null';}else if(utils.isArray(value)){return encodeArray(value);}else if(utils.isDate(value)){return encodeDate(value);}else{var result=['{'],encode=utils.json2str,preComma,item;for(var key in value){if(Object.prototype.hasOwnProperty.call(value,key)){item=value[key];switch(typeof item==='undefined'?'undefined':(0,_typeof3.default)(item)){case'undefined':case'unknown':case'function':break;default:if(preComma){result.push(',');}preComma=1;result.push(encode(key)+':'+encode(item));}}}result.push('}');return result.join('');}}};}}()};/**
 * 判断给定的对象是否是字符串
 * @method isString
 * @param { * } object 需要判断的对象
 * @return { Boolean } 给定的对象是否是字符串
 *//**
 * 判断给定的对象是否是数组
 * @method isArray
 * @param { * } object 需要判断的对象
 * @return { Boolean } 给定的对象是否是数组
 *//**
 * 判断给定的对象是否是一个Function
 * @method isFunction
 * @param { * } object 需要判断的对象
 * @return { Boolean } 给定的对象是否是Function
 *//**
 * 判断给定的对象是否是Number
 * @method isNumber
 * @param { * } object 需要判断的对象
 * @return { Boolean } 给定的对象是否是Number
 *//**
 * 判断给定的对象是否是一个正则表达式
 * @method isRegExp
 * @param { * } object 需要判断的对象
 * @return { Boolean } 给定的对象是否是正则表达式
 *//**
 * 判断给定的对象是否是一个普通对象
 * @method isObject
 * @param { * } object 需要判断的对象
 * @return { Boolean } 给定的对象是否是普通对象
 */utils.each(['String','Function','Array','Number','RegExp','Object','Date'],function(v){UE.utils['is'+v]=function(obj){return Object.prototype.toString.apply(obj)=='[object '+v+']';};});// core/EventBase.js
/**
 * UE采用的事件基类
 * @file
 * @module UE
 * @class EventBase
 * @since 1.2.6.1
 *//**
 * UEditor公用空间，UEditor所有的功能都挂载在该空间下
 * @unfile
 * @module UE
 *//**
 * UE采用的事件基类，继承此类的对应类将获取addListener,removeListener,fireEvent方法。
 * 在UE中，Editor以及所有ui实例都继承了该类，故可以在对应的ui对象以及editor对象上使用上述方法。
 * @unfile
 * @module UE
 * @class EventBase
 *//**
 * 通过此构造器，子类可以继承EventBase获取事件监听的方法
 * @constructor
 * @example
 * ```javascript
 * UE.EventBase.call(editor);
 * ```
 */var EventBase=UE.EventBase=function(){};EventBase.prototype={/**
     * 注册事件监听器
     * @method addListener
     * @param { String } types 监听的事件名称，同时监听多个事件使用空格分隔
     * @param { Function } fn 监听的事件被触发时，会执行该回调函数
     * @waining 事件被触发时，监听的函数假如返回的值恒等于true，回调函数的队列中后面的函数将不执行
     * @example
     * ```javascript
     * editor.addListener('selectionchange',function(){
     *      console.log("选区已经变化！");
     * })
     * editor.addListener('beforegetcontent aftergetcontent',function(type){
     *         if(type == 'beforegetcontent'){
     *             //do something
     *         }else{
     *             //do something
     *         }
     *         console.log(this.getContent) // this是注册的事件的编辑器实例
     * })
     * ```
     * @see UE.EventBase:fireEvent(String)
     */addListener:function addListener(types,listener){types=utils.trim(types).split(/\s+/);for(var i=0,ti;ti=types[i++];){getListener(this,ti,true).push(listener);}},on:function on(types,listener){return this.addListener(types,listener);},off:function off(types,listener){return this.removeListener(types,listener);},trigger:function trigger(){return this.fireEvent.apply(this,arguments);},/**
     * 移除事件监听器
     * @method removeListener
     * @param { String } types 移除的事件名称，同时移除多个事件使用空格分隔
     * @param { Function } fn 移除监听事件的函数引用
     * @example
     * ```javascript
     * //changeCallback为方法体
     * editor.removeListener("selectionchange",changeCallback);
     * ```
     */removeListener:function removeListener(types,listener){types=utils.trim(types).split(/\s+/);for(var i=0,ti;ti=types[i++];){utils.removeItem(getListener(this,ti)||[],listener);}},/**
     * 触发事件
     * @method fireEvent
     * @param { String } types 触发的事件名称，同时触发多个事件使用空格分隔
     * @remind 该方法会触发addListener
     * @return { * } 返回触发事件的队列中，最后执行的回调函数的返回值
     * @example
     * ```javascript
     * editor.fireEvent("selectionchange");
     * ```
     *//**
     * 触发事件
     * @method fireEvent
     * @param { String } types 触发的事件名称，同时触发多个事件使用空格分隔
     * @param { *... } options 可选参数，可以传入一个或多个参数，会传给事件触发的回调函数
     * @return { * } 返回触发事件的队列中，最后执行的回调函数的返回值
     * @example
     * ```javascript
     *
     * editor.addListener( "selectionchange", function ( type, arg1, arg2 ) {
     *
     *     console.log( arg1 + " " + arg2 );
     *
     * } );
     *
     * //触发selectionchange事件， 会执行上面的事件监听器
     * //output: Hello World
     * editor.fireEvent("selectionchange", "Hello", "World");
     * ```
     */fireEvent:function fireEvent(){var types=arguments[0];types=utils.trim(types).split(' ');for(var i=0,ti;ti=types[i++];){var listeners=getListener(this,ti),r,t,k;if(listeners){k=listeners.length;while(k--){if(!listeners[k])continue;t=listeners[k].apply(this,arguments);if(t===true){return t;}if(t!==undefined){r=t;}}}if(t=this['on'+ti.toLowerCase()]){r=t.apply(this,arguments);}}return r;}};/**
 * 获得对象所拥有监听类型的所有监听器
 * @unfile
 * @module UE
 * @since 1.2.6.1
 * @method getListener
 * @public
 * @param { Object } obj  查询监听器的对象
 * @param { String } type 事件类型
 * @param { Boolean } force  为true且当前所有type类型的侦听器不存在时，创建一个空监听器数组
 * @return { Array } 监听器数组
 */function getListener(obj,type,force){var allListeners;type=type.toLowerCase();return(allListeners=obj.__allListeners||force&&(obj.__allListeners={}))&&(allListeners[type]||force&&(allListeners[type]=[]));}// core/dtd.js
///import editor.js
///import core/dom/dom.js
///import core/utils.js
/**
 * dtd html语义化的体现类
 * @constructor
 * @namespace dtd
 */var dtd=dom.dtd=function(){function _(s){for(var k in s){s[k.toUpperCase()]=s[k];}return s;}var X=utils.extend2;var A=_({isindex:1,fieldset:1}),B=_({input:1,button:1,select:1,textarea:1,label:1}),C=X(_({a:1}),B),D=X({iframe:1},C),E=_({hr:1,ul:1,menu:1,div:1,blockquote:1,noscript:1,table:1,center:1,address:1,dir:1,pre:1,h5:1,dl:1,h4:1,noframes:1,h6:1,ol:1,h1:1,h3:1,h2:1}),F=_({ins:1,del:1,script:1,style:1}),G=X(_({b:1,acronym:1,bdo:1,'var':1,'#':1,abbr:1,code:1,br:1,i:1,cite:1,kbd:1,u:1,strike:1,s:1,tt:1,strong:1,q:1,samp:1,em:1,dfn:1,span:1}),F),H=X(_({sub:1,img:1,embed:1,object:1,sup:1,basefont:1,map:1,applet:1,font:1,big:1,small:1}),G),I=X(_({p:1}),H),J=X(_({iframe:1}),H,B),K=_({img:1,embed:1,noscript:1,br:1,kbd:1,center:1,button:1,basefont:1,h5:1,h4:1,samp:1,h6:1,ol:1,h1:1,h3:1,h2:1,form:1,font:1,'#':1,select:1,menu:1,ins:1,abbr:1,label:1,code:1,table:1,script:1,cite:1,input:1,iframe:1,strong:1,textarea:1,noframes:1,big:1,small:1,span:1,hr:1,sub:1,bdo:1,'var':1,div:1,object:1,sup:1,strike:1,dir:1,map:1,dl:1,applet:1,del:1,isindex:1,fieldset:1,ul:1,b:1,acronym:1,a:1,blockquote:1,i:1,u:1,s:1,tt:1,address:1,q:1,pre:1,p:1,em:1,dfn:1}),L=X(_({a:0}),J),//a不能被切开，所以把他
M=_({tr:1}),N=_({'#':1}),O=X(_({param:1}),K),P=X(_({form:1}),A,D,E,I),Q=_({li:1,ol:1,ul:1}),R=_({style:1,script:1}),S=_({base:1,link:1,meta:1,title:1}),T=X(S,R),U=_({head:1,body:1}),V=_({html:1});var block=_({address:1,blockquote:1,center:1,dir:1,div:1,dl:1,fieldset:1,form:1,h1:1,h2:1,h3:1,h4:1,h5:1,h6:1,hr:1,isindex:1,menu:1,noframes:1,ol:1,p:1,pre:1,table:1,ul:1}),empty=_({area:1,base:1,basefont:1,br:1,col:1,command:1,dialog:1,embed:1,hr:1,img:1,input:1,isindex:1,keygen:1,link:1,meta:1,param:1,source:1,track:1,wbr:1});return _({// $ 表示自定的属性
// body外的元素列表.
$nonBodyContent:X(V,U,S),//块结构元素列表
$block:block,//内联元素列表
$inline:L,$inlineWithA:X(_({a:1}),L),$body:X(_({script:1,style:1}),block),$cdata:_({script:1,style:1}),//自闭和元素
$empty:empty,//不是自闭合，但不能让range选中里边
$nonChild:_({iframe:1,textarea:1}),//列表元素列表
$listItem:_({dd:1,dt:1,li:1}),//列表根元素列表
$list:_({ul:1,ol:1,dl:1}),//不能认为是空的元素
$isNotEmpty:_({table:1,ul:1,ol:1,dl:1,iframe:1,area:1,base:1,col:1,hr:1,img:1,embed:1,input:1,link:1,meta:1,param:1,h1:1,h2:1,h3:1,h4:1,h5:1,h6:1}),//如果没有子节点就可以删除的元素列表，像span,a
$removeEmpty:_({a:1,abbr:1,acronym:1,address:1,b:1,bdo:1,big:1,cite:1,code:1,del:1,dfn:1,em:1,font:1,i:1,ins:1,label:1,kbd:1,q:1,s:1,samp:1,small:1,span:1,strike:1,strong:1,sub:1,sup:1,tt:1,u:1,'var':1}),$removeEmptyBlock:_({'p':1,'div':1}),//在table元素里的元素列表
$tableContent:_({caption:1,col:1,colgroup:1,tbody:1,td:1,tfoot:1,th:1,thead:1,tr:1,table:1}),//不转换的标签
$notTransContent:_({pre:1,script:1,style:1,textarea:1}),html:U,head:T,style:N,script:N,body:P,base:{},link:{},meta:{},title:N,col:{},tr:_({td:1,th:1}),img:{},embed:{},colgroup:_({thead:1,col:1,tbody:1,tr:1,tfoot:1}),noscript:P,td:P,br:{},th:P,center:P,kbd:L,button:X(I,E),basefont:{},h5:L,h4:L,samp:L,h6:L,ol:Q,h1:L,h3:L,option:N,h2:L,form:X(A,D,E,I),select:_({optgroup:1,option:1}),font:L,ins:L,menu:Q,abbr:L,label:L,table:_({thead:1,col:1,tbody:1,tr:1,colgroup:1,caption:1,tfoot:1}),code:L,tfoot:M,cite:L,li:P,input:{},iframe:P,strong:L,textarea:N,noframes:P,big:L,small:L,//trace:
span:_({'#':1,br:1,b:1,strong:1,u:1,i:1,em:1,sub:1,sup:1,strike:1,span:1}),hr:L,dt:L,sub:L,optgroup:_({option:1}),param:{},bdo:L,'var':L,div:P,object:O,sup:L,dd:P,strike:L,area:{},dir:Q,map:X(_({area:1,form:1,p:1}),A,F,E),applet:O,dl:_({dt:1,dd:1}),del:L,isindex:{},fieldset:X(_({legend:1}),K),thead:M,ul:Q,acronym:L,b:L,a:X(_({a:1}),J),blockquote:X(_({td:1,tr:1,tbody:1,li:1}),P),caption:L,i:L,u:L,tbody:M,s:L,address:X(D,I),tt:L,legend:L,q:L,pre:X(G,C),p:X(_({'a':1}),L),em:L,dfn:L});}();// core/domUtils.js
/**
 * Dom操作工具包
 * @file
 * @module UE.dom.domUtils
 * @since 1.2.6.1
 *//**
 * Dom操作工具包
 * @unfile
 * @module UE.dom.domUtils
 */function getDomNode(node,start,ltr,startFromChild,fn,guard){var tmpNode=startFromChild&&node[start],parent;!tmpNode&&(tmpNode=node[ltr]);while(!tmpNode&&(parent=(parent||node).parentNode)){if(parent.tagName=='BODY'||guard&&!guard(parent)){return null;}tmpNode=parent[ltr];}if(tmpNode&&fn&&!fn(tmpNode)){return getDomNode(tmpNode,start,ltr,false,fn);}return tmpNode;}var attrFix=ie&&browser.version<9?{tabindex:"tabIndex",readonly:"readOnly","for":"htmlFor","class":"className",maxlength:"maxLength",cellspacing:"cellSpacing",cellpadding:"cellPadding",rowspan:"rowSpan",colspan:"colSpan",usemap:"useMap",frameborder:"frameBorder"}:{tabindex:"tabIndex",readonly:"readOnly"},styleBlock=utils.listToMap(['-webkit-box','-moz-box','block','list-item','table','table-row-group','table-header-group','table-footer-group','table-row','table-column-group','table-column','table-cell','table-caption']);var domUtils=dom.domUtils={//节点常量
NODE_ELEMENT:1,NODE_DOCUMENT:9,NODE_TEXT:3,NODE_COMMENT:8,NODE_DOCUMENT_FRAGMENT:11,//位置关系
POSITION_IDENTICAL:0,POSITION_DISCONNECTED:1,POSITION_FOLLOWING:2,POSITION_PRECEDING:4,POSITION_IS_CONTAINED:8,POSITION_CONTAINS:16,//ie6使用其他的会有一段空白出现
fillChar:ie&&browser.version=='6'?'\uFEFF':'\u200B',//-------------------------Node部分--------------------------------
keys:{/*Backspace*/8:1,/*Delete*/46:1,/*Shift*/16:1,/*Ctrl*/17:1,/*Alt*/18:1,37:1,38:1,39:1,40:1,13:1/*enter*/},/**
     * 获取节点A相对于节点B的位置关系
     * @method getPosition
     * @param { Node } nodeA 需要查询位置关系的节点A
     * @param { Node } nodeB 需要查询位置关系的节点B
     * @return { Number } 节点A与节点B的关系
     * @example
     * ```javascript
     * //output: 20
     * var position = UE.dom.domUtils.getPosition( document.documentElement, document.body );
     *
     * switch ( position ) {
     *
     *      //0
     *      case UE.dom.domUtils.POSITION_IDENTICAL:
     *          console.log('元素相同');
     *          break;
     *      //1
     *      case UE.dom.domUtils.POSITION_DISCONNECTED:
     *          console.log('两个节点在不同的文档中');
     *          break;
     *      //2
     *      case UE.dom.domUtils.POSITION_FOLLOWING:
     *          console.log('节点A在节点B之后');
     *          break;
     *      //4
     *      case UE.dom.domUtils.POSITION_PRECEDING;
     *          console.log('节点A在节点B之前');
     *          break;
     *      //8
     *      case UE.dom.domUtils.POSITION_IS_CONTAINED:
     *          console.log('节点A被节点B包含');
     *          break;
     *      case 10:
     *          console.log('节点A被节点B包含且节点A在节点B之后');
     *          break;
     *      //16
     *      case UE.dom.domUtils.POSITION_CONTAINS:
     *          console.log('节点A包含节点B');
     *          break;
     *      case 20:
     *          console.log('节点A包含节点B且节点A在节点B之前');
     *          break;
     *
     * }
     * ```
     */getPosition:function getPosition(nodeA,nodeB){// 如果两个节点是同一个节点
if(nodeA===nodeB){// domUtils.POSITION_IDENTICAL
return 0;}var node,parentsA=[nodeA],parentsB=[nodeB];node=nodeA;while(node=node.parentNode){// 如果nodeB是nodeA的祖先节点
if(node===nodeB){// domUtils.POSITION_IS_CONTAINED + domUtils.POSITION_FOLLOWING
return 10;}parentsA.push(node);}node=nodeB;while(node=node.parentNode){// 如果nodeA是nodeB的祖先节点
if(node===nodeA){// domUtils.POSITION_CONTAINS + domUtils.POSITION_PRECEDING
return 20;}parentsB.push(node);}parentsA.reverse();parentsB.reverse();if(parentsA[0]!==parentsB[0]){// domUtils.POSITION_DISCONNECTED
return 1;}var i=-1;while(i++,parentsA[i]===parentsB[i]){}nodeA=parentsA[i];nodeB=parentsB[i];while(nodeA=nodeA.nextSibling){if(nodeA===nodeB){// domUtils.POSITION_PRECEDING
return 4;}}// domUtils.POSITION_FOLLOWING
return 2;},/**
     * 检测节点node在父节点中的索引位置
     * @method getNodeIndex
     * @param { Node } node 需要检测的节点对象
     * @return { Number } 该节点在父节点中的位置
     * @see UE.dom.domUtils.getNodeIndex(Node,Boolean)
     *//**
     * 检测节点node在父节点中的索引位置， 根据给定的mergeTextNode参数决定是否要合并多个连续的文本节点为一个节点
     * @method getNodeIndex
     * @param { Node } node 需要检测的节点对象
     * @param { Boolean } mergeTextNode 是否合并多个连续的文本节点为一个节点
     * @return { Number } 该节点在父节点中的位置
     * @example
     * ```javascript
     *
     *      var node = document.createElement("div");
     *
     *      node.appendChild( document.createTextNode( "hello" ) );
     *      node.appendChild( document.createTextNode( "world" ) );
     *      node.appendChild( node = document.createElement( "div" ) );
     *
     *      //output: 2
     *      console.log( UE.dom.domUtils.getNodeIndex( node ) );
     *
     *      //output: 1
     *      console.log( UE.dom.domUtils.getNodeIndex( node, true ) );
     *
     * ```
     */getNodeIndex:function getNodeIndex(node,ignoreTextNode){var preNode=node,i=0;while(preNode=preNode.previousSibling){if(ignoreTextNode&&preNode.nodeType==3){if(preNode.nodeType!=preNode.nextSibling.nodeType){i++;}continue;}i++;}return i;},/**
     * 检测节点node是否在给定的document对象上
     * @method inDoc
     * @param { Node } node 需要检测的节点对象
     * @param { DomDocument } doc 需要检测的document对象
     * @return { Boolean } 该节点node是否在给定的document的dom树上
     * @example
     * ```javascript
     *
     * var node = document.createElement("div");
     *
     * //output: false
     * console.log( UE.do.domUtils.inDoc( node, document ) );
     *
     * document.body.appendChild( node );
     *
     * //output: true
     * console.log( UE.do.domUtils.inDoc( node, document ) );
     *
     * ```
     */inDoc:function inDoc(node,doc){return domUtils.getPosition(node,doc)==10;},/**
     * 根据给定的过滤规则filterFn， 查找符合该过滤规则的node节点的第一个祖先节点，
     * 查找的起点是给定node节点的父节点。
     * @method findParent
     * @param { Node } node 需要查找的节点
     * @param { Function } filterFn 自定义的过滤方法。
     * @warning 查找的终点是到body节点为止
     * @remind 自定义的过滤方法filterFn接受一个Node对象作为参数， 该对象代表当前执行检测的祖先节点。 如果该
     *          节点满足过滤条件， 则要求返回true， 这时将直接返回该节点作为findParent()的结果， 否则， 请返回false。
     * @return { Node | Null } 如果找到符合过滤条件的节点， 就返回该节点， 否则返回NULL
     * @example
     * ```javascript
     * var filterNode = UE.dom.domUtils.findParent( document.body.firstChild, function ( node ) {
     *
     *     //由于查找的终点是body节点， 所以永远也不会匹配当前过滤器的条件， 即这里永远会返回false
     *     return node.tagName === "HTML";
     *
     * } );
     *
     * //output: true
     * console.log( filterNode === null );
     * ```
     *//**
     * 根据给定的过滤规则filterFn， 查找符合该过滤规则的node节点的第一个祖先节点，
     * 如果includeSelf的值为true，则查找的起点是给定的节点node， 否则， 起点是node的父节点
     * @method findParent
     * @param { Node } node 需要查找的节点
     * @param { Function } filterFn 自定义的过滤方法。
     * @param { Boolean } includeSelf 查找过程是否包含自身
     * @warning 查找的终点是到body节点为止
     * @remind 自定义的过滤方法filterFn接受一个Node对象作为参数， 该对象代表当前执行检测的祖先节点。 如果该
     *          节点满足过滤条件， 则要求返回true， 这时将直接返回该节点作为findParent()的结果， 否则， 请返回false。
     * @remind 如果includeSelf为true， 则过滤器第一次执行时的参数会是节点本身。
     *          反之， 过滤器第一次执行时的参数将是该节点的父节点。
     * @return { Node | Null } 如果找到符合过滤条件的节点， 就返回该节点， 否则返回NULL
     * @example
     * ```html
     * <body>
     *
     *      <div id="test">
     *      </div>
     *
     *      <script type="text/javascript">
     *
     *          //output: DIV, BODY
     *          var filterNode = UE.dom.domUtils.findParent( document.getElementById( "test" ), function ( node ) {
     *
     *              console.log( node.tagName );
     *              return false;
     *
     *          }, true );
     *
     *      </script>
     * </body>
     * ```
     */findParent:function findParent(node,filterFn,includeSelf){if(node&&!domUtils.isBody(node)){node=includeSelf?node:node.parentNode;while(node){if(!filterFn||filterFn(node)||domUtils.isBody(node)){return filterFn&&!filterFn(node)&&domUtils.isBody(node)?null:node;}node=node.parentNode;}}return null;},/**
     * 查找node的节点名为tagName的第一个祖先节点， 查找的起点是node节点的父节点。
     * @method findParentByTagName
     * @param { Node } node 需要查找的节点对象
     * @param { Array } tagNames 需要查找的父节点的名称数组
     * @warning 查找的终点是到body节点为止
     * @return { Node | NULL } 如果找到符合条件的节点， 则返回该节点， 否则返回NULL
     * @example
     * ```javascript
     * var node = UE.dom.domUtils.findParentByTagName( document.getElementsByTagName("div")[0], [ "BODY" ] );
     * //output: BODY
     * console.log( node.tagName );
     * ```
     *//**
     * 查找node的节点名为tagName的祖先节点， 如果includeSelf的值为true，则查找的起点是给定的节点node，
     * 否则， 起点是node的父节点。
     * @method findParentByTagName
     * @param { Node } node 需要查找的节点对象
     * @param { Array } tagNames 需要查找的父节点的名称数组
     * @param { Boolean } includeSelf 查找过程是否包含node节点自身
     * @warning 查找的终点是到body节点为止
     * @return { Node | NULL } 如果找到符合条件的节点， 则返回该节点， 否则返回NULL
     * @example
     * ```javascript
     * var queryTarget = document.getElementsByTagName("div")[0];
     * var node = UE.dom.domUtils.findParentByTagName( queryTarget, [ "DIV" ], true );
     * //output: true
     * console.log( queryTarget === node );
     * ```
     */findParentByTagName:function findParentByTagName(node,tagNames,includeSelf,excludeFn){tagNames=utils.listToMap(utils.isArray(tagNames)?tagNames:[tagNames]);return domUtils.findParent(node,function(node){return tagNames[node.tagName]&&!(excludeFn&&excludeFn(node));},includeSelf);},/**
     * 查找节点node的祖先节点集合， 查找的起点是给定节点的父节点，结果集中不包含给定的节点。
     * @method findParents
     * @param { Node } node 需要查找的节点对象
     * @return { Array } 给定节点的祖先节点数组
     * @grammar UE.dom.domUtils.findParents(node)  => Array  //返回一个祖先节点数组集合，不包含自身
     * @grammar UE.dom.domUtils.findParents(node,includeSelf)  => Array  //返回一个祖先节点数组集合，includeSelf指定是否包含自身
     * @grammar UE.dom.domUtils.findParents(node,includeSelf,filterFn)  => Array  //返回一个祖先节点数组集合，filterFn指定过滤条件，返回true的node将被选取
     * @grammar UE.dom.domUtils.findParents(node,includeSelf,filterFn,closerFirst)  => Array  //返回一个祖先节点数组集合，closerFirst为true的话，node的直接父亲节点是数组的第0个
     *//**
     * 查找节点node的祖先节点集合， 如果includeSelf的值为true，
     * 则返回的结果集中允许出现当前给定的节点， 否则， 该节点不会出现在其结果集中。
     * @method findParents
     * @param { Node } node 需要查找的节点对象
     * @param { Boolean } includeSelf 查找的结果中是否允许包含当前查找的节点对象
     * @return { Array } 给定节点的祖先节点数组
     */findParents:function findParents(node,includeSelf,filterFn,closerFirst){var parents=includeSelf&&(filterFn&&filterFn(node)||!filterFn)?[node]:[];while(node=domUtils.findParent(node,filterFn)){parents.push(node);}return closerFirst?parents:parents.reverse();},/**
     * 在节点node后面插入新节点newNode
     * @method insertAfter
     * @param { Node } node 目标节点
     * @param { Node } newNode 新插入的节点， 该节点将置于目标节点之后
     * @return { Node } 新插入的节点
     */insertAfter:function insertAfter(node,newNode){return node.nextSibling?node.parentNode.insertBefore(newNode,node.nextSibling):node.parentNode.appendChild(newNode);},/**
     * 删除节点node及其下属的所有节点
     * @method remove
     * @param { Node } node 需要删除的节点对象
     * @return { Node } 返回刚删除的节点对象
     * @example
     * ```html
     * <div id="test">
     *     <div id="child">你好</div>
     * </div>
     * <script>
     *     UE.dom.domUtils.remove( document.body, false );
     *     //output: false
     *     console.log( document.getElementById( "child" ) !== null );
     * </script>
     * ```
     *//**
     * 删除节点node，并根据keepChildren的值决定是否保留子节点
     * @method remove
     * @param { Node } node 需要删除的节点对象
     * @param { Boolean } keepChildren 是否需要保留子节点
     * @return { Node } 返回刚删除的节点对象
     * @example
     * ```html
     * <div id="test">
     *     <div id="child">你好</div>
     * </div>
     * <script>
     *     UE.dom.domUtils.remove( document.body, true );
     *     //output: true
     *     console.log( document.getElementById( "child" ) !== null );
     * </script>
     * ```
     */remove:function remove(node,keepChildren){var parent=node.parentNode,child;if(parent){if(keepChildren&&node.hasChildNodes()){while(child=node.firstChild){parent.insertBefore(child,node);}}parent.removeChild(node);}return node;},/**
     * 取得node节点的下一个兄弟节点， 如果该节点其后没有兄弟节点， 则递归查找其父节点之后的第一个兄弟节点，
     * 直到找到满足条件的节点或者递归到BODY节点之后才会结束。
     * @method getNextDomNode
     * @param { Node } node 需要获取其后的兄弟节点的节点对象
     * @return { Node | NULL } 如果找满足条件的节点， 则返回该节点， 否则返回NULL
     * @example
     * ```html
     *     <body>
     *      <div id="test">
     *          <span></span>
     *      </div>
     *      <i>xxx</i>
     * </body>
     * <script>
     *
     *     //output: i节点
     *     console.log( UE.dom.domUtils.getNextDomNode( document.getElementById( "test" ) ) );
     *
     * </script>
     * ```
     * @example
     * ```html
     * <body>
     *      <div>
     *          <span></span>
     *          <i id="test">xxx</i>
     *      </div>
     *      <b>xxx</b>
     * </body>
     * <script>
     *
     *     //由于id为test的i节点之后没有兄弟节点， 则查找其父节点（div）后面的兄弟节点
     *     //output: b节点
     *     console.log( UE.dom.domUtils.getNextDomNode( document.getElementById( "test" ) ) );
     *
     * </script>
     * ```
     *//**
     * 取得node节点的下一个兄弟节点， 如果startFromChild的值为ture，则先获取其子节点，
     * 如果有子节点则直接返回第一个子节点；如果没有子节点或者startFromChild的值为false，
     * 则执行<a href="#UE.dom.domUtils.getNextDomNode(Node)">getNextDomNode(Node node)</a>的查找过程。
     * @method getNextDomNode
     * @param { Node } node 需要获取其后的兄弟节点的节点对象
     * @param { Boolean } startFromChild 查找过程是否从其子节点开始
     * @return { Node | NULL } 如果找满足条件的节点， 则返回该节点， 否则返回NULL
     * @see UE.dom.domUtils.getNextDomNode(Node)
     */getNextDomNode:function getNextDomNode(node,startFromChild,filterFn,guard){return getDomNode(node,'firstChild','nextSibling',startFromChild,filterFn,guard);},getPreDomNode:function getPreDomNode(node,startFromChild,filterFn,guard){return getDomNode(node,'lastChild','previousSibling',startFromChild,filterFn,guard);},/**
     * 检测节点node是否属是UEditor定义的bookmark节点
     * @method isBookmarkNode
     * @private
     * @param { Node } node 需要检测的节点对象
     * @return { Boolean } 是否是bookmark节点
     * @example
     * ```html
     * <span id="_baidu_bookmark_1"></span>
     * <script>
     *      var bookmarkNode = document.getElementById("_baidu_bookmark_1");
     *      //output: true
     *      console.log( UE.dom.domUtils.isBookmarkNode( bookmarkNode ) );
     * </script>
     * ```
     */isBookmarkNode:function isBookmarkNode(node){return node.nodeType==1&&node.id&&/^_baidu_bookmark_/i.test(node.id);},/**
     * 获取节点node所属的window对象
     * @method  getWindow
     * @param { Node } node 节点对象
     * @return { Window } 当前节点所属的window对象
     * @example
     * ```javascript
     * //output: true
     * console.log( UE.dom.domUtils.getWindow( document.body ) === window );
     * ```
     */getWindow:function getWindow(node){var doc=node.ownerDocument||node;return doc.defaultView||doc.parentWindow;},/**
     * 获取离nodeA与nodeB最近的公共的祖先节点
     * @method  getCommonAncestor
     * @param { Node } nodeA 第一个节点
     * @param { Node } nodeB 第二个节点
     * @remind 如果给定的两个节点是同一个节点， 将直接返回该节点。
     * @return { Node | NULL } 如果未找到公共节点， 返回NULL， 否则返回最近的公共祖先节点。
     * @example
     * ```javascript
     * var commonAncestor = UE.dom.domUtils.getCommonAncestor( document.body, document.body.firstChild );
     * //output: true
     * console.log( commonAncestor.tagName.toLowerCase() === 'body' );
     * ```
     */getCommonAncestor:function getCommonAncestor(nodeA,nodeB){if(nodeA===nodeB)return nodeA;var parentsA=[nodeA],parentsB=[nodeB],parent=nodeA,i=-1;while(parent=parent.parentNode){if(parent===nodeB){return parent;}parentsA.push(parent);}parent=nodeB;while(parent=parent.parentNode){if(parent===nodeA)return parent;parentsB.push(parent);}parentsA.reverse();parentsB.reverse();while(i++,parentsA[i]===parentsB[i]){}return i==0?null:parentsA[i-1];},/**
     * 清除node节点左右连续为空的兄弟inline节点
     * @method clearEmptySibling
     * @param { Node } node 执行的节点对象， 如果该节点的左右连续的兄弟节点是空的inline节点，
     * 则这些兄弟节点将被删除
     * @grammar UE.dom.domUtils.clearEmptySibling(node,ignoreNext)  //ignoreNext指定是否忽略右边空节点
     * @grammar UE.dom.domUtils.clearEmptySibling(node,ignoreNext,ignorePre)  //ignorePre指定是否忽略左边空节点
     * @example
     * ```html
     * <body>
     *     <div></div>
     *     <span id="test"></span>
     *     <i></i>
     *     <b></b>
     *     <em>xxx</em>
     *     <span></span>
     * </body>
     * <script>
     *
     *      UE.dom.domUtils.clearEmptySibling( document.getElementById( "test" ) );
     *
     *      //output: <div></div><span id="test"></span><em>xxx</em><span></span>
     *      console.log( document.body.innerHTML );
     *
     * </script>
     * ```
     *//**
     * 清除node节点左右连续为空的兄弟inline节点， 如果ignoreNext的值为true，
     * 则忽略对右边兄弟节点的操作。
     * @method clearEmptySibling
     * @param { Node } node 执行的节点对象， 如果该节点的左右连续的兄弟节点是空的inline节点，
     * @param { Boolean } ignoreNext 是否忽略忽略对右边的兄弟节点的操作
     * 则这些兄弟节点将被删除
     * @see UE.dom.domUtils.clearEmptySibling(Node)
     *//**
     * 清除node节点左右连续为空的兄弟inline节点， 如果ignoreNext的值为true，
     * 则忽略对右边兄弟节点的操作， 如果ignorePre的值为true，则忽略对左边兄弟节点的操作。
     * @method clearEmptySibling
     * @param { Node } node 执行的节点对象， 如果该节点的左右连续的兄弟节点是空的inline节点，
     * @param { Boolean } ignoreNext 是否忽略忽略对右边的兄弟节点的操作
     * @param { Boolean } ignorePre 是否忽略忽略对左边的兄弟节点的操作
     * 则这些兄弟节点将被删除
     * @see UE.dom.domUtils.clearEmptySibling(Node)
     */clearEmptySibling:function clearEmptySibling(node,ignoreNext,ignorePre){function clear(next,dir){var tmpNode;while(next&&!domUtils.isBookmarkNode(next)&&(domUtils.isEmptyInlineElement(next)//这里不能把空格算进来会吧空格干掉，出现文字间的空格丢掉了
||!new RegExp('[^\t\n\r'+domUtils.fillChar+']').test(next.nodeValue))){tmpNode=next[dir];domUtils.remove(next);next=tmpNode;}}!ignoreNext&&clear(node.nextSibling,'nextSibling');!ignorePre&&clear(node.previousSibling,'previousSibling');},/**
     * 将一个文本节点textNode拆分成两个文本节点，offset指定拆分位置
     * @method split
     * @param { Node } textNode 需要拆分的文本节点对象
     * @param { int } offset 需要拆分的位置， 位置计算从0开始
     * @return { Node } 拆分后形成的新节点
     * @example
     * ```html
     * <div id="test">abcdef</div>
     * <script>
     *      var newNode = UE.dom.domUtils.split( document.getElementById( "test" ).firstChild, 3 );
     *      //output: def
     *      console.log( newNode.nodeValue );
     * </script>
     * ```
     */split:function split(node,offset){var doc=node.ownerDocument;if(browser.ie&&offset==node.nodeValue.length){var next=doc.createTextNode('');return domUtils.insertAfter(node,next);}var retval=node.splitText(offset);//ie8下splitText不会跟新childNodes,我们手动触发他的更新
if(browser.ie8){var tmpNode=doc.createTextNode('');domUtils.insertAfter(retval,tmpNode);domUtils.remove(tmpNode);}return retval;},/**
     * 检测文本节点textNode是否为空节点（包括空格、换行、占位符等字符）
     * @method  isWhitespace
     * @param { Node } node 需要检测的节点对象
     * @return { Boolean } 检测的节点是否为空
     * @example
     * ```html
     * <div id="test">
     *
     * </div>
     * <script>
     *      //output: true
     *      console.log( UE.dom.domUtils.isWhitespace( document.getElementById("test").firstChild ) );
     * </script>
     * ```
     */isWhitespace:function isWhitespace(node){return!new RegExp('[^ \t\n\r'+domUtils.fillChar+']').test(node.nodeValue);},/**
     * 获取元素element相对于viewport的位置坐标
     * @method getXY
     * @param { Node } element 需要计算位置的节点对象
     * @return { Object } 返回形如{x:left,y:top}的一个key-value映射对象， 其中键x代表水平偏移距离，
     *                          y代表垂直偏移距离。
     *
     * @example
     * ```javascript
     * var location = UE.dom.domUtils.getXY( document.getElementById("test") );
     * //output: test的坐标为: 12, 24
     * console.log( 'test的坐标为： ', location.x, ',', location.y );
     * ```
     */getXY:function getXY(element){var x=0,y=0;while(element.offsetParent){y+=element.offsetTop;x+=element.offsetLeft;element=element.offsetParent;}return{'x':x,'y':y};},/**
     * 为元素element绑定原生DOM事件，type为事件类型，handler为处理函数
     * @method on
     * @param { Node } element 需要绑定事件的节点对象
     * @param { String } type 绑定的事件类型
     * @param { Function } handler 事件处理器
     * @example
     * ```javascript
     * UE.dom.domUtils.on(document.body,"click",function(e){
     *     //e为事件对象，this为被点击元素对戏那个
     * });
     * ```
     *//**
     * 为元素element绑定原生DOM事件，type为事件类型，handler为处理函数
     * @method on
     * @param { Node } element 需要绑定事件的节点对象
     * @param { Array } type 绑定的事件类型数组
     * @param { Function } handler 事件处理器
     * @example
     * ```javascript
     * UE.dom.domUtils.on(document.body,["click","mousedown"],function(evt){
     *     //evt为事件对象，this为被点击元素对象
     * });
     * ```
     */on:function on(element,type,handler){var types=utils.isArray(type)?type:utils.trim(type).split(/\s+/),k=types.length;if(k)while(k--){type=types[k];if(element.addEventListener){element.addEventListener(type,handler,false);}else{if(!handler._d){handler._d={els:[]};}var key=type+handler.toString(),index=utils.indexOf(handler._d.els,element);if(!handler._d[key]||index==-1){if(index==-1){handler._d.els.push(element);}if(!handler._d[key]){handler._d[key]=function(evt){return handler.call(evt.srcElement,evt||window.event);};}element.attachEvent('on'+type,handler._d[key]);}}}element=null;},/**
     * 解除DOM事件绑定
     * @method un
     * @param { Node } element 需要解除事件绑定的节点对象
     * @param { String } type 需要接触绑定的事件类型
     * @param { Function } handler 对应的事件处理器
     * @example
     * ```javascript
     * UE.dom.domUtils.un(document.body,"click",function(evt){
     *     //evt为事件对象，this为被点击元素对象
     * });
     * ```
     *//**
     * 解除DOM事件绑定
     * @method un
     * @param { Node } element 需要解除事件绑定的节点对象
     * @param { Array } type 需要接触绑定的事件类型数组
     * @param { Function } handler 对应的事件处理器
     * @example
     * ```javascript
     * UE.dom.domUtils.un(document.body, ["click","mousedown"],function(evt){
     *     //evt为事件对象，this为被点击元素对象
     * });
     * ```
     */un:function un(element,type,handler){var types=utils.isArray(type)?type:utils.trim(type).split(/\s+/),k=types.length;if(k)while(k--){type=types[k];if(element.removeEventListener){element.removeEventListener(type,handler,false);}else{var key=type+handler.toString();try{element.detachEvent('on'+type,handler._d?handler._d[key]:handler);}catch(e){}if(handler._d&&handler._d[key]){var index=utils.indexOf(handler._d.els,element);if(index!=-1){handler._d.els.splice(index,1);}handler._d.els.length==0&&delete handler._d[key];}}}},/**
     * 比较节点nodeA与节点nodeB是否具有相同的标签名、属性名以及属性值
     * @method  isSameElement
     * @param { Node } nodeA 需要比较的节点
     * @param { Node } nodeB 需要比较的节点
     * @return { Boolean } 两个节点是否具有相同的标签名、属性名以及属性值
     * @example
     * ```html
     * <span style="font-size:12px">ssss</span>
     * <span style="font-size:12px">bbbbb</span>
     * <span style="font-size:13px">ssss</span>
     * <span style="font-size:14px">bbbbb</span>
     *
     * <script>
     *
     *     var nodes = document.getElementsByTagName( "span" );
     *
     *     //output: true
     *     console.log( UE.dom.domUtils.isSameElement( nodes[0], nodes[1] ) );
     *
     *     //output: false
     *     console.log( UE.dom.domUtils.isSameElement( nodes[2], nodes[3] ) );
     *
     * </script>
     * ```
     */isSameElement:function isSameElement(nodeA,nodeB){if(nodeA.tagName!=nodeB.tagName){return false;}var thisAttrs=nodeA.attributes,otherAttrs=nodeB.attributes;if(!ie&&thisAttrs.length!=otherAttrs.length){return false;}var attrA,attrB,al=0,bl=0;for(var i=0;attrA=thisAttrs[i++];){if(attrA.nodeName=='style'){if(attrA.specified){al++;}if(domUtils.isSameStyle(nodeA,nodeB)){continue;}else{return false;}}if(ie){if(attrA.specified){al++;attrB=otherAttrs.getNamedItem(attrA.nodeName);}else{continue;}}else{attrB=nodeB.attributes[attrA.nodeName];}if(!attrB.specified||attrA.nodeValue!=attrB.nodeValue){return false;}}// 有可能attrB的属性包含了attrA的属性之外还有自己的属性
if(ie){for(i=0;attrB=otherAttrs[i++];){if(attrB.specified){bl++;}}if(al!=bl){return false;}}return true;},/**
     * 判断节点nodeA与节点nodeB的元素的style属性是否一致
     * @method isSameStyle
     * @param { Node } nodeA 需要比较的节点
     * @param { Node } nodeB 需要比较的节点
     * @return { Boolean } 两个节点是否具有相同的style属性值
     * @example
     * ```html
     * <span style="font-size:12px">ssss</span>
     * <span style="font-size:12px">bbbbb</span>
     * <span style="font-size:13px">ssss</span>
     * <span style="font-size:14px">bbbbb</span>
     *
     * <script>
     *
     *     var nodes = document.getElementsByTagName( "span" );
     *
     *     //output: true
     *     console.log( UE.dom.domUtils.isSameStyle( nodes[0], nodes[1] ) );
     *
     *     //output: false
     *     console.log( UE.dom.domUtils.isSameStyle( nodes[2], nodes[3] ) );
     *
     * </script>
     * ```
     */isSameStyle:function isSameStyle(nodeA,nodeB){var styleA=nodeA.style.cssText.replace(/( ?; ?)/g,';').replace(/( ?: ?)/g,':'),styleB=nodeB.style.cssText.replace(/( ?; ?)/g,';').replace(/( ?: ?)/g,':');if(browser.opera){styleA=nodeA.style;styleB=nodeB.style;if(styleA.length!=styleB.length)return false;for(var p in styleA){if(/^(\d+|csstext)$/i.test(p)){continue;}if(styleA[p]!=styleB[p]){return false;}}return true;}if(!styleA||!styleB){return styleA==styleB;}styleA=styleA.split(';');styleB=styleB.split(';');if(styleA.length!=styleB.length){return false;}for(var i=0,ci;ci=styleA[i++];){if(utils.indexOf(styleB,ci)==-1){return false;}}return true;},/**
     * 检查节点node是否为block元素
     * @method isBlockElm
     * @param { Node } node 需要检测的节点对象
     * @return { Boolean } 是否是block元素节点
     * @warning 该方法的判断规则如下： 如果该元素原本是block元素， 则不论该元素当前的css样式是什么都会返回true；
     *          否则，检测该元素的css样式， 如果该元素当前是block元素， 则返回true。 其余情况下都返回false。
     * @example
     * ```html
     * <span id="test1" style="display: block"></span>
     * <span id="test2"></span>
     * <div id="test3" style="display: inline"></div>
     *
     * <script>
     *
     *     //output: true
     *     console.log( UE.dom.domUtils.isBlockElm( document.getElementById("test1") ) );
     *
     *     //output: false
     *     console.log( UE.dom.domUtils.isBlockElm( document.getElementById("test2") ) );
     *
     *     //output: true
     *     console.log( UE.dom.domUtils.isBlockElm( document.getElementById("test3") ) );
     *
     * </script>
     * ```
     */isBlockElm:function isBlockElm(node){return node.nodeType==1&&(dtd.$block[node.tagName]||styleBlock[domUtils.getComputedStyle(node,'display')])&&!dtd.$nonChild[node.tagName];},/**
     * 检测node节点是否为body节点
     * @method isBody
     * @param { Element } node 需要检测的dom元素
     * @return { Boolean } 给定的元素是否是body元素
     * @example
     * ```javascript
     * //output: true
     * console.log( UE.dom.domUtils.isBody( document.body ) );
     * ```
     */isBody:function isBody(node){return node&&node.nodeType==1&&node.tagName.toLowerCase()=='body';},/**
     * 以node节点为分界，将该节点的指定祖先节点parent拆分成两个独立的节点，
     * 拆分形成的两个节点之间是node节点
     * @method breakParent
     * @param { Node } node 作为分界的节点对象
     * @param { Node } parent 该节点必须是node节点的祖先节点， 且是block节点。
     * @return { Node } 给定的node分界节点
     * @example
     * ```javascript
     *
     *      var node = document.createElement("span"),
     *          wrapNode = document.createElement( "div" ),
     *          parent = document.createElement("p");
     *
     *      parent.appendChild( node );
     *      wrapNode.appendChild( parent );
     *
     *      //拆分前
     *      //output: <p><span></span></p>
     *      console.log( wrapNode.innerHTML );
     *
     *
     *      UE.dom.domUtils.breakParent( node, parent );
     *      //拆分后
     *      //output: <p></p><span></span><p></p>
     *      console.log( wrapNode.innerHTML );
     *
     * ```
     */breakParent:function breakParent(node,parent){var tmpNode,parentClone=node,clone=node,leftNodes,rightNodes;do{parentClone=parentClone.parentNode;if(leftNodes){tmpNode=parentClone.cloneNode(false);tmpNode.appendChild(leftNodes);leftNodes=tmpNode;tmpNode=parentClone.cloneNode(false);tmpNode.appendChild(rightNodes);rightNodes=tmpNode;}else{leftNodes=parentClone.cloneNode(false);rightNodes=leftNodes.cloneNode(false);}while(tmpNode=clone.previousSibling){leftNodes.insertBefore(tmpNode,leftNodes.firstChild);}while(tmpNode=clone.nextSibling){rightNodes.appendChild(tmpNode);}clone=parentClone;}while(parent!==parentClone);tmpNode=parent.parentNode;tmpNode.insertBefore(leftNodes,parent);tmpNode.insertBefore(rightNodes,parent);tmpNode.insertBefore(node,rightNodes);domUtils.remove(parent);return node;},/**
     * 检查节点node是否是空inline节点
     * @method  isEmptyInlineElement
     * @param { Node } node 需要检测的节点对象
     * @return { Number }  如果给定的节点是空的inline节点， 则返回1, 否则返回0。
     * @example
     * ```html
     * <b><i></i></b> => 1
     * <b><i></i><u></u></b> => 1
     * <b></b> => 1
     * <b>xx<i></i></b> => 0
     * ```
     */isEmptyInlineElement:function isEmptyInlineElement(node){if(node.nodeType!=1||!dtd.$removeEmpty[node.tagName]){return 0;}node=node.firstChild;while(node){//如果是创建的bookmark就跳过
if(domUtils.isBookmarkNode(node)){return 0;}if(node.nodeType==1&&!domUtils.isEmptyInlineElement(node)||node.nodeType==3&&!domUtils.isWhitespace(node)){return 0;}node=node.nextSibling;}return 1;},/**
     * 删除node节点下首尾两端的空白文本子节点
     * @method trimWhiteTextNode
     * @param { Element } node 需要执行删除操作的元素对象
     * @example
     * ```javascript
     *      var node = document.createElement("div");
     *
     *      node.appendChild( document.createTextNode( "" ) );
     *
     *      node.appendChild( document.createElement("div") );
     *
     *      node.appendChild( document.createTextNode( "" ) );
     *
     *      //3
     *      console.log( node.childNodes.length );
     *
     *      UE.dom.domUtils.trimWhiteTextNode( node );
     *
     *      //1
     *      console.log( node.childNodes.length );
     * ```
     */trimWhiteTextNode:function trimWhiteTextNode(node){function remove(dir){var child;while((child=node[dir])&&child.nodeType==3&&domUtils.isWhitespace(child)){node.removeChild(child);}}remove('firstChild');remove('lastChild');},/**
     * 合并node节点下相同的子节点
     * @name mergeChild
     * @desc
     * UE.dom.domUtils.mergeChild(node,tagName) //tagName要合并的子节点的标签
     * @example
     * <p><span style="font-size:12px;">xx<span style="font-size:12px;">aa</span>xx</span></p>
     * ==> UE.dom.domUtils.mergeChild(node,'span')
     * <p><span style="font-size:12px;">xxaaxx</span></p>
     */mergeChild:function mergeChild(node,tagName,attrs){var list=domUtils.getElementsByTagName(node,node.tagName.toLowerCase());for(var i=0,ci;ci=list[i++];){if(!ci.parentNode||domUtils.isBookmarkNode(ci)){continue;}//span单独处理
if(ci.tagName.toLowerCase()=='span'){if(node===ci.parentNode){domUtils.trimWhiteTextNode(node);if(node.childNodes.length==1){node.style.cssText=ci.style.cssText+";"+node.style.cssText;domUtils.remove(ci,true);continue;}}ci.style.cssText=node.style.cssText+';'+ci.style.cssText;if(attrs){var style=attrs.style;if(style){style=style.split(';');for(var j=0,s;s=style[j++];){ci.style[utils.cssStyleToDomStyle(s.split(':')[0])]=s.split(':')[1];}}}if(domUtils.isSameStyle(ci,node)){domUtils.remove(ci,true);}continue;}if(domUtils.isSameElement(node,ci)){domUtils.remove(ci,true);}}},/**
     * 原生方法getElementsByTagName的封装
     * @method getElementsByTagName
     * @param { Node } node 目标节点对象
     * @param { String } tagName 需要查找的节点的tagName， 多个tagName以空格分割
     * @return { Array } 符合条件的节点集合
     */getElementsByTagName:function getElementsByTagName(node,name,filter){if(filter&&utils.isString(filter)){var className=filter;filter=function filter(node){return domUtils.hasClass(node,className);};}name=utils.trim(name).replace(/[ ]{2,}/g,' ').split(' ');var arr=[];for(var n=0,ni;ni=name[n++];){var list=node.getElementsByTagName(ni);for(var i=0,ci;ci=list[i++];){if(!filter||filter(ci))arr.push(ci);}}return arr;},/**
     * 将节点node提取到父节点上
     * @method mergeToParent
     * @param { Element } node 需要提取的元素对象
     * @example
     * ```html
     * <div id="parent">
     *     <div id="sub">
     *         <span id="child"></span>
     *     </div>
     * </div>
     *
     * <script>
     *
     *     var child = document.getElementById( "child" );
     *
     *     //output: sub
     *     console.log( child.parentNode.id );
     *
     *     UE.dom.domUtils.mergeToParent( child );
     *
     *     //output: parent
     *     console.log( child.parentNode.id );
     *
     * </script>
     * ```
     */mergeToParent:function mergeToParent(node){var parent=node.parentNode;while(parent&&dtd.$removeEmpty[parent.tagName]){if(parent.tagName==node.tagName||parent.tagName=='A'){//针对a标签单独处理
domUtils.trimWhiteTextNode(parent);//span需要特殊处理  不处理这样的情况 <span stlye="color:#fff">xxx<span style="color:#ccc">xxx</span>xxx</span>
if(parent.tagName=='SPAN'&&!domUtils.isSameStyle(parent,node)||parent.tagName=='A'&&node.tagName=='SPAN'){if(parent.childNodes.length>1||parent!==node.parentNode){node.style.cssText=parent.style.cssText+";"+node.style.cssText;parent=parent.parentNode;continue;}else{parent.style.cssText+=";"+node.style.cssText;//trace:952 a标签要保持下划线
if(parent.tagName=='A'){parent.style.textDecoration='underline';}}}if(parent.tagName!='A'){parent===node.parentNode&&domUtils.remove(node,true);break;}}parent=parent.parentNode;}},/**
     * 合并节点node的左右兄弟节点
     * @method mergeSibling
     * @param { Element } node 需要合并的目标节点
     * @example
     * ```html
     * <b>xxxx</b><b id="test">ooo</b><b>xxxx</b>
     *
     * <script>
     *     var demoNode = document.getElementById("test");
     *     UE.dom.domUtils.mergeSibling( demoNode );
     *     //output: xxxxoooxxxx
     *     console.log( demoNode.innerHTML );
     * </script>
     * ```
     *//**
     * 合并节点node的左右兄弟节点， 可以根据给定的条件选择是否忽略合并左节点。
     * @method mergeSibling
     * @param { Element } node 需要合并的目标节点
     * @param { Boolean } ignorePre 是否忽略合并左节点
     * @example
     * ```html
     * <b>xxxx</b><b id="test">ooo</b><b>xxxx</b>
     *
     * <script>
     *     var demoNode = document.getElementById("test");
     *     UE.dom.domUtils.mergeSibling( demoNode, true );
     *     //output: oooxxxx
     *     console.log( demoNode.innerHTML );
     * </script>
     * ```
     *//**
     * 合并节点node的左右兄弟节点，可以根据给定的条件选择是否忽略合并左右节点。
     * @method mergeSibling
     * @param { Element } node 需要合并的目标节点
     * @param { Boolean } ignorePre 是否忽略合并左节点
     * @param { Boolean } ignoreNext 是否忽略合并右节点
     * @remind 如果同时忽略左右节点， 则该操作什么也不会做
     * @example
     * ```html
     * <b>xxxx</b><b id="test">ooo</b><b>xxxx</b>
     *
     * <script>
     *     var demoNode = document.getElementById("test");
     *     UE.dom.domUtils.mergeSibling( demoNode, false, true );
     *     //output: xxxxooo
     *     console.log( demoNode.innerHTML );
     * </script>
     * ```
     */mergeSibling:function mergeSibling(node,ignorePre,ignoreNext){function merge(rtl,start,node){var next;if((next=node[rtl])&&!domUtils.isBookmarkNode(next)&&next.nodeType==1&&domUtils.isSameElement(node,next)){while(next.firstChild){if(start=='firstChild'){node.insertBefore(next.lastChild,node.firstChild);}else{node.appendChild(next.firstChild);}}domUtils.remove(next);}}!ignorePre&&merge('previousSibling','firstChild',node);!ignoreNext&&merge('nextSibling','lastChild',node);},/**
     * 设置节点node及其子节点不会被选中
     * @method unSelectable
     * @param { Element } node 需要执行操作的dom元素
     * @remind 执行该操作后的节点， 将不能被鼠标选中
     * @example
     * ```javascript
     * UE.dom.domUtils.unSelectable( document.body );
     * ```
     */unSelectable:ie&&browser.ie9below||browser.opera?function(node){//for ie9
node.onselectstart=function(){return false;};node.onclick=node.onkeyup=node.onkeydown=function(){return false;};node.unselectable='on';node.setAttribute("unselectable","on");for(var i=0,ci;ci=node.all[i++];){switch(ci.tagName.toLowerCase()){case'iframe':case'textarea':case'input':case'select':break;default:ci.unselectable='on';node.setAttribute("unselectable","on");}}}:function(node){node.style.MozUserSelect=node.style.webkitUserSelect=node.style.msUserSelect=node.style.KhtmlUserSelect='none';},/**
     * 删除节点node上的指定属性名称的属性
     * @method  removeAttributes
     * @param { Node } node 需要删除属性的节点对象
     * @param { String } attrNames 可以是空格隔开的多个属性名称，该操作将会依次删除相应的属性
     * @example
     * ```html
     * <div id="wrap">
     *      <span style="font-size:14px;" id="test" name="followMe">xxxxx</span>
     * </div>
     *
     * <script>
     *
     *     UE.dom.domUtils.removeAttributes( document.getElementById( "test" ), "id name" );
     *
     *     //output: <span style="font-size:14px;">xxxxx</span>
     *     console.log( document.getElementById("wrap").innerHTML );
     *
     * </script>
     * ```
     *//**
     * 删除节点node上的指定属性名称的属性
     * @method  removeAttributes
     * @param { Node } node 需要删除属性的节点对象
     * @param { Array } attrNames 需要删除的属性名数组
     * @example
     * ```html
     * <div id="wrap">
     *      <span style="font-size:14px;" id="test" name="followMe">xxxxx</span>
     * </div>
     *
     * <script>
     *
     *     UE.dom.domUtils.removeAttributes( document.getElementById( "test" ), ["id", "name"] );
     *
     *     //output: <span style="font-size:14px;">xxxxx</span>
     *     console.log( document.getElementById("wrap").innerHTML );
     *
     * </script>
     * ```
     */removeAttributes:function removeAttributes(node,attrNames){attrNames=utils.isArray(attrNames)?attrNames:utils.trim(attrNames).replace(/[ ]{2,}/g,' ').split(' ');for(var i=0,ci;ci=attrNames[i++];){ci=attrFix[ci]||ci;switch(ci){case'className':node[ci]='';break;case'style':node.style.cssText='';var val=node.getAttributeNode('style');!browser.ie&&val&&node.removeAttributeNode(val);}node.removeAttribute(ci);}},/**
     * 在doc下创建一个标签名为tag，属性为attrs的元素
     * @method createElement
     * @param { DomDocument } doc 新创建的元素属于该document节点创建
     * @param { String } tagName 需要创建的元素的标签名
     * @param { Object } attrs 新创建的元素的属性key-value集合
     * @return { Element } 新创建的元素对象
     * @example
     * ```javascript
     * var ele = UE.dom.domUtils.createElement( document, 'div', {
     *     id: 'test'
     * } );
     *
     * //output: DIV
     * console.log( ele.tagName );
     *
     * //output: test
     * console.log( ele.id );
     *
     * ```
     */createElement:function createElement(doc,tag,attrs){return domUtils.setAttributes(doc.createElement(tag),attrs);},/**
     * 为节点node添加属性attrs，attrs为属性键值对
     * @method setAttributes
     * @param { Element } node 需要设置属性的元素对象
     * @param { Object } attrs 需要设置的属性名-值对
     * @return { Element } 设置属性的元素对象
     * @example
     * ```html
     * <span id="test"></span>
     *
     * <script>
     *
     *     var testNode = UE.dom.domUtils.setAttributes( document.getElementById( "test" ), {
     *         id: 'demo'
     *     } );
     *
     *     //output: demo
     *     console.log( testNode.id );
     *
     * </script>
     *
     */setAttributes:function setAttributes(node,attrs){for(var attr in attrs){if(attrs.hasOwnProperty(attr)){var value=attrs[attr];switch(attr){case'class'://ie下要这样赋值，setAttribute不起作用
node.className=value;break;case'style':node.style.cssText=node.style.cssText+";"+value;break;case'innerHTML':node[attr]=value;break;case'value':node.value=value;break;default:node.setAttribute(attrFix[attr]||attr,value);}}}return node;},/**
     * 获取元素element经过计算后的样式值
     * @method getComputedStyle
     * @param { Element } element 需要获取样式的元素对象
     * @param { String } styleName 需要获取的样式名
     * @return { String } 获取到的样式值
     * @example
     * ```html
     * <style type="text/css">
     *      #test {
     *          font-size: 15px;
     *      }
     * </style>
     *
     * <span id="test"></span>
     *
     * <script>
     *     //output: 15px
     *     console.log( UE.dom.domUtils.getComputedStyle( document.getElementById( "test" ), 'font-size' ) );
     * </script>
     * ```
     */getComputedStyle:function getComputedStyle(element,styleName){//一下的属性单独处理
var pros='width height top left';if(pros.indexOf(styleName)>-1){return element['offset'+styleName.replace(/^\w/,function(s){return s.toUpperCase();})]+'px';}//忽略文本节点
if(element.nodeType==3){element=element.parentNode;}//ie下font-size若body下定义了font-size，则从currentStyle里会取到这个font-size. 取不到实际值，故此修改.
if(browser.ie&&browser.version<9&&styleName=='font-size'&&!element.style.fontSize&&!dtd.$empty[element.tagName]&&!dtd.$nonChild[element.tagName]){var span=element.ownerDocument.createElement('span');span.style.cssText='padding:0;border:0;font-family:simsun;';span.innerHTML='.';element.appendChild(span);var result=span.offsetHeight;element.removeChild(span);span=null;return result+'px';}try{var value=domUtils.getStyle(element,styleName)||(window.getComputedStyle?domUtils.getWindow(element).getComputedStyle(element,'').getPropertyValue(styleName):(element.currentStyle||element.style)[utils.cssStyleToDomStyle(styleName)]);}catch(e){return"";}return utils.transUnitToPx(utils.fixColor(styleName,value));},/**
     * 删除元素element指定的className
     * @method removeClasses
     * @param { Element } ele 需要删除class的元素节点
     * @param { String } classNames 需要删除的className， 多个className之间以空格分开
     * @example
     * ```html
     * <span id="test" class="test1 test2 test3">xxx</span>
     *
     * <script>
     *
     *     var testNode = document.getElementById( "test" );
     *     UE.dom.domUtils.removeClasses( testNode, "test1 test2" );
     *
     *     //output: test3
     *     console.log( testNode.className );
     *
     * </script>
     * ```
     *//**
     * 删除元素element指定的className
     * @method removeClasses
     * @param { Element } ele 需要删除class的元素节点
     * @param { Array } classNames 需要删除的className数组
     * @example
     * ```html
     * <span id="test" class="test1 test2 test3">xxx</span>
     *
     * <script>
     *
     *     var testNode = document.getElementById( "test" );
     *     UE.dom.domUtils.removeClasses( testNode, ["test1", "test2"] );
     *
     *     //output: test3
     *     console.log( testNode.className );
     *
     * </script>
     * ```
     */removeClasses:function removeClasses(elm,classNames){classNames=utils.isArray(classNames)?classNames:utils.trim(classNames).replace(/[ ]{2,}/g,' ').split(' ');for(var i=0,ci,cls=elm.className;ci=classNames[i++];){cls=cls.replace(new RegExp('\\b'+ci+'\\b'),'');}cls=utils.trim(cls).replace(/[ ]{2,}/g,' ');if(cls){elm.className=cls;}else{domUtils.removeAttributes(elm,['class']);}},/**
     * 给元素element添加className
     * @method addClass
     * @param { Node } ele 需要增加className的元素
     * @param { String } classNames 需要添加的className， 多个className之间以空格分割
     * @remind 相同的类名不会被重复添加
     * @example
     * ```html
     * <span id="test" class="cls1 cls2"></span>
     *
     * <script>
     *     var testNode = document.getElementById("test");
     *
     *     UE.dom.domUtils.addClass( testNode, "cls2 cls3 cls4" );
     *
     *     //output: cl1 cls2 cls3 cls4
     *     console.log( testNode.className );
     *
     * <script>
     * ```
     *//**
     * 给元素element添加className
     * @method addClass
     * @param { Node } ele 需要增加className的元素
     * @param { Array } classNames 需要添加的className的数组
     * @remind 相同的类名不会被重复添加
     * @example
     * ```html
     * <span id="test" class="cls1 cls2"></span>
     *
     * <script>
     *     var testNode = document.getElementById("test");
     *
     *     UE.dom.domUtils.addClass( testNode, ["cls2", "cls3", "cls4"] );
     *
     *     //output: cl1 cls2 cls3 cls4
     *     console.log( testNode.className );
     *
     * <script>
     * ```
     */addClass:function addClass(elm,classNames){if(!elm)return;classNames=utils.trim(classNames).replace(/[ ]{2,}/g,' ').split(' ');for(var i=0,ci,cls=elm.className;ci=classNames[i++];){if(!new RegExp('\\b'+ci+'\\b').test(cls)){cls+=' '+ci;}}elm.className=utils.trim(cls);},/**
     * 判断元素element是否包含给定的样式类名className
     * @method hasClass
     * @param { Node } ele 需要检测的元素
     * @param { String } classNames 需要检测的className， 多个className之间用空格分割
     * @return { Boolean } 元素是否包含所有给定的className
     * @example
     * ```html
     * <span id="test1" class="cls1 cls2"></span>
     *
     * <script>
     *     var test1 = document.getElementById("test1");
     *
     *     //output: false
     *     console.log( UE.dom.domUtils.hasClass( test1, "cls2 cls1 cls3" ) );
     *
     *     //output: true
     *     console.log( UE.dom.domUtils.hasClass( test1, "cls2 cls1" ) );
     * </script>
     * ```
     *//**
     * 判断元素element是否包含给定的样式类名className
     * @method hasClass
     * @param { Node } ele 需要检测的元素
     * @param { Array } classNames 需要检测的className数组
     * @return { Boolean } 元素是否包含所有给定的className
     * @example
     * ```html
     * <span id="test1" class="cls1 cls2"></span>
     *
     * <script>
     *     var test1 = document.getElementById("test1");
     *
     *     //output: false
     *     console.log( UE.dom.domUtils.hasClass( test1, [ "cls2", "cls1", "cls3" ] ) );
     *
     *     //output: true
     *     console.log( UE.dom.domUtils.hasClass( test1, [ "cls2", "cls1" ]) );
     * </script>
     * ```
     */hasClass:function hasClass(element,className){if(utils.isRegExp(className)){return className.test(element.className);}className=utils.trim(className).replace(/[ ]{2,}/g,' ').split(' ');for(var i=0,ci,cls=element.className;ci=className[i++];){if(!new RegExp('\\b'+ci+'\\b','i').test(cls)){return false;}}return i-1==className.length;},/**
     * 阻止事件默认行为
     * @method preventDefault
     * @param { Event } evt 需要阻止默认行为的事件对象
     * @example
     * ```javascript
     * UE.dom.domUtils.preventDefault( evt );
     * ```
     */preventDefault:function preventDefault(evt){evt.preventDefault?evt.preventDefault():evt.returnValue=false;},/**
     * 删除元素element指定的样式
     * @method removeStyle
     * @param { Element } element 需要删除样式的元素
     * @param { String } styleName 需要删除的样式名
     * @example
     * ```html
     * <span id="test" style="color: red; background: blue;"></span>
     *
     * <script>
     *
     *     var testNode = document.getElementById("test");
     *
     *     UE.dom.domUtils.removeStyle( testNode, 'color' );
     *
     *     //output: background: blue;
     *     console.log( testNode.style.cssText );
     *
     * </script>
     * ```
     */removeStyle:function removeStyle(element,name){if(browser.ie){//针对color先单独处理一下
if(name=='color'){name='(^|;)'+name;}element.style.cssText=element.style.cssText.replace(new RegExp(name+'[^:]*:[^;]+;?','ig'),'');}else{if(element.style.removeProperty){element.style.removeProperty(name);}else{element.style.removeAttribute(utils.cssStyleToDomStyle(name));}}if(!element.style.cssText){domUtils.removeAttributes(element,['style']);}},/**
     * 获取元素element的style属性的指定值
     * @method getStyle
     * @param { Element } element 需要获取属性值的元素
     * @param { String } styleName 需要获取的style的名称
     * @warning 该方法仅获取元素style属性中所标明的值
     * @return { String } 该元素包含指定的style属性值
     * @example
     * ```html
     * <div id="test" style="color: red;"></div>
     *
     * <script>
     *
     *      var testNode = document.getElementById( "test" );
     *
     *      //output: red
     *      console.log( UE.dom.domUtils.getStyle( testNode, "color" ) );
     *
     *      //output: ""
     *      console.log( UE.dom.domUtils.getStyle( testNode, "background" ) );
     *
     * </script>
     * ```
     */getStyle:function getStyle(element,name){var value=element.style[utils.cssStyleToDomStyle(name)];return utils.fixColor(name,value);},/**
     * 为元素element设置样式属性值
     * @method setStyle
     * @param { Element } element 需要设置样式的元素
     * @param { String } styleName 样式名
     * @param { String } styleValue 样式值
     * @example
     * ```html
     * <div id="test"></div>
     *
     * <script>
     *
     *      var testNode = document.getElementById( "test" );
     *
     *      //output: ""
     *      console.log( testNode.style.color );
     *
     *      UE.dom.domUtils.setStyle( testNode, 'color', 'red' );
     *      //output: "red"
     *      console.log( testNode.style.color );
     *
     * </script>
     * ```
     */setStyle:function setStyle(element,name,value){element.style[utils.cssStyleToDomStyle(name)]=value;if(!utils.trim(element.style.cssText)){this.removeAttributes(element,'style');}},/**
     * 为元素element设置多个样式属性值
     * @method setStyles
     * @param { Element } element 需要设置样式的元素
     * @param { Object } styles 样式名值对
     * @example
     * ```html
     * <div id="test"></div>
     *
     * <script>
     *
     *      var testNode = document.getElementById( "test" );
     *
     *      //output: ""
     *      console.log( testNode.style.color );
     *
     *      UE.dom.domUtils.setStyles( testNode, {
     *          'color': 'red'
     *      } );
     *      //output: "red"
     *      console.log( testNode.style.color );
     *
     * </script>
     * ```
     */setStyles:function setStyles(element,styles){for(var name in styles){if(styles.hasOwnProperty(name)){domUtils.setStyle(element,name,styles[name]);}}},/**
     * 删除_moz_dirty属性
     * @private
     * @method removeDirtyAttr
     */removeDirtyAttr:function removeDirtyAttr(node){for(var i=0,ci,nodes=node.getElementsByTagName('*');ci=nodes[i++];){ci.removeAttribute('_moz_dirty');}node.removeAttribute('_moz_dirty');},/**
     * 获取子节点的数量
     * @method getChildCount
     * @param { Element } node 需要检测的元素
     * @return { Number } 给定的node元素的子节点数量
     * @example
     * ```html
     * <div id="test">
     *      <span></span>
     * </div>
     *
     * <script>
     *
     *     //output: 3
     *     console.log( UE.dom.domUtils.getChildCount( document.getElementById("test") ) );
     *
     * </script>
     * ```
     *//**
     * 根据给定的过滤规则， 获取符合条件的子节点的数量
     * @method getChildCount
     * @param { Element } node 需要检测的元素
     * @param { Function } fn 过滤器， 要求对符合条件的子节点返回true， 反之则要求返回false
     * @return { Number } 符合过滤条件的node元素的子节点数量
     * @example
     * ```html
     * <div id="test">
     *      <span></span>
     * </div>
     *
     * <script>
     *
     *     //output: 1
     *     console.log( UE.dom.domUtils.getChildCount( document.getElementById("test"), function ( node ) {
     *
     *         return node.nodeType === 1;
     *
     *     } ) );
     *
     * </script>
     * ```
     */getChildCount:function getChildCount(node,fn){var count=0,first=node.firstChild;fn=fn||function(){return 1;};while(first){if(fn(first)){count++;}first=first.nextSibling;}return count;},/**
     * 判断给定节点是否为空节点
     * @method isEmptyNode
     * @param { Node } node 需要检测的节点对象
     * @return { Boolean } 节点是否为空
     * @example
     * ```javascript
     * UE.dom.domUtils.isEmptyNode( document.body );
     * ```
     */isEmptyNode:function isEmptyNode(node){return!node.firstChild||domUtils.getChildCount(node,function(node){return!domUtils.isBr(node)&&!domUtils.isBookmarkNode(node)&&!domUtils.isWhitespace(node);})==0;},clearSelectedArr:function clearSelectedArr(nodes){var node;while(node=nodes.pop()){domUtils.removeAttributes(node,['class']);}},/**
     * 将显示区域滚动到指定节点的位置
     * @method scrollToView
     * @param    {Node}   node    节点
     * @param    {window}   win      window对象
     * @param    {Number}    offsetTop    距离上方的偏移量
     */scrollToView:function scrollToView(node,win,offsetTop){var getViewPaneSize=function getViewPaneSize(){var doc=win.document,mode=doc.compatMode=='CSS1Compat';return{width:(mode?doc.documentElement.clientWidth:doc.body.clientWidth)||0,height:(mode?doc.documentElement.clientHeight:doc.body.clientHeight)||0};},getScrollPosition=function getScrollPosition(win){if('pageXOffset'in win){return{x:win.pageXOffset||0,y:win.pageYOffset||0};}else{var doc=win.document;return{x:doc.documentElement.scrollLeft||doc.body.scrollLeft||0,y:doc.documentElement.scrollTop||doc.body.scrollTop||0};}};var winHeight=getViewPaneSize().height,offset=winHeight*-1+offsetTop;offset+=node.offsetHeight||0;var elementPosition=domUtils.getXY(node);offset+=elementPosition.y;var currentScroll=getScrollPosition(win).y;// offset += 50;
if(offset>currentScroll||offset<currentScroll-winHeight){win.scrollTo(0,offset+(offset<0?-20:20));}},/**
     * 判断给定节点是否为br
     * @method isBr
     * @param { Node } node 需要判断的节点对象
     * @return { Boolean } 给定的节点是否是br节点
     */isBr:function isBr(node){return node.nodeType==1&&node.tagName=='BR';},/**
     * 判断给定的节点是否是一个“填充”节点
     * @private
     * @method isFillChar
     * @param { Node } node 需要判断的节点
     * @param { Boolean } isInStart 是否从节点内容的开始位置匹配
     * @returns { Boolean } 节点是否是填充节点
     */isFillChar:function isFillChar(node,isInStart){if(node.nodeType!=3)return false;var text=node.nodeValue;if(isInStart){return new RegExp('^'+domUtils.fillChar).test(text);}return!text.replace(new RegExp(domUtils.fillChar,'g'),'').length;},isStartInblock:function isStartInblock(range){var tmpRange=range.cloneRange(),flag=0,start=tmpRange.startContainer,tmp;if(start.nodeType==1&&start.childNodes[tmpRange.startOffset]){start=start.childNodes[tmpRange.startOffset];var pre=start.previousSibling;while(pre&&domUtils.isFillChar(pre)){start=pre;pre=pre.previousSibling;}}if(this.isFillChar(start,true)&&tmpRange.startOffset==1){tmpRange.setStartBefore(start);start=tmpRange.startContainer;}while(start&&domUtils.isFillChar(start)){tmp=start;start=start.previousSibling;}if(tmp){tmpRange.setStartBefore(tmp);start=tmpRange.startContainer;}if(start.nodeType==1&&domUtils.isEmptyNode(start)&&tmpRange.startOffset==1){tmpRange.setStart(start,0).collapse(true);}while(!tmpRange.startOffset){start=tmpRange.startContainer;if(domUtils.isBlockElm(start)||domUtils.isBody(start)){flag=1;break;}var pre=tmpRange.startContainer.previousSibling,tmpNode;if(!pre){tmpRange.setStartBefore(tmpRange.startContainer);}else{while(pre&&domUtils.isFillChar(pre)){tmpNode=pre;pre=pre.previousSibling;}if(tmpNode){tmpRange.setStartBefore(tmpNode);}else{tmpRange.setStartBefore(tmpRange.startContainer);}}}return flag&&!domUtils.isBody(tmpRange.startContainer)?1:0;},/**
     * 判断给定的元素是否是一个空元素
     * @method isEmptyBlock
     * @param { Element } node 需要判断的元素
     * @return { Boolean } 是否是空元素
     * @example
     * ```html
     * <div id="test"></div>
     *
     * <script>
     *     //output: true
     *     console.log( UE.dom.domUtils.isEmptyBlock( document.getElementById("test") ) );
     * </script>
     * ```
     *//**
     * 根据指定的判断规则判断给定的元素是否是一个空元素
     * @method isEmptyBlock
     * @param { Element } node 需要判断的元素
     * @param { RegExp } reg 对内容执行判断的正则表达式对象
     * @return { Boolean } 是否是空元素
     */isEmptyBlock:function isEmptyBlock(node,reg){if(node.nodeType!=1)return 0;reg=reg||new RegExp('[ \xa0\t\r\n'+domUtils.fillChar+']','g');if(node[browser.ie?'innerText':'textContent'].replace(reg,'').length>0){return 0;}for(var n in dtd.$isNotEmpty){if(node.getElementsByTagName(n).length){return 0;}}return 1;},/**
     * 移动元素使得该元素的位置移动指定的偏移量的距离
     * @method setViewportOffset
     * @param { Element } element 需要设置偏移量的元素
     * @param { Object } offset 偏移量， 形如{ left: 100, top: 50 }的一个键值对， 表示该元素将在
     *                                  现有的位置上向水平方向偏移offset.left的距离， 在竖直方向上偏移
     *                                  offset.top的距离
     * @example
     * ```html
     * <div id="test" style="top: 100px; left: 50px; position: absolute;"></div>
     *
     * <script>
     *
     *     var testNode = document.getElementById("test");
     *
     *     UE.dom.domUtils.setViewportOffset( testNode, {
     *         left: 200,
     *         top: 50
     *     } );
     *
     *     //output: top: 300px; left: 100px; position: absolute;
     *     console.log( testNode.style.cssText );
     *
     * </script>
     * ```
     */setViewportOffset:function setViewportOffset(element,offset){var left=parseInt(element.style.left)|0;var top=parseInt(element.style.top)|0;var rect=element.getBoundingClientRect();var offsetLeft=offset.left-rect.left;var offsetTop=offset.top-rect.top;if(offsetLeft){element.style.left=left+offsetLeft+'px';}if(offsetTop){element.style.top=top+offsetTop+'px';}},/**
     * 用“填充字符”填充节点
     * @method fillNode
     * @private
     * @param { DomDocument } doc 填充的节点所在的docment对象
     * @param { Node } node 需要填充的节点对象
     * @example
     * ```html
     * <div id="test"></div>
     *
     * <script>
     *     var testNode = document.getElementById("test");
     *
     *     //output: 0
     *     console.log( testNode.childNodes.length );
     *
     *     UE.dom.domUtils.fillNode( document, testNode );
     *
     *     //output: 1
     *     console.log( testNode.childNodes.length );
     *
     * </script>
     * ```
     */fillNode:function fillNode(doc,node){var tmpNode=browser.ie?doc.createTextNode(domUtils.fillChar):doc.createElement('br');node.innerHTML='';node.appendChild(tmpNode);},/**
     * 把节点src的所有子节点追加到另一个节点tag上去
     * @method moveChild
     * @param { Node } src 源节点， 该节点下的所有子节点将被移除
     * @param { Node } tag 目标节点， 从源节点移除的子节点将被追加到该节点下
     * @example
     * ```html
     * <div id="test1">
     *      <span></span>
     * </div>
     * <div id="test2">
     *     <div></div>
     * </div>
     *
     * <script>
     *
     *     var test1 = document.getElementById("test1"),
     *         test2 = document.getElementById("test2");
     *
     *     UE.dom.domUtils.moveChild( test1, test2 );
     *
     *     //output: ""（空字符串）
     *     console.log( test1.innerHTML );
     *
     *     //output: "<div></div><span></span>"
     *     console.log( test2.innerHTML );
     *
     * </script>
     * ```
     *//**
     * 把节点src的所有子节点移动到另一个节点tag上去, 可以通过dir参数控制附加的行为是“追加”还是“插入顶部”
     * @method moveChild
     * @param { Node } src 源节点， 该节点下的所有子节点将被移除
     * @param { Node } tag 目标节点， 从源节点移除的子节点将被附加到该节点下
     * @param { Boolean } dir 附加方式， 如果为true， 则附加进去的节点将被放到目标节点的顶部， 反之，则放到末尾
     * @example
     * ```html
     * <div id="test1">
     *      <span></span>
     * </div>
     * <div id="test2">
     *     <div></div>
     * </div>
     *
     * <script>
     *
     *     var test1 = document.getElementById("test1"),
     *         test2 = document.getElementById("test2");
     *
     *     UE.dom.domUtils.moveChild( test1, test2, true );
     *
     *     //output: ""（空字符串）
     *     console.log( test1.innerHTML );
     *
     *     //output: "<span></span><div></div>"
     *     console.log( test2.innerHTML );
     *
     * </script>
     * ```
     */moveChild:function moveChild(src,tag,dir){while(src.firstChild){if(dir&&tag.firstChild){tag.insertBefore(src.lastChild,tag.firstChild);}else{tag.appendChild(src.firstChild);}}},/**
     * 判断节点的标签上是否不存在任何属性
     * @method hasNoAttributes
     * @private
     * @param { Node } node 需要检测的节点对象
     * @return { Boolean } 节点是否不包含任何属性
     * @example
     * ```html
     * <div id="test"><span>xxxx</span></div>
     *
     * <script>
     *
     *     //output: false
     *     console.log( UE.dom.domUtils.hasNoAttributes( document.getElementById("test") ) );
     *
     *     //output: true
     *     console.log( UE.dom.domUtils.hasNoAttributes( document.getElementById("test").firstChild ) );
     *
     * </script>
     * ```
     */hasNoAttributes:function hasNoAttributes(node){return browser.ie?/^<\w+\s*?>/.test(node.outerHTML):node.attributes.length==0;},/**
     * 检测节点是否是UEditor所使用的辅助节点
     * @method isCustomeNode
     * @private
     * @param { Node } node 需要检测的节点
     * @remind 辅助节点是指编辑器要完成工作临时添加的节点， 在输出的时候将会从编辑器内移除， 不会影响最终的结果。
     * @return { Boolean } 给定的节点是否是一个辅助节点
     */isCustomeNode:function isCustomeNode(node){return node.nodeType==1&&node.getAttribute('_ue_custom_node_');},/**
     * 检测节点的标签是否是给定的标签
     * @method isTagNode
     * @param { Node } node 需要检测的节点对象
     * @param { String } tagName 标签
     * @return { Boolean } 节点的标签是否是给定的标签
     * @example
     * ```html
     * <div id="test"></div>
     *
     * <script>
     *
     *     //output: true
     *     console.log( UE.dom.domUtils.isTagNode( document.getElementById("test"), "div" ) );
     *
     * </script>
     * ```
     */isTagNode:function isTagNode(node,tagNames){return node.nodeType==1&&new RegExp('\\b'+node.tagName+'\\b','i').test(tagNames);},/**
     * 给定一个节点数组，在通过指定的过滤器过滤后， 获取其中满足过滤条件的第一个节点
     * @method filterNodeList
     * @param { Array } nodeList 需要过滤的节点数组
     * @param { Function } fn 过滤器， 对符合条件的节点， 执行结果返回true， 反之则返回false
     * @return { Node | NULL } 如果找到符合过滤条件的节点， 则返回该节点， 否则返回NULL
     * @example
     * ```javascript
     * var divNodes = document.getElementsByTagName("div");
     * divNodes = [].slice.call( divNodes, 0 );
     *
     * //output: null
     * console.log( UE.dom.domUtils.filterNodeList( divNodes, function ( node ) {
     *     return node.tagName.toLowerCase() !== 'div';
     * } ) );
     * ```
     *//**
     * 给定一个节点数组nodeList和一组标签名tagNames， 获取其中能够匹配标签名的节点集合中的第一个节点
     * @method filterNodeList
     * @param { Array } nodeList 需要过滤的节点数组
     * @param { String } tagNames 需要匹配的标签名， 多个标签名之间用空格分割
     * @return { Node | NULL } 如果找到标签名匹配的节点， 则返回该节点， 否则返回NULL
     * @example
     * ```javascript
     * var divNodes = document.getElementsByTagName("div");
     * divNodes = [].slice.call( divNodes, 0 );
     *
     * //output: null
     * console.log( UE.dom.domUtils.filterNodeList( divNodes, 'a span' ) );
     * ```
     *//**
     * 给定一个节点数组，在通过指定的过滤器过滤后， 如果参数forAll为true， 则会返回所有满足过滤
     * 条件的节点集合， 否则， 返回满足条件的节点集合中的第一个节点
     * @method filterNodeList
     * @param { Array } nodeList 需要过滤的节点数组
     * @param { Function } fn 过滤器， 对符合条件的节点， 执行结果返回true， 反之则返回false
     * @param { Boolean } forAll 是否返回整个节点数组, 如果该参数为false， 则返回节点集合中的第一个节点
     * @return { Array | Node | NULL } 如果找到符合过滤条件的节点， 则根据参数forAll的值决定返回满足
     *                                      过滤条件的节点数组或第一个节点， 否则返回NULL
     * @example
     * ```javascript
     * var divNodes = document.getElementsByTagName("div");
     * divNodes = [].slice.call( divNodes, 0 );
     *
     * //output: 3（假定有3个div）
     * console.log( divNodes.length );
     *
     * var nodes = UE.dom.domUtils.filterNodeList( divNodes, function ( node ) {
     *     return node.tagName.toLowerCase() === 'div';
     * }, true );
     *
     * //output: 3
     * console.log( nodes.length );
     *
     * var node = UE.dom.domUtils.filterNodeList( divNodes, function ( node ) {
     *     return node.tagName.toLowerCase() === 'div';
     * }, false );
     *
     * //output: div
     * console.log( node.nodeName );
     * ```
     */filterNodeList:function filterNodeList(nodelist,filter,forAll){var results=[];if(!utils.isFunction(filter)){var str=filter;filter=function filter(n){return utils.indexOf(utils.isArray(str)?str:str.split(' '),n.tagName.toLowerCase())!=-1;};}utils.each(nodelist,function(n){filter(n)&&results.push(n);});return results.length==0?null:results.length==1||!forAll?results[0]:results;},/**
     * 查询给定的range选区是否在给定的node节点内，且在该节点的最末尾
     * @method isInNodeEndBoundary
     * @param { UE.dom.Range } rng 需要判断的range对象， 该对象的startContainer不能为NULL
     * @param node 需要检测的节点对象
     * @return { Number } 如果给定的选取range对象是在node内部的最末端， 则返回1, 否则返回0
     */isInNodeEndBoundary:function isInNodeEndBoundary(rng,node){var start=rng.startContainer;if(start.nodeType==3&&rng.startOffset!=start.nodeValue.length){return 0;}if(start.nodeType==1&&rng.startOffset!=start.childNodes.length){return 0;}while(start!==node){if(start.nextSibling){return 0;};start=start.parentNode;}return 1;},isBoundaryNode:function isBoundaryNode(node,dir){var tmp;while(!domUtils.isBody(node)){tmp=node;node=node.parentNode;if(tmp!==node[dir]){return false;}}return true;},fillHtml:browser.ie11below?'&nbsp;':'<br/>'};var fillCharReg=new RegExp(domUtils.fillChar,'g');// core/Range.js
/**
 * Range封装
 * @file
 * @module UE.dom
 * @class Range
 * @since 1.2.6.1
 *//**
 * dom操作封装
 * @unfile
 * @module UE.dom
 *//**
 * Range实现类，本类是UEditor底层核心类，封装不同浏览器之间的Range操作。
 * @unfile
 * @module UE.dom
 * @class Range
 */(function(){var guid=0,fillChar=domUtils.fillChar,fillData;/**
     * 更新range的collapse状态
     * @param  {Range}   range    range对象
     */function updateCollapse(range){range.collapsed=range.startContainer&&range.endContainer&&range.startContainer===range.endContainer&&range.startOffset==range.endOffset;}function selectOneNode(rng){return!rng.collapsed&&rng.startContainer.nodeType==1&&rng.startContainer===rng.endContainer&&rng.endOffset-rng.startOffset==1;}function setEndPoint(toStart,node,offset,range){//如果node是自闭合标签要处理
if(node.nodeType==1&&(dtd.$empty[node.tagName]||dtd.$nonChild[node.tagName])){offset=domUtils.getNodeIndex(node)+(toStart?0:1);node=node.parentNode;}if(toStart){range.startContainer=node;range.startOffset=offset;if(!range.endContainer){range.collapse(true);}}else{range.endContainer=node;range.endOffset=offset;if(!range.startContainer){range.collapse(false);}}updateCollapse(range);return range;}function execContentsAction(range,action){//调整边界
//range.includeBookmark();
var start=range.startContainer,end=range.endContainer,startOffset=range.startOffset,endOffset=range.endOffset,doc=range.document,frag=doc.createDocumentFragment(),tmpStart,tmpEnd;if(start.nodeType==1){start=start.childNodes[startOffset]||(tmpStart=start.appendChild(doc.createTextNode('')));}if(end.nodeType==1){end=end.childNodes[endOffset]||(tmpEnd=end.appendChild(doc.createTextNode('')));}if(start===end&&start.nodeType==3){frag.appendChild(doc.createTextNode(start.substringData(startOffset,endOffset-startOffset)));//is not clone
if(action){start.deleteData(startOffset,endOffset-startOffset);range.collapse(true);}return frag;}var current,currentLevel,clone=frag,startParents=domUtils.findParents(start,true),endParents=domUtils.findParents(end,true);for(var i=0;startParents[i]==endParents[i];){i++;}for(var j=i,si;si=startParents[j];j++){current=si.nextSibling;if(si==start){if(!tmpStart){if(range.startContainer.nodeType==3){clone.appendChild(doc.createTextNode(start.nodeValue.slice(startOffset)));//is not clone
if(action){start.deleteData(startOffset,start.nodeValue.length-startOffset);}}else{clone.appendChild(!action?start.cloneNode(true):start);}}}else{currentLevel=si.cloneNode(false);clone.appendChild(currentLevel);}while(current){if(current===end||current===endParents[j]){break;}si=current.nextSibling;clone.appendChild(!action?current.cloneNode(true):current);current=si;}clone=currentLevel;}clone=frag;if(!startParents[i]){clone.appendChild(startParents[i-1].cloneNode(false));clone=clone.firstChild;}for(var j=i,ei;ei=endParents[j];j++){current=ei.previousSibling;if(ei==end){if(!tmpEnd&&range.endContainer.nodeType==3){clone.appendChild(doc.createTextNode(end.substringData(0,endOffset)));//is not clone
if(action){end.deleteData(0,endOffset);}}}else{currentLevel=ei.cloneNode(false);clone.appendChild(currentLevel);}//如果两端同级，右边第一次已经被开始做了
if(j!=i||!startParents[i]){while(current){if(current===start){break;}ei=current.previousSibling;clone.insertBefore(!action?current.cloneNode(true):current,clone.firstChild);current=ei;}}clone=currentLevel;}if(action){range.setStartBefore(!endParents[i]?endParents[i-1]:!startParents[i]?startParents[i-1]:endParents[i]).collapse(true);}tmpStart&&domUtils.remove(tmpStart);tmpEnd&&domUtils.remove(tmpEnd);return frag;}/**
     * 创建一个跟document绑定的空的Range实例
     * @constructor
     * @param { Document } document 新建的选区所属的文档对象
     *//**
     * @property { Node } startContainer 当前Range的开始边界的容器节点, 可以是一个元素节点或者是文本节点
     *//**
     * @property { Node } startOffset 当前Range的开始边界容器节点的偏移量, 如果是元素节点，
     *                              该值就是childNodes中的第几个节点， 如果是文本节点就是文本内容的第几个字符
     *//**
     * @property { Node } endContainer 当前Range的结束边界的容器节点, 可以是一个元素节点或者是文本节点
     *//**
     * @property { Node } endOffset 当前Range的结束边界容器节点的偏移量, 如果是元素节点，
     *                              该值就是childNodes中的第几个节点， 如果是文本节点就是文本内容的第几个字符
     *//**
     * @property { Boolean } collapsed 当前Range是否闭合
     * @default true
     * @remind Range是闭合的时候， startContainer === endContainer && startOffset === endOffset
     *//**
     * @property { Document } document 当前Range所属的Document对象
     * @remind 不同range的的document属性可以是不同的
     */var Range=dom.Range=function(document){var me=this;me.startContainer=me.startOffset=me.endContainer=me.endOffset=null;me.document=document;me.collapsed=true;};/**
     * 删除fillData
     * @param doc
     * @param excludeNode
     */function removeFillData(doc,excludeNode){try{if(fillData&&domUtils.inDoc(fillData,doc)){if(!fillData.nodeValue.replace(fillCharReg,'').length){var tmpNode=fillData.parentNode;domUtils.remove(fillData);while(tmpNode&&domUtils.isEmptyInlineElement(tmpNode)&&(//safari的contains有bug
browser.safari?!(domUtils.getPosition(tmpNode,excludeNode)&domUtils.POSITION_CONTAINS):!tmpNode.contains(excludeNode))){fillData=tmpNode.parentNode;domUtils.remove(tmpNode);tmpNode=fillData;}}else{fillData.nodeValue=fillData.nodeValue.replace(fillCharReg,'');}}}catch(e){}}/**
     * @param node
     * @param dir
     */function mergeSibling(node,dir){var tmpNode;node=node[dir];while(node&&domUtils.isFillChar(node)){tmpNode=node[dir];domUtils.remove(node);node=tmpNode;}}Range.prototype={/**
         * 克隆选区的内容到一个DocumentFragment里
         * @method cloneContents
         * @return { DocumentFragment | NULL } 如果选区是闭合的将返回null， 否则， 返回包含所clone内容的DocumentFragment元素
         * @example
         * ```html
         * <body>
         *      <!-- 中括号表示选区 -->
         *      <b>x<i>x[x</i>xx]x</b>
         *
         *      <script>
         *          //range是已选中的选区
         *          var fragment = range.cloneContents(),
         *              node = document.createElement("div");
         *
         *          node.appendChild( fragment );
         *
         *          //output: <i>x</i>xx
         *          console.log( node.innerHTML );
         *
         *      </script>
         * </body>
         * ```
         */cloneContents:function cloneContents(){return this.collapsed?null:execContentsAction(this,0);},/**
         * 删除当前选区范围中的所有内容
         * @method deleteContents
         * @remind 执行完该操作后， 当前Range对象变成了闭合状态
         * @return { UE.dom.Range } 当前操作的Range对象
         * @example
         * ```html
         * <body>
         *      <!-- 中括号表示选区 -->
         *      <b>x<i>x[x</i>xx]x</b>
         *
         *      <script>
         *          //range是已选中的选区
         *          range.deleteContents();
         *
         *          //竖线表示闭合后的选区位置
         *          //output: <b>x<i>x</i>|x</b>
         *          console.log( document.body.innerHTML );
         *
         *          //此时， range的各项属性为
         *          //output: B
         *          console.log( range.startContainer.tagName );
         *          //output: 2
         *          console.log( range.startOffset );
         *          //output: B
         *          console.log( range.endContainer.tagName );
         *          //output: 2
         *          console.log( range.endOffset );
         *          //output: true
         *          console.log( range.collapsed );
         *
         *      </script>
         * </body>
         * ```
         */deleteContents:function deleteContents(){var txt;if(!this.collapsed){execContentsAction(this,1);}if(browser.webkit){txt=this.startContainer;if(txt.nodeType==3&&!txt.nodeValue.length){this.setStartBefore(txt).collapse(true);domUtils.remove(txt);}}return this;},/**
         * 将当前选区的内容提取到一个DocumentFragment里
         * @method extractContents
         * @remind 执行该操作后， 选区将变成闭合状态
         * @warning 执行该操作后， 原来选区所选中的内容将从dom树上剥离出来
         * @return { DocumentFragment } 返回包含所提取内容的DocumentFragment对象
         * @example
         * ```html
         * <body>
         *      <!-- 中括号表示选区 -->
         *      <b>x<i>x[x</i>xx]x</b>
         *
         *      <script>
         *          //range是已选中的选区
         *          var fragment = range.extractContents(),
         *              node = document.createElement( "div" );
         *
         *          node.appendChild( fragment );
         *
         *          //竖线表示闭合后的选区位置
         *
         *          //output: <b>x<i>x</i>|x</b>
         *          console.log( document.body.innerHTML );
         *          //output: <i>x</i>xx
         *          console.log( node.innerHTML );
         *
         *          //此时， range的各项属性为
         *          //output: B
         *          console.log( range.startContainer.tagName );
         *          //output: 2
         *          console.log( range.startOffset );
         *          //output: B
         *          console.log( range.endContainer.tagName );
         *          //output: 2
         *          console.log( range.endOffset );
         *          //output: true
         *          console.log( range.collapsed );
         *
         *      </script>
         * </body>
         */extractContents:function extractContents(){return this.collapsed?null:execContentsAction(this,2);},/**
         * 设置Range的开始容器节点和偏移量
         * @method  setStart
         * @remind 如果给定的节点是元素节点，那么offset指的是其子元素中索引为offset的元素，
         *          如果是文本节点，那么offset指的是其文本内容的第offset个字符
         * @remind 如果提供的容器节点是一个不能包含子元素的节点， 则该选区的开始容器将被设置
         *          为该节点的父节点， 此时， 其距离开始容器的偏移量也变成了该节点在其父节点
         *          中的索引
         * @param { Node } node 将被设为当前选区开始边界容器的节点对象
         * @param { int } offset 选区的开始位置偏移量
         * @return { UE.dom.Range } 当前range对象
         * @example
         * ```html
         * <!-- 选区 -->
         * <b>xxx<i>x<span>xx</span>xx<em>xx</em>xxx</i>[xxx]</b>
         *
         * <script>
         *
         *     //执行操作
         *     range.setStart( document.getElementsByTagName("i")[0], 1 );
         *
         *     //此时， 选区变成了
         *     //<b>xxx<i>x[<span>xx</span>xx<em>xx</em>xxx</i>xxx]</b>
         *
         * </script>
         * ```
         * @example
         * ```html
         * <!-- 选区 -->
         * <b>xxx<img>[xx]x</b>
         *
         * <script>
         *
         *     //执行操作
         *     range.setStart( document.getElementsByTagName("img")[0], 3 );
         *
         *     //此时， 选区变成了
         *     //<b>xxx[<img>xx]x</b>
         *
         * </script>
         * ```
         */setStart:function setStart(node,offset){return setEndPoint(true,node,offset,this);},/**
         * 设置Range的结束容器和偏移量
         * @method  setEnd
         * @param { Node } node 作为当前选区结束边界容器的节点对象
         * @param { int } offset 结束边界的偏移量
         * @see UE.dom.Range:setStart(Node,int)
         * @return { UE.dom.Range } 当前range对象
         */setEnd:function setEnd(node,offset){return setEndPoint(false,node,offset,this);},/**
         * 将Range开始位置设置到node节点之后
         * @method  setStartAfter
         * @remind 该操作将会把给定节点的父节点作为range的开始容器， 且偏移量是该节点在其父节点中的位置索引+1
         * @param { Node } node 选区的开始边界将紧接着该节点之后
         * @return { UE.dom.Range } 当前range对象
         * @example
         * ```html
         * <!-- 选区示例 -->
         * <b>xx<i>xxx</i><span>xx[x</span>xxx]</b>
         *
         * <script>
         *
         *     //执行操作
         *     range.setStartAfter( document.getElementsByTagName("i")[0] );
         *
         *     //结果选区
         *     //<b>xx<i>xxx</i>[<span>xxx</span>xxx]</b>
         *
         * </script>
         * ```
         */setStartAfter:function setStartAfter(node){return this.setStart(node.parentNode,domUtils.getNodeIndex(node)+1);},/**
         * 将Range开始位置设置到node节点之前
         * @method  setStartBefore
         * @remind 该操作将会把给定节点的父节点作为range的开始容器， 且偏移量是该节点在其父节点中的位置索引
         * @param { Node } node 新的选区开始位置在该节点之前
         * @see UE.dom.Range:setStartAfter(Node)
         * @return { UE.dom.Range } 当前range对象
         */setStartBefore:function setStartBefore(node){return this.setStart(node.parentNode,domUtils.getNodeIndex(node));},/**
         * 将Range结束位置设置到node节点之后
         * @method  setEndAfter
         * @remind 该操作将会把给定节点的父节点作为range的结束容器， 且偏移量是该节点在其父节点中的位置索引+1
         * @param { Node } node 目标节点
         * @see UE.dom.Range:setStartAfter(Node)
         * @return { UE.dom.Range } 当前range对象
         * @example
         * ```html
         * <!-- 选区示例 -->
         * <b>[xx<i>xxx</i><span>xx]x</span>xxx</b>
         *
         * <script>
         *
         *     //执行操作
         *     range.setStartAfter( document.getElementsByTagName("span")[0] );
         *
         *     //结果选区
         *     //<b>[xx<i>xxx</i><span>xxx</span>]xxx</b>
         *
         * </script>
         * ```
         */setEndAfter:function setEndAfter(node){return this.setEnd(node.parentNode,domUtils.getNodeIndex(node)+1);},/**
         * 将Range结束位置设置到node节点之前
         * @method  setEndBefore
         * @remind 该操作将会把给定节点的父节点作为range的结束容器， 且偏移量是该节点在其父节点中的位置索引
         * @param { Node } node 目标节点
         * @see UE.dom.Range:setEndAfter(Node)
         * @return { UE.dom.Range } 当前range对象
         */setEndBefore:function setEndBefore(node){return this.setEnd(node.parentNode,domUtils.getNodeIndex(node));},/**
         * 设置Range的开始位置到node节点内的第一个子节点之前
         * @method  setStartAtFirst
         * @remind 选区的开始容器将变成给定的节点， 且偏移量为0
         * @remind 如果给定的节点是元素节点， 则该节点必须是允许包含子节点的元素。
         * @param { Node } node 目标节点
         * @see UE.dom.Range:setStartBefore(Node)
         * @return { UE.dom.Range } 当前range对象
         * @example
         * ```html
         * <!-- 选区示例 -->
         * <b>xx<i>xxx</i><span>[xx]x</span>xxx</b>
         *
         * <script>
         *
         *     //执行操作
         *     range.setStartAtFirst( document.getElementsByTagName("i")[0] );
         *
         *     //结果选区
         *     //<b>xx<i>[xxx</i><span>xx]x</span>xxx</b>
         *
         * </script>
         * ```
         */setStartAtFirst:function setStartAtFirst(node){return this.setStart(node,0);},/**
         * 设置Range的开始位置到node节点内的最后一个节点之后
         * @method setStartAtLast
         * @remind 选区的开始容器将变成给定的节点， 且偏移量为该节点的子节点数
         * @remind 如果给定的节点是元素节点， 则该节点必须是允许包含子节点的元素。
         * @param { Node } node 目标节点
         * @see UE.dom.Range:setStartAtFirst(Node)
         * @return { UE.dom.Range } 当前range对象
         */setStartAtLast:function setStartAtLast(node){return this.setStart(node,node.nodeType==3?node.nodeValue.length:node.childNodes.length);},/**
         * 设置Range的结束位置到node节点内的第一个节点之前
         * @method  setEndAtFirst
         * @param { Node } node 目标节点
         * @remind 选区的结束容器将变成给定的节点， 且偏移量为0
         * @remind node必须是一个元素节点， 且必须是允许包含子节点的元素。
         * @see UE.dom.Range:setStartAtFirst(Node)
         * @return { UE.dom.Range } 当前range对象
         */setEndAtFirst:function setEndAtFirst(node){return this.setEnd(node,0);},/**
         * 设置Range的结束位置到node节点内的最后一个节点之后
         * @method  setEndAtLast
         * @param { Node } node 目标节点
         * @remind 选区的结束容器将变成给定的节点， 且偏移量为该节点的子节点数量
         * @remind node必须是一个元素节点， 且必须是允许包含子节点的元素。
         * @see UE.dom.Range:setStartAtFirst(Node)
         * @return { UE.dom.Range } 当前range对象
         */setEndAtLast:function setEndAtLast(node){return this.setEnd(node,node.nodeType==3?node.nodeValue.length:node.childNodes.length);},/**
         * 选中给定节点
         * @method  selectNode
         * @remind 此时， 选区的开始容器和结束容器都是该节点的父节点， 其startOffset是该节点在父节点中的位置索引，
         *          而endOffset为startOffset+1
         * @param { Node } node 需要选中的节点
         * @return { UE.dom.Range } 当前range对象，此时的range仅包含当前给定的节点对象
         * @example
         * ```html
         * <!-- 选区示例 -->
         * <b>xx<i>xxx</i><span>[xx]x</span>xxx</b>
         *
         * <script>
         *
         *     //执行操作
         *     range.selectNode( document.getElementsByTagName("i")[0] );
         *
         *     //结果选区
         *     //<b>xx[<i>xxx</i>]<span>xxx</span>xxx</b>
         *
         * </script>
         * ```
         */selectNode:function selectNode(node){return this.setStartBefore(node).setEndAfter(node);},/**
         * 选中给定节点内部的所有节点
         * @method  selectNodeContents
         * @remind 此时， 选区的开始容器和结束容器都是该节点， 其startOffset为0，
         *          而endOffset是该节点的子节点数。
         * @param { Node } node 目标节点， 当前range将包含该节点内的所有节点
         * @return { UE.dom.Range } 当前range对象， 此时range仅包含给定节点的所有子节点
         * @example
         * ```html
         * <!-- 选区示例 -->
         * <b>xx<i>xxx</i><span>[xx]x</span>xxx</b>
         *
         * <script>
         *
         *     //执行操作
         *     range.selectNode( document.getElementsByTagName("b")[0] );
         *
         *     //结果选区
         *     //<b>[xx<i>xxx</i><span>xxx</span>xxx]</b>
         *
         * </script>
         * ```
         */selectNodeContents:function selectNodeContents(node){return this.setStart(node,0).setEndAtLast(node);},/**
         * clone当前Range对象
         * @method  cloneRange
         * @remind 返回的range是一个全新的range对象， 其内部所有属性与当前被clone的range相同。
         * @return { UE.dom.Range } 当前range对象的一个副本
         */cloneRange:function cloneRange(){var me=this;return new Range(me.document).setStart(me.startContainer,me.startOffset).setEnd(me.endContainer,me.endOffset);},/**
         * 向当前选区的结束处闭合选区
         * @method  collapse
         * @return { UE.dom.Range } 当前range对象
         * @example
         * ```html
         * <!-- 选区示例 -->
         * <b>xx<i>xxx</i><span>[xx]x</span>xxx</b>
         *
         * <script>
         *
         *     //执行操作
         *     range.collapse();
         *
         *     //结果选区
         *     //“|”表示选区已闭合
         *     //<b>xx<i>xxx</i><span>xx|x</span>xxx</b>
         *
         * </script>
         * ```
         *//**
         * 闭合当前选区，根据给定的toStart参数项决定是向当前选区开始处闭合还是向结束处闭合，
         * 如果toStart的值为true，则向开始位置闭合， 反之，向结束位置闭合。
         * @method  collapse
         * @param { Boolean } toStart 是否向选区开始处闭合
         * @return { UE.dom.Range } 当前range对象，此时range对象处于闭合状态
         * @see UE.dom.Range:collapse()
         * @example
         * ```html
         * <!-- 选区示例 -->
         * <b>xx<i>xxx</i><span>[xx]x</span>xxx</b>
         *
         * <script>
         *
         *     //执行操作
         *     range.collapse( true );
         *
         *     //结果选区
         *     //“|”表示选区已闭合
         *     //<b>xx<i>xxx</i><span>|xxx</span>xxx</b>
         *
         * </script>
         * ```
         */collapse:function collapse(toStart){var me=this;if(toStart){me.endContainer=me.startContainer;me.endOffset=me.startOffset;}else{me.startContainer=me.endContainer;me.startOffset=me.endOffset;}me.collapsed=true;return me;},/**
         * 调整range的开始位置和结束位置，使其"收缩"到最小的位置
         * @method  shrinkBoundary
         * @return { UE.dom.Range } 当前range对象
         * @example
         * ```html
         * <span>xx<b>xx[</b>xxxxx]</span> => <span>xx<b>xx</b>[xxxxx]</span>
         * ```
         *
         * @example
         * ```html
         * <!-- 选区示例 -->
         * <b>x[xx</b><i>]xxx</i>
         *
         * <script>
         *
         *     //执行收缩
         *     range.shrinkBoundary();
         *
         *     //结果选区
         *     //<b>x[xx]</b><i>xxx</i>
         * </script>
         * ```
         *
         * @example
         * ```html
         * [<b><i>xxxx</i>xxxxxxx</b>] => <b><i>[xxxx</i>xxxxxxx]</b>
         * ```
         *//**
         * 调整range的开始位置和结束位置，使其"收缩"到最小的位置，
         * 如果ignoreEnd的值为true，则忽略对结束位置的调整
         * @method  shrinkBoundary
         * @param { Boolean } ignoreEnd 是否忽略对结束位置的调整
         * @return { UE.dom.Range } 当前range对象
         * @see UE.dom.domUtils.Range:shrinkBoundary()
         */shrinkBoundary:function shrinkBoundary(ignoreEnd){var me=this,child,collapsed=me.collapsed;function check(node){return node.nodeType==1&&!domUtils.isBookmarkNode(node)&&!dtd.$empty[node.tagName]&&!dtd.$nonChild[node.tagName];}while(me.startContainer.nodeType==1//是element
&&(child=me.startContainer.childNodes[me.startOffset])//子节点也是element
&&check(child)){me.setStart(child,0);}if(collapsed){return me.collapse(true);}if(!ignoreEnd){while(me.endContainer.nodeType==1//是element
&&me.endOffset>0//如果是空元素就退出 endOffset=0那么endOffst-1为负值，childNodes[endOffset]报错
&&(child=me.endContainer.childNodes[me.endOffset-1])//子节点也是element
&&check(child)){me.setEnd(child,child.childNodes.length);}}return me;},/**
         * 获取离当前选区内包含的所有节点最近的公共祖先节点，
         * @method  getCommonAncestor
         * @remind 返回的公共祖先节点一定不是range自身的容器节点， 但有可能是一个文本节点
         * @return { Node } 当前range对象内所有节点的公共祖先节点
         * @example
         * ```html
         * //选区示例
         * <span>xxx<b>x[x<em>xx]x</em>xxx</b>xx</span>
         * <script>
         *
         *     var node = range.getCommonAncestor();
         *
         *     //公共祖先节点是： b节点
         *     //输出： B
         *     console.log(node.tagName);
         *
         * </script>
         * ```
         *//**
         * 获取当前选区所包含的所有节点的公共祖先节点， 可以根据给定的参数 includeSelf 决定获取到
         * 的公共祖先节点是否可以是当前选区的startContainer或endContainer节点， 如果 includeSelf
         * 的取值为true， 则返回的节点可以是自身的容器节点， 否则， 则不能是容器节点
         * @method  getCommonAncestor
         * @param { Boolean } includeSelf 是否允许获取到的公共祖先节点是当前range对象的容器节点
         * @return { Node } 当前range对象内所有节点的公共祖先节点
         * @see UE.dom.Range:getCommonAncestor()
         * @example
         * ```html
         * <body>
         *
         *     <!-- 选区示例 -->
         *     <b>xxx<i>xxxx<span>xx[x</span>xx]x</i>xxxxxxx</b>
         *
         *     <script>
         *
         *         var node = range.getCommonAncestor( false );
         *
         *         //这里的公共祖先节点是B而不是I， 是因为参数限制了获取到的节点不能是容器节点
         *         //output: B
         *         console.log( node.tagName );
         *
         *     </script>
         *
         * </body>
         * ```
         *//**
         * 获取当前选区所包含的所有节点的公共祖先节点， 可以根据给定的参数 includeSelf 决定获取到
         * 的公共祖先节点是否可以是当前选区的startContainer或endContainer节点， 如果 includeSelf
         * 的取值为true， 则返回的节点可以是自身的容器节点， 否则， 则不能是容器节点； 同时可以根据
         * ignoreTextNode 参数的取值决定是否忽略类型为文本节点的祖先节点。
         * @method  getCommonAncestor
         * @param { Boolean } includeSelf 是否允许获取到的公共祖先节点是当前range对象的容器节点
         * @param { Boolean } ignoreTextNode 获取祖先节点的过程中是否忽略类型为文本节点的祖先节点
         * @return { Node } 当前range对象内所有节点的公共祖先节点
         * @see UE.dom.Range:getCommonAncestor()
         * @see UE.dom.Range:getCommonAncestor(Boolean)
         * @example
         * ```html
         * <body>
         *
         *     <!-- 选区示例 -->
         *     <b>xxx<i>xxxx<span>x[x]x</span>xxx</i>xxxxxxx</b>
         *
         *     <script>
         *
         *         var node = range.getCommonAncestor( true, false );
         *
         *         //output: SPAN
         *         console.log( node.tagName );
         *
         *     </script>
         *
         * </body>
         * ```
         */getCommonAncestor:function getCommonAncestor(includeSelf,ignoreTextNode){var me=this,start=me.startContainer,end=me.endContainer;if(start===end){if(includeSelf&&selectOneNode(this)){start=start.childNodes[me.startOffset];if(start.nodeType==1)return start;}//只有在上来就相等的情况下才会出现是文本的情况
return ignoreTextNode&&start.nodeType==3?start.parentNode:start;}return domUtils.getCommonAncestor(start,end);},/**
         * 调整当前Range的开始和结束边界容器，如果是容器节点是文本节点,就调整到包含该文本节点的父节点上
         * @method trimBoundary
         * @remind 该操作有可能会引起文本节点被切开
         * @return { UE.dom.Range } 当前range对象
         * @example
         * ```html
         *
         * //选区示例
         * <b>xxx<i>[xxxxx]</i>xxx</b>
         *
         * <script>
         *     //未调整前， 选区的开始容器和结束都是文本节点
         *     //执行调整
         *     range.trimBoundary();
         *
         *     //调整之后， 容器节点变成了i节点
         *     //<b>xxx[<i>xxxxx</i>]xxx</b>
         * </script>
         * ```
         *//**
         * 调整当前Range的开始和结束边界容器，如果是容器节点是文本节点,就调整到包含该文本节点的父节点上，
         * 可以根据 ignoreEnd 参数的值决定是否调整对结束边界的调整
         * @method trimBoundary
         * @param { Boolean } ignoreEnd 是否忽略对结束边界的调整
         * @return { UE.dom.Range } 当前range对象
         * @example
         * ```html
         *
         * //选区示例
         * <b>xxx<i>[xxxxx]</i>xxx</b>
         *
         * <script>
         *     //未调整前， 选区的开始容器和结束都是文本节点
         *     //执行调整
         *     range.trimBoundary( true );
         *
         *     //调整之后， 开始容器节点变成了i节点
         *     //但是， 结束容器没有发生变化
         *     //<b>xxx[<i>xxxxx]</i>xxx</b>
         * </script>
         * ```
         */trimBoundary:function trimBoundary(ignoreEnd){this.txtToElmBoundary();var start=this.startContainer,offset=this.startOffset,collapsed=this.collapsed,end=this.endContainer;if(start.nodeType==3){if(offset==0){this.setStartBefore(start);}else{if(offset>=start.nodeValue.length){this.setStartAfter(start);}else{var textNode=domUtils.split(start,offset);//跟新结束边界
if(start===end){this.setEnd(textNode,this.endOffset-offset);}else if(start.parentNode===end){this.endOffset+=1;}this.setStartBefore(textNode);}}if(collapsed){return this.collapse(true);}}if(!ignoreEnd){offset=this.endOffset;end=this.endContainer;if(end.nodeType==3){if(offset==0){this.setEndBefore(end);}else{offset<end.nodeValue.length&&domUtils.split(end,offset);this.setEndAfter(end);}}}return this;},/**
         * 如果选区在文本的边界上，就扩展选区到文本的父节点上, 如果当前选区是闭合的， 则什么也不做
         * @method txtToElmBoundary
         * @remind 该操作不会修改dom节点
         * @return { UE.dom.Range } 当前range对象
         *//**
         * 如果选区在文本的边界上，就扩展选区到文本的父节点上, 如果当前选区是闭合的， 则根据参数项
         * ignoreCollapsed 的值决定是否执行该调整
         * @method txtToElmBoundary
         * @param { Boolean } ignoreCollapsed 是否忽略选区的闭合状态， 如果该参数取值为true， 则
         *                      不论选区是否闭合， 都会执行该操作， 反之， 则不会对闭合的选区执行该操作
         * @return { UE.dom.Range } 当前range对象
         */txtToElmBoundary:function txtToElmBoundary(ignoreCollapsed){function adjust(r,c){var container=r[c+'Container'],offset=r[c+'Offset'];if(container.nodeType==3){if(!offset){r['set'+c.replace(/(\w)/,function(a){return a.toUpperCase();})+'Before'](container);}else if(offset>=container.nodeValue.length){r['set'+c.replace(/(\w)/,function(a){return a.toUpperCase();})+'After'](container);}}}if(ignoreCollapsed||!this.collapsed){adjust(this,'start');adjust(this,'end');}return this;},/**
         * 在当前选区的开始位置前插入节点，新插入的节点会被该range包含
         * @method  insertNode
         * @param { Node } node 需要插入的节点
         * @remind 插入的节点可以是一个DocumentFragment依次插入多个节点
         * @return { UE.dom.Range } 当前range对象
         */insertNode:function insertNode(node){var first=node,length=1;if(node.nodeType==11){first=node.firstChild;length=node.childNodes.length;}this.trimBoundary(true);var start=this.startContainer,offset=this.startOffset;var nextNode=start.childNodes[offset];if(nextNode){start.insertBefore(node,nextNode);}else{start.appendChild(node);}if(first.parentNode===this.endContainer){this.endOffset=this.endOffset+length;}return this.setStartBefore(first);},/**
         * 闭合选区到当前选区的开始位置， 并且定位光标到闭合后的位置
         * @method  setCursor
         * @return { UE.dom.Range } 当前range对象
         * @see UE.dom.Range:collapse()
         *//**
         * 闭合选区，可以根据参数toEnd的值控制选区是向前闭合还是向后闭合， 并且定位光标到闭合后的位置。
         * @method  setCursor
         * @param { Boolean } toEnd 是否向后闭合， 如果为true， 则闭合选区时， 将向结束容器方向闭合，
         *                      反之，则向开始容器方向闭合
         * @return { UE.dom.Range } 当前range对象
         * @see UE.dom.Range:collapse(Boolean)
         */setCursor:function setCursor(toEnd,noFillData){return this.collapse(!toEnd).select(noFillData);},/**
         * 创建当前range的一个书签，记录下当前range的位置，方便当dom树改变时，还能找回原来的选区位置
         * @method createBookmark
         * @param { Boolean } serialize 控制返回的标记位置是对当前位置的引用还是ID，如果该值为true，则
         *                              返回标记位置的ID， 反之则返回标记位置节点的引用
         * @return { Object } 返回一个书签记录键值对， 其包含的key有： start => 开始标记的ID或者引用，
         *                          end => 结束标记的ID或引用， id => 当前标记的类型， 如果为true，则表示
         *                          返回的记录的类型为ID， 反之则为引用
         */createBookmark:function createBookmark(serialize,same){var endNode,startNode=this.document.createElement('span');startNode.style.cssText='display:none;line-height:0px;';startNode.appendChild(this.document.createTextNode('\u200D'));startNode.id='_baidu_bookmark_start_'+(same?'':guid++);if(!this.collapsed){endNode=startNode.cloneNode(true);endNode.id='_baidu_bookmark_end_'+(same?'':guid++);}this.insertNode(startNode);if(endNode){this.collapse().insertNode(endNode).setEndBefore(endNode);}this.setStartAfter(startNode);return{start:serialize?startNode.id:startNode,end:endNode?serialize?endNode.id:endNode:null,id:serialize};},/**
         *  调整当前range的边界到书签位置，并删除该书签对象所标记的位置内的节点
         *  @method  moveToBookmark
         *  @param { BookMark } bookmark createBookmark所创建的标签对象
         *  @return { UE.dom.Range } 当前range对象
         *  @see UE.dom.Range:createBookmark(Boolean)
         */moveToBookmark:function moveToBookmark(bookmark){var start=bookmark.id?this.document.getElementById(bookmark.start):bookmark.start,end=bookmark.end&&bookmark.id?this.document.getElementById(bookmark.end):bookmark.end;this.setStartBefore(start);domUtils.remove(start);if(end){this.setEndBefore(end);domUtils.remove(end);}else{this.collapse(true);}return this;},/**
         * 调整range的边界，使其"放大"到最近的父节点
         * @method  enlarge
         * @remind 会引起选区的变化
         * @return { UE.dom.Range } 当前range对象
         *//**
         * 调整range的边界，使其"放大"到最近的父节点，根据参数 toBlock 的取值， 可以
         * 要求扩大之后的父节点是block节点
         * @method  enlarge
         * @param { Boolean } toBlock 是否要求扩大之后的父节点必须是block节点
         * @return { UE.dom.Range } 当前range对象
         */enlarge:function enlarge(toBlock,stopFn){var isBody=domUtils.isBody,pre,node,tmp=this.document.createTextNode('');if(toBlock){node=this.startContainer;if(node.nodeType==1){if(node.childNodes[this.startOffset]){pre=node=node.childNodes[this.startOffset];}else{node.appendChild(tmp);pre=node=tmp;}}else{pre=node;}while(1){if(domUtils.isBlockElm(node)){node=pre;while((pre=node.previousSibling)&&!domUtils.isBlockElm(pre)){node=pre;}this.setStartBefore(node);break;}pre=node;node=node.parentNode;}node=this.endContainer;if(node.nodeType==1){if(pre=node.childNodes[this.endOffset]){node.insertBefore(tmp,pre);}else{node.appendChild(tmp);}pre=node=tmp;}else{pre=node;}while(1){if(domUtils.isBlockElm(node)){node=pre;while((pre=node.nextSibling)&&!domUtils.isBlockElm(pre)){node=pre;}this.setEndAfter(node);break;}pre=node;node=node.parentNode;}if(tmp.parentNode===this.endContainer){this.endOffset--;}domUtils.remove(tmp);}// 扩展边界到最大
if(!this.collapsed){while(this.startOffset==0){if(stopFn&&stopFn(this.startContainer)){break;}if(isBody(this.startContainer)){break;}this.setStartBefore(this.startContainer);}while(this.endOffset==(this.endContainer.nodeType==1?this.endContainer.childNodes.length:this.endContainer.nodeValue.length)){if(stopFn&&stopFn(this.endContainer)){break;}if(isBody(this.endContainer)){break;}this.setEndAfter(this.endContainer);}}return this;},enlargeToBlockElm:function enlargeToBlockElm(ignoreEnd){while(!domUtils.isBlockElm(this.startContainer)){this.setStartBefore(this.startContainer);}if(!ignoreEnd){while(!domUtils.isBlockElm(this.endContainer)){this.setEndAfter(this.endContainer);}}return this;},/**
         * 调整Range的边界，使其"缩小"到最合适的位置
         * @method adjustmentBoundary
         * @return { UE.dom.Range } 当前range对象
         * @see UE.dom.Range:shrinkBoundary()
         */adjustmentBoundary:function adjustmentBoundary(){if(!this.collapsed){while(!domUtils.isBody(this.startContainer)&&this.startOffset==this.startContainer[this.startContainer.nodeType==3?'nodeValue':'childNodes'].length&&this.startContainer[this.startContainer.nodeType==3?'nodeValue':'childNodes'].length){this.setStartAfter(this.startContainer);}while(!domUtils.isBody(this.endContainer)&&!this.endOffset&&this.endContainer[this.endContainer.nodeType==3?'nodeValue':'childNodes'].length){this.setEndBefore(this.endContainer);}}return this;},/**
         * 给range选区中的内容添加给定的inline标签
         * @method applyInlineStyle
         * @param { String } tagName 需要添加的标签名
         * @example
         * ```html
         * <p>xxxx[xxxx]x</p>  ==>  range.applyInlineStyle("strong")  ==>  <p>xxxx[<strong>xxxx</strong>]x</p>
         * ```
         *//**
         * 给range选区中的内容添加给定的inline标签， 并且为标签附加上一些初始化属性。
         * @method applyInlineStyle
         * @param { String } tagName 需要添加的标签名
         * @param { Object } attrs 跟随新添加的标签的属性
         * @return { UE.dom.Range } 当前选区
         * @example
         * ```html
         * <p>xxxx[xxxx]x</p>
         *
         * ==>
         *
         * <!-- 执行操作 -->
         * range.applyInlineStyle("strong",{"style":"font-size:12px"})
         *
         * ==>
         *
         * <p>xxxx[<strong style="font-size:12px">xxxx</strong>]x</p>
         * ```
         */applyInlineStyle:function applyInlineStyle(tagName,attrs,list){if(this.collapsed)return this;this.trimBoundary().enlarge(false,function(node){return node.nodeType==1&&domUtils.isBlockElm(node);}).adjustmentBoundary();var bookmark=this.createBookmark(),end=bookmark.end,filterFn=function filterFn(node){return node.nodeType==1?node.tagName.toLowerCase()!='br':!domUtils.isWhitespace(node);},current=domUtils.getNextDomNode(bookmark.start,false,filterFn),node,pre,range=this.cloneRange();while(current&&domUtils.getPosition(current,end)&domUtils.POSITION_PRECEDING){if(current.nodeType==3||dtd[tagName][current.tagName]){range.setStartBefore(current);node=current;while(node&&(node.nodeType==3||dtd[tagName][node.tagName])&&node!==end){pre=node;node=domUtils.getNextDomNode(node,node.nodeType==1,null,function(parent){return dtd[tagName][parent.tagName];});}var frag=range.setEndAfter(pre).extractContents(),elm;if(list&&list.length>0){var level,top;top=level=list[0].cloneNode(false);for(var i=1,ci;ci=list[i++];){level.appendChild(ci.cloneNode(false));level=level.firstChild;}elm=level;}else{elm=range.document.createElement(tagName);}if(attrs){domUtils.setAttributes(elm,attrs);}elm.appendChild(frag);range.insertNode(list?top:elm);//处理下滑线在a上的情况
var aNode;if(tagName=='span'&&attrs.style&&/text\-decoration/.test(attrs.style)&&(aNode=domUtils.findParentByTagName(elm,'a',true))){domUtils.setAttributes(aNode,attrs);domUtils.remove(elm,true);elm=aNode;}else{domUtils.mergeSibling(elm);domUtils.clearEmptySibling(elm);}//去除子节点相同的
domUtils.mergeChild(elm,attrs);current=domUtils.getNextDomNode(elm,false,filterFn);domUtils.mergeToParent(elm);if(node===end){break;}}else{current=domUtils.getNextDomNode(current,true,filterFn);}}return this.moveToBookmark(bookmark);},/**
         * 移除当前选区内指定的inline标签，但保留其中的内容
         * @method removeInlineStyle
         * @param { String } tagName 需要移除的标签名
         * @return { UE.dom.Range } 当前的range对象
         * @example
         * ```html
         * xx[x<span>xxx<em>yyy</em>zz]z</span>  => range.removeInlineStyle(["em"])  => xx[x<span>xxxyyyzz]z</span>
         * ```
         *//**
         * 移除当前选区内指定的一组inline标签，但保留其中的内容
         * @method removeInlineStyle
         * @param { Array } tagNameArr 需要移除的标签名的数组
         * @return { UE.dom.Range } 当前的range对象
         * @see UE.dom.Range:removeInlineStyle(String)
         */removeInlineStyle:function removeInlineStyle(tagNames){if(this.collapsed)return this;tagNames=utils.isArray(tagNames)?tagNames:[tagNames];this.shrinkBoundary().adjustmentBoundary();var start=this.startContainer,end=this.endContainer;while(1){if(start.nodeType==1){if(utils.indexOf(tagNames,start.tagName.toLowerCase())>-1){break;}if(start.tagName.toLowerCase()=='body'){start=null;break;}}start=start.parentNode;}while(1){if(end.nodeType==1){if(utils.indexOf(tagNames,end.tagName.toLowerCase())>-1){break;}if(end.tagName.toLowerCase()=='body'){end=null;break;}}end=end.parentNode;}var bookmark=this.createBookmark(),frag,tmpRange;if(start){tmpRange=this.cloneRange().setEndBefore(bookmark.start).setStartBefore(start);frag=tmpRange.extractContents();tmpRange.insertNode(frag);domUtils.clearEmptySibling(start,true);start.parentNode.insertBefore(bookmark.start,start);}if(end){tmpRange=this.cloneRange().setStartAfter(bookmark.end).setEndAfter(end);frag=tmpRange.extractContents();tmpRange.insertNode(frag);domUtils.clearEmptySibling(end,false,true);end.parentNode.insertBefore(bookmark.end,end.nextSibling);}var current=domUtils.getNextDomNode(bookmark.start,false,function(node){return node.nodeType==1;}),next;while(current&&current!==bookmark.end){next=domUtils.getNextDomNode(current,true,function(node){return node.nodeType==1;});if(utils.indexOf(tagNames,current.tagName.toLowerCase())>-1){domUtils.remove(current,true);}current=next;}return this.moveToBookmark(bookmark);},/**
         * 获取当前选中的自闭合的节点
         * @method  getClosedNode
         * @return { Node | NULL } 如果当前选中的是自闭合节点， 则返回该节点， 否则返回NULL
         */getClosedNode:function getClosedNode(){var node;if(!this.collapsed){var range=this.cloneRange().adjustmentBoundary().shrinkBoundary();if(selectOneNode(range)){var child=range.startContainer.childNodes[range.startOffset];if(child&&child.nodeType==1&&(dtd.$empty[child.tagName]||dtd.$nonChild[child.tagName])){node=child;}}}return node;},/**
         * 在页面上高亮range所表示的选区
         * @method select
         * @return { UE.dom.Range } 返回当前Range对象
         *///这里不区分ie9以上，trace:3824
select:browser.ie?function(noFillData,textRange){var nativeRange;if(!this.collapsed)this.shrinkBoundary();var node=this.getClosedNode();if(node&&!textRange){try{nativeRange=this.document.body.createControlRange();nativeRange.addElement(node);nativeRange.select();}catch(e){}return this;}var bookmark=this.createBookmark(),start=bookmark.start,end;nativeRange=this.document.body.createTextRange();nativeRange.moveToElementText(start);nativeRange.moveStart('character',1);if(!this.collapsed){var nativeRangeEnd=this.document.body.createTextRange();end=bookmark.end;nativeRangeEnd.moveToElementText(end);nativeRange.setEndPoint('EndToEnd',nativeRangeEnd);}else{if(!noFillData&&this.startContainer.nodeType!=3){//使用<span>|x<span>固定住光标
var tmpText=this.document.createTextNode(fillChar),tmp=this.document.createElement('span');tmp.appendChild(this.document.createTextNode(fillChar));start.parentNode.insertBefore(tmp,start);start.parentNode.insertBefore(tmpText,start);//当点b,i,u时，不能清除i上边的b
removeFillData(this.document,tmpText);fillData=tmpText;mergeSibling(tmp,'previousSibling');mergeSibling(start,'nextSibling');nativeRange.moveStart('character',-1);nativeRange.collapse(true);}}this.moveToBookmark(bookmark);tmp&&domUtils.remove(tmp);//IE在隐藏状态下不支持range操作，catch一下
try{nativeRange.select();}catch(e){}return this;}:function(notInsertFillData){function checkOffset(rng){function check(node,offset,dir){if(node.nodeType==3&&node.nodeValue.length<offset){rng[dir+'Offset']=node.nodeValue.length;}}check(rng.startContainer,rng.startOffset,'start');check(rng.endContainer,rng.endOffset,'end');}var win=domUtils.getWindow(this.document),sel=win.getSelection(),txtNode;//FF下关闭自动长高时滚动条在关闭dialog时会跳
//ff下如果不body.focus将不能定位闭合光标到编辑器内
browser.gecko?this.document.body.focus():win.focus();if(sel){sel.removeAllRanges();// trace:870 chrome/safari后边是br对于闭合得range不能定位 所以去掉了判断
// this.startContainer.nodeType != 3 &&! ((child = this.startContainer.childNodes[this.startOffset]) && child.nodeType == 1 && child.tagName == 'BR'
if(this.collapsed&&!notInsertFillData){//                    //opear如果没有节点接着，原生的不能够定位,不能在body的第一级插入空白节点
//                    if (notInsertFillData && browser.opera && !domUtils.isBody(this.startContainer) && this.startContainer.nodeType == 1) {
//                        var tmp = this.document.createTextNode('');
//                        this.insertNode(tmp).setStart(tmp, 0).collapse(true);
//                    }
//
//处理光标落在文本节点的情况
//处理以下的情况
//<b>|xxxx</b>
//<b>xxxx</b>|xxxx
//xxxx<b>|</b>
var start=this.startContainer,child=start;if(start.nodeType==1){child=start.childNodes[this.startOffset];}if(!(start.nodeType==3&&this.startOffset)&&(child?!child.previousSibling||child.previousSibling.nodeType!=3:!start.lastChild||start.lastChild.nodeType!=3)){txtNode=this.document.createTextNode(fillChar);//跟着前边走
this.insertNode(txtNode);removeFillData(this.document,txtNode);mergeSibling(txtNode,'previousSibling');mergeSibling(txtNode,'nextSibling');fillData=txtNode;this.setStart(txtNode,browser.webkit?1:0).collapse(true);}}var nativeRange=this.document.createRange();if(this.collapsed&&browser.opera&&this.startContainer.nodeType==1){var child=this.startContainer.childNodes[this.startOffset];if(!child){//往前靠拢
child=this.startContainer.lastChild;if(child&&domUtils.isBr(child)){this.setStartBefore(child).collapse(true);}}else{//向后靠拢
while(child&&domUtils.isBlockElm(child)){if(child.nodeType==1&&child.childNodes[0]){child=child.childNodes[0];}else{break;}}child&&this.setStartBefore(child).collapse(true);}}//是createAddress最后一位算的不准，现在这里进行微调
checkOffset(this);nativeRange.setStart(this.startContainer,this.startOffset);nativeRange.setEnd(this.endContainer,this.endOffset);sel.addRange(nativeRange);}return this;},/**
         * 滚动到当前range开始的位置
         * @method scrollToView
         * @param { Window } win 当前range对象所属的window对象
         * @return { UE.dom.Range } 当前Range对象
         *//**
         * 滚动到距离当前range开始位置 offset 的位置处
         * @method scrollToView
         * @param { Window } win 当前range对象所属的window对象
         * @param { Number } offset 距离range开始位置处的偏移量， 如果为正数， 则向下偏移， 反之， 则向上偏移
         * @return { UE.dom.Range } 当前Range对象
         */scrollToView:function scrollToView(win,offset){win=win?window:domUtils.getWindow(this.document);var me=this,span=me.document.createElement('span');//trace:717
span.innerHTML='&nbsp;';me.cloneRange().insertNode(span);domUtils.scrollToView(span,win,offset);domUtils.remove(span);return me;},/**
         * 判断当前选区内容是否占位符
         * @private
         * @method inFillChar
         * @return { Boolean } 如果是占位符返回true，否则返回false
         */inFillChar:function inFillChar(){var start=this.startContainer;if(this.collapsed&&start.nodeType==3&&start.nodeValue.replace(new RegExp('^'+domUtils.fillChar),'').length+1==start.nodeValue.length){return true;}return false;},/**
         * 保存
         * @method createAddress
         * @private
         * @return { Boolean } 返回开始和结束的位置
         * @example
         * ```html
         * <body>
         *     <p>
         *         aaaa
         *         <em>
         *             <!-- 选区开始 -->
         *             bbbb
         *             <!-- 选区结束 -->
         *         </em>
         *     </p>
         *
         *     <script>
         *         //output: {startAddress:[0,1,0,0],endAddress:[0,1,0,4]}
         *         console.log( range.createAddress() );
         *     </script>
         * </body>
         * ```
         */createAddress:function createAddress(ignoreEnd,ignoreTxt){var addr={},me=this;function getAddress(isStart){var node=isStart?me.startContainer:me.endContainer;var parents=domUtils.findParents(node,true,function(node){return!domUtils.isBody(node);}),addrs=[];for(var i=0,ci;ci=parents[i++];){addrs.push(domUtils.getNodeIndex(ci,ignoreTxt));}var firstIndex=0;if(ignoreTxt){if(node.nodeType==3){var tmpNode=node.previousSibling;while(tmpNode&&tmpNode.nodeType==3){firstIndex+=tmpNode.nodeValue.replace(fillCharReg,'').length;tmpNode=tmpNode.previousSibling;}firstIndex+=isStart?me.startOffset:me.endOffset;// - (fillCharReg.test(node.nodeValue) ? 1 : 0 )
}else{node=node.childNodes[isStart?me.startOffset:me.endOffset];if(node){firstIndex=domUtils.getNodeIndex(node,ignoreTxt);}else{node=isStart?me.startContainer:me.endContainer;var first=node.firstChild;while(first){if(domUtils.isFillChar(first)){first=first.nextSibling;continue;}firstIndex++;if(first.nodeType==3){while(first&&first.nodeType==3){first=first.nextSibling;}}else{first=first.nextSibling;}}}}}else{firstIndex=isStart?domUtils.isFillChar(node)?0:me.startOffset:me.endOffset;}if(firstIndex<0){firstIndex=0;}addrs.push(firstIndex);return addrs;}addr.startAddress=getAddress(true);if(!ignoreEnd){addr.endAddress=me.collapsed?[].concat(addr.startAddress):getAddress();}return addr;},/**
         * 保存
         * @method createAddress
         * @private
         * @return { Boolean } 返回开始和结束的位置
         * @example
         * ```html
         * <body>
         *     <p>
         *         aaaa
         *         <em>
         *             <!-- 选区开始 -->
         *             bbbb
         *             <!-- 选区结束 -->
         *         </em>
         *     </p>
         *
         *     <script>
         *         var range = editor.selection.getRange();
         *         range.moveToAddress({startAddress:[0,1,0,0],endAddress:[0,1,0,4]});
         *         range.select();
         *         //output: 'bbbb'
         *         console.log(editor.selection.getText());
         *     </script>
         * </body>
         * ```
         */moveToAddress:function moveToAddress(addr,ignoreEnd){var me=this;function getNode(address,isStart){var tmpNode=me.document.body,parentNode,offset;for(var i=0,ci,l=address.length;i<l;i++){ci=address[i];parentNode=tmpNode;tmpNode=tmpNode.childNodes[ci];if(!tmpNode){offset=ci;break;}}if(isStart){if(tmpNode){me.setStartBefore(tmpNode);}else{me.setStart(parentNode,offset);}}else{if(tmpNode){me.setEndBefore(tmpNode);}else{me.setEnd(parentNode,offset);}}}getNode(addr.startAddress,true);!ignoreEnd&&addr.endAddress&&getNode(addr.endAddress);return me;},/**
         * 判断给定的Range对象是否和当前Range对象表示的是同一个选区
         * @method equals
         * @param { UE.dom.Range } 需要判断的Range对象
         * @return { Boolean } 如果给定的Range对象与当前Range对象表示的是同一个选区， 则返回true， 否则返回false
         */equals:function equals(rng){for(var p in this){if(this.hasOwnProperty(p)){if(this[p]!==rng[p])return false;}}return true;},/**
         * 遍历range内的节点。每当遍历一个节点时， 都会执行参数项 doFn 指定的函数， 该函数的接受当前遍历的节点
         * 作为其参数。
         * @method traversal
         * @param { Function }  doFn 对每个遍历的节点要执行的方法， 该方法接受当前遍历的节点作为其参数
         * @return { UE.dom.Range } 当前range对象
         * @example
         * ```html
         *
         * <body>
         *
         *     <!-- 选区开始 -->
         *     <span></span>
         *     <a></a>
         *     <!-- 选区结束 -->
         * </body>
         *
         * <script>
         *
         *     //output: <span></span><a></a>
         *     console.log( range.cloneContents() );
         *
         *     range.traversal( function ( node ) {
         *
         *         if ( node.nodeType === 1 ) {
         *             node.className = "test";
         *         }
         *
         *     } );
         *
         *     //output: <span class="test"></span><a class="test"></a>
         *     console.log( range.cloneContents() );
         *
         * </script>
         * ```
         *//**
         * 遍历range内的节点。
         * 每当遍历一个节点时， 都会执行参数项 doFn 指定的函数， 该函数的接受当前遍历的节点
         * 作为其参数。
         * 可以通过参数项 filterFn 来指定一个过滤器， 只有符合该过滤器过滤规则的节点才会触
         * 发doFn函数的执行
         * @method traversal
         * @param { Function } doFn 对每个遍历的节点要执行的方法， 该方法接受当前遍历的节点作为其参数
         * @param { Function } filterFn 过滤器， 该函数接受当前遍历的节点作为参数， 如果该节点满足过滤
         *                      规则， 请返回true， 该节点会触发doFn， 否则， 请返回false， 则该节点不
         *                      会触发doFn。
         * @return { UE.dom.Range } 当前range对象
         * @see UE.dom.Range:traversal(Function)
         * @example
         * ```html
         *
         * <body>
         *
         *     <!-- 选区开始 -->
         *     <span></span>
         *     <a></a>
         *     <!-- 选区结束 -->
         * </body>
         *
         * <script>
         *
         *     //output: <span></span><a></a>
         *     console.log( range.cloneContents() );
         *
         *     range.traversal( function ( node ) {
         *
         *         node.className = "test";
         *
         *     }, function ( node ) {
         *          return node.nodeType === 1;
         *     } );
         *
         *     //output: <span class="test"></span><a class="test"></a>
         *     console.log( range.cloneContents() );
         *
         * </script>
         * ```
         */traversal:function traversal(doFn,filterFn){if(this.collapsed)return this;var bookmark=this.createBookmark(),end=bookmark.end,current=domUtils.getNextDomNode(bookmark.start,false,filterFn);while(current&&current!==end&&domUtils.getPosition(current,end)&domUtils.POSITION_PRECEDING){var tmpNode=domUtils.getNextDomNode(current,false,filterFn);doFn(current);current=tmpNode;}return this.moveToBookmark(bookmark);}};})();// core/Selection.js
/**
 * 选集
 * @file
 * @module UE.dom
 * @class Selection
 * @since 1.2.6.1
 *//**
 * 选区集合
 * @unfile
 * @module UE.dom
 * @class Selection
 */(function(){function getBoundaryInformation(range,start){var getIndex=domUtils.getNodeIndex;range=range.duplicate();range.collapse(start);var parent=range.parentElement();//如果节点里没有子节点，直接退出
if(!parent.hasChildNodes()){return{container:parent,offset:0};}var siblings=parent.children,child,testRange=range.duplicate(),startIndex=0,endIndex=siblings.length-1,index=-1,distance;while(startIndex<=endIndex){index=Math.floor((startIndex+endIndex)/2);child=siblings[index];testRange.moveToElementText(child);var position=testRange.compareEndPoints('StartToStart',range);if(position>0){endIndex=index-1;}else if(position<0){startIndex=index+1;}else{//trace:1043
return{container:parent,offset:getIndex(child)};}}if(index==-1){testRange.moveToElementText(parent);testRange.setEndPoint('StartToStart',range);distance=testRange.text.replace(/(\r\n|\r)/g,'\n').length;siblings=parent.childNodes;if(!distance){child=siblings[siblings.length-1];return{container:child,offset:child.nodeValue.length};}var i=siblings.length;while(distance>0){distance-=siblings[--i].nodeValue.length;}return{container:siblings[i],offset:-distance};}testRange.collapse(position>0);testRange.setEndPoint(position>0?'StartToStart':'EndToStart',range);distance=testRange.text.replace(/(\r\n|\r)/g,'\n').length;if(!distance){return dtd.$empty[child.tagName]||dtd.$nonChild[child.tagName]?{container:parent,offset:getIndex(child)+(position>0?0:1)}:{container:child,offset:position>0?0:child.childNodes.length};}while(distance>0){try{var pre=child;child=child[position>0?'previousSibling':'nextSibling'];distance-=child.nodeValue.length;}catch(e){return{container:parent,offset:getIndex(pre)};}}return{container:child,offset:position>0?-distance:child.nodeValue.length+distance};}/**
     * 将ieRange转换为Range对象
     * @param {Range}   ieRange    ieRange对象
     * @param {Range}   range      Range对象
     * @return  {Range}  range       返回转换后的Range对象
     */function transformIERangeToRange(ieRange,range){if(ieRange.item){range.selectNode(ieRange.item(0));}else{var bi=getBoundaryInformation(ieRange,true);range.setStart(bi.container,bi.offset);if(ieRange.compareEndPoints('StartToEnd',ieRange)!=0){bi=getBoundaryInformation(ieRange,false);range.setEnd(bi.container,bi.offset);}}return range;}/**
     * 获得ieRange
     * @param {Selection} sel    Selection对象
     * @return {ieRange}    得到ieRange
     */function _getIERange(sel){var ieRange;//ie下有可能报错
try{ieRange=sel.getNative().createRange();}catch(e){return null;}var el=ieRange.item?ieRange.item(0):ieRange.parentElement();if((el.ownerDocument||el)===sel.document){return ieRange;}return null;}var Selection=dom.Selection=function(doc){var me=this,iframe;me.document=doc;if(browser.ie9below){iframe=domUtils.getWindow(doc).frameElement;domUtils.on(iframe,'beforedeactivate',function(){me._bakIERange=me.getIERange();});domUtils.on(iframe,'activate',function(){try{if(!_getIERange(me)&&me._bakIERange){me._bakIERange.select();}}catch(ex){}me._bakIERange=null;});}iframe=doc=null;};Selection.prototype={rangeInBody:function rangeInBody(rng,txtRange){var node=browser.ie9below||txtRange?rng.item?rng.item():rng.parentElement():rng.startContainer;return node===this.document.body||domUtils.inDoc(node,this.document);},/**
         * 获取原生seleciton对象
         * @method getNative
         * @return { Object } 获得selection对象
         * @example
         * ```javascript
         * editor.selection.getNative();
         * ```
         */getNative:function getNative(){var doc=this.document;try{return!doc?null:browser.ie9below?doc.selection:domUtils.getWindow(doc).getSelection();}catch(e){return null;}},/**
         * 获得ieRange
         * @method getIERange
         * @return { Object } 返回ie原生的Range
         * @example
         * ```javascript
         * editor.selection.getIERange();
         * ```
         */getIERange:function getIERange(){var ieRange=_getIERange(this);if(!ieRange){if(this._bakIERange){return this._bakIERange;}}return ieRange;},/**
         * 缓存当前选区的range和选区的开始节点
         * @method cache
         */cache:function cache(){this.clear();this._cachedRange=this.getRange();this._cachedStartElement=this.getStart();this._cachedStartElementPath=this.getStartElementPath();},/**
         * 获取选区开始位置的父节点到body
         * @method getStartElementPath
         * @return { Array } 返回父节点集合
         * @example
         * ```javascript
         * editor.selection.getStartElementPath();
         * ```
         */getStartElementPath:function getStartElementPath(){if(this._cachedStartElementPath){return this._cachedStartElementPath;}var start=this.getStart();if(start){return domUtils.findParents(start,true,null,true);}return[];},/**
         * 清空缓存
         * @method clear
         */clear:function clear(){this._cachedStartElementPath=this._cachedRange=this._cachedStartElement=null;},/**
         * 编辑器是否得到了选区
         * @method isFocus
         */isFocus:function isFocus(){try{if(browser.ie9below){var nativeRange=_getIERange(this);return!!(nativeRange&&this.rangeInBody(nativeRange));}else{return!!this.getNative().rangeCount;}}catch(e){return false;}},/**
         * 获取选区对应的Range
         * @method getRange
         * @return { Object } 得到Range对象
         * @example
         * ```javascript
         * editor.selection.getRange();
         * ```
         */getRange:function getRange(){var me=this;function optimze(range){var child=me.document.body.firstChild,collapsed=range.collapsed;while(child&&child.firstChild){range.setStart(child,0);child=child.firstChild;}if(!range.startContainer){range.setStart(me.document.body,0);}if(collapsed){range.collapse(true);}}if(me._cachedRange!=null){return this._cachedRange;}var range=new baidu.editor.dom.Range(me.document);if(browser.ie9below){var nativeRange=me.getIERange();if(nativeRange){//备份的_bakIERange可能已经实效了，dom树发生了变化比如从源码模式切回来，所以try一下，实效就放到body开始位置
try{transformIERangeToRange(nativeRange,range);}catch(e){optimze(range);}}else{optimze(range);}}else{var sel=me.getNative();if(sel&&sel.rangeCount){var firstRange=sel.getRangeAt(0);var lastRange=sel.getRangeAt(sel.rangeCount-1);range.setStart(firstRange.startContainer,firstRange.startOffset).setEnd(lastRange.endContainer,lastRange.endOffset);if(range.collapsed&&domUtils.isBody(range.startContainer)&&!range.startOffset){optimze(range);}}else{//trace:1734 有可能已经不在dom树上了，标识的节点
if(this._bakRange&&domUtils.inDoc(this._bakRange.startContainer,this.document)){return this._bakRange;}optimze(range);}}return this._bakRange=range;},/**
         * 获取开始元素，用于状态反射
         * @method getStart
         * @return { Element } 获得开始元素
         * @example
         * ```javascript
         * editor.selection.getStart();
         * ```
         */getStart:function getStart(){if(this._cachedStartElement){return this._cachedStartElement;}var range=browser.ie9below?this.getIERange():this.getRange(),tmpRange,start,tmp,parent;if(browser.ie9below){if(!range){//todo 给第一个值可能会有问题
return this.document.body.firstChild;}//control元素
if(range.item){return range.item(0);}tmpRange=range.duplicate();//修正ie下<b>x</b>[xx] 闭合后 <b>x|</b>xx
tmpRange.text.length>0&&tmpRange.moveStart('character',1);tmpRange.collapse(1);start=tmpRange.parentElement();parent=tmp=range.parentElement();while(tmp=tmp.parentNode){if(tmp==start){start=parent;break;}}}else{range.shrinkBoundary();start=range.startContainer;if(start.nodeType==1&&start.hasChildNodes()){start=start.childNodes[Math.min(start.childNodes.length-1,range.startOffset)];}if(start.nodeType==3){return start.parentNode;}}return start;},/**
         * 得到选区中的文本
         * @method getText
         * @return { String } 选区中包含的文本
         * @example
         * ```javascript
         * editor.selection.getText();
         * ```
         */getText:function getText(){var nativeSel,nativeRange;if(this.isFocus()&&(nativeSel=this.getNative())){nativeRange=browser.ie9below?nativeSel.createRange():nativeSel.getRangeAt(0);return browser.ie9below?nativeRange.text:nativeRange.toString();}return'';},/**
         * 清除选区
         * @method clearRange
         * @example
         * ```javascript
         * editor.selection.clearRange();
         * ```
         */clearRange:function clearRange(){this.getNative()[browser.ie9below?'empty':'removeAllRanges']();}};})();// core/Editor.js
/**
 * 编辑器主类，包含编辑器提供的大部分公用接口
 * @file
 * @module UE
 * @class Editor
 * @since 1.2.6.1
 *//**
 * UEditor公用空间，UEditor所有的功能都挂载在该空间下
 * @unfile
 * @module UE
 *//**
 * UEditor的核心类，为用户提供与编辑器交互的接口。
 * @unfile
 * @module UE
 * @class Editor
 */(function(){var uid=0,_selectionChangeTimer;/**
     * 获取编辑器的html内容，赋值到编辑器所在表单的textarea文本域里面
     * @private
     * @method setValue
     * @param { UE.Editor } editor 编辑器事例
     */function setValue(form,editor){var textarea;if(editor.textarea){if(utils.isString(editor.textarea)){for(var i=0,ti,tis=domUtils.getElementsByTagName(form,'textarea');ti=tis[i++];){if(ti.id=='ueditor_textarea_'+editor.options.textarea){textarea=ti;break;}}}else{textarea=editor.textarea;}}if(!textarea){form.appendChild(textarea=domUtils.createElement(document,'textarea',{'name':editor.options.textarea,'id':'ueditor_textarea_'+editor.options.textarea,'style':"display:none"}));//不要产生多个textarea
editor.textarea=textarea;}!textarea.getAttribute('name')&&textarea.setAttribute('name',editor.options.textarea);textarea.value=editor.hasContents()?editor.options.allHtmlEnabled?editor.getAllHtml():editor.getContent(null,null,true):'';}function loadPlugins(me){//初始化插件
for(var pi in UE.plugins){UE.plugins[pi].call(me);}}function checkCurLang(I18N){for(var lang in I18N){return lang;}}function langReadied(me){me.langIsReady=true;me.fireEvent("langReady");}/**
     * 编辑器准备就绪后会触发该事件
     * @module UE
     * @class Editor
     * @event ready
     * @remind render方法执行完成之后,会触发该事件
     * @remind
     * @example
     * ```javascript
     * editor.addListener( 'ready', function( editor ) {
     *     editor.execCommand( 'focus' ); //编辑器家在完成后，让编辑器拿到焦点
     * } );
     * ```
     *//**
     * 执行destroy方法,会触发该事件
     * @module UE
     * @class Editor
     * @event destroy
     * @see UE.Editor:destroy()
     *//**
     * 执行reset方法,会触发该事件
     * @module UE
     * @class Editor
     * @event reset
     * @see UE.Editor:reset()
     *//**
     * 执行focus方法,会触发该事件
     * @module UE
     * @class Editor
     * @event focus
     * @see UE.Editor:focus(Boolean)
     *//**
     * 语言加载完成会触发该事件
     * @module UE
     * @class Editor
     * @event langReady
     *//**
     * 运行命令之后会触发该命令
     * @module UE
     * @class Editor
     * @event beforeExecCommand
     *//**
     * 运行命令之后会触发该命令
     * @module UE
     * @class Editor
     * @event afterExecCommand
     *//**
     * 运行命令之前会触发该命令
     * @module UE
     * @class Editor
     * @event firstBeforeExecCommand
     *//**
     * 在getContent方法执行之前会触发该事件
     * @module UE
     * @class Editor
     * @event beforeGetContent
     * @see UE.Editor:getContent()
     *//**
     * 在getContent方法执行之后会触发该事件
     * @module UE
     * @class Editor
     * @event afterGetContent
     * @see UE.Editor:getContent()
     *//**
     * 在getAllHtml方法执行时会触发该事件
     * @module UE
     * @class Editor
     * @event getAllHtml
     * @see UE.Editor:getAllHtml()
     *//**
     * 在setContent方法执行之前会触发该事件
     * @module UE
     * @class Editor
     * @event beforeSetContent
     * @see UE.Editor:setContent(String)
     *//**
     * 在setContent方法执行之后会触发该事件
     * @module UE
     * @class Editor
     * @event afterSetContent
     * @see UE.Editor:setContent(String)
     *//**
     * 每当编辑器内部选区发生改变时，将触发该事件
     * @event selectionchange
     * @warning 该事件的触发非常频繁，不建议在该事件的处理过程中做重量级的处理
     * @example
     * ```javascript
     * editor.addListener( 'selectionchange', function( editor ) {
     *     console.log('选区发生改变');
     * }
     *//**
     * 在所有selectionchange的监听函数执行之前，会触发该事件
     * @module UE
     * @class Editor
     * @event beforeSelectionChange
     * @see UE.Editor:selectionchange
     *//**
     * 在所有selectionchange的监听函数执行完之后，会触发该事件
     * @module UE
     * @class Editor
     * @event afterSelectionChange
     * @see UE.Editor:selectionchange
     *//**
     * 编辑器内容发生改变时会触发该事件
     * @module UE
     * @class Editor
     * @event contentChange
     *//**
     * 以默认参数构建一个编辑器实例
     * @constructor
     * @remind 通过 改构造方法实例化的编辑器,不带ui层.需要render到一个容器,编辑器实例才能正常渲染到页面
     * @example
     * ```javascript
     * var editor = new UE.Editor();
     * editor.execCommand('blod');
     * ```
     * @see UE.Config
     *//**
     * 以给定的参数集合创建一个编辑器实例，对于未指定的参数，将应用默认参数。
     * @constructor
     * @remind 通过 改构造方法实例化的编辑器,不带ui层.需要render到一个容器,编辑器实例才能正常渲染到页面
     * @param { Object } setting 创建编辑器的参数
     * @example
     * ```javascript
     * var editor = new UE.Editor();
     * editor.execCommand('blod');
     * ```
     * @see UE.Config
     */var Editor=UE.Editor=function(options){var me=this;me.uid=uid++;EventBase.call(me);me.commands={};me.options=utils.extend(utils.clone(options||{}),UEDITOR_CONFIG,true);me.shortcutkeys={};me.inputRules=[];me.outputRules=[];//设置默认的常用属性
me.setOpt(Editor.defaultOptions(me));/* 尝试异步加载后台配置 */me.loadServerConfig();if(!utils.isEmptyObject(UE.I18N)){//修改默认的语言类型
me.options.lang=checkCurLang(UE.I18N);UE.plugin.load(me);langReadied(me);}else{utils.loadFile(document,{src:me.options.langPath+me.options.lang+"/"+me.options.lang+".js",tag:"script",type:"text/javascript",defer:"defer"},function(){UE.plugin.load(me);langReadied(me);});}UE.instants['ueditorInstant'+me.uid]=me;};Editor.prototype={registerCommand:function registerCommand(name,obj){this.commands[name]=obj;},/**
         * 编辑器对外提供的监听ready事件的接口， 通过调用该方法，达到的效果与监听ready事件是一致的
         * @method ready
         * @param { Function } fn 编辑器ready之后所执行的回调, 如果在注册事件之前编辑器已经ready，将会
         * 立即触发该回调。
         * @remind 需要等待编辑器加载完成后才能执行的代码,可以使用该方法传入
         * @example
         * ```javascript
         * editor.ready( function( editor ) {
         *     editor.setContent('初始化完毕');
         * } );
         * ```
         * @see UE.Editor.event:ready
         */ready:function ready(fn){var me=this;if(fn){me.isReady?fn.apply(me):me.addListener('ready',fn);}},/**
         * 该方法是提供给插件里面使用，设置配置项默认值
         * @method setOpt
         * @warning 三处设置配置项的优先级: 实例化时传入参数 > setOpt()设置 > config文件里设置
         * @warning 该方法仅供编辑器插件内部和编辑器初始化时调用，其他地方不能调用。
         * @param { String } key 编辑器的可接受的选项名称
         * @param { * } val  该选项可接受的值
         * @example
         * ```javascript
         * editor.setOpt( 'initContent', '欢迎使用编辑器' );
         * ```
         *//**
         * 该方法是提供给插件里面使用，以{key:value}集合的方式设置插件内用到的配置项默认值
         * @method setOpt
         * @warning 三处设置配置项的优先级: 实例化时传入参数 > setOpt()设置 > config文件里设置
         * @warning 该方法仅供编辑器插件内部和编辑器初始化时调用，其他地方不能调用。
         * @param { Object } options 将要设置的选项的键值对对象
         * @example
         * ```javascript
         * editor.setOpt( {
         *     'initContent': '欢迎使用编辑器'
         * } );
         * ```
         */setOpt:function setOpt(key,val){var obj={};if(utils.isString(key)){obj[key]=val;}else{obj=key;}utils.extend(this.options,obj,true);},getOpt:function getOpt(key){return this.options[key];},/**
         * 销毁编辑器实例，使用textarea代替
         * @method destroy
         * @example
         * ```javascript
         * editor.destroy();
         * ```
         */destroy:function destroy(){var me=this;me.fireEvent('destroy');var container=me.container.parentNode;var textarea=me.textarea;if(!textarea){textarea=document.createElement('textarea');container.parentNode.insertBefore(textarea,container);}else{textarea.style.display='';}textarea.style.width=me.iframe.offsetWidth+'px';textarea.style.height=me.iframe.offsetHeight+'px';textarea.value=me.getContent();textarea.id=me.key;container.innerHTML='';domUtils.remove(container);var key=me.key;//trace:2004
for(var p in me){if(me.hasOwnProperty(p)){delete this[p];}}UE.delEditor(key);},/**
         * 渲染编辑器的DOM到指定容器
         * @method render
         * @param { String } containerId 指定一个容器ID
         * @remind 执行该方法,会触发ready事件
         * @warning 必须且只能调用一次
         *//**
         * 渲染编辑器的DOM到指定容器
         * @method render
         * @param { Element } containerDom 直接指定容器对象
         * @remind 执行该方法,会触发ready事件
         * @warning 必须且只能调用一次
         */render:function render(container){var me=this,options=me.options,getStyleValue=function getStyleValue(attr){return parseInt(domUtils.getComputedStyle(container,attr));};if(utils.isString(container)){container=document.getElementById(container);}if(container){if(options.initialFrameWidth){options.minFrameWidth=options.initialFrameWidth;}else{options.minFrameWidth=options.initialFrameWidth=container.offsetWidth;}if(options.initialFrameHeight){options.minFrameHeight=options.initialFrameHeight;}else{options.initialFrameHeight=options.minFrameHeight=container.offsetHeight;}container.style.width=/%$/.test(options.initialFrameWidth)?'100%':options.initialFrameWidth-getStyleValue("padding-left")-getStyleValue("padding-right")+'px';container.style.height=/%$/.test(options.initialFrameHeight)?'100%':options.initialFrameHeight-getStyleValue("padding-top")-getStyleValue("padding-bottom")+'px';container.style.zIndex=options.zIndex;var html=(ie&&browser.version<9?'':'<!DOCTYPE html>')+'<html xmlns=\'http://www.w3.org/1999/xhtml\' class=\'view\' ><head>'+'<style type=\'text/css\'>'+//设置四周的留边
'.view{padding:0;word-wrap:break-word;cursor:text;height:90%;}\n'+//设置默认字体和字号
//font-family不能呢随便改，在safari下fillchar会有解析问题
'body{margin:8px;font-family:sans-serif;font-size:16px;}'+//设置段落间距
'p{margin:5px 0;}</style>'+(options.iframeCssUrl?'<link rel=\'stylesheet\' type=\'text/css\' href=\''+utils.unhtml(options.iframeCssUrl)+'\'/>':'')+(options.initialStyle?'<style>'+options.initialStyle+'</style>':'')+'</head><body class=\'view\' ></body>'+'<script type=\'text/javascript\' '+(ie?'defer=\'defer\'':'')+' id=\'_initialScript\'>'+'setTimeout(function(){editor = window.parent.UE.instants[\'ueditorInstant'+me.uid+'\'];editor._setup(document);},0);'+'var _tmpScript = document.getElementById(\'_initialScript\');_tmpScript.parentNode.removeChild(_tmpScript);</script></html>';container.appendChild(domUtils.createElement(document,'iframe',{id:'ueditor_'+me.uid,width:"100%",height:"100%",frameborder:"0",//先注释掉了，加的原因忘记了，但开启会直接导致全屏模式下内容多时不会出现滚动条
//                    scrolling :'no',
src:'javascript:void(function(){document.open();'+(options.customDomain&&document.domain!=location.hostname?'document.domain="'+document.domain+'";':'')+'document.write("'+html+'");document.close();}())'}));container.style.overflow='hidden';//解决如果是给定的百分比，会导致高度算不对的问题
setTimeout(function(){if(/%$/.test(options.initialFrameWidth)){options.minFrameWidth=options.initialFrameWidth=container.offsetWidth;//如果这里给定宽度，会导致ie在拖动窗口大小时，编辑区域不随着变化
//                        container.style.width = options.initialFrameWidth + 'px';
}if(/%$/.test(options.initialFrameHeight)){options.minFrameHeight=options.initialFrameHeight=container.offsetHeight;container.style.height=options.initialFrameHeight+'px';}});}},/**
         * 编辑器初始化
         * @method _setup
         * @private
         * @param { Element } doc 编辑器Iframe中的文档对象
         */_setup:function _setup(doc){var me=this,options=me.options;if(ie){doc.body.disabled=true;doc.body.contentEditable=true;doc.body.disabled=false;}else{doc.body.contentEditable=true;}doc.body.spellcheck=false;me.document=doc;me.window=doc.defaultView||doc.parentWindow;me.iframe=me.window.frameElement;me.body=doc.body;me.selection=new dom.Selection(doc);//gecko初始化就能得到range,无法判断isFocus了
var geckoSel;if(browser.gecko&&(geckoSel=this.selection.getNative())){geckoSel.removeAllRanges();}this._initEvents();//为form提交提供一个隐藏的textarea
for(var form=this.iframe.parentNode;!domUtils.isBody(form);form=form.parentNode){if(form.tagName=='FORM'){me.form=form;if(me.options.autoSyncData){domUtils.on(me.window,'blur',function(){setValue(form,me);});}else{domUtils.on(form,'submit',function(){setValue(this,me);});}break;}}if(options.initialContent){if(options.autoClearinitialContent){var oldExecCommand=me.execCommand;me.execCommand=function(){me.fireEvent('firstBeforeExecCommand');return oldExecCommand.apply(me,arguments);};this._setDefaultContent(options.initialContent);}else this.setContent(options.initialContent,false,true);}//编辑器不能为空内容
if(domUtils.isEmptyNode(me.body)){me.body.innerHTML='<p>'+(browser.ie?'':'<br/>')+'</p>';}//如果要求focus, 就把光标定位到内容开始
if(options.focus){setTimeout(function(){me.focus(me.options.focusInEnd);//如果自动清除开着，就不需要做selectionchange;
!me.options.autoClearinitialContent&&me._selectionChange();},0);}if(!me.container){me.container=this.iframe.parentNode;}if(options.fullscreen&&me.ui){me.ui.setFullScreen(true);}try{me.document.execCommand('2D-position',false,false);}catch(e){}try{me.document.execCommand('enableInlineTableEditing',false,false);}catch(e){}try{me.document.execCommand('enableObjectResizing',false,false);}catch(e){}//挂接快捷键
me._bindshortcutKeys();me.isReady=1;me.fireEvent('ready');options.onready&&options.onready.call(me);if(!browser.ie9below){domUtils.on(me.window,['blur','focus'],function(e){//chrome下会出现alt+tab切换时，导致选区位置不对
if(e.type=='blur'){me._bakRange=me.selection.getRange();try{me._bakNativeRange=me.selection.getNative().getRangeAt(0);me.selection.getNative().removeAllRanges();}catch(e){me._bakNativeRange=null;}}else{try{me._bakRange&&me._bakRange.select();}catch(e){}}});}//trace:1518 ff3.6body不够寛，会导致点击空白处无法获得焦点
if(browser.gecko&&browser.version<=10902){//修复ff3.6初始化进来，不能点击获得焦点
me.body.contentEditable=false;setTimeout(function(){me.body.contentEditable=true;},100);setInterval(function(){me.body.style.height=me.iframe.offsetHeight-20+'px';},100);}!options.isShow&&me.setHide();options.readonly&&me.setDisabled();},/**
         * 同步数据到编辑器所在的form
         * 从编辑器的容器节点向上查找form元素，若找到，就同步编辑内容到找到的form里，为提交数据做准备，主要用于是手动提交的情况
         * 后台取得数据的键值，使用你容器上的name属性，如果没有就使用参数里的textarea项
         * @method sync
         * @example
         * ```javascript
         * editor.sync();
         * form.sumbit(); //form变量已经指向了form元素
         * ```
         *//**
         * 根据传入的formId，在页面上查找要同步数据的表单，若找到，就同步编辑内容到找到的form里，为提交数据做准备
         * 后台取得数据的键值，该键值默认使用给定的编辑器容器的name属性，如果没有name属性则使用参数项里给定的“textarea”项
         * @method sync
         * @param { String } formID 指定一个要同步数据的form的id,编辑器的数据会同步到你指定form下
         */sync:function sync(formId){var me=this,form=formId?document.getElementById(formId):domUtils.findParent(me.iframe.parentNode,function(node){return node.tagName=='FORM';},true);form&&setValue(form,me);},/**
         * 设置编辑器高度
         * @method setHeight
         * @remind 当配置项autoHeightEnabled为真时,该方法无效
         * @param { Number } number 设置的高度值，纯数值，不带单位
         * @example
         * ```javascript
         * editor.setHeight(number);
         * ```
         */setHeight:function setHeight(height,notSetHeight){if(height!==parseInt(this.iframe.parentNode.style.height)){this.iframe.parentNode.style.height=height+'px';}!notSetHeight&&(this.options.minFrameHeight=this.options.initialFrameHeight=height);this.body.style.height=height+'px';!notSetHeight&&this.trigger('setHeight');},/**
         * 为编辑器的编辑命令提供快捷键
         * 这个接口是为插件扩展提供的接口,主要是为新添加的插件，如果需要添加快捷键，所提供的接口
         * @method addshortcutkey
         * @param { Object } keyset 命令名和快捷键键值对对象，多个按钮的快捷键用“＋”分隔
         * @example
         * ```javascript
         * editor.addshortcutkey({
         *     "Bold" : "ctrl+66",//^B
         *     "Italic" : "ctrl+73", //^I
         * });
         * ```
         *//**
         * 这个接口是为插件扩展提供的接口,主要是为新添加的插件，如果需要添加快捷键，所提供的接口
         * @method addshortcutkey
         * @param { String } cmd 触发快捷键时，响应的命令
         * @param { String } keys 快捷键的字符串，多个按钮用“＋”分隔
         * @example
         * ```javascript
         * editor.addshortcutkey("Underline", "ctrl+85"); //^U
         * ```
         */addshortcutkey:function addshortcutkey(cmd,keys){var obj={};if(keys){obj[cmd]=keys;}else{obj=cmd;}utils.extend(this.shortcutkeys,obj);},/**
         * 对编辑器设置keydown事件监听，绑定快捷键和命令，当快捷键组合触发成功，会响应对应的命令
         * @method _bindshortcutKeys
         * @private
         */_bindshortcutKeys:function _bindshortcutKeys(){var me=this,shortcutkeys=this.shortcutkeys;me.addListener('keydown',function(type,e){var keyCode=e.keyCode||e.which;for(var i in shortcutkeys){var tmp=shortcutkeys[i].split(',');for(var t=0,ti;ti=tmp[t++];){ti=ti.split(':');var key=ti[0],param=ti[1];if(/^(ctrl)(\+shift)?\+(\d+)$/.test(key.toLowerCase())||/^(\d+)$/.test(key)){if((RegExp.$1=='ctrl'?e.ctrlKey||e.metaKey:0)&&(RegExp.$2!=""?e[RegExp.$2.slice(1)+"Key"]:1)&&keyCode==RegExp.$3||keyCode==RegExp.$1){if(me.queryCommandState(i,param)!=-1)me.execCommand(i,param);domUtils.preventDefault(e);}}}}});},/**
         * 获取编辑器的内容
         * @method getContent
         * @warning 该方法获取到的是经过编辑器内置的过滤规则进行过滤后得到的内容
         * @return { String } 编辑器的内容字符串, 如果编辑器的内容为空，或者是空的标签内容（如:”&lt;p&gt;&lt;br/&gt;&lt;/p&gt;“）， 则返回空字符串
         * @example
         * ```javascript
         * //编辑器html内容:<p>1<strong>2<em>34</em>5</strong>6</p>
         * var content = editor.getContent(); //返回值:<p>1<strong>2<em>34</em>5</strong>6</p>
         * ```
         *//**
         * 获取编辑器的内容。 可以通过参数定义编辑器内置的判空规则
         * @method getContent
         * @param { Function } fn 自定的判空规则， 要求该方法返回一个boolean类型的值，
         *                      代表当前编辑器的内容是否空，
         *                      如果返回true， 则该方法将直接返回空字符串；如果返回false，则编辑器将返回
         *                      经过内置过滤规则处理后的内容。
         * @remind 该方法在处理包含有初始化内容的时候能起到很好的作用。
         * @warning 该方法获取到的是经过编辑器内置的过滤规则进行过滤后得到的内容
         * @return { String } 编辑器的内容字符串
         * @example
         * ```javascript
         * // editor 是一个编辑器的实例
         * var content = editor.getContent( function ( editor ) {
         *      return editor.body.innerHTML === '欢迎使用UEditor'; //返回空字符串
         * } );
         * ```
         */getContent:function getContent(cmd,fn,notSetCursor,ignoreBlank,formatter){var me=this;if(cmd&&utils.isFunction(cmd)){fn=cmd;cmd='';}if(fn?!fn():!this.hasContents()){return'';}me.fireEvent('beforegetcontent');var root=UE.htmlparser(me.body.innerHTML,ignoreBlank);me.filterOutputRule(root);me.fireEvent('aftergetcontent',cmd,root);return root.toHtml(formatter);},/**
         * 取得完整的html代码，可以直接显示成完整的html文档
         * @method getAllHtml
         * @return { String } 编辑器的内容html文档字符串
         * @eaxmple
         * ```javascript
         * editor.getAllHtml(); //返回格式大致是: <html><head>...</head><body>...</body></html>
         * ```
         */getAllHtml:function getAllHtml(){var me=this,headHtml=[],html='';me.fireEvent('getAllHtml',headHtml);if(browser.ie&&browser.version>8){var headHtmlForIE9='';utils.each(me.document.styleSheets,function(si){headHtmlForIE9+=si.href?'<link rel="stylesheet" type="text/css" href="'+si.href+'" />':'<style>'+si.cssText+'</style>';});utils.each(me.document.getElementsByTagName('script'),function(si){headHtmlForIE9+=si.outerHTML;});}return'<html><head>'+(me.options.charset?'<meta http-equiv="Content-Type" content="text/html; charset='+me.options.charset+'"/>':'')+(headHtmlForIE9||me.document.getElementsByTagName('head')[0].innerHTML)+headHtml.join('\n')+'</head>'+'<body '+(ie&&browser.version<9?'class="view"':'')+'>'+me.getContent(null,null,true)+'</body></html>';},/**
         * 得到编辑器的纯文本内容，但会保留段落格式
         * @method getPlainTxt
         * @return { String } 编辑器带段落格式的纯文本内容字符串
         * @example
         * ```javascript
         * //编辑器html内容:<p><strong>1</strong></p><p><strong>2</strong></p>
         * console.log(editor.getPlainTxt()); //输出:"1\n2\n
         * ```
         */getPlainTxt:function getPlainTxt(){var reg=new RegExp(domUtils.fillChar,'g'),html=this.body.innerHTML.replace(/[\n\r]/g,'');//ie要先去了\n在处理
html=html.replace(/<(p|div)[^>]*>(<br\/?>|&nbsp;)<\/\1>/gi,'\n').replace(/<br\/?>/gi,'\n').replace(/<[^>/]+>/g,'').replace(/(\n)?<\/([^>]+)>/g,function(a,b,c){return dtd.$block[c]?'\n':b?b:'';});//取出来的空格会有c2a0会变成乱码，处理这种情况\u00a0
return html.replace(reg,'').replace(/\u00a0/g,' ').replace(/&nbsp;/g,' ');},/**
         * 获取编辑器中的纯文本内容,没有段落格式
         * @method getContentTxt
         * @return { String } 编辑器不带段落格式的纯文本内容字符串
         * @example
         * ```javascript
         * //编辑器html内容:<p><strong>1</strong></p><p><strong>2</strong></p>
         * console.log(editor.getPlainTxt()); //输出:"12
         * ```
         */getContentTxt:function getContentTxt(){var reg=new RegExp(domUtils.fillChar,'g');//取出来的空格会有c2a0会变成乱码，处理这种情况\u00a0
return this.body[browser.ie?'innerText':'textContent'].replace(reg,'').replace(/\u00a0/g,' ');},/**
         * 设置编辑器的内容，可修改编辑器当前的html内容
         * @method setContent
         * @warning 通过该方法插入的内容，是经过编辑器内置的过滤规则进行过滤后得到的内容
         * @warning 该方法会触发selectionchange事件
         * @param { String } html 要插入的html内容
         * @example
         * ```javascript
         * editor.getContent('<p>test</p>');
         * ```
         *//**
         * 设置编辑器的内容，可修改编辑器当前的html内容
         * @method setContent
         * @warning 通过该方法插入的内容，是经过编辑器内置的过滤规则进行过滤后得到的内容
         * @warning 该方法会触发selectionchange事件
         * @param { String } html 要插入的html内容
         * @param { Boolean } isAppendTo 若传入true，不清空原来的内容，在最后插入内容，否则，清空内容再插入
         * @example
         * ```javascript
         * //假设设置前的编辑器内容是 <p>old text</p>
         * editor.setContent('<p>new text</p>', true); //插入的结果是<p>old text</p><p>new text</p>
         * ```
         */setContent:function setContent(html,isAppendTo,notFireSelectionchange){var me=this;me.fireEvent('beforesetcontent',html);// var root = UE.htmlparser(html);
// me.filterInputRule(root);
// html = root.toHtml();
me.body.innerHTML=(isAppendTo?me.body.innerHTML:'')+html;function isCdataDiv(node){return node.tagName=='DIV'&&node.getAttribute('cdata_tag');}//给文本或者inline节点套p标签
if(me.options.enterTag=='p'){var child=this.body.firstChild,tmpNode;if(!child||child.nodeType==1&&(dtd.$cdata[child.tagName]||isCdataDiv(child)||domUtils.isCustomeNode(child))&&child===this.body.lastChild){this.body.innerHTML='<p>'+(browser.ie?'&nbsp;':'<br/>')+'</p>'+this.body.innerHTML;}else{var p=me.document.createElement('p');while(child){while(child&&(child.nodeType==3||child.nodeType==1&&dtd.p[child.tagName]&&!dtd.$cdata[child.tagName])){tmpNode=child.nextSibling;p.appendChild(child);child=tmpNode;}if(p.firstChild){if(!child){me.body.appendChild(p);break;}else{child.parentNode.insertBefore(p,child);p=me.document.createElement('p');}}child=child.nextSibling;}}}me.fireEvent('aftersetcontent');me.fireEvent('contentchange');!notFireSelectionchange&&me._selectionChange();//清除保存的选区
me._bakRange=me._bakIERange=me._bakNativeRange=null;//trace:1742 setContent后gecko能得到焦点问题
var geckoSel;if(browser.gecko&&(geckoSel=this.selection.getNative())){geckoSel.removeAllRanges();}if(me.options.autoSyncData){me.form&&setValue(me.form,me);}},/**
         * 让编辑器获得焦点，默认focus到编辑器头部
         * @method focus
         * @example
         * ```javascript
         * editor.focus()
         * ```
         *//**
         * 让编辑器获得焦点，toEnd确定focus位置
         * @method focus
         * @param { Boolean } toEnd 默认focus到编辑器头部，toEnd为true时focus到内容尾部
         * @example
         * ```javascript
         * editor.focus(true)
         * ```
         */focus:function focus(toEnd){try{var me=this,rng=me.selection.getRange();if(toEnd){var node=me.body.lastChild;if(node&&node.nodeType==1&&!dtd.$empty[node.tagName]){if(domUtils.isEmptyBlock(node)){rng.setStartAtFirst(node);}else{rng.setStartAtLast(node);}rng.collapse(true);}rng.setCursor(true);}else{if(!rng.collapsed&&domUtils.isBody(rng.startContainer)&&rng.startOffset==0){var node=me.body.firstChild;if(node&&node.nodeType==1&&!dtd.$empty[node.tagName]){rng.setStartAtFirst(node).collapse(true);}}rng.select(true);}this.fireEvent('focus selectionchange');}catch(e){}},isFocus:function isFocus(){return this.selection.isFocus();},blur:function blur(){var sel=this.selection.getNative();if(sel.empty&&browser.ie){var nativeRng=document.body.createTextRange();nativeRng.moveToElementText(document.body);nativeRng.collapse(true);nativeRng.select();sel.empty();}else{sel.removeAllRanges();}//this.fireEvent('blur selectionchange');
},/**
         * 初始化UE事件及部分事件代理
         * @method _initEvents
         * @private
         */_initEvents:function _initEvents(){var me=this,doc=me.document,win=me.window;me._proxyDomEvent=utils.bind(me._proxyDomEvent,me);domUtils.on(doc,['click','contextmenu','mousedown','keydown','keyup','keypress','mouseup','mouseover','mouseout','selectstart'],me._proxyDomEvent);domUtils.on(win,['focus','blur'],me._proxyDomEvent);domUtils.on(me.body,'drop',function(e){//阻止ff下默认的弹出新页面打开图片
if(browser.gecko&&e.stopPropagation){e.stopPropagation();}me.fireEvent('contentchange');});domUtils.on(doc,['mouseup','keydown'],function(evt){//特殊键不触发selectionchange
if(evt.type=='keydown'&&(evt.ctrlKey||evt.metaKey||evt.shiftKey||evt.altKey)){return;}if(evt.button==2)return;me._selectionChange(250,evt);});},/**
         * 触发事件代理
         * @method _proxyDomEvent
         * @private
         * @return { * } fireEvent的返回值
         * @see UE.EventBase:fireEvent(String)
         */_proxyDomEvent:function _proxyDomEvent(evt){if(this.fireEvent('before'+evt.type.replace(/^on/,'').toLowerCase())===false){return false;}if(this.fireEvent(evt.type.replace(/^on/,''),evt)===false){return false;}return this.fireEvent('after'+evt.type.replace(/^on/,'').toLowerCase());},/**
         * 变化选区
         * @method _selectionChange
         * @private
         */_selectionChange:function _selectionChange(delay,evt){var me=this;//有光标才做selectionchange 为了解决未focus时点击source不能触发更改工具栏状态的问题（source命令notNeedUndo=1）
//            if ( !me.selection.isFocus() ){
//                return;
//            }
var hackForMouseUp=false;var mouseX,mouseY;if(browser.ie&&browser.version<9&&evt&&evt.type=='mouseup'){var range=this.selection.getRange();if(!range.collapsed){hackForMouseUp=true;mouseX=evt.clientX;mouseY=evt.clientY;}}clearTimeout(_selectionChangeTimer);_selectionChangeTimer=setTimeout(function(){if(!me.selection||!me.selection.getNative()){return;}//修复一个IE下的bug: 鼠标点击一段已选择的文本中间时，可能在mouseup后的一段时间内取到的range是在selection的type为None下的错误值.
//IE下如果用户是拖拽一段已选择文本，则不会触发mouseup事件，所以这里的特殊处理不会对其有影响
var ieRange;if(hackForMouseUp&&me.selection.getNative().type=='None'){ieRange=me.document.body.createTextRange();try{ieRange.moveToPoint(mouseX,mouseY);}catch(ex){ieRange=null;}}var bakGetIERange;if(ieRange){bakGetIERange=me.selection.getIERange;me.selection.getIERange=function(){return ieRange;};}me.selection.cache();if(bakGetIERange){me.selection.getIERange=bakGetIERange;}if(me.selection._cachedRange&&me.selection._cachedStartElement){me.fireEvent('beforeselectionchange');// 第二个参数causeByUi为true代表由用户交互造成的selectionchange.
me.fireEvent('selectionchange',!!evt);me.fireEvent('afterselectionchange');me.selection.clear();}},delay||50);},/**
         * 执行编辑命令
         * @method _callCmdFn
         * @private
         * @param { String } fnName 函数名称
         * @param { * } args 传给命令函数的参数
         * @return { * } 返回命令函数运行的返回值
         */_callCmdFn:function _callCmdFn(fnName,args){var cmdName=args[0].toLowerCase(),cmd,cmdFn;cmd=this.commands[cmdName]||UE.commands[cmdName];cmdFn=cmd&&cmd[fnName];//没有querycommandstate或者没有command的都默认返回0
if((!cmd||!cmdFn)&&fnName=='queryCommandState'){return 0;}else if(cmdFn){return cmdFn.apply(this,args);}},/**
         * 执行编辑命令cmdName，完成富文本编辑效果
         * @method execCommand
         * @param { String } cmdName 需要执行的命令
         * @remind 具体命令的使用请参考<a href="#COMMAND.LIST">命令列表</a>
         * @return { * } 返回命令函数运行的返回值
         * @example
         * ```javascript
         * editor.execCommand(cmdName);
         * ```
         */execCommand:function execCommand(cmdName){cmdName=cmdName.toLowerCase();var me=this,result,cmd=me.commands[cmdName]||UE.commands[cmdName];if(!cmd||!cmd.execCommand){return null;}if(!cmd.notNeedUndo&&!me.__hasEnterExecCommand){me.__hasEnterExecCommand=true;if(me.queryCommandState.apply(me,arguments)!=-1){me.fireEvent('saveScene');me.fireEvent.apply(me,['beforeexeccommand',cmdName].concat(arguments));result=this._callCmdFn('execCommand',arguments);//保存场景时，做了内容对比，再看是否进行contentchange触发，这里多触发了一次，去掉
//                    (!cmd.ignoreContentChange && !me._ignoreContentChange) && me.fireEvent('contentchange');
me.fireEvent.apply(me,['afterexeccommand',cmdName].concat(arguments));me.fireEvent('saveScene');}me.__hasEnterExecCommand=false;}else{result=this._callCmdFn('execCommand',arguments);!me.__hasEnterExecCommand&&!cmd.ignoreContentChange&&!me._ignoreContentChange&&me.fireEvent('contentchange');}!me.__hasEnterExecCommand&&!cmd.ignoreContentChange&&!me._ignoreContentChange&&me._selectionChange();return result;},/**
         * 根据传入的command命令，查选编辑器当前的选区，返回命令的状态
         * @method  queryCommandState
         * @param { String } cmdName 需要查询的命令名称
         * @remind 具体命令的使用请参考<a href="#COMMAND.LIST">命令列表</a>
         * @return { Number } number 返回放前命令的状态，返回值三种情况：(-1|0|1)
         * @example
         * ```javascript
         * editor.queryCommandState(cmdName)  => (-1|0|1)
         * ```
         * @see COMMAND.LIST
         */queryCommandState:function queryCommandState(cmdName){return this._callCmdFn('queryCommandState',arguments);},/**
         * 根据传入的command命令，查选编辑器当前的选区，根据命令返回相关的值
         * @method queryCommandValue
         * @param { String } cmdName 需要查询的命令名称
         * @remind 具体命令的使用请参考<a href="#COMMAND.LIST">命令列表</a>
         * @remind 只有部分插件有此方法
         * @return { * } 返回每个命令特定的当前状态值
         * @grammar editor.queryCommandValue(cmdName)  =>  {*}
         * @see COMMAND.LIST
         */queryCommandValue:function queryCommandValue(cmdName){return this._callCmdFn('queryCommandValue',arguments);},/**
         * 检查编辑区域中是否有内容
         * @method  hasContents
         * @remind 默认有文本内容，或者有以下节点都不认为是空
         * table,ul,ol,dl,iframe,area,base,col,hr,img,embed,input,link,meta,param
         * @return { Boolean } 检查有内容返回true，否则返回false
         * @example
         * ```javascript
         * editor.hasContents()
         * ```
         *//**
         * 检查编辑区域中是否有内容，若包含参数tags中的节点类型，直接返回true
         * @method  hasContents
         * @param { Array } tags 传入数组判断时用到的节点类型
         * @return { Boolean } 若文档中包含tags数组里对应的tag，返回true，否则返回false
         * @example
         * ```javascript
         * editor.hasContents(['span']);
         * ```
         */hasContents:function hasContents(tags){if(tags){for(var i=0,ci;ci=tags[i++];){if(this.document.getElementsByTagName(ci).length>0){return true;}}}if(!domUtils.isEmptyBlock(this.body)){return true;}//随时添加,定义的特殊标签如果存在，不能认为是空
tags=['div'];for(i=0;ci=tags[i++];){var nodes=domUtils.getElementsByTagName(this.document,ci);for(var n=0,cn;cn=nodes[n++];){if(domUtils.isCustomeNode(cn)){return true;}}}return false;},/**
         * 重置编辑器，可用来做多个tab使用同一个编辑器实例
         * @method  reset
         * @remind 此方法会清空编辑器内容，清空回退列表，会触发reset事件
         * @example
         * ```javascript
         * editor.reset()
         * ```
         */reset:function reset(){this.fireEvent('reset');},/**
         * 设置当前编辑区域可以编辑
         * @method setEnabled
         * @example
         * ```javascript
         * editor.setEnabled()
         * ```
         */setEnabled:function setEnabled(){var me=this,range;if(me.body.contentEditable=='false'){me.body.contentEditable=true;range=me.selection.getRange();//有可能内容丢失了
try{range.moveToBookmark(me.lastBk);delete me.lastBk;}catch(e){range.setStartAtFirst(me.body).collapse(true);}range.select(true);if(me.bkqueryCommandState){me.queryCommandState=me.bkqueryCommandState;delete me.bkqueryCommandState;}if(me.bkqueryCommandValue){me.queryCommandValue=me.bkqueryCommandValue;delete me.bkqueryCommandValue;}me.fireEvent('selectionchange');}},enable:function enable(){return this.setEnabled();},/** 设置当前编辑区域不可编辑
         * @method setDisabled
         *//** 设置当前编辑区域不可编辑,except中的命令除外
         * @method setDisabled
         * @param { String } except 例外命令的字符串
         * @remind 即使设置了disable，此处配置的例外命令仍然可以执行
         * @example
         * ```javascript
         * editor.setDisabled('bold'); //禁用工具栏中除加粗之外的所有功能
         * ```
         *//** 设置当前编辑区域不可编辑,except中的命令除外
         * @method setDisabled
         * @param { Array } except 例外命令的字符串数组，数组中的命令仍然可以执行
         * @remind 即使设置了disable，此处配置的例外命令仍然可以执行
         * @example
         * ```javascript
         * editor.setDisabled(['bold','insertimage']); //禁用工具栏中除加粗和插入图片之外的所有功能
         * ```
         */setDisabled:function setDisabled(except){var me=this;except=except?utils.isArray(except)?except:[except]:[];if(me.body.contentEditable=='true'){if(!me.lastBk){me.lastBk=me.selection.getRange().createBookmark(true);}me.body.contentEditable=false;me.bkqueryCommandState=me.queryCommandState;me.bkqueryCommandValue=me.queryCommandValue;me.queryCommandState=function(type){if(utils.indexOf(except,type)!=-1){return me.bkqueryCommandState.apply(me,arguments);}return-1;};me.queryCommandValue=function(type){if(utils.indexOf(except,type)!=-1){return me.bkqueryCommandValue.apply(me,arguments);}return null;};me.fireEvent('selectionchange');}},disable:function disable(except){return this.setDisabled(except);},/**
         * 设置默认内容
         * @method _setDefaultContent
         * @private
         * @param  { String } cont 要存入的内容
         */_setDefaultContent:function(){function clear(){var me=this;if(me.document.getElementById('initContent')){me.body.innerHTML='<p>'+(ie?'':'<br/>')+'</p>';me.removeListener('firstBeforeExecCommand focus',clear);setTimeout(function(){me.focus();me._selectionChange();},0);}}return function(cont){var me=this;me.body.innerHTML='<p id="initContent">'+cont+'</p>';me.addListener('firstBeforeExecCommand focus',clear);};}(),/**
         * 显示编辑器
         * @method setShow
         * @example
         * ```javascript
         * editor.setShow()
         * ```
         */setShow:function setShow(){var me=this,range=me.selection.getRange();if(me.container.style.display=='none'){//有可能内容丢失了
try{range.moveToBookmark(me.lastBk);delete me.lastBk;}catch(e){range.setStartAtFirst(me.body).collapse(true);}//ie下focus实效，所以做了个延迟
setTimeout(function(){range.select(true);},100);me.container.style.display='';}},show:function show(){return this.setShow();},/**
         * 隐藏编辑器
         * @method setHide
         * @example
         * ```javascript
         * editor.setHide()
         * ```
         */setHide:function setHide(){var me=this;if(!me.lastBk){me.lastBk=me.selection.getRange().createBookmark(true);}me.container.style.display='none';},hide:function hide(){return this.setHide();},/**
         * 根据指定的路径，获取对应的语言资源
         * @method getLang
         * @param { String } path 路径根据的是lang目录下的语言文件的路径结构
         * @return { Object | String } 根据路径返回语言资源的Json格式对象或者语言字符串
         * @example
         * ```javascript
         * editor.getLang('contextMenu.delete'); //如果当前是中文，那返回是的是'删除'
         * ```
         */getLang:function getLang(path){var lang=UE.I18N[this.options.lang];if(!lang){throw Error("not import language file");}path=(path||"").split(".");for(var i=0,ci;ci=path[i++];){lang=lang[ci];if(!lang)break;}return lang;},/**
         * 计算编辑器html内容字符串的长度
         * @method  getContentLength
         * @return { Number } 返回计算的长度
         * @example
         * ```javascript
         * //编辑器html内容<p><strong>132</strong></p>
         * editor.getContentLength() //返回27
         * ```
         *//**
         * 计算编辑器当前纯文本内容的长度
         * @method  getContentLength
         * @param { Boolean } ingoneHtml 传入true时，只按照纯文本来计算
         * @return { Number } 返回计算的长度，内容中有hr/img/iframe标签，长度加1
         * @example
         * ```javascript
         * //编辑器html内容<p><strong>132</strong></p>
         * editor.getContentLength() //返回3
         * ```
         */getContentLength:function getContentLength(ingoneHtml,tagNames){var count=this.getContent(false,false,true).length;if(ingoneHtml){tagNames=(tagNames||[]).concat(['hr','img','iframe']);count=this.getContentTxt().replace(/[\t\r\n]+/g,'').length;for(var i=0,ci;ci=tagNames[i++];){count+=this.document.getElementsByTagName(ci).length;}}return count;},/**
         * 注册输入过滤规则
         * @method  addInputRule
         * @param { Function } rule 要添加的过滤规则
         * @example
         * ```javascript
         * editor.addInputRule(function(root){
         *   $.each(root.getNodesByTagName('div'),function(i,node){
         *       node.tagName="p";
         *   });
         * });
         * ```
         */addInputRule:function addInputRule(rule){this.inputRules.push(rule);},/**
         * 执行注册的过滤规则
         * @method  filterInputRule
         * @param { UE.uNode } root 要过滤的uNode节点
         * @remind 执行editor.setContent方法和执行'inserthtml'命令后，会运行该过滤函数
         * @example
         * ```javascript
         * editor.filterInputRule(editor.body);
         * ```
         * @see UE.Editor:addInputRule
         */filterInputRule:function filterInputRule(root){for(var i=0,ci;ci=this.inputRules[i++];){ci.call(this,root);}},/**
         * 注册输出过滤规则
         * @method  addOutputRule
         * @param { Function } rule 要添加的过滤规则
         * @example
         * ```javascript
         * editor.addOutputRule(function(root){
         *   $.each(root.getNodesByTagName('p'),function(i,node){
         *       node.tagName="div";
         *   });
         * });
         * ```
         */addOutputRule:function addOutputRule(rule){this.outputRules.push(rule);},/**
         * 根据输出过滤规则，过滤编辑器内容
         * @method  filterOutputRule
         * @remind 执行editor.getContent方法的时候，会先运行该过滤函数
         * @param { UE.uNode } root 要过滤的uNode节点
         * @example
         * ```javascript
         * editor.filterOutputRule(editor.body);
         * ```
         * @see UE.Editor:addOutputRule
         */filterOutputRule:function filterOutputRule(root){for(var i=0,ci;ci=this.outputRules[i++];){ci.call(this,root);}},/**
         * 根据action名称获取请求的路径
         * @method  getActionUrl
         * @remind 假如没有设置serverUrl,会根据imageUrl设置默认的controller路径
         * @param { String } action action名称
         * @example
         * ```javascript
         * editor.getActionUrl('config'); //返回 "/ueditor/php/controller.php?action=config"
         * editor.getActionUrl('image'); //返回 "/ueditor/php/controller.php?action=uplaodimage"
         * editor.getActionUrl('scrawl'); //返回 "/ueditor/php/controller.php?action=uplaodscrawl"
         * editor.getActionUrl('imageManager'); //返回 "/ueditor/php/controller.php?action=listimage"
         * ```
         */getActionUrl:function getActionUrl(action){var actionName=this.getOpt(action)||action,imageUrl=this.getOpt('imageUrl'),serverUrl=this.getOpt('serverUrl');if(!serverUrl&&imageUrl){serverUrl=imageUrl.replace(/^(.*[\/]).+([\.].+)$/,'$1controller$2');}if(serverUrl){serverUrl=serverUrl+(serverUrl.indexOf('?')==-1?'?':'&')+'action='+(actionName||'');return utils.formatUrl(serverUrl);}else{return'';}}};utils.inherits(Editor,EventBase);})();// core/Editor.defaultoptions.js
//维护编辑器一下默认的不在插件中的配置项
UE.Editor.defaultOptions=function(editor){var _url=editor.options.UEDITOR_HOME_URL;return{isShow:true,initialContent:'',initialStyle:'',autoClearinitialContent:false,iframeCssUrl:_url+'themes/iframe.css',textarea:'editorValue',focus:false,focusInEnd:true,autoClearEmptyNode:true,fullscreen:false,readonly:false,zIndex:9999,imagePopup:true,enterTag:'p',customDomain:false,lang:'zh-cn',langPath:_url+'lang/',theme:'default',themePath:_url+'themes/',allHtmlEnabled:false,scaleEnabled:false,tableNativeEditInFF:false,autoSyncData:true,fileNameFormat:'{time}{rand:6}'};};// core/loadconfig.js
(function(){UE.Editor.prototype.loadServerConfig=function(){var me=this;setTimeout(function(){try{me.options.imageUrl&&me.setOpt('serverUrl',me.options.imageUrl.replace(/^(.*[\/]).+([\.].+)$/,'$1controller$2'));var configUrl=me.getActionUrl('config'),//isJsonp = utils.isCrossDomainUrl(configUrl);
isJsonp=false;/* 发出ajax请求 */me._serverConfigLoaded=false;configUrl&&UE.ajax.request(configUrl,{'method':'GET','dataType':isJsonp?'jsonp':'','onsuccess':function onsuccess(r){try{var config=isJsonp?r:eval("("+r.responseText+")");utils.extend(me.options,config);me.fireEvent('serverConfigLoaded');me._serverConfigLoaded=true;}catch(e){showErrorMsg(me.getLang('loadconfigFormatError'));}},'onerror':function onerror(){showErrorMsg(me.getLang('loadconfigHttpError'));}});}catch(e){showErrorMsg(me.getLang('loadconfigError'));}});function showErrorMsg(msg){console&&console.error(msg);//me.fireEvent('showMessage', {
//    'title': msg,
//    'type': 'error'
//});
}};UE.Editor.prototype.isServerConfigLoaded=function(){var me=this;return me._serverConfigLoaded||false;};UE.Editor.prototype.afterConfigReady=function(handler){if(!handler||!utils.isFunction(handler))return;var me=this;var readyHandler=function readyHandler(){handler.apply(me,arguments);me.removeListener('serverConfigLoaded',readyHandler);};if(me.isServerConfigLoaded()){handler.call(me,'serverConfigLoaded');}else{me.addListener('serverConfigLoaded',readyHandler);}};})();// core/ajax.js
/**
 * @file
 * @module UE.ajax
 * @since 1.2.6.1
 *//**
 * 提供对ajax请求的支持
 * @module UE.ajax
 */UE.ajax=function(){//创建一个ajaxRequest对象
var fnStr='XMLHttpRequest()';try{new ActiveXObject("Msxml2.XMLHTTP");fnStr='ActiveXObject(\'Msxml2.XMLHTTP\')';}catch(e){try{new ActiveXObject("Microsoft.XMLHTTP");fnStr='ActiveXObject(\'Microsoft.XMLHTTP\')';}catch(e){}}var creatAjaxRequest=new Function('return new '+fnStr);/**
     * 将json参数转化成适合ajax提交的参数列表
     * @param json
     */function json2str(json){var strArr=[];for(var i in json){//忽略默认的几个参数
if(i=="method"||i=="timeout"||i=="async"||i=="dataType"||i=="callback")continue;//忽略控制
if(json[i]==undefined||json[i]==null)continue;//传递过来的对象和函数不在提交之列
if(!((0,_typeof3.default)(json[i]).toLowerCase()=="function"||(0,_typeof3.default)(json[i]).toLowerCase()=="object")){strArr.push(encodeURIComponent(i)+"="+encodeURIComponent(json[i]));}else if(utils.isArray(json[i])){//支持传数组内容
for(var j=0;j<json[i].length;j++){strArr.push(encodeURIComponent(i)+"[]="+encodeURIComponent(json[i][j]));}}}return strArr.join("&");}function doAjax(url,ajaxOptions){var xhr=creatAjaxRequest(),//是否超时
timeIsOut=false,//默认参数
defaultAjaxOptions={method:"POST",timeout:5000,async:true,data:{},//需要传递对象的话只能覆盖
onsuccess:function onsuccess(){},onerror:function onerror(){}};if((typeof url==='undefined'?'undefined':(0,_typeof3.default)(url))==="object"){ajaxOptions=url;url=ajaxOptions.url;}if(!xhr||!url)return;var ajaxOpts=ajaxOptions?utils.extend(defaultAjaxOptions,ajaxOptions):defaultAjaxOptions;var submitStr=json2str(ajaxOpts);// { name:"Jim",city:"Beijing" } --> "name=Jim&city=Beijing"
//如果用户直接通过data参数传递json对象过来，则也要将此json对象转化为字符串
if(!utils.isEmptyObject(ajaxOpts.data)){submitStr+=(submitStr?"&":"")+json2str(ajaxOpts.data);}//超时检测
var timerID=setTimeout(function(){if(xhr.readyState!=4){timeIsOut=true;xhr.abort();clearTimeout(timerID);}},ajaxOpts.timeout);var method=ajaxOpts.method.toUpperCase();var str=url+(url.indexOf("?")==-1?"?":"&")+(method=="POST"?"":submitStr+"&noCache="+ +new Date());xhr.open(method,str,ajaxOpts.async);xhr.onreadystatechange=function(){if(xhr.readyState==4){if(!timeIsOut&&xhr.status==200){ajaxOpts.onsuccess(xhr);}else{ajaxOpts.onerror(xhr);}}};xhr.setRequestHeader('Authorization','Bearer '+JSON.parse(sessionStorage.getItem("userData")).token);if(method=="POST"){xhr.setRequestHeader('Content-Type','application/x-www-form-urlencoded');xhr.send(submitStr);}else{xhr.send(null);}}function doJsonp(url,opts){var successhandler=opts.onsuccess||function(){},scr=document.createElement('SCRIPT'),options=opts||{},charset=options['charset'],callbackField=options['jsonp']||'callback',callbackFnName,timeOut=options['timeOut']||0,timer,reg=new RegExp('(\\?|&)'+callbackField+'=([^&]*)'),matches;if(utils.isFunction(successhandler)){callbackFnName='bd__editor__'+Math.floor(Math.random()*2147483648).toString(36);window[callbackFnName]=getCallBack(0);}else if(utils.isString(successhandler)){callbackFnName=successhandler;}else{if(matches=reg.exec(url)){callbackFnName=matches[2];}}url=url.replace(reg,'\x241'+callbackField+'='+callbackFnName);if(url.search(reg)<0){url+=(url.indexOf('?')<0?'?':'&')+callbackField+'='+callbackFnName;}var queryStr=json2str(opts);// { name:"Jim",city:"Beijing" } --> "name=Jim&city=Beijing"
//如果用户直接通过data参数传递json对象过来，则也要将此json对象转化为字符串
if(!utils.isEmptyObject(opts.data)){queryStr+=(queryStr?"&":"")+json2str(opts.data);}if(queryStr){url=url.replace(/\?/,'?'+queryStr+'&');}scr.onerror=getCallBack(1);if(timeOut){timer=setTimeout(getCallBack(1),timeOut);}createScriptTag(scr,url,charset);function createScriptTag(scr,url,charset){scr.setAttribute('type','text/javascript');scr.setAttribute('defer','defer');charset&&scr.setAttribute('charset',charset);scr.setAttribute('src',url);document.getElementsByTagName('head')[0].appendChild(scr);}function getCallBack(onTimeOut){return function(){try{if(onTimeOut){options.onerror&&options.onerror();}else{try{clearTimeout(timer);successhandler.apply(window,arguments);}catch(e){}}}catch(exception){options.onerror&&options.onerror.call(window,exception);}finally{options.oncomplete&&options.oncomplete.apply(window,arguments);scr.parentNode&&scr.parentNode.removeChild(scr);window[callbackFnName]=null;try{delete window[callbackFnName];}catch(e){}}};}}return{/**
         * 根据给定的参数项，向指定的url发起一个ajax请求。 ajax请求完成后，会根据请求结果调用相应回调： 如果请求
         * 成功， 则调用onsuccess回调， 失败则调用 onerror 回调
         * @method request
         * @param { URLString } url ajax请求的url地址
         * @param { Object } ajaxOptions ajax请求选项的键值对，支持的选项如下：
         * @example
         * ```javascript
         * //向sayhello.php发起一个异步的Ajax GET请求, 请求超时时间为10s， 请求完成后执行相应的回调。
         * UE.ajax.requeset( 'sayhello.php', {
         *
         *     //请求方法。可选值： 'GET', 'POST'，默认值是'POST'
         *     method: 'GET',
         *
         *     //超时时间。 默认为5000， 单位是ms
         *     timeout: 10000,
         *
         *     //是否是异步请求。 true为异步请求， false为同步请求
         *     async: true,
         *
         *     //请求携带的数据。如果请求为GET请求， data会经过stringify后附加到请求url之后。
         *     data: {
         *         name: 'ueditor'
         *     },
         *
         *     //请求成功后的回调， 该回调接受当前的XMLHttpRequest对象作为参数。
         *     onsuccess: function ( xhr ) {
         *         console.log( xhr.responseText );
         *     },
         *
         *     //请求失败或者超时后的回调。
         *     onerror: function ( xhr ) {
         *          alert( 'Ajax请求失败' );
         *     }
         *
         * } );
         * ```
         *//**
         * 根据给定的参数项发起一个ajax请求， 参数项里必须包含一个url地址。 ajax请求完成后，会根据请求结果调用相应回调： 如果请求
         * 成功， 则调用onsuccess回调， 失败则调用 onerror 回调。
         * @method request
         * @warning 如果在参数项里未提供一个key为“url”的地址值，则该请求将直接退出。
         * @param { Object } ajaxOptions ajax请求选项的键值对，支持的选项如下：
         * @example
         * ```javascript
         *
         * //向sayhello.php发起一个异步的Ajax POST请求, 请求超时时间为5s， 请求完成后不执行任何回调。
         * UE.ajax.requeset( 'sayhello.php', {
         *
         *     //请求的地址， 该项是必须的。
         *     url: 'sayhello.php'
         *
         * } );
         * ```
         */request:function request(url,opts){if(opts&&opts.dataType=='jsonp'){doJsonp(url,opts);}else{doAjax(url,opts);}},getJSONP:function getJSONP(url,data,fn){var opts={'data':data,'oncomplete':fn};doJsonp(url,opts);}};}();// core/filterword.js
/**
 * UE过滤word的静态方法
 * @file
 *//**
 * UEditor公用空间，UEditor所有的功能都挂载在该空间下
 * @module UE
 *//**
 * 根据传入html字符串过滤word
 * @module UE
 * @since 1.2.6.1
 * @method filterWord
 * @param { String } html html字符串
 * @return { String } 已过滤后的结果字符串
 * @example
 * ```javascript
 * UE.filterWord(html);
 * ```
 */var filterWord=UE.filterWord=function(){//是否是word过来的内容
function isWordDocument(str){return /(class="?Mso|style="[^"]*\bmso\-|w:WordDocument|<(v|o):|lang=)/ig.test(str);}//去掉小数
function transUnit(v){v=v.replace(/[\d.]+\w+/g,function(m){return utils.transUnitToPx(m);});return v;}function filterPasteWord(str){return str.replace(/[\t\r\n]+/g,' ').replace(/<!--[\s\S]*?-->/ig,"")//转换图片
.replace(/<v:shape [^>]*>[\s\S]*?.<\/v:shape>/gi,function(str){//opera能自己解析出image所这里直接返回空
if(browser.opera){return'';}try{//有可能是bitmap占为图，无用，直接过滤掉，主要体现在粘贴excel表格中
if(/Bitmap/i.test(str)){return'';}var width=str.match(/width:([ \d.]*p[tx])/i)[1],height=str.match(/height:([ \d.]*p[tx])/i)[1],src=str.match(/src=\s*"([^"]*)"/i)[1];return'<img width="'+transUnit(width)+'" height="'+transUnit(height)+'" src="'+src+'" />';}catch(e){return'';}})//针对wps添加的多余标签处理
.replace(/<\/?div[^>]*>/g,'')//去掉多余的属性
.replace(/v:\w+=(["']?)[^'"]+\1/g,'').replace(/<(!|script[^>]*>.*?<\/script(?=[>\s])|\/?(\?xml(:\w+)?|xml|meta|link|style|\w+:\w+)(?=[\s\/>]))[^>]*>/gi,"").replace(/<p [^>]*class="?MsoHeading"?[^>]*>(.*?)<\/p>/gi,"<p><strong>$1</strong></p>")//去掉多余的属性
.replace(/\s+(class|lang|align)\s*=\s*(['"]?)([\w-]+)\2/ig,function(str,name,marks,val){//保留list的标示
return name=='class'&&val=='MsoListParagraph'?str:'';})//清除多余的font/span不能匹配&nbsp;有可能是空格
.replace(/<(font|span)[^>]*>(\s*)<\/\1>/gi,function(a,b,c){return c.replace(/[\t\r\n ]+/g,' ');})//处理style的问题
.replace(/(<[a-z][^>]*)\sstyle=(["'])([^\2]*?)\2/gi,function(str,tag,tmp,style){var n=[],s=style.replace(/^\s+|\s+$/,'').replace(/&#39;/g,'\'').replace(/&quot;/gi,"'").replace(/[\d.]+(cm|pt)/g,function(str){return utils.transUnitToPx(str);}).split(/;\s*/g);for(var i=0,v;v=s[i];i++){var name,value,parts=v.split(":");if(parts.length==2){name=parts[0].toLowerCase();value=parts[1].toLowerCase();if(/^(background)\w*/.test(name)&&value.replace(/(initial|\s)/g,'').length==0||/^(margin)\w*/.test(name)&&/^0\w+$/.test(value)){continue;}switch(name){case"mso-padding-alt":case"mso-padding-top-alt":case"mso-padding-right-alt":case"mso-padding-bottom-alt":case"mso-padding-left-alt":case"mso-margin-alt":case"mso-margin-top-alt":case"mso-margin-right-alt":case"mso-margin-bottom-alt":case"mso-margin-left-alt"://ie下会出现挤到一起的情况
//case "mso-table-layout-alt":
case"mso-height":case"mso-width":case"mso-vertical-align-alt"://trace:1819 ff下会解析出padding在table上
if(!/<table/.test(tag))n[i]=name.replace(/^mso-|-alt$/g,"")+":"+transUnit(value);continue;case"horiz-align":n[i]="text-align:"+value;continue;case"vert-align":n[i]="vertical-align:"+value;continue;case"font-color":case"mso-foreground":n[i]="color:"+value;continue;case"mso-background":case"mso-highlight":n[i]="background:"+value;continue;case"mso-default-height":n[i]="min-height:"+transUnit(value);continue;case"mso-default-width":n[i]="min-width:"+transUnit(value);continue;case"mso-padding-between-alt":n[i]="border-collapse:separate;border-spacing:"+transUnit(value);continue;case"text-line-through":if(value=="single"||value=="double"){n[i]="text-decoration:line-through";}continue;case"mso-zero-height":if(value=="yes"){n[i]="display:none";}continue;//                                case 'background':
//                                    break;
case'margin':if(!/[1-9]/.test(value)){continue;}}if(/^(mso|column|font-emph|lang|layout|line-break|list-image|nav|panose|punct|row|ruby|sep|size|src|tab-|table-border|text-(?:decor|trans)|top-bar|version|vnd|word-break)/.test(name)||/text\-indent|padding|margin/.test(name)&&/\-[\d.]+/.test(value)){continue;}n[i]=name+":"+parts[1];}}return tag+(n.length?' style="'+n.join(';').replace(/;{2,}/g,';')+'"':'');});}return function(html){return isWordDocument(html)?filterPasteWord(html):html;};}();// core/node.js
/**
 * 编辑器模拟的节点类
 * @file
 * @module UE
 * @class uNode
 * @since 1.2.6.1
 *//**
 * UEditor公用空间，UEditor所有的功能都挂载在该空间下
 * @unfile
 * @module UE
 */(function(){/**
     * 编辑器模拟的节点类
     * @unfile
     * @module UE
     * @class uNode
     *//**
     * 通过一个键值对，创建一个uNode对象
     * @constructor
     * @param { Object } attr 传入要创建的uNode的初始属性
     * @example
     * ```javascript
     * var node = new uNode({
     *     type:'element',
     *     tagName:'span',
     *     attrs:{style:'font-size:14px;'}
     * }
     * ```
     */var uNode=UE.uNode=function(obj){this.type=obj.type;this.data=obj.data;this.tagName=obj.tagName;this.parentNode=obj.parentNode;this.attrs=obj.attrs||{};this.children=obj.children;};var notTransAttrs={'href':1,'src':1,'_src':1,'_href':1,'cdata_data':1};var notTransTagName={style:1,script:1};var indentChar='    ',breakChar='\n';function insertLine(arr,current,begin){arr.push(breakChar);return current+(begin?1:-1);}function insertIndent(arr,current){//插入缩进
for(var i=0;i<current;i++){arr.push(indentChar);}}//创建uNode的静态方法
//支持标签和html
uNode.createElement=function(html){if(/[<>]/.test(html)){return UE.htmlparser(html).children[0];}else{return new uNode({type:'element',children:[],tagName:html});}};uNode.createText=function(data,noTrans){return new UE.uNode({type:'text','data':noTrans?data:utils.unhtml(data||'')});};function nodeToHtml(node,arr,formatter,current){switch(node.type){case'root':for(var i=0,ci;ci=node.children[i++];){//插入新行
if(formatter&&ci.type=='element'&&!dtd.$inlineWithA[ci.tagName]&&i>1){insertLine(arr,current,true);insertIndent(arr,current);}nodeToHtml(ci,arr,formatter,current);}break;case'text':isText(node,arr);break;case'element':isElement(node,arr,formatter,current);break;case'comment':isComment(node,arr,formatter);}return arr;}function isText(node,arr){if(node.parentNode.tagName=='pre'){//源码模式下输入html标签，不能做转换处理，直接输出
arr.push(node.data);}else{arr.push(notTransTagName[node.parentNode.tagName]?utils.html(node.data):node.data.replace(/[ ]{2}/g,' &nbsp;'));}}function isElement(node,arr,formatter,current){var attrhtml='';if(node.attrs){attrhtml=[];var attrs=node.attrs;for(var a in attrs){//这里就针对
//<p>'<img src='http://nsclick.baidu.com/u.gif?&asdf=\"sdf&asdfasdfs;asdf'></p>
//这里边的\"做转换，要不用innerHTML直接被截断了，属性src
//有可能做的不够
attrhtml.push(a+(attrs[a]!==undefined?'="'+(notTransAttrs[a]?utils.html(attrs[a]).replace(/["]/g,function(a){return'&quot;';}):utils.unhtml(attrs[a]))+'"':''));}attrhtml=attrhtml.join(' ');}arr.push('<'+node.tagName+(attrhtml?' '+attrhtml:'')+(dtd.$empty[node.tagName]?'\/':'')+'>');//插入新行
if(formatter&&!dtd.$inlineWithA[node.tagName]&&node.tagName!='pre'){if(node.children&&node.children.length){current=insertLine(arr,current,true);insertIndent(arr,current);}}if(node.children&&node.children.length){for(var i=0,ci;ci=node.children[i++];){if(formatter&&ci.type=='element'&&!dtd.$inlineWithA[ci.tagName]&&i>1){insertLine(arr,current);insertIndent(arr,current);}nodeToHtml(ci,arr,formatter,current);}}if(!dtd.$empty[node.tagName]){if(formatter&&!dtd.$inlineWithA[node.tagName]&&node.tagName!='pre'){if(node.children&&node.children.length){current=insertLine(arr,current);insertIndent(arr,current);}}arr.push('<\/'+node.tagName+'>');}}function isComment(node,arr){arr.push('<!--'+node.data+'-->');}function _getNodeById(root,id){var node;if(root.type=='element'&&root.getAttr('id')==id){return root;}if(root.children&&root.children.length){for(var i=0,ci;ci=root.children[i++];){if(node=_getNodeById(ci,id)){return node;}}}}function _getNodesByTagName(node,tagName,arr){if(node.type=='element'&&node.tagName==tagName){arr.push(node);}if(node.children&&node.children.length){for(var i=0,ci;ci=node.children[i++];){_getNodesByTagName(ci,tagName,arr);}}}function nodeTraversal(root,fn){if(root.children&&root.children.length){for(var i=0,ci;ci=root.children[i];){nodeTraversal(ci,fn);//ci被替换的情况，这里就不再走 fn了
if(ci.parentNode){if(ci.children&&ci.children.length){fn(ci);}if(ci.parentNode)i++;}}}else{fn(root);}}uNode.prototype={/**
         * 当前节点对象，转换成html文本
         * @method toHtml
         * @return { String } 返回转换后的html字符串
         * @example
         * ```javascript
         * node.toHtml();
         * ```
         *//**
         * 当前节点对象，转换成html文本
         * @method toHtml
         * @param { Boolean } formatter 是否格式化返回值
         * @return { String } 返回转换后的html字符串
         * @example
         * ```javascript
         * node.toHtml( true );
         * ```
         */toHtml:function toHtml(formatter){var arr=[];nodeToHtml(this,arr,formatter,0);return arr.join('');},/**
         * 获取节点的html内容
         * @method innerHTML
         * @warning 假如节点的type不是'element'，或节点的标签名称不在dtd列表里，直接返回当前节点
         * @return { String } 返回节点的html内容
         * @example
         * ```javascript
         * var htmlstr = node.innerHTML();
         * ```
         *//**
         * 设置节点的html内容
         * @method innerHTML
         * @warning 假如节点的type不是'element'，或节点的标签名称不在dtd列表里，直接返回当前节点
         * @param { String } htmlstr 传入要设置的html内容
         * @return { UE.uNode } 返回节点本身
         * @example
         * ```javascript
         * node.innerHTML('<span>text</span>');
         * ```
         */innerHTML:function innerHTML(htmlstr){if(this.type!='element'||dtd.$empty[this.tagName]){return this;}if(utils.isString(htmlstr)){if(this.children){for(var i=0,ci;ci=this.children[i++];){ci.parentNode=null;}}this.children=[];var tmpRoot=UE.htmlparser(htmlstr);for(var i=0,ci;ci=tmpRoot.children[i++];){this.children.push(ci);ci.parentNode=this;}return this;}else{var tmpRoot=new UE.uNode({type:'root',children:this.children});return tmpRoot.toHtml();}},/**
         * 获取节点的纯文本内容
         * @method innerText
         * @warning 假如节点的type不是'element'，或节点的标签名称不在dtd列表里，直接返回当前节点
         * @return { String } 返回节点的存文本内容
         * @example
         * ```javascript
         * var textStr = node.innerText();
         * ```
         *//**
         * 设置节点的纯文本内容
         * @method innerText
         * @warning 假如节点的type不是'element'，或节点的标签名称不在dtd列表里，直接返回当前节点
         * @param { String } textStr 传入要设置的文本内容
         * @return { UE.uNode } 返回节点本身
         * @example
         * ```javascript
         * node.innerText('<span>text</span>');
         * ```
         */innerText:function innerText(textStr,noTrans){if(this.type!='element'||dtd.$empty[this.tagName]){return this;}if(textStr){if(this.children){for(var i=0,ci;ci=this.children[i++];){ci.parentNode=null;}}this.children=[];this.appendChild(uNode.createText(textStr,noTrans));return this;}else{return this.toHtml().replace(/<[^>]+>/g,'');}},/**
         * 获取当前对象的data属性
         * @method getData
         * @return { Object } 若节点的type值是elemenet，返回空字符串，否则返回节点的data属性
         * @example
         * ```javascript
         * node.getData();
         * ```
         */getData:function getData(){if(this.type=='element')return'';return this.data;},/**
         * 获取当前节点下的第一个子节点
         * @method firstChild
         * @return { UE.uNode } 返回第一个子节点
         * @example
         * ```javascript
         * node.firstChild(); //返回第一个子节点
         * ```
         */firstChild:function firstChild(){//            if (this.type != 'element' || dtd.$empty[this.tagName]) {
//                return this;
//            }
return this.children?this.children[0]:null;},/**
         * 获取当前节点下的最后一个子节点
         * @method lastChild
         * @return { UE.uNode } 返回最后一个子节点
         * @example
         * ```javascript
         * node.lastChild(); //返回最后一个子节点
         * ```
         */lastChild:function lastChild(){//            if (this.type != 'element' || dtd.$empty[this.tagName] ) {
//                return this;
//            }
return this.children?this.children[this.children.length-1]:null;},/**
         * 获取和当前节点有相同父亲节点的前一个节点
         * @method previousSibling
         * @return { UE.uNode } 返回前一个节点
         * @example
         * ```javascript
         * node.children[2].previousSibling(); //返回子节点node.children[1]
         * ```
         */previousSibling:function previousSibling(){var parent=this.parentNode;for(var i=0,ci;ci=parent.children[i];i++){if(ci===this){return i==0?null:parent.children[i-1];}}},/**
         * 获取和当前节点有相同父亲节点的后一个节点
         * @method nextSibling
         * @return { UE.uNode } 返回后一个节点,找不到返回null
         * @example
         * ```javascript
         * node.children[2].nextSibling(); //如果有，返回子节点node.children[3]
         * ```
         */nextSibling:function nextSibling(){var parent=this.parentNode;for(var i=0,ci;ci=parent.children[i++];){if(ci===this){return parent.children[i];}}},/**
         * 用新的节点替换当前节点
         * @method replaceChild
         * @param { UE.uNode } target 要替换成该节点参数
         * @param { UE.uNode } source 要被替换掉的节点
         * @return { UE.uNode } 返回替换之后的节点对象
         * @example
         * ```javascript
         * node.replaceChild(newNode, childNode); //用newNode替换childNode,childNode是node的子节点
         * ```
         */replaceChild:function replaceChild(target,source){if(this.children){if(target.parentNode){target.parentNode.removeChild(target);}for(var i=0,ci;ci=this.children[i];i++){if(ci===source){this.children.splice(i,1,target);source.parentNode=null;target.parentNode=this;return target;}}}},/**
         * 在节点的子节点列表最后位置插入一个节点
         * @method appendChild
         * @param { UE.uNode } node 要插入的节点
         * @return { UE.uNode } 返回刚插入的子节点
         * @example
         * ```javascript
         * node.appendChild( newNode ); //在node内插入子节点newNode
         * ```
         */appendChild:function appendChild(node){if(this.type=='root'||this.type=='element'&&!dtd.$empty[this.tagName]){if(!this.children){this.children=[];}if(node.parentNode){node.parentNode.removeChild(node);}for(var i=0,ci;ci=this.children[i];i++){if(ci===node){this.children.splice(i,1);break;}}this.children.push(node);node.parentNode=this;return node;}},/**
         * 在传入节点的前面插入一个节点
         * @method insertBefore
         * @param { UE.uNode } target 要插入的节点
         * @param { UE.uNode } source 在该参数节点前面插入
         * @return { UE.uNode } 返回刚插入的子节点
         * @example
         * ```javascript
         * node.parentNode.insertBefore(newNode, node); //在node节点后面插入newNode
         * ```
         */insertBefore:function insertBefore(target,source){if(this.children){if(target.parentNode){target.parentNode.removeChild(target);}for(var i=0,ci;ci=this.children[i];i++){if(ci===source){this.children.splice(i,0,target);target.parentNode=this;return target;}}}},/**
         * 在传入节点的后面插入一个节点
         * @method insertAfter
         * @param { UE.uNode } target 要插入的节点
         * @param { UE.uNode } source 在该参数节点后面插入
         * @return { UE.uNode } 返回刚插入的子节点
         * @example
         * ```javascript
         * node.parentNode.insertAfter(newNode, node); //在node节点后面插入newNode
         * ```
         */insertAfter:function insertAfter(target,source){if(this.children){if(target.parentNode){target.parentNode.removeChild(target);}for(var i=0,ci;ci=this.children[i];i++){if(ci===source){this.children.splice(i+1,0,target);target.parentNode=this;return target;}}}},/**
         * 从当前节点的子节点列表中，移除节点
         * @method removeChild
         * @param { UE.uNode } node 要移除的节点引用
         * @param { Boolean } keepChildren 是否保留移除节点的子节点，若传入true，自动把移除节点的子节点插入到移除的位置
         * @return { * } 返回刚移除的子节点
         * @example
         * ```javascript
         * node.removeChild(childNode,true); //在node的子节点列表中移除child节点，并且吧child的子节点插入到移除的位置
         * ```
         */removeChild:function removeChild(node,keepChildren){if(this.children){for(var i=0,ci;ci=this.children[i];i++){if(ci===node){this.children.splice(i,1);ci.parentNode=null;if(keepChildren&&ci.children&&ci.children.length){for(var j=0,cj;cj=ci.children[j];j++){this.children.splice(i+j,0,cj);cj.parentNode=this;}}return ci;}}}},/**
         * 获取当前节点所代表的元素属性，即获取attrs对象下的属性值
         * @method getAttr
         * @param { String } attrName 要获取的属性名称
         * @return { * } 返回attrs对象下的属性值
         * @example
         * ```javascript
         * node.getAttr('title');
         * ```
         */getAttr:function getAttr(attrName){return this.attrs&&this.attrs[attrName.toLowerCase()];},/**
         * 设置当前节点所代表的元素属性，即设置attrs对象下的属性值
         * @method setAttr
         * @param { String } attrName 要设置的属性名称
         * @param { * } attrVal 要设置的属性值，类型视设置的属性而定
         * @return { * } 返回attrs对象下的属性值
         * @example
         * ```javascript
         * node.setAttr('title','标题');
         * ```
         */setAttr:function setAttr(attrName,attrVal){if(!attrName){delete this.attrs;return;}if(!this.attrs){this.attrs={};}if(utils.isObject(attrName)){for(var a in attrName){if(!attrName[a]){delete this.attrs[a];}else{this.attrs[a.toLowerCase()]=attrName[a];}}}else{if(!attrVal){delete this.attrs[attrName];}else{this.attrs[attrName.toLowerCase()]=attrVal;}}},/**
         * 获取当前节点在父节点下的位置索引
         * @method getIndex
         * @return { Number } 返回索引数值，如果没有父节点，返回-1
         * @example
         * ```javascript
         * node.getIndex();
         * ```
         */getIndex:function getIndex(){var parent=this.parentNode;for(var i=0,ci;ci=parent.children[i];i++){if(ci===this){return i;}}return-1;},/**
         * 在当前节点下，根据id查找节点
         * @method getNodeById
         * @param { String } id 要查找的id
         * @return { UE.uNode } 返回找到的节点
         * @example
         * ```javascript
         * node.getNodeById('textId');
         * ```
         */getNodeById:function getNodeById(id){var node;if(this.children&&this.children.length){for(var i=0,ci;ci=this.children[i++];){if(node=_getNodeById(ci,id)){return node;}}}},/**
         * 在当前节点下，根据元素名称查找节点列表
         * @method getNodesByTagName
         * @param { String } tagNames 要查找的元素名称
         * @return { Array } 返回找到的节点列表
         * @example
         * ```javascript
         * node.getNodesByTagName('span');
         * ```
         */getNodesByTagName:function getNodesByTagName(tagNames){tagNames=utils.trim(tagNames).replace(/[ ]{2,}/g,' ').split(' ');var arr=[],me=this;utils.each(tagNames,function(tagName){if(me.children&&me.children.length){for(var i=0,ci;ci=me.children[i++];){_getNodesByTagName(ci,tagName,arr);}}});return arr;},/**
         * 根据样式名称，获取节点的样式值
         * @method getStyle
         * @param { String } name 要获取的样式名称
         * @return { String } 返回样式值
         * @example
         * ```javascript
         * node.getStyle('font-size');
         * ```
         */getStyle:function getStyle(name){var cssStyle=this.getAttr('style');if(!cssStyle){return'';}var reg=new RegExp('(^|;)\\s*'+name+':([^;]+)','i');var match=cssStyle.match(reg);if(match&&match[0]){return match[2];}return'';},/**
         * 给节点设置样式
         * @method setStyle
         * @param { String } name 要设置的的样式名称
         * @param { String } val 要设置的的样值
         * @example
         * ```javascript
         * node.setStyle('font-size', '12px');
         * ```
         */setStyle:function setStyle(name,val){function exec(name,val){var reg=new RegExp('(^|;)\\s*'+name+':([^;]+;?)','gi');cssStyle=cssStyle.replace(reg,'$1');if(val){cssStyle=name+':'+utils.unhtml(val)+';'+cssStyle;}}var cssStyle=this.getAttr('style');if(!cssStyle){cssStyle='';}if(utils.isObject(name)){for(var a in name){exec(a,name[a]);}}else{exec(name,val);}this.setAttr('style',utils.trim(cssStyle));},/**
         * 传入一个函数，递归遍历当前节点下的所有节点
         * @method traversal
         * @param { Function } fn 遍历到节点的时，传入节点作为参数，运行此函数
         * @example
         * ```javascript
         * traversal(node, function(){
         *     console.log(node.type);
         * });
         * ```
         */traversal:function traversal(fn){if(this.children&&this.children.length){nodeTraversal(this,fn);}return this;}};})();// core/htmlparser.js
/**
 * html字符串转换成uNode节点
 * @file
 * @module UE
 * @since 1.2.6.1
 *//**
 * UEditor公用空间，UEditor所有的功能都挂载在该空间下
 * @unfile
 * @module UE
 *//**
 * html字符串转换成uNode节点的静态方法
 * @method htmlparser
 * @param { String } htmlstr 要转换的html代码
 * @param { Boolean } ignoreBlank 若设置为true，转换的时候忽略\n\r\t等空白字符
 * @return { uNode } 给定的html片段转换形成的uNode对象
 * @example
 * ```javascript
 * var root = UE.htmlparser('<p><b>htmlparser</b></p>', true);
 * ```
 */var htmlparser=UE.htmlparser=function(htmlstr,ignoreBlank){//todo 原来的方式  [^"'<>\/] 有\/就不能配对上 <TD vAlign=top background=../AAA.JPG> 这样的标签了
//先去掉了，加上的原因忘了，这里先记录
var re_tag=/<(?:(?:\/([^>]+)>)|(?:!--([\S|\s]*?)-->)|(?:([^\s\/<>]+)\s*((?:(?:"[^"]*")|(?:'[^']*')|[^"'<>])*)\/?>))/g,re_attr=/([\w\-:.]+)(?:(?:\s*=\s*(?:(?:"([^"]*)")|(?:'([^']*)')|([^\s>]+)))|(?=\s|$))/g;//ie下取得的html可能会有\n存在，要去掉，在处理replace(/[\t\r\n]*/g,'');代码高量的\n不能去除
var allowEmptyTags={b:1,code:1,i:1,u:1,strike:1,s:1,tt:1,strong:1,q:1,samp:1,em:1,span:1,sub:1,img:1,sup:1,font:1,big:1,small:1,iframe:1,a:1,br:1,pre:1};htmlstr=htmlstr.replace(new RegExp(domUtils.fillChar,'g'),'');if(!ignoreBlank){htmlstr=htmlstr.replace(new RegExp('[\\r\\t\\n'+(ignoreBlank?'':' ')+']*<\/?(\\w+)\\s*(?:[^>]*)>[\\r\\t\\n'+(ignoreBlank?'':' ')+']*','g'),function(a,b){//br暂时单独处理
if(b&&allowEmptyTags[b.toLowerCase()]){return a.replace(/(^[\n\r]+)|([\n\r]+$)/g,'');}return a.replace(new RegExp('^[\\r\\n'+(ignoreBlank?'':' ')+']+'),'').replace(new RegExp('[\\r\\n'+(ignoreBlank?'':' ')+']+$'),'');});}var notTransAttrs={'href':1,'src':1};var uNode=UE.uNode,needParentNode={'td':'tr','tr':['tbody','thead','tfoot'],'tbody':'table','th':'tr','thead':'table','tfoot':'table','caption':'table','li':['ul','ol'],'dt':'dl','dd':'dl','option':'select'},needChild={'ol':'li','ul':'li'};function text(parent,data){if(needChild[parent.tagName]){var tmpNode=uNode.createElement(needChild[parent.tagName]);parent.appendChild(tmpNode);tmpNode.appendChild(uNode.createText(data));parent=tmpNode;}else{parent.appendChild(uNode.createText(data));}}function element(parent,tagName,htmlattr){var needParentTag;if(needParentTag=needParentNode[tagName]){var tmpParent=parent,hasParent;while(tmpParent.type!='root'){if(utils.isArray(needParentTag)?utils.indexOf(needParentTag,tmpParent.tagName)!=-1:needParentTag==tmpParent.tagName){parent=tmpParent;hasParent=true;break;}tmpParent=tmpParent.parentNode;}if(!hasParent){parent=element(parent,utils.isArray(needParentTag)?needParentTag[0]:needParentTag);}}//按dtd处理嵌套
//        if(parent.type != 'root' && !dtd[parent.tagName][tagName])
//            parent = parent.parentNode;
var elm=new uNode({parentNode:parent,type:'element',tagName:tagName.toLowerCase(),//是自闭合的处理一下
children:dtd.$empty[tagName]?null:[]});//如果属性存在，处理属性
if(htmlattr){var attrs={},match;while(match=re_attr.exec(htmlattr)){attrs[match[1].toLowerCase()]=notTransAttrs[match[1].toLowerCase()]?match[2]||match[3]||match[4]:utils.unhtml(match[2]||match[3]||match[4]);}elm.attrs=attrs;}//trace:3970
//        //如果parent下不能放elm
//        if(dtd.$inline[parent.tagName] && dtd.$block[elm.tagName] && !dtd[parent.tagName][elm.tagName]){
//            parent = parent.parentNode;
//            elm.parentNode = parent;
//        }
parent.children.push(elm);//如果是自闭合节点返回父亲节点
return dtd.$empty[tagName]?parent:elm;}function comment(parent,data){parent.children.push(new uNode({type:'comment',data:data,parentNode:parent}));}var match,currentIndex=0,nextIndex=0;//设置根节点
var root=new uNode({type:'root',children:[]});var currentParent=root;while(match=re_tag.exec(htmlstr)){currentIndex=match.index;try{if(currentIndex>nextIndex){//text node
text(currentParent,htmlstr.slice(nextIndex,currentIndex));}if(match[3]){if(dtd.$cdata[currentParent.tagName]){text(currentParent,match[0]);}else{//start tag
currentParent=element(currentParent,match[3].toLowerCase(),match[4]);}}else if(match[1]){if(currentParent.type!='root'){if(dtd.$cdata[currentParent.tagName]&&!dtd.$cdata[match[1]]){text(currentParent,match[0]);}else{var tmpParent=currentParent;while(currentParent.type=='element'&&currentParent.tagName!=match[1].toLowerCase()){currentParent=currentParent.parentNode;if(currentParent.type=='root'){currentParent=tmpParent;throw'break';}}//end tag
currentParent=currentParent.parentNode;}}}else if(match[2]){//comment
comment(currentParent,match[2]);}}catch(e){}nextIndex=re_tag.lastIndex;}//如果结束是文本，就有可能丢掉，所以这里手动判断一下
//例如 <li>sdfsdfsdf<li>sdfsdfsdfsdf
if(nextIndex<htmlstr.length){text(currentParent,htmlstr.slice(nextIndex));}return root;};// core/filternode.js
/**
 * UE过滤节点的静态方法
 * @file
 *//**
 * UEditor公用空间，UEditor所有的功能都挂载在该空间下
 * @module UE
 *//**
 * 根据传入节点和过滤规则过滤相应节点
 * @module UE
 * @since 1.2.6.1
 * @method filterNode
 * @param { Object } root 指定root节点
 * @param { Object } rules 过滤规则json对象
 * @example
 * ```javascript
 * UE.filterNode(root,editor.options.filterRules);
 * ```
 */var filterNode=UE.filterNode=function(){function filterNode(node,rules){switch(node.type){case'text':break;case'element':var val;if(val=rules[node.tagName]){if(val==='-'){node.parentNode.removeChild(node);}else if(utils.isFunction(val)){var parentNode=node.parentNode,index=node.getIndex();val(node);if(node.parentNode){if(node.children){for(var i=0,ci;ci=node.children[i];){filterNode(ci,rules);if(ci.parentNode){i++;}}}}else{for(var i=index,ci;ci=parentNode.children[i];){filterNode(ci,rules);if(ci.parentNode){i++;}}}}else{var attrs=val['$'];if(attrs&&node.attrs){var tmpAttrs={},tmpVal;for(var a in attrs){tmpVal=node.getAttr(a);//todo 只先对style单独处理
if(a=='style'&&utils.isArray(attrs[a])){var tmpCssStyle=[];utils.each(attrs[a],function(v){var tmp;if(tmp=node.getStyle(v)){tmpCssStyle.push(v+':'+tmp);}});tmpVal=tmpCssStyle.join(';');}if(tmpVal){tmpAttrs[a]=tmpVal;}}node.attrs=tmpAttrs;}if(node.children){for(var i=0,ci;ci=node.children[i];){filterNode(ci,rules);if(ci.parentNode){i++;}}}}}else{//如果不在名单里扣出子节点并删除该节点,cdata除外
if(dtd.$cdata[node.tagName]){node.parentNode.removeChild(node);}else{var parentNode=node.parentNode,index=node.getIndex();node.parentNode.removeChild(node,true);for(var i=index,ci;ci=parentNode.children[i];){filterNode(ci,rules);if(ci.parentNode){i++;}}}}break;case'comment':node.parentNode.removeChild(node);}}return function(root,rules){if(utils.isEmptyObject(rules)){return root;}var val;if(val=rules['-']){utils.each(val.split(' '),function(k){rules[k]='-';});}for(var i=0,ci;ci=root.children[i];){filterNode(ci,rules);if(ci.parentNode){i++;}}return root;};}();// core/plugin.js
/**
 * Created with JetBrains PhpStorm.
 * User: campaign
 * Date: 10/8/13
 * Time: 6:15 PM
 * To change this template use File | Settings | File Templates.
 */UE.plugin=function(){var _plugins={};return{register:function register(pluginName,fn,oldOptionName,afterDisabled){if(oldOptionName&&utils.isFunction(oldOptionName)){afterDisabled=oldOptionName;oldOptionName=null;}_plugins[pluginName]={optionName:oldOptionName||pluginName,execFn:fn,//当插件被禁用时执行
afterDisabled:afterDisabled};},load:function load(editor){utils.each(_plugins,function(plugin){var _export=plugin.execFn.call(editor);if(editor.options[plugin.optionName]!==false){if(_export){//后边需要再做扩展
utils.each(_export,function(v,k){switch(k.toLowerCase()){case'shortcutkey':editor.addshortcutkey(v);break;case'bindevents':utils.each(v,function(fn,eventName){editor.addListener(eventName,fn);});break;case'bindmultievents':utils.each(utils.isArray(v)?v:[v],function(event){var types=utils.trim(event.type).split(/\s+/);utils.each(types,function(eventName){editor.addListener(eventName,event.handler);});});break;case'commands':utils.each(v,function(execFn,execName){editor.commands[execName]=execFn;});break;case'outputrule':editor.addOutputRule(v);break;case'inputrule':editor.addInputRule(v);break;case'defaultoptions':editor.setOpt(v);}});}}else if(plugin.afterDisabled){plugin.afterDisabled.call(editor);}});//向下兼容
utils.each(UE.plugins,function(plugin){plugin.call(editor);});},run:function run(pluginName,editor){var plugin=_plugins[pluginName];if(plugin){plugin.exeFn.call(editor);}}};}();// core/keymap.js
var keymap=UE.keymap={'Backspace':8,'Tab':9,'Enter':13,'Shift':16,'Control':17,'Alt':18,'CapsLock':20,'Esc':27,'Spacebar':32,'PageUp':33,'PageDown':34,'End':35,'Home':36,'Left':37,'Up':38,'Right':39,'Down':40,'Insert':45,'Del':46,'NumLock':144,'Cmd':91,'=':187,'-':189,"b":66,'i':73,//回退
'z':90,'y':89,//粘贴
'v':86,'x':88,'s':83,'n':78};// core/localstorage.js
//存储媒介封装
var LocalStorage=UE.LocalStorage=function(){var storage=window.localStorage||getUserData()||null,LOCAL_FILE='localStorage';return{saveLocalData:function saveLocalData(key,data){if(storage&&data){storage.setItem(key,data);return true;}return false;},getLocalData:function getLocalData(key){if(storage){return storage.getItem(key);}return null;},removeItem:function removeItem(key){storage&&storage.removeItem(key);}};function getUserData(){var container=document.createElement("div");container.style.display="none";if(!container.addBehavior){return null;}container.addBehavior("#default#userdata");return{getItem:function getItem(key){var result=null;try{document.body.appendChild(container);container.load(LOCAL_FILE);result=container.getAttribute(key);document.body.removeChild(container);}catch(e){}return result;},setItem:function setItem(key,value){document.body.appendChild(container);container.setAttribute(key,value);container.save(LOCAL_FILE);document.body.removeChild(container);},//// 暂时没有用到
//clear: function () {
//
//    var expiresTime = new Date();
//    expiresTime.setFullYear(expiresTime.getFullYear() - 1);
//    document.body.appendChild(container);
//    container.expires = expiresTime.toUTCString();
//    container.save(LOCAL_FILE);
//    document.body.removeChild(container);
//
//},
removeItem:function removeItem(key){document.body.appendChild(container);container.removeAttribute(key);container.save(LOCAL_FILE);document.body.removeChild(container);}};}}();(function(){var ROOTKEY='ueditor_preference';UE.Editor.prototype.setPreferences=function(key,value){var obj={};if(utils.isString(key)){obj[key]=value;}else{obj=key;}var data=LocalStorage.getLocalData(ROOTKEY);if(data&&(data=utils.str2json(data))){utils.extend(data,obj);}else{data=obj;}data&&LocalStorage.saveLocalData(ROOTKEY,utils.json2str(data));};UE.Editor.prototype.getPreferences=function(key){var data=LocalStorage.getLocalData(ROOTKEY);if(data&&(data=utils.str2json(data))){return key?data[key]:data;}return null;};UE.Editor.prototype.removePreferences=function(key){var data=LocalStorage.getLocalData(ROOTKEY);if(data&&(data=utils.str2json(data))){data[key]=undefined;delete data[key];}data&&LocalStorage.saveLocalData(ROOTKEY,utils.json2str(data));};})();// plugins/defaultfilter.js
///import core
///plugin 编辑器默认的过滤转换机制
UE.plugins['defaultfilter']=function(){var me=this;me.setOpt({'allowDivTransToP':true,'disabledTableInTable':true});//默认的过滤处理
//进入编辑器的内容处理
me.addInputRule(function(root){var allowDivTransToP=this.options.allowDivTransToP;var val;function tdParent(node){while(node&&node.type=='element'){if(node.tagName=='td'){return true;}node=node.parentNode;}return false;}//进行默认的处理
root.traversal(function(node){if(node.type=='element'){if(!dtd.$cdata[node.tagName]&&me.options.autoClearEmptyNode&&dtd.$inline[node.tagName]&&!dtd.$empty[node.tagName]&&(!node.attrs||utils.isEmptyObject(node.attrs))){if(!node.firstChild())node.parentNode.removeChild(node);else if(node.tagName=='span'&&(!node.attrs||utils.isEmptyObject(node.attrs))){node.parentNode.removeChild(node,true);}return;}switch(node.tagName){case'style':case'script':node.setAttr({cdata_tag:node.tagName,cdata_data:node.innerHTML()||'','_ue_custom_node_':'true'});node.tagName='div';node.innerHTML('');break;case'a':if(val=node.getAttr('href')){node.setAttr('_href',val);}break;case'img'://todo base64暂时去掉，后边做远程图片上传后，干掉这个
if(val=node.getAttr('src')){if(/^data:/.test(val)){node.parentNode.removeChild(node);break;}}node.setAttr('_src',node.getAttr('src'));break;case'span':if(browser.webkit&&(val=node.getStyle('white-space'))){if(/nowrap|normal/.test(val)){node.setStyle('white-space','');if(me.options.autoClearEmptyNode&&utils.isEmptyObject(node.attrs)){node.parentNode.removeChild(node,true);}}}val=node.getAttr('id');if(val&&/^_baidu_bookmark_/i.test(val)){node.parentNode.removeChild(node);}break;case'p':if(val=node.getAttr('align')){node.setAttr('align');node.setStyle('text-align',val);}//trace:3431
//                        var cssStyle = node.getAttr('style');
//                        if (cssStyle) {
//                            cssStyle = cssStyle.replace(/(margin|padding)[^;]+/g, '');
//                            node.setAttr('style', cssStyle)
//
//                        }
//p标签不允许嵌套
utils.each(node.children,function(n){if(n.type=='element'&&n.tagName=='p'){var next=n.nextSibling();node.parentNode.insertAfter(n,node);var last=n;while(next){var tmp=next.nextSibling();node.parentNode.insertAfter(next,last);last=next;next=tmp;}return false;}});if(!node.firstChild()){node.innerHTML(browser.ie?'&nbsp;':'<br/>');}break;case'div':if(node.getAttr('cdata_tag')){break;}//针对代码这里不处理插入代码的div
val=node.getAttr('class');if(val&&/^line number\d+/.test(val)){break;}if(!allowDivTransToP){break;}var tmpNode,p=UE.uNode.createElement('p');while(tmpNode=node.firstChild()){if(tmpNode.type=='text'||!UE.dom.dtd.$block[tmpNode.tagName]){p.appendChild(tmpNode);}else{if(p.firstChild()){node.parentNode.insertBefore(p,node);p=UE.uNode.createElement('p');}else{node.parentNode.insertBefore(tmpNode,node);}}}if(p.firstChild()){node.parentNode.insertBefore(p,node);}node.parentNode.removeChild(node);break;case'dl':node.tagName='ul';break;case'dt':case'dd':node.tagName='li';break;case'li':var className=node.getAttr('class');if(!className||!/list\-/.test(className)){node.setAttr();}var tmpNodes=node.getNodesByTagName('ol ul');UE.utils.each(tmpNodes,function(n){node.parentNode.insertAfter(n,node);});break;case'td':case'th':case'caption':if(!node.children||!node.children.length){node.appendChild(browser.ie11below?UE.uNode.createText(' '):UE.uNode.createElement('br'));}break;case'table':if(me.options.disabledTableInTable&&tdParent(node)){node.parentNode.insertBefore(UE.uNode.createText(node.innerText()),node);node.parentNode.removeChild(node);}}}//            if(node.type == 'comment'){
//                node.parentNode.removeChild(node);
//            }
});});//从编辑器出去的内容处理
me.addOutputRule(function(root){var val;root.traversal(function(node){if(node.type=='element'){if(me.options.autoClearEmptyNode&&dtd.$inline[node.tagName]&&!dtd.$empty[node.tagName]&&(!node.attrs||utils.isEmptyObject(node.attrs))){if(!node.firstChild())node.parentNode.removeChild(node);else if(node.tagName=='span'&&(!node.attrs||utils.isEmptyObject(node.attrs))){node.parentNode.removeChild(node,true);}return;}switch(node.tagName){case'div':if(val=node.getAttr('cdata_tag')){node.tagName=val;node.appendChild(UE.uNode.createText(node.getAttr('cdata_data')));node.setAttr({cdata_tag:'',cdata_data:'','_ue_custom_node_':''});}break;case'a':if(val=node.getAttr('_href')){node.setAttr({'href':utils.html(val),'_href':''});}break;break;case'span':val=node.getAttr('id');if(val&&/^_baidu_bookmark_/i.test(val)){node.parentNode.removeChild(node);}break;case'img':if(val=node.getAttr('_src')){node.setAttr({'src':node.getAttr('_src'),'_src':''});}}}});});};// plugins/inserthtml.js
/**
 * 插入html字符串插件
 * @file
 * @since 1.2.6.1
 *//**
 * 插入html代码
 * @command inserthtml
 * @method execCommand
 * @param { String } cmd 命令字符串
 * @param { String } html 插入的html字符串
 * @remaind 插入的标签内容是在当前的选区位置上插入，如果当前是闭合状态，那直接插入内容， 如果当前是选中状态，将先清除当前选中内容后，再做插入
 * @warning 注意:该命令会对当前选区的位置，对插入的内容进行过滤转换处理。 过滤的规则遵循html语意化的原则。
 * @example
 * ```javascript
 * //xxx[BB]xxx 当前选区为非闭合选区，选中BB这两个文本
 * //执行命令，插入<b>CC</b>
 * //插入后的效果 xxx<b>CC</b>xxx
 * //<p>xx|xxx</p> 当前选区为闭合状态
 * //插入<p>CC</p>
 * //结果 <p>xx</p><p>CC</p><p>xxx</p>
 * //<p>xxxx</p>|</p>xxx</p> 当前选区在两个p标签之间
 * //插入 xxxx
 * //结果 <p>xxxx</p><p>xxxx</p></p>xxx</p>
 * ```
 */UE.commands['inserthtml']={execCommand:function execCommand(command,html,notNeedFilter){var me=this,range,div;if(!html){return;}if(me.fireEvent('beforeinserthtml',html)===true){return;}range=me.selection.getRange();div=range.document.createElement('div');div.style.display='inline';if(!notNeedFilter){var root=UE.htmlparser(html);//如果给了过滤规则就先进行过滤
if(me.options.filterRules){UE.filterNode(root,me.options.filterRules);}//执行默认的处理
me.filterInputRule(root);html=root.toHtml();}div.innerHTML=utils.trim(html);if(!range.collapsed){var tmpNode=range.startContainer;if(domUtils.isFillChar(tmpNode)){range.setStartBefore(tmpNode);}tmpNode=range.endContainer;if(domUtils.isFillChar(tmpNode)){range.setEndAfter(tmpNode);}range.txtToElmBoundary();//结束边界可能放到了br的前边，要把br包含进来
// x[xxx]<br/>
if(range.endContainer&&range.endContainer.nodeType==1){tmpNode=range.endContainer.childNodes[range.endOffset];if(tmpNode&&domUtils.isBr(tmpNode)){range.setEndAfter(tmpNode);}}if(range.startOffset==0){tmpNode=range.startContainer;if(domUtils.isBoundaryNode(tmpNode,'firstChild')){tmpNode=range.endContainer;if(range.endOffset==(tmpNode.nodeType==3?tmpNode.nodeValue.length:tmpNode.childNodes.length)&&domUtils.isBoundaryNode(tmpNode,'lastChild')){me.body.innerHTML='<p>'+(browser.ie?'':'<br/>')+'</p>';range.setStart(me.body.firstChild,0).collapse(true);}}}!range.collapsed&&range.deleteContents();if(range.startContainer.nodeType==1){var child=range.startContainer.childNodes[range.startOffset],pre;if(child&&domUtils.isBlockElm(child)&&(pre=child.previousSibling)&&domUtils.isBlockElm(pre)){range.setEnd(pre,pre.childNodes.length).collapse();while(child.firstChild){pre.appendChild(child.firstChild);}domUtils.remove(child);}}}var child,parent,pre,tmp,hadBreak=0,nextNode;//如果当前位置选中了fillchar要干掉，要不会产生空行
if(range.inFillChar()){child=range.startContainer;if(domUtils.isFillChar(child)){range.setStartBefore(child).collapse(true);domUtils.remove(child);}else if(domUtils.isFillChar(child,true)){child.nodeValue=child.nodeValue.replace(fillCharReg,'');range.startOffset--;range.collapsed&&range.collapse(true);}}//列表单独处理
var li=domUtils.findParentByTagName(range.startContainer,'li',true);if(li){var next,last;while(child=div.firstChild){//针对hr单独处理一下先
while(child&&(child.nodeType==3||!domUtils.isBlockElm(child)||child.tagName=='HR')){next=child.nextSibling;range.insertNode(child).collapse();last=child;child=next;}if(child){if(/^(ol|ul)$/i.test(child.tagName)){while(child.firstChild){last=child.firstChild;domUtils.insertAfter(li,child.firstChild);li=li.nextSibling;}domUtils.remove(child);}else{var tmpLi;next=child.nextSibling;tmpLi=me.document.createElement('li');domUtils.insertAfter(li,tmpLi);tmpLi.appendChild(child);last=child;child=next;li=tmpLi;}}}li=domUtils.findParentByTagName(range.startContainer,'li',true);if(domUtils.isEmptyBlock(li)){domUtils.remove(li);}if(last){range.setStartAfter(last).collapse(true).select(true);}}else{while(child=div.firstChild){if(hadBreak){var p=me.document.createElement('p');while(child&&(child.nodeType==3||!dtd.$block[child.tagName])){nextNode=child.nextSibling;p.appendChild(child);child=nextNode;}if(p.firstChild){child=p;}}range.insertNode(child);nextNode=child.nextSibling;if(!hadBreak&&child.nodeType==domUtils.NODE_ELEMENT&&domUtils.isBlockElm(child)){parent=domUtils.findParent(child,function(node){return domUtils.isBlockElm(node);});if(parent&&parent.tagName.toLowerCase()!='body'&&!(dtd[parent.tagName][child.nodeName]&&child.parentNode===parent)){if(!dtd[parent.tagName][child.nodeName]){pre=parent;}else{tmp=child.parentNode;while(tmp!==parent){pre=tmp;tmp=tmp.parentNode;}}domUtils.breakParent(child,pre||tmp);//去掉break后前一个多余的节点  <p>|<[p> ==> <p></p><div></div><p>|</p>
var pre=child.previousSibling;domUtils.trimWhiteTextNode(pre);if(!pre.childNodes.length){domUtils.remove(pre);}//trace:2012,在非ie的情况，切开后剩下的节点有可能不能点入光标添加br占位
if(!browser.ie&&(next=child.nextSibling)&&domUtils.isBlockElm(next)&&next.lastChild&&!domUtils.isBr(next.lastChild)){next.appendChild(me.document.createElement('br'));}hadBreak=1;}}var next=child.nextSibling;if(!div.firstChild&&next&&domUtils.isBlockElm(next)){range.setStart(next,0).collapse(true);break;}range.setEndAfter(child).collapse();}child=range.startContainer;if(nextNode&&domUtils.isBr(nextNode)){domUtils.remove(nextNode);}//用chrome可能有空白展位符
if(domUtils.isBlockElm(child)&&domUtils.isEmptyNode(child)){if(nextNode=child.nextSibling){domUtils.remove(child);if(nextNode.nodeType==1&&dtd.$block[nextNode.tagName]){range.setStart(nextNode,0).collapse(true).shrinkBoundary();}}else{try{child.innerHTML=browser.ie?domUtils.fillChar:'<br/>';}catch(e){range.setStartBefore(child);domUtils.remove(child);}}}//加上true因为在删除表情等时会删两次，第一次是删的fillData
try{range.select(true);}catch(e){}}setTimeout(function(){range=me.selection.getRange();range.scrollToView(me.autoHeightEnabled,me.autoHeightEnabled?domUtils.getXY(me.iframe).y:0);me.fireEvent('afterinserthtml',html);},200);}};// plugins/autotypeset.js
/**
 * 自动排版
 * @file
 * @since 1.2.6.1
 *//**
 * 对当前编辑器的内容执行自动排版， 排版的行为根据config配置文件里的“autotypeset”选项进行控制。
 * @command autotypeset
 * @method execCommand
 * @param { String } cmd 命令字符串
 * @example
 * ```javascript
 * editor.execCommand( 'autotypeset' );
 * ```
 */UE.plugins['autotypeset']=function(){this.setOpt({'autotypeset':{mergeEmptyline:true,//合并空行
removeClass:true,//去掉冗余的class
removeEmptyline:false,//去掉空行
textAlign:"left",//段落的排版方式，可以是 left,right,center,justify 去掉这个属性表示不执行排版
imageBlockLine:'center',//图片的浮动方式，独占一行剧中,左右浮动，默认: center,left,right,none 去掉这个属性表示不执行排版
pasteFilter:false,//根据规则过滤没事粘贴进来的内容
clearFontSize:false,//去掉所有的内嵌字号，使用编辑器默认的字号
clearFontFamily:false,//去掉所有的内嵌字体，使用编辑器默认的字体
removeEmptyNode:false,// 去掉空节点
//可以去掉的标签
removeTagNames:utils.extend({div:1},dtd.$removeEmpty),indent:false,// 行首缩进
indentValue:'2em',//行首缩进的大小
bdc2sb:false,tobdc:false}});var me=this,opt=me.options.autotypeset,remainClass={'selectTdClass':1,'pagebreak':1,'anchorclass':1},remainTag={'li':1},tags={div:1,p:1,//trace:2183 这些也认为是行
blockquote:1,center:1,h1:1,h2:1,h3:1,h4:1,h5:1,h6:1,span:1},highlightCont;//升级了版本，但配置项目里没有autotypeset
if(!opt){return;}readLocalOpts();function isLine(node,notEmpty){if(!node||node.nodeType==3)return 0;if(domUtils.isBr(node))return 1;if(node&&node.parentNode&&tags[node.tagName.toLowerCase()]){if(highlightCont&&highlightCont.contains(node)||node.getAttribute('pagebreak')){return 0;}return notEmpty?!domUtils.isEmptyBlock(node):domUtils.isEmptyBlock(node,new RegExp('[\\s'+domUtils.fillChar+']','g'));}}function removeNotAttributeSpan(node){if(!node.style.cssText){domUtils.removeAttributes(node,['style']);if(node.tagName.toLowerCase()=='span'&&domUtils.hasNoAttributes(node)){domUtils.remove(node,true);}}}function autotype(type,html){var me=this,cont;if(html){if(!opt.pasteFilter){return;}cont=me.document.createElement('div');cont.innerHTML=html.html;}else{cont=me.document.body;}var nodes=domUtils.getElementsByTagName(cont,'*');// 行首缩进，段落方向，段间距，段内间距
for(var i=0,ci;ci=nodes[i++];){if(me.fireEvent('excludeNodeinautotype',ci)===true){continue;}//font-size
if(opt.clearFontSize&&ci.style.fontSize){domUtils.removeStyle(ci,'font-size');removeNotAttributeSpan(ci);}//font-family
if(opt.clearFontFamily&&ci.style.fontFamily){domUtils.removeStyle(ci,'font-family');removeNotAttributeSpan(ci);}if(isLine(ci)){//合并空行
if(opt.mergeEmptyline){var next=ci.nextSibling,tmpNode,isBr=domUtils.isBr(ci);while(isLine(next)){tmpNode=next;next=tmpNode.nextSibling;if(isBr&&(!next||next&&!domUtils.isBr(next))){break;}domUtils.remove(tmpNode);}}//去掉空行，保留占位的空行
if(opt.removeEmptyline&&domUtils.inDoc(ci,cont)&&!remainTag[ci.parentNode.tagName.toLowerCase()]){if(domUtils.isBr(ci)){next=ci.nextSibling;if(next&&!domUtils.isBr(next)){continue;}}domUtils.remove(ci);continue;}}if(isLine(ci,true)&&ci.tagName!='SPAN'){if(opt.indent){ci.style.textIndent=opt.indentValue;}if(opt.textAlign){ci.style.textAlign=opt.textAlign;}// if(opt.lineHeight)
//     ci.style.lineHeight = opt.lineHeight + 'cm';
}//去掉class,保留的class不去掉
if(opt.removeClass&&ci.className&&!remainClass[ci.className.toLowerCase()]){if(highlightCont&&highlightCont.contains(ci)){continue;}domUtils.removeAttributes(ci,['class']);}//表情不处理
if(opt.imageBlockLine&&ci.tagName.toLowerCase()=='img'&&!ci.getAttribute('emotion')){if(html){var img=ci;switch(opt.imageBlockLine){case'left':case'right':case'none':var pN=img.parentNode,tmpNode,pre,next;while(dtd.$inline[pN.tagName]||pN.tagName=='A'){pN=pN.parentNode;}tmpNode=pN;if(tmpNode.tagName=='P'&&domUtils.getStyle(tmpNode,'text-align')=='center'){if(!domUtils.isBody(tmpNode)&&domUtils.getChildCount(tmpNode,function(node){return!domUtils.isBr(node)&&!domUtils.isWhitespace(node);})==1){pre=tmpNode.previousSibling;next=tmpNode.nextSibling;if(pre&&next&&pre.nodeType==1&&next.nodeType==1&&pre.tagName==next.tagName&&domUtils.isBlockElm(pre)){pre.appendChild(tmpNode.firstChild);while(next.firstChild){pre.appendChild(next.firstChild);}domUtils.remove(tmpNode);domUtils.remove(next);}else{domUtils.setStyle(tmpNode,'text-align','');}}}domUtils.setStyle(img,'float',opt.imageBlockLine);break;case'center':if(me.queryCommandValue('imagefloat')!='center'){pN=img.parentNode;domUtils.setStyle(img,'float','none');tmpNode=img;while(pN&&domUtils.getChildCount(pN,function(node){return!domUtils.isBr(node)&&!domUtils.isWhitespace(node);})==1&&(dtd.$inline[pN.tagName]||pN.tagName=='A')){tmpNode=pN;pN=pN.parentNode;}var pNode=me.document.createElement('p');domUtils.setAttributes(pNode,{style:'text-align:center'});tmpNode.parentNode.insertBefore(pNode,tmpNode);pNode.appendChild(tmpNode);domUtils.setStyle(tmpNode,'float','');}}}else{var range=me.selection.getRange();range.selectNode(ci).select();me.execCommand('imagefloat',opt.imageBlockLine);}}//去掉冗余的标签
if(opt.removeEmptyNode){if(opt.removeTagNames[ci.tagName.toLowerCase()]&&domUtils.hasNoAttributes(ci)&&domUtils.isEmptyBlock(ci)){domUtils.remove(ci);}}}if(opt.tobdc){var root=UE.htmlparser(cont.innerHTML);root.traversal(function(node){if(node.type=='text'){node.data=ToDBC(node.data);}});cont.innerHTML=root.toHtml();}if(opt.bdc2sb){var root=UE.htmlparser(cont.innerHTML);root.traversal(function(node){if(node.type=='text'){node.data=DBC2SB(node.data);}});cont.innerHTML=root.toHtml();}if(html){html.html=cont.innerHTML;}}if(opt.pasteFilter){me.addListener('beforepaste',autotype);}function DBC2SB(str){var result='';for(var i=0;i<str.length;i++){var code=str.charCodeAt(i);//获取当前字符的unicode编码
if(code>=65281&&code<=65373)//在这个unicode编码范围中的是所有的英文字母已经各种字符
{result+=String.fromCharCode(str.charCodeAt(i)-65248);//把全角字符的unicode编码转换为对应半角字符的unicode码
}else if(code==12288)//空格
{result+=String.fromCharCode(str.charCodeAt(i)-12288+32);}else{result+=str.charAt(i);}}return result;}function ToDBC(txtstring){txtstring=utils.html(txtstring);var tmp="";var mark="";/*用于判断,如果是html尖括里的标记,则不进行全角的转换*/for(var i=0;i<txtstring.length;i++){if(txtstring.charCodeAt(i)==32){tmp=tmp+String.fromCharCode(12288);}else if(txtstring.charCodeAt(i)<127){tmp=tmp+String.fromCharCode(txtstring.charCodeAt(i)+65248);}else{tmp+=txtstring.charAt(i);}}return tmp;}function readLocalOpts(){var cookieOpt=me.getPreferences('autotypeset');utils.extend(me.options.autotypeset,cookieOpt);}me.commands['autotypeset']={execCommand:function execCommand(){me.removeListener('beforepaste',autotype);if(opt.pasteFilter){me.addListener('beforepaste',autotype);}autotype.call(me);}};};// plugins/autosubmit.js
/**
 * 快捷键提交
 * @file
 * @since 1.2.6.1
 *//**
 * 提交表单
 * @command autosubmit
 * @method execCommand
 * @param { String } cmd 命令字符串
 * @example
 * ```javascript
 * editor.execCommand( 'autosubmit' );
 * ```
 */UE.plugin.register('autosubmit',function(){return{shortcutkey:{"autosubmit":"ctrl+13"//手动提交
},commands:{'autosubmit':{execCommand:function execCommand(){var me=this,form=domUtils.findParentByTagName(me.iframe,"form",false);if(form){if(me.fireEvent("beforesubmit")===false){return;}me.sync();form.submit();}}}}};});// plugins/background.js
/**
 * 背景插件，为UEditor提供设置背景功能
 * @file
 * @since 1.2.6.1
 */UE.plugin.register('background',function(){var me=this,cssRuleId='editor_background',isSetColored,reg=new RegExp('body[\\s]*\\{(.+)\\}','i');function stringToObj(str){var obj={},styles=str.split(';');utils.each(styles,function(v){var index=v.indexOf(':'),key=utils.trim(v.substr(0,index)).toLowerCase();key&&(obj[key]=utils.trim(v.substr(index+1)||''));});return obj;}function setBackground(obj){if(obj){var styles=[];for(var name in obj){if(obj.hasOwnProperty(name)){styles.push(name+":"+obj[name]+'; ');}}utils.cssRule(cssRuleId,styles.length?'body{'+styles.join("")+'}':'',me.document);}else{utils.cssRule(cssRuleId,'',me.document);}}//重写editor.hasContent方法
var orgFn=me.hasContents;me.hasContents=function(){if(me.queryCommandValue('background')){return true;}return orgFn.apply(me,arguments);};return{bindEvents:{'getAllHtml':function getAllHtml(type,headHtml){var body=this.body,su=domUtils.getComputedStyle(body,"background-image"),url="";if(su.indexOf(me.options.imagePath)>0){url=su.substring(su.indexOf(me.options.imagePath),su.length-1).replace(/"|\(|\)/ig,"");}else{url=su!="none"?su.replace(/url\("?|"?\)/ig,""):"";}var html='<style type="text/css">body{';var bgObj={"background-color":domUtils.getComputedStyle(body,"background-color")||"#ffffff",'background-image':url?'url('+url+')':'','background-repeat':domUtils.getComputedStyle(body,"background-repeat")||"",'background-position':browser.ie?domUtils.getComputedStyle(body,"background-position-x")+" "+domUtils.getComputedStyle(body,"background-position-y"):domUtils.getComputedStyle(body,"background-position"),'height':domUtils.getComputedStyle(body,"height")};for(var name in bgObj){if(bgObj.hasOwnProperty(name)){html+=name+":"+bgObj[name]+"; ";}}html+='}</style> ';headHtml.push(html);},'aftersetcontent':function aftersetcontent(){if(isSetColored==false)setBackground();}},inputRule:function inputRule(root){isSetColored=false;utils.each(root.getNodesByTagName('p'),function(p){var styles=p.getAttr('data-background');if(styles){isSetColored=true;setBackground(stringToObj(styles));p.parentNode.removeChild(p);}});},outputRule:function outputRule(root){var me=this,styles=(utils.cssRule(cssRuleId,me.document)||'').replace(/[\n\r]+/g,'').match(reg);if(styles){root.appendChild(UE.uNode.createElement('<p style="display:none;" data-background="'+utils.trim(styles[1].replace(/"/g,'').replace(/[\s]+/g,' '))+'"><br/></p>'));}},commands:{'background':{execCommand:function execCommand(cmd,obj){setBackground(obj);},queryCommandValue:function queryCommandValue(){var me=this,styles=(utils.cssRule(cssRuleId,me.document)||'').replace(/[\n\r]+/g,'').match(reg);return styles?stringToObj(styles[1]):null;},notNeedUndo:true}}};});// plugins/image.js
/**
 * 图片插入、排版插件
 * @file
 * @since 1.2.6.1
 *//**
 * 图片对齐方式
 * @command imagefloat
 * @method execCommand
 * @remind 值center为独占一行居中
 * @param { String } cmd 命令字符串
 * @param { String } align 对齐方式，可传left、right、none、center
 * @remaind center表示图片独占一行
 * @example
 * ```javascript
 * editor.execCommand( 'imagefloat', 'center' );
 * ```
 *//**
 * 如果选区所在位置是图片区域
 * @command imagefloat
 * @method queryCommandValue
 * @param { String } cmd 命令字符串
 * @return { String } 返回图片对齐方式
 * @example
 * ```javascript
 * editor.queryCommandValue( 'imagefloat' );
 * ```
 */UE.commands['imagefloat']={execCommand:function execCommand(cmd,align){var me=this,range=me.selection.getRange();if(!range.collapsed){var img=range.getClosedNode();if(img&&img.tagName=='IMG'){switch(align){case'left':case'right':case'none':var pN=img.parentNode,tmpNode,pre,next;while(dtd.$inline[pN.tagName]||pN.tagName=='A'){pN=pN.parentNode;}tmpNode=pN;if(tmpNode.tagName=='P'&&domUtils.getStyle(tmpNode,'text-align')=='center'){if(!domUtils.isBody(tmpNode)&&domUtils.getChildCount(tmpNode,function(node){return!domUtils.isBr(node)&&!domUtils.isWhitespace(node);})==1){pre=tmpNode.previousSibling;next=tmpNode.nextSibling;if(pre&&next&&pre.nodeType==1&&next.nodeType==1&&pre.tagName==next.tagName&&domUtils.isBlockElm(pre)){pre.appendChild(tmpNode.firstChild);while(next.firstChild){pre.appendChild(next.firstChild);}domUtils.remove(tmpNode);domUtils.remove(next);}else{domUtils.setStyle(tmpNode,'text-align','');}}range.selectNode(img).select();}domUtils.setStyle(img,'float',align=='none'?'':align);if(align=='none'){domUtils.removeAttributes(img,'align');}break;case'center':if(me.queryCommandValue('imagefloat')!='center'){pN=img.parentNode;domUtils.setStyle(img,'float','');domUtils.removeAttributes(img,'align');tmpNode=img;while(pN&&domUtils.getChildCount(pN,function(node){return!domUtils.isBr(node)&&!domUtils.isWhitespace(node);})==1&&(dtd.$inline[pN.tagName]||pN.tagName=='A')){tmpNode=pN;pN=pN.parentNode;}range.setStartBefore(tmpNode).setCursor(false);pN=me.document.createElement('div');pN.appendChild(tmpNode);domUtils.setStyle(tmpNode,'float','');me.execCommand('insertHtml','<p id="_img_parent_tmp" style="text-align:center">'+pN.innerHTML+'</p>');tmpNode=me.document.getElementById('_img_parent_tmp');tmpNode.removeAttribute('id');tmpNode=tmpNode.firstChild;range.selectNode(tmpNode).select();//去掉后边多余的元素
next=tmpNode.parentNode.nextSibling;if(next&&domUtils.isEmptyNode(next)){domUtils.remove(next);}}break;}}}},queryCommandValue:function queryCommandValue(){var range=this.selection.getRange(),startNode,floatStyle;if(range.collapsed){return'none';}startNode=range.getClosedNode();if(startNode&&startNode.nodeType==1&&startNode.tagName=='IMG'){floatStyle=domUtils.getComputedStyle(startNode,'float')||startNode.getAttribute('align');if(floatStyle=='none'){floatStyle=domUtils.getComputedStyle(startNode.parentNode,'text-align')=='center'?'center':floatStyle;}return{left:1,right:1,center:1}[floatStyle]?floatStyle:'none';}return'none';},queryCommandState:function queryCommandState(){var range=this.selection.getRange(),startNode;if(range.collapsed)return-1;startNode=range.getClosedNode();if(startNode&&startNode.nodeType==1&&startNode.tagName=='IMG'){return 0;}return-1;}};/**
 * 插入图片
 * @command insertimage
 * @method execCommand
 * @param { String } cmd 命令字符串
 * @param { Object } opt 属性键值对，这些属性都将被复制到当前插入图片
 * @remind 该命令第二个参数可接受一个图片配置项对象的数组，可以插入多张图片，
 * 此时数组的每一个元素都是一个Object类型的图片属性集合。
 * @example
 * ```javascript
 * editor.execCommand( 'insertimage', {
 *     src:'a/b/c.jpg',
 *     width:'100',
 *     height:'100'
 * } );
 * ```
 * @example
 * ```javascript
 * editor.execCommand( 'insertimage', [{
 *     src:'a/b/c.jpg',
 *     width:'100',
 *     height:'100'
 * },{
 *     src:'a/b/d.jpg',
 *     width:'100',
 *     height:'100'
 * }] );
 * ```
 */UE.commands['insertimage']={execCommand:function execCommand(cmd,opt){opt=utils.isArray(opt)?opt:[opt];if(!opt.length){return;}var me=this,range=me.selection.getRange(),img=range.getClosedNode();if(me.fireEvent('beforeinsertimage',opt)===true){return;}function unhtmlData(imgCi){utils.each('width,height,border,hspace,vspace'.split(','),function(item){if(imgCi[item]){imgCi[item]=parseInt(imgCi[item],10)||0;}});utils.each('src,_src'.split(','),function(item){if(imgCi[item]){imgCi[item]=utils.unhtmlForUrl(imgCi[item]);}});utils.each('title,alt'.split(','),function(item){if(imgCi[item]){imgCi[item]=utils.unhtml(imgCi[item]);}});}if(img&&/img/i.test(img.tagName)&&(img.className!="edui-faked-video"||img.className.indexOf("edui-upload-video")!=-1)&&!img.getAttribute("word_img")){var first=opt.shift();var floatStyle=first['floatStyle'];delete first['floatStyle'];////                img.style.border = (first.border||0) +"px solid #000";
////                img.style.margin = (first.margin||0) +"px";
//                img.style.cssText += ';margin:' + (first.margin||0) +"px;" + 'border:' + (first.border||0) +"px solid #000";
domUtils.setAttributes(img,first);me.execCommand('imagefloat',floatStyle);if(opt.length>0){range.setStartAfter(img).setCursor(false,true);me.execCommand('insertimage',opt);}}else{var html=[],str='',ci;ci=opt[0];if(opt.length==1){unhtmlData(ci);str='<img src="'+ci.src+'" '+(ci._src?' _src="'+ci._src+'" ':'')+(ci.width?'width="'+ci.width+'" ':'')+(ci.height?' height="'+ci.height+'" ':'')+(ci['floatStyle']=='left'||ci['floatStyle']=='right'?' style="float:'+ci['floatStyle']+';"':'')+(ci.title&&ci.title!=""?' title="'+ci.title+'"':'')+(ci.border&&ci.border!="0"?' border="'+ci.border+'"':'')+(ci.alt&&ci.alt!=""?' alt="'+ci.alt+'"':'')+(ci.hspace&&ci.hspace!="0"?' hspace = "'+ci.hspace+'"':'')+(ci.vspace&&ci.vspace!="0"?' vspace = "'+ci.vspace+'"':'')+'/>';if(ci['floatStyle']=='center'){str='<p style="text-align: center">'+str+'</p>';}html.push(str);}else{for(var i=0;ci=opt[i++];){unhtmlData(ci);str='<p '+(ci['floatStyle']=='center'?'style="text-align: center" ':'')+'><img src="'+ci.src+'" '+(ci.width?'width="'+ci.width+'" ':'')+(ci._src?' _src="'+ci._src+'" ':'')+(ci.height?' height="'+ci.height+'" ':'')+' style="'+(ci['floatStyle']&&ci['floatStyle']!='center'?'float:'+ci['floatStyle']+';':'')+(ci.border||'')+'" '+(ci.title?' title="'+ci.title+'"':'')+' /></p>';html.push(str);}}me.execCommand('insertHtml',html.join(''));}me.fireEvent('afterinsertimage',opt);}};// plugins/justify.js
/**
 * 段落格式
 * @file
 * @since 1.2.6.1
 *//**
 * 段落对齐方式
 * @command justify
 * @method execCommand
 * @param { String } cmd 命令字符串
 * @param { String } align 对齐方式：left => 居左，right => 居右，center => 居中，justify => 两端对齐
 * @example
 * ```javascript
 * editor.execCommand( 'justify', 'center' );
 * ```
 *//**
 * 如果选区所在位置是段落区域，返回当前段落对齐方式
 * @command justify
 * @method queryCommandValue
 * @param { String } cmd 命令字符串
 * @return { String } 返回段落对齐方式
 * @example
 * ```javascript
 * editor.queryCommandValue( 'justify' );
 * ```
 */UE.plugins['justify']=function(){var me=this,block=domUtils.isBlockElm,defaultValue={left:1,right:1,center:1,justify:1},doJustify=function doJustify(range,style){var bookmark=range.createBookmark(),filterFn=function filterFn(node){return node.nodeType==1?node.tagName.toLowerCase()!='br'&&!domUtils.isBookmarkNode(node):!domUtils.isWhitespace(node);};range.enlarge(true);var bookmark2=range.createBookmark(),current=domUtils.getNextDomNode(bookmark2.start,false,filterFn),tmpRange=range.cloneRange(),tmpNode;while(current&&!(domUtils.getPosition(current,bookmark2.end)&domUtils.POSITION_FOLLOWING)){if(current.nodeType==3||!block(current)){tmpRange.setStartBefore(current);while(current&&current!==bookmark2.end&&!block(current)){tmpNode=current;current=domUtils.getNextDomNode(current,false,null,function(node){return!block(node);});}tmpRange.setEndAfter(tmpNode);var common=tmpRange.getCommonAncestor();if(!domUtils.isBody(common)&&block(common)){domUtils.setStyles(common,utils.isString(style)?{'text-align':style}:style);current=common;}else{var p=range.document.createElement('p');domUtils.setStyles(p,utils.isString(style)?{'text-align':style}:style);var frag=tmpRange.extractContents();p.appendChild(frag);tmpRange.insertNode(p);current=p;}current=domUtils.getNextDomNode(current,false,filterFn);}else{current=domUtils.getNextDomNode(current,true,filterFn);}}return range.moveToBookmark(bookmark2).moveToBookmark(bookmark);};UE.commands['justify']={execCommand:function execCommand(cmdName,align){var range=this.selection.getRange(),txt;//闭合时单独处理
if(range.collapsed){txt=this.document.createTextNode('p');range.insertNode(txt);}doJustify(range,align);if(txt){range.setStartBefore(txt).collapse(true);domUtils.remove(txt);}range.select();return true;},queryCommandValue:function queryCommandValue(){var startNode=this.selection.getStart(),value=domUtils.getComputedStyle(startNode,'text-align');return defaultValue[value]?value:'left';},queryCommandState:function queryCommandState(){var start=this.selection.getStart(),cell=start&&domUtils.findParentByTagName(start,["td","th","caption"],true);return cell?-1:0;}};};// plugins/font.js
/**
 * 字体颜色,背景色,字号,字体,下划线,删除线
 * @file
 * @since 1.2.6.1
 *//**
 * 字体颜色
 * @command forecolor
 * @method execCommand
 * @param { String } cmd 命令字符串
 * @param { String } value 色值(必须十六进制)
 * @example
 * ```javascript
 * editor.execCommand( 'forecolor', '#000' );
 * ```
 *//**
 * 返回选区字体颜色
 * @command forecolor
 * @method queryCommandValue
 * @param { String } cmd 命令字符串
 * @return { String } 返回字体颜色
 * @example
 * ```javascript
 * editor.queryCommandValue( 'forecolor' );
 * ```
 *//**
 * 字体背景颜色
 * @command backcolor
 * @method execCommand
 * @param { String } cmd 命令字符串
 * @param { String } value 色值(必须十六进制)
 * @example
 * ```javascript
 * editor.execCommand( 'backcolor', '#000' );
 * ```
 *//**
 * 返回选区字体颜色
 * @command backcolor
 * @method queryCommandValue
 * @param { String } cmd 命令字符串
 * @return { String } 返回字体背景颜色
 * @example
 * ```javascript
 * editor.queryCommandValue( 'backcolor' );
 * ```
 *//**
 * 字体大小
 * @command fontsize
 * @method execCommand
 * @param { String } cmd 命令字符串
 * @param { String } value 字体大小
 * @example
 * ```javascript
 * editor.execCommand( 'fontsize', '14px' );
 * ```
 *//**
 * 返回选区字体大小
 * @command fontsize
 * @method queryCommandValue
 * @param { String } cmd 命令字符串
 * @return { String } 返回字体大小
 * @example
 * ```javascript
 * editor.queryCommandValue( 'fontsize' );
 * ```
 *//**
 * 字体样式
 * @command fontfamily
 * @method execCommand
 * @param { String } cmd 命令字符串
 * @param { String } value 字体样式
 * @example
 * ```javascript
 * editor.execCommand( 'fontfamily', '微软雅黑' );
 * ```
 *//**
 * 返回选区字体样式
 * @command fontfamily
 * @method queryCommandValue
 * @param { String } cmd 命令字符串
 * @return { String } 返回字体样式
 * @example
 * ```javascript
 * editor.queryCommandValue( 'fontfamily' );
 * ```
 *//**
 * 字体下划线,与删除线互斥
 * @command underline
 * @method execCommand
 * @param { String } cmd 命令字符串
 * @example
 * ```javascript
 * editor.execCommand( 'underline' );
 * ```
 *//**
 * 字体删除线,与下划线互斥
 * @command strikethrough
 * @method execCommand
 * @param { String } cmd 命令字符串
 * @example
 * ```javascript
 * editor.execCommand( 'strikethrough' );
 * ```
 *//**
 * 字体边框
 * @command fontborder
 * @method execCommand
 * @param { String } cmd 命令字符串
 * @example
 * ```javascript
 * editor.execCommand( 'fontborder' );
 * ```
 */UE.plugins['font']=function(){var me=this,fonts={'forecolor':'color','backcolor':'background-color','fontsize':'font-size','fontfamily':'font-family','underline':'text-decoration','strikethrough':'text-decoration','fontborder':'border'},needCmd={'underline':1,'strikethrough':1,'fontborder':1},needSetChild={'forecolor':'color','backcolor':'background-color','fontsize':'font-size','fontfamily':'font-family'};me.setOpt({'fontfamily':[{name:'songti',val:'宋体,SimSun'},{name:'yahei',val:'微软雅黑,Microsoft YaHei'},{name:'kaiti',val:'楷体,楷体_GB2312, SimKai'},{name:'heiti',val:'黑体, SimHei'},{name:'lishu',val:'隶书, SimLi'},{name:'andaleMono',val:'andale mono'},{name:'arial',val:'arial, helvetica,sans-serif'},{name:'arialBlack',val:'arial black,avant garde'},{name:'comicSansMs',val:'comic sans ms'},{name:'impact',val:'impact,chicago'},{name:'timesNewRoman',val:'times new roman'}],'fontsize':[10,11,12,14,16,18,20,24,36]});function mergeWithParent(node){var parent;while(parent=node.parentNode){if(parent.tagName=='SPAN'&&domUtils.getChildCount(parent,function(child){return!domUtils.isBookmarkNode(child)&&!domUtils.isBr(child);})==1){parent.style.cssText+=node.style.cssText;domUtils.remove(node,true);node=parent;}else{break;}}}function mergeChild(rng,cmdName,value){if(needSetChild[cmdName]){rng.adjustmentBoundary();if(!rng.collapsed&&rng.startContainer.nodeType==1){var start=rng.startContainer.childNodes[rng.startOffset];if(start&&domUtils.isTagNode(start,'span')){var bk=rng.createBookmark();utils.each(domUtils.getElementsByTagName(start,'span'),function(span){if(!span.parentNode||domUtils.isBookmarkNode(span))return;if(cmdName=='backcolor'&&domUtils.getComputedStyle(span,'background-color').toLowerCase()===value){return;}domUtils.removeStyle(span,needSetChild[cmdName]);if(span.style.cssText.replace(/^\s+$/,'').length==0){domUtils.remove(span,true);}});rng.moveToBookmark(bk);}}}}function mergesibling(rng,cmdName,value){var collapsed=rng.collapsed,bk=rng.createBookmark(),common;if(collapsed){common=bk.start.parentNode;while(dtd.$inline[common.tagName]){common=common.parentNode;}}else{common=domUtils.getCommonAncestor(bk.start,bk.end);}utils.each(domUtils.getElementsByTagName(common,'span'),function(span){if(!span.parentNode||domUtils.isBookmarkNode(span))return;if(/\s*border\s*:\s*none;?\s*/i.test(span.style.cssText)){if(/^\s*border\s*:\s*none;?\s*$/.test(span.style.cssText)){domUtils.remove(span,true);}else{domUtils.removeStyle(span,'border');}return;}if(/border/i.test(span.style.cssText)&&span.parentNode.tagName=='SPAN'&&/border/i.test(span.parentNode.style.cssText)){span.style.cssText=span.style.cssText.replace(/border[^:]*:[^;]+;?/gi,'');}if(!(cmdName=='fontborder'&&value=='none')){var next=span.nextSibling;while(next&&next.nodeType==1&&next.tagName=='SPAN'){if(domUtils.isBookmarkNode(next)&&cmdName=='fontborder'){span.appendChild(next);next=span.nextSibling;continue;}if(next.style.cssText==span.style.cssText){domUtils.moveChild(next,span);domUtils.remove(next);}if(span.nextSibling===next)break;next=span.nextSibling;}}mergeWithParent(span);if(browser.ie&&browser.version>8){//拷贝父亲们的特别的属性,这里只做背景颜色的处理
var parent=domUtils.findParent(span,function(n){return n.tagName=='SPAN'&&/background-color/.test(n.style.cssText);});if(parent&&!/background-color/.test(span.style.cssText)){span.style.backgroundColor=parent.style.backgroundColor;}}});rng.moveToBookmark(bk);mergeChild(rng,cmdName,value);}me.addInputRule(function(root){utils.each(root.getNodesByTagName('u s del font strike'),function(node){if(node.tagName=='font'){var cssStyle=[];for(var p in node.attrs){switch(p){case'size':cssStyle.push('font-size:'+({'1':'10','2':'12','3':'16','4':'18','5':'24','6':'32','7':'48'}[node.attrs[p]]||node.attrs[p])+'px');break;case'color':cssStyle.push('color:'+node.attrs[p]);break;case'face':cssStyle.push('font-family:'+node.attrs[p]);break;case'style':cssStyle.push(node.attrs[p]);}}node.attrs={'style':cssStyle.join(';')};}else{var val=node.tagName=='u'?'underline':'line-through';node.attrs={'style':(node.getAttr('style')||'')+'text-decoration:'+val+';'};}node.tagName='span';});//        utils.each(root.getNodesByTagName('span'), function (node) {
//            var val;
//            if(val = node.getAttr('class')){
//                if(/fontstrikethrough/.test(val)){
//                    node.setStyle('text-decoration','line-through');
//                    if(node.attrs['class']){
//                        node.attrs['class'] = node.attrs['class'].replace(/fontstrikethrough/,'');
//                    }else{
//                        node.setAttr('class')
//                    }
//                }
//                if(/fontborder/.test(val)){
//                    node.setStyle('border','1px solid #000');
//                    if(node.attrs['class']){
//                        node.attrs['class'] = node.attrs['class'].replace(/fontborder/,'');
//                    }else{
//                        node.setAttr('class')
//                    }
//                }
//            }
//        });
});//    me.addOutputRule(function(root){
//        utils.each(root.getNodesByTagName('span'), function (node) {
//            var val;
//            if(val = node.getStyle('text-decoration')){
//                if(/line-through/.test(val)){
//                    if(node.attrs['class']){
//                        node.attrs['class'] += ' fontstrikethrough';
//                    }else{
//                        node.setAttr('class','fontstrikethrough')
//                    }
//                }
//
//                node.setStyle('text-decoration')
//            }
//            if(val = node.getStyle('border')){
//                if(/1px/.test(val) && /solid/.test(val)){
//                    if(node.attrs['class']){
//                        node.attrs['class'] += ' fontborder';
//
//                    }else{
//                        node.setAttr('class','fontborder')
//                    }
//                }
//                node.setStyle('border')
//
//            }
//        });
//    });
for(var p in fonts){(function(cmd,style){UE.commands[cmd]={execCommand:function execCommand(cmdName,value){value=value||(this.queryCommandState(cmdName)?'none':cmdName=='underline'?'underline':cmdName=='fontborder'?'1px solid #000':'line-through');var me=this,range=this.selection.getRange(),text;if(value=='default'){if(range.collapsed){text=me.document.createTextNode('font');range.insertNode(text).select();}me.execCommand('removeFormat','span,a',style);if(text){range.setStartBefore(text).collapse(true);domUtils.remove(text);}mergesibling(range,cmdName,value);range.select();}else{if(!range.collapsed){if(needCmd[cmd]&&me.queryCommandValue(cmd)){me.execCommand('removeFormat','span,a',style);}range=me.selection.getRange();range.applyInlineStyle('span',{'style':style+':'+value});mergesibling(range,cmdName,value);range.select();}else{var span=domUtils.findParentByTagName(range.startContainer,'span',true);text=me.document.createTextNode('font');if(span&&!span.children.length&&!span[browser.ie?'innerText':'textContent'].replace(fillCharReg,'').length){//for ie hack when enter
range.insertNode(text);if(needCmd[cmd]){range.selectNode(text).select();me.execCommand('removeFormat','span,a',style,null);span=domUtils.findParentByTagName(text,'span',true);range.setStartBefore(text);}span&&(span.style.cssText+=';'+style+':'+value);range.collapse(true).select();}else{range.insertNode(text);range.selectNode(text).select();span=range.document.createElement('span');if(needCmd[cmd]){//a标签内的不处理跳过
if(domUtils.findParentByTagName(text,'a',true)){range.setStartBefore(text).setCursor();domUtils.remove(text);return;}me.execCommand('removeFormat','span,a',style);}span.style.cssText=style+':'+value;text.parentNode.insertBefore(span,text);//修复，span套span 但样式不继承的问题
if(!browser.ie||browser.ie&&browser.version==9){var spanParent=span.parentNode;while(!domUtils.isBlockElm(spanParent)){if(spanParent.tagName=='SPAN'){//opera合并style不会加入";"
span.style.cssText=spanParent.style.cssText+";"+span.style.cssText;}spanParent=spanParent.parentNode;}}if(opera){setTimeout(function(){range.setStart(span,0).collapse(true);mergesibling(range,cmdName,value);range.select();});}else{range.setStart(span,0).collapse(true);mergesibling(range,cmdName,value);range.select();}//trace:981
//domUtils.mergeToParent(span)
}domUtils.remove(text);}}return true;},queryCommandValue:function queryCommandValue(cmdName){var startNode=this.selection.getStart();//trace:946
if(cmdName=='underline'||cmdName=='strikethrough'){var tmpNode=startNode,value;while(tmpNode&&!domUtils.isBlockElm(tmpNode)&&!domUtils.isBody(tmpNode)){if(tmpNode.nodeType==1){value=domUtils.getComputedStyle(tmpNode,style);if(value!='none'){return value;}}tmpNode=tmpNode.parentNode;}return'none';}if(cmdName=='fontborder'){var tmp=startNode,val;while(tmp&&dtd.$inline[tmp.tagName]){if(val=domUtils.getComputedStyle(tmp,'border')){if(/1px/.test(val)&&/solid/.test(val)){return val;}}tmp=tmp.parentNode;}return'';}if(cmdName=='FontSize'){var styleVal=domUtils.getComputedStyle(startNode,style),tmp=/^([\d\.]+)(\w+)$/.exec(styleVal);if(tmp){return Math.floor(tmp[1])+tmp[2];}return styleVal;}return domUtils.getComputedStyle(startNode,style);},queryCommandState:function queryCommandState(cmdName){if(!needCmd[cmdName])return 0;var val=this.queryCommandValue(cmdName);if(cmdName=='fontborder'){return /1px/.test(val)&&/solid/.test(val);}else{return cmdName=='underline'?/underline/.test(val):/line\-through/.test(val);}}};})(p,fonts[p]);}};// plugins/link.js
/**
 * 超链接
 * @file
 * @since 1.2.6.1
 *//**
 * 插入超链接
 * @command link
 * @method execCommand
 * @param { String } cmd 命令字符串
 * @param { Object } options   设置自定义属性，例如：url、title、target
 * @example
 * ```javascript
 * editor.execCommand( 'link', '{
 *     url:'ueditor.baidu.com',
 *     title:'ueditor',
 *     target:'_blank'
 * }' );
 * ```
 *//**
 * 返回当前选中的第一个超链接节点
 * @command link
 * @method queryCommandValue
 * @param { String } cmd 命令字符串
 * @return { Element } 超链接节点
 * @example
 * ```javascript
 * editor.queryCommandValue( 'link' );
 * ```
 *//**
 * 取消超链接
 * @command unlink
 * @method execCommand
 * @param { String } cmd 命令字符串
 * @example
 * ```javascript
 * editor.execCommand( 'unlink');
 * ```
 */UE.plugins['link']=function(){function optimize(range){var start=range.startContainer,end=range.endContainer;if(start=domUtils.findParentByTagName(start,'a',true)){range.setStartBefore(start);}if(end=domUtils.findParentByTagName(end,'a',true)){range.setEndAfter(end);}}UE.commands['unlink']={execCommand:function execCommand(){var range=this.selection.getRange(),bookmark;if(range.collapsed&&!domUtils.findParentByTagName(range.startContainer,'a',true)){return;}bookmark=range.createBookmark();optimize(range);range.removeInlineStyle('a').moveToBookmark(bookmark).select();},queryCommandState:function queryCommandState(){return!this.highlight&&this.queryCommandValue('link')?0:-1;}};function doLink(range,opt,me){var rngClone=range.cloneRange(),link=me.queryCommandValue('link');optimize(range=range.adjustmentBoundary());var start=range.startContainer;if(start.nodeType==1&&link){start=start.childNodes[range.startOffset];if(start&&start.nodeType==1&&start.tagName=='A'&&/^(?:https?|ftp|file)\s*:\s*\/\//.test(start[browser.ie?'innerText':'textContent'])){start[browser.ie?'innerText':'textContent']=utils.html(opt.textValue||opt.href);}}if(!rngClone.collapsed||link){range.removeInlineStyle('a');rngClone=range.cloneRange();}if(rngClone.collapsed){var a=range.document.createElement('a'),text='';if(opt.textValue){text=utils.html(opt.textValue);delete opt.textValue;}else{text=utils.html(opt.href);}domUtils.setAttributes(a,opt);start=domUtils.findParentByTagName(rngClone.startContainer,'a',true);if(start&&domUtils.isInNodeEndBoundary(rngClone,start)){range.setStartAfter(start).collapse(true);}a[browser.ie?'innerText':'textContent']=text;range.insertNode(a).selectNode(a);}else{range.applyInlineStyle('a',opt);}}UE.commands['link']={execCommand:function execCommand(cmdName,opt){var range;opt._href&&(opt._href=utils.unhtml(opt._href,/[<">]/g));opt.href&&(opt.href=utils.unhtml(opt.href,/[<">]/g));opt.textValue&&(opt.textValue=utils.unhtml(opt.textValue,/[<">]/g));doLink(range=this.selection.getRange(),opt,this);//闭合都不加占位符，如果加了会在a后边多个占位符节点，导致a是图片背景组成的列表，出现空白问题
range.collapse().select(true);},queryCommandValue:function queryCommandValue(){var range=this.selection.getRange(),node;if(range.collapsed){//                    node = this.selection.getStart();
//在ie下getstart()取值偏上了
node=range.startContainer;node=node.nodeType==1?node:node.parentNode;if(node&&(node=domUtils.findParentByTagName(node,'a',true))&&!domUtils.isInNodeEndBoundary(range,node)){return node;}}else{//trace:1111  如果是<p><a>xx</a></p> startContainer是p就会找不到a
range.shrinkBoundary();var start=range.startContainer.nodeType==3||!range.startContainer.childNodes[range.startOffset]?range.startContainer:range.startContainer.childNodes[range.startOffset],end=range.endContainer.nodeType==3||range.endOffset==0?range.endContainer:range.endContainer.childNodes[range.endOffset-1],common=range.getCommonAncestor();node=domUtils.findParentByTagName(common,'a',true);if(!node&&common.nodeType==1){var as=common.getElementsByTagName('a'),ps,pe;for(var i=0,ci;ci=as[i++];){ps=domUtils.getPosition(ci,start),pe=domUtils.getPosition(ci,end);if((ps&domUtils.POSITION_FOLLOWING||ps&domUtils.POSITION_CONTAINS)&&(pe&domUtils.POSITION_PRECEDING||pe&domUtils.POSITION_CONTAINS)){node=ci;break;}}}return node;}},queryCommandState:function queryCommandState(){//判断如果是视频的话连接不可用
//fix 853
var img=this.selection.getRange().getClosedNode(),flag=img&&(img.className=="edui-faked-video"||img.className.indexOf("edui-upload-video")!=-1);return flag?-1:0;}};};// plugins/iframe.js
///import core
///import plugins\inserthtml.js
///commands 插入框架
///commandsName  InsertFrame
///commandsTitle  插入Iframe
///commandsDialog  dialogs\insertframe
UE.plugins['insertframe']=function(){var me=this;function deleteIframe(){me._iframe&&delete me._iframe;}me.addListener("selectionchange",function(){deleteIframe();});};// plugins/scrawl.js
///import core
///commands 涂鸦
///commandsName  Scrawl
///commandsTitle  涂鸦
///commandsDialog  dialogs\scrawl
UE.commands['scrawl']={queryCommandState:function queryCommandState(){return browser.ie&&browser.version<=8?-1:0;}};// plugins/removeformat.js
/**
 * 清除格式
 * @file
 * @since 1.2.6.1
 *//**
 * 清除文字样式
 * @command removeformat
 * @method execCommand
 * @param { String } cmd 命令字符串
 * @param   {String}   tags     以逗号隔开的标签。如：strong
 * @param   {String}   style    样式如：color
 * @param   {String}   attrs    属性如:width
 * @example
 * ```javascript
 * editor.execCommand( 'removeformat', 'strong','color','width' );
 * ```
 */UE.plugins['removeformat']=function(){var me=this;me.setOpt({'removeFormatTags':'b,big,code,del,dfn,em,font,i,ins,kbd,q,samp,small,span,strike,strong,sub,sup,tt,u,var','removeFormatAttributes':'class,style,lang,width,height,align,hspace,valign'});me.commands['removeformat']={execCommand:function execCommand(cmdName,tags,style,attrs,notIncludeA){var tagReg=new RegExp('^(?:'+(tags||this.options.removeFormatTags).replace(/,/g,'|')+')$','i'),removeFormatAttributes=style?[]:(attrs||this.options.removeFormatAttributes).split(','),range=new dom.Range(this.document),bookmark,node,parent,filter=function filter(node){return node.nodeType==1;};function isRedundantSpan(node){if(node.nodeType==3||node.tagName.toLowerCase()!='span'){return 0;}if(browser.ie){//ie 下判断实效，所以只能简单用style来判断
//return node.style.cssText == '' ? 1 : 0;
var attrs=node.attributes;if(attrs.length){for(var i=0,l=attrs.length;i<l;i++){if(attrs[i].specified){return 0;}}return 1;}}return!node.attributes.length;}function doRemove(range){var bookmark1=range.createBookmark();if(range.collapsed){range.enlarge(true);}//不能把a标签切了
if(!notIncludeA){var aNode=domUtils.findParentByTagName(range.startContainer,'a',true);if(aNode){range.setStartBefore(aNode);}aNode=domUtils.findParentByTagName(range.endContainer,'a',true);if(aNode){range.setEndAfter(aNode);}}bookmark=range.createBookmark();node=bookmark.start;//切开始
while((parent=node.parentNode)&&!domUtils.isBlockElm(parent)){domUtils.breakParent(node,parent);domUtils.clearEmptySibling(node);}if(bookmark.end){//切结束
node=bookmark.end;while((parent=node.parentNode)&&!domUtils.isBlockElm(parent)){domUtils.breakParent(node,parent);domUtils.clearEmptySibling(node);}//开始去除样式
var current=domUtils.getNextDomNode(bookmark.start,false,filter),next;while(current){if(current==bookmark.end){break;}next=domUtils.getNextDomNode(current,true,filter);if(!dtd.$empty[current.tagName.toLowerCase()]&&!domUtils.isBookmarkNode(current)){if(tagReg.test(current.tagName)){if(style){domUtils.removeStyle(current,style);if(isRedundantSpan(current)&&style!='text-decoration'){domUtils.remove(current,true);}}else{domUtils.remove(current,true);}}else{//trace:939  不能把list上的样式去掉
if(!dtd.$tableContent[current.tagName]&&!dtd.$list[current.tagName]){domUtils.removeAttributes(current,removeFormatAttributes);if(isRedundantSpan(current)){domUtils.remove(current,true);}}}}current=next;}}//trace:1035
//trace:1096 不能把td上的样式去掉，比如边框
var pN=bookmark.start.parentNode;if(domUtils.isBlockElm(pN)&&!dtd.$tableContent[pN.tagName]&&!dtd.$list[pN.tagName]){domUtils.removeAttributes(pN,removeFormatAttributes);}pN=bookmark.end.parentNode;if(bookmark.end&&domUtils.isBlockElm(pN)&&!dtd.$tableContent[pN.tagName]&&!dtd.$list[pN.tagName]){domUtils.removeAttributes(pN,removeFormatAttributes);}range.moveToBookmark(bookmark).moveToBookmark(bookmark1);//清除冗余的代码 <b><bookmark></b>
var node=range.startContainer,tmp,collapsed=range.collapsed;while(node.nodeType==1&&domUtils.isEmptyNode(node)&&dtd.$removeEmpty[node.tagName]){tmp=node.parentNode;range.setStartBefore(node);//trace:937
//更新结束边界
if(range.startContainer===range.endContainer){range.endOffset--;}domUtils.remove(node);node=tmp;}if(!collapsed){node=range.endContainer;while(node.nodeType==1&&domUtils.isEmptyNode(node)&&dtd.$removeEmpty[node.tagName]){tmp=node.parentNode;range.setEndBefore(node);domUtils.remove(node);node=tmp;}}}range=this.selection.getRange();doRemove(range);range.select();}};};// plugins/blockquote.js
/**
 * 添加引用
 * @file
 * @since 1.2.6.1
 *//**
 * 添加引用
 * @command blockquote
 * @method execCommand
 * @param { String } cmd 命令字符串
 * @example
 * ```javascript
 * editor.execCommand( 'blockquote' );
 * ```
 *//**
 * 添加引用
 * @command blockquote
 * @method execCommand
 * @param { String } cmd 命令字符串
 * @param { Object } attrs 节点属性
 * @example
 * ```javascript
 * editor.execCommand( 'blockquote',{
 *     style: "color: red;"
 * } );
 * ```
 */UE.plugins['blockquote']=function(){var me=this;function getObj(editor){return domUtils.filterNodeList(editor.selection.getStartElementPath(),'blockquote');}me.commands['blockquote']={execCommand:function execCommand(cmdName,attrs){var range=this.selection.getRange(),obj=getObj(this),blockquote=dtd.blockquote,bookmark=range.createBookmark();if(obj){var start=range.startContainer,startBlock=domUtils.isBlockElm(start)?start:domUtils.findParent(start,function(node){return domUtils.isBlockElm(node);}),end=range.endContainer,endBlock=domUtils.isBlockElm(end)?end:domUtils.findParent(end,function(node){return domUtils.isBlockElm(node);});//处理一下li
startBlock=domUtils.findParentByTagName(startBlock,'li',true)||startBlock;endBlock=domUtils.findParentByTagName(endBlock,'li',true)||endBlock;if(startBlock.tagName=='LI'||startBlock.tagName=='TD'||startBlock===obj||domUtils.isBody(startBlock)){domUtils.remove(obj,true);}else{domUtils.breakParent(startBlock,obj);}if(startBlock!==endBlock){obj=domUtils.findParentByTagName(endBlock,'blockquote');if(obj){if(endBlock.tagName=='LI'||endBlock.tagName=='TD'||domUtils.isBody(endBlock)){obj.parentNode&&domUtils.remove(obj,true);}else{domUtils.breakParent(endBlock,obj);}}}var blockquotes=domUtils.getElementsByTagName(this.document,'blockquote');for(var i=0,bi;bi=blockquotes[i++];){if(!bi.childNodes.length){domUtils.remove(bi);}else if(domUtils.getPosition(bi,startBlock)&domUtils.POSITION_FOLLOWING&&domUtils.getPosition(bi,endBlock)&domUtils.POSITION_PRECEDING){domUtils.remove(bi,true);}}}else{var tmpRange=range.cloneRange(),node=tmpRange.startContainer.nodeType==1?tmpRange.startContainer:tmpRange.startContainer.parentNode,preNode=node,doEnd=1;//调整开始
while(1){if(domUtils.isBody(node)){if(preNode!==node){if(range.collapsed){tmpRange.selectNode(preNode);doEnd=0;}else{tmpRange.setStartBefore(preNode);}}else{tmpRange.setStart(node,0);}break;}if(!blockquote[node.tagName]){if(range.collapsed){tmpRange.selectNode(preNode);}else{tmpRange.setStartBefore(preNode);}break;}preNode=node;node=node.parentNode;}//调整结束
if(doEnd){preNode=node=node=tmpRange.endContainer.nodeType==1?tmpRange.endContainer:tmpRange.endContainer.parentNode;while(1){if(domUtils.isBody(node)){if(preNode!==node){tmpRange.setEndAfter(preNode);}else{tmpRange.setEnd(node,node.childNodes.length);}break;}if(!blockquote[node.tagName]){tmpRange.setEndAfter(preNode);break;}preNode=node;node=node.parentNode;}}node=range.document.createElement('blockquote');domUtils.setAttributes(node,attrs);node.appendChild(tmpRange.extractContents());tmpRange.insertNode(node);//去除重复的
var childs=domUtils.getElementsByTagName(node,'blockquote');for(var i=0,ci;ci=childs[i++];){if(ci.parentNode){domUtils.remove(ci,true);}}}range.moveToBookmark(bookmark).select();},queryCommandState:function queryCommandState(){return getObj(this)?1:0;}};};// plugins/convertcase.js
/**
 * 大小写转换
 * @file
 * @since 1.2.6.1
 *//**
 * 把选区内文本变大写，与“tolowercase”命令互斥
 * @command touppercase
 * @method execCommand
 * @param { String } cmd 命令字符串
 * @example
 * ```javascript
 * editor.execCommand( 'touppercase' );
 * ```
 *//**
 * 把选区内文本变小写，与“touppercase”命令互斥
 * @command tolowercase
 * @method execCommand
 * @param { String } cmd 命令字符串
 * @example
 * ```javascript
 * editor.execCommand( 'tolowercase' );
 * ```
 */UE.commands['touppercase']=UE.commands['tolowercase']={execCommand:function execCommand(cmd){var me=this;var rng=me.selection.getRange();if(rng.collapsed){return rng;}var bk=rng.createBookmark(),bkEnd=bk.end,filterFn=function filterFn(node){return!domUtils.isBr(node)&&!domUtils.isWhitespace(node);},curNode=domUtils.getNextDomNode(bk.start,false,filterFn);while(curNode&&domUtils.getPosition(curNode,bkEnd)&domUtils.POSITION_PRECEDING){if(curNode.nodeType==3){curNode.nodeValue=curNode.nodeValue[cmd=='touppercase'?'toUpperCase':'toLowerCase']();}curNode=domUtils.getNextDomNode(curNode,true,filterFn);if(curNode===bkEnd){break;}}rng.moveToBookmark(bk).select();}};// plugins/indent.js
/**
 * 首行缩进
 * @file
 * @since 1.2.6.1
 *//**
 * 缩进
 * @command indent
 * @method execCommand
 * @param { String } cmd 命令字符串
 * @example
 * ```javascript
 * editor.execCommand( 'indent' );
 * ```
 */UE.commands['indent']={execCommand:function execCommand(){var me=this,value=me.queryCommandState("indent")?"0em":me.options.indentValue||'2em';me.execCommand('Paragraph','p',{style:'text-indent:'+value});},queryCommandState:function queryCommandState(){var pN=domUtils.filterNodeList(this.selection.getStartElementPath(),'p h1 h2 h3 h4 h5 h6');return pN&&pN.style.textIndent&&parseInt(pN.style.textIndent)?1:0;}};// plugins/print.js
/**
 * 打印
 * @file
 * @since 1.2.6.1
 *//**
 * 打印
 * @command print
 * @method execCommand
 * @param { String } cmd 命令字符串
 * @example
 * ```javascript
 * editor.execCommand( 'print' );
 * ```
 */UE.commands['print']={execCommand:function execCommand(){this.window.print();},notNeedUndo:1};// plugins/preview.js
/**
 * 预览
 * @file
 * @since 1.2.6.1
 *//**
 * 预览
 * @command preview
 * @method execCommand
 * @param { String } cmd 命令字符串
 * @example
 * ```javascript
 * editor.execCommand( 'preview' );
 * ```
 */UE.commands['preview']={execCommand:function execCommand(){var w=window.open('','_blank',''),d=w.document;d.open();d.write('<!DOCTYPE html><html><head><meta charset="utf-8"/><script src="'+this.options.UEDITOR_HOME_URL+'ueditor.parse.js"></script><script>'+"setTimeout(function(){uParse('div',{rootPath: '"+this.options.UEDITOR_HOME_URL+"'})},300)"+'</script></head><body><div>'+this.getContent(null,null,true)+'</div></body></html>');d.close();},notNeedUndo:1};// plugins/selectall.js
/**
 * 全选
 * @file
 * @since 1.2.6.1
 *//**
 * 选中所有内容
 * @command selectall
 * @method execCommand
 * @param { String } cmd 命令字符串
 * @example
 * ```javascript
 * editor.execCommand( 'selectall' );
 * ```
 */UE.plugins['selectall']=function(){var me=this;me.commands['selectall']={execCommand:function execCommand(){//去掉了原生的selectAll,因为会出现报错和当内容为空时，不能出现闭合状态的光标
var me=this,body=me.body,range=me.selection.getRange();range.selectNodeContents(body);if(domUtils.isEmptyBlock(body)){//opera不能自动合并到元素的里边，要手动处理一下
if(browser.opera&&body.firstChild&&body.firstChild.nodeType==1){range.setStartAtFirst(body.firstChild);}range.collapse(true);}range.select(true);},notNeedUndo:1};//快捷键
me.addshortcutkey({"selectAll":"ctrl+65"});};// plugins/paragraph.js
/**
 * 段落样式
 * @file
 * @since 1.2.6.1
 *//**
 * 段落格式
 * @command paragraph
 * @method execCommand
 * @param { String } cmd 命令字符串
 * @param {String}   style               标签值为：'p', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6'
 * @param {Object}   attrs               标签的属性
 * @example
 * ```javascript
 * editor.execCommand( 'Paragraph','h1','{
 *     class:'test'
 * }' );
 * ```
 *//**
 * 返回选区内节点标签名
 * @command paragraph
 * @method queryCommandValue
 * @param { String } cmd 命令字符串
 * @return { String } 节点标签名
 * @example
 * ```javascript
 * editor.queryCommandValue( 'Paragraph' );
 * ```
 */UE.plugins['paragraph']=function(){var me=this,block=domUtils.isBlockElm,notExchange=['TD','LI','PRE'],doParagraph=function doParagraph(range,style,attrs,sourceCmdName){var bookmark=range.createBookmark(),filterFn=function filterFn(node){return node.nodeType==1?node.tagName.toLowerCase()!='br'&&!domUtils.isBookmarkNode(node):!domUtils.isWhitespace(node);},para;range.enlarge(true);var bookmark2=range.createBookmark(),current=domUtils.getNextDomNode(bookmark2.start,false,filterFn),tmpRange=range.cloneRange(),tmpNode;while(current&&!(domUtils.getPosition(current,bookmark2.end)&domUtils.POSITION_FOLLOWING)){if(current.nodeType==3||!block(current)){tmpRange.setStartBefore(current);while(current&&current!==bookmark2.end&&!block(current)){tmpNode=current;current=domUtils.getNextDomNode(current,false,null,function(node){return!block(node);});}tmpRange.setEndAfter(tmpNode);para=range.document.createElement(style);if(attrs){domUtils.setAttributes(para,attrs);if(sourceCmdName&&sourceCmdName=='customstyle'&&attrs.style){para.style.cssText=attrs.style;}}para.appendChild(tmpRange.extractContents());//需要内容占位
if(domUtils.isEmptyNode(para)){domUtils.fillChar(range.document,para);}tmpRange.insertNode(para);var parent=para.parentNode;//如果para上一级是一个block元素且不是body,td就删除它
if(block(parent)&&!domUtils.isBody(para.parentNode)&&utils.indexOf(notExchange,parent.tagName)==-1){//存储dir,style
if(!(sourceCmdName&&sourceCmdName=='customstyle')){parent.getAttribute('dir')&&para.setAttribute('dir',parent.getAttribute('dir'));//trace:1070
parent.style.cssText&&(para.style.cssText=parent.style.cssText+';'+para.style.cssText);//trace:1030
parent.style.textAlign&&!para.style.textAlign&&(para.style.textAlign=parent.style.textAlign);parent.style.textIndent&&!para.style.textIndent&&(para.style.textIndent=parent.style.textIndent);parent.style.padding&&!para.style.padding&&(para.style.padding=parent.style.padding);}//trace:1706 选择的就是h1-6要删除
if(attrs&&/h\d/i.test(parent.tagName)&&!/h\d/i.test(para.tagName)){domUtils.setAttributes(parent,attrs);if(sourceCmdName&&sourceCmdName=='customstyle'&&attrs.style){parent.style.cssText=attrs.style;}domUtils.remove(para,true);para=parent;}else{domUtils.remove(para.parentNode,true);}}if(utils.indexOf(notExchange,parent.tagName)!=-1){current=parent;}else{current=para;}current=domUtils.getNextDomNode(current,false,filterFn);}else{current=domUtils.getNextDomNode(current,true,filterFn);}}return range.moveToBookmark(bookmark2).moveToBookmark(bookmark);};me.setOpt('paragraph',{'p':'','h1':'','h2':'','h3':'','h4':'','h5':'','h6':''});me.commands['paragraph']={execCommand:function execCommand(cmdName,style,attrs,sourceCmdName){var range=this.selection.getRange();//闭合时单独处理
if(range.collapsed){var txt=this.document.createTextNode('p');range.insertNode(txt);//去掉冗余的fillchar
if(browser.ie){var node=txt.previousSibling;if(node&&domUtils.isWhitespace(node)){domUtils.remove(node);}node=txt.nextSibling;if(node&&domUtils.isWhitespace(node)){domUtils.remove(node);}}}range=doParagraph(range,style,attrs,sourceCmdName);if(txt){range.setStartBefore(txt).collapse(true);pN=txt.parentNode;domUtils.remove(txt);if(domUtils.isBlockElm(pN)&&domUtils.isEmptyNode(pN)){domUtils.fillNode(this.document,pN);}}if(browser.gecko&&range.collapsed&&range.startContainer.nodeType==1){var child=range.startContainer.childNodes[range.startOffset];if(child&&child.nodeType==1&&child.tagName.toLowerCase()==style){range.setStart(child,0).collapse(true);}}//trace:1097 原来有true，原因忘了，但去了就不能清除多余的占位符了
range.select();return true;},queryCommandValue:function queryCommandValue(){var node=domUtils.filterNodeList(this.selection.getStartElementPath(),'p h1 h2 h3 h4 h5 h6');return node?node.tagName.toLowerCase():'';}};};// plugins/directionality.js
/**
 * 设置文字输入的方向的插件
 * @file
 * @since 1.2.6.1
 */(function(){var block=domUtils.isBlockElm,getObj=function getObj(editor){//            var startNode = editor.selection.getStart(),
//                parents;
//            if ( startNode ) {
//                //查找所有的是block的父亲节点
//                parents = domUtils.findParents( startNode, true, block, true );
//                for ( var i = 0,ci; ci = parents[i++]; ) {
//                    if ( ci.getAttribute( 'dir' ) ) {
//                        return ci;
//                    }
//                }
//            }
return domUtils.filterNodeList(editor.selection.getStartElementPath(),function(n){return n&&n.nodeType==1&&n.getAttribute('dir');});},doDirectionality=function doDirectionality(range,editor,forward){var bookmark,filterFn=function filterFn(node){return node.nodeType==1?!domUtils.isBookmarkNode(node):!domUtils.isWhitespace(node);},obj=getObj(editor);if(obj&&range.collapsed){obj.setAttribute('dir',forward);return range;}bookmark=range.createBookmark();range.enlarge(true);var bookmark2=range.createBookmark(),current=domUtils.getNextDomNode(bookmark2.start,false,filterFn),tmpRange=range.cloneRange(),tmpNode;while(current&&!(domUtils.getPosition(current,bookmark2.end)&domUtils.POSITION_FOLLOWING)){if(current.nodeType==3||!block(current)){tmpRange.setStartBefore(current);while(current&&current!==bookmark2.end&&!block(current)){tmpNode=current;current=domUtils.getNextDomNode(current,false,null,function(node){return!block(node);});}tmpRange.setEndAfter(tmpNode);var common=tmpRange.getCommonAncestor();if(!domUtils.isBody(common)&&block(common)){//遍历到了block节点
common.setAttribute('dir',forward);current=common;}else{//没有遍历到，添加一个block节点
var p=range.document.createElement('p');p.setAttribute('dir',forward);var frag=tmpRange.extractContents();p.appendChild(frag);tmpRange.insertNode(p);current=p;}current=domUtils.getNextDomNode(current,false,filterFn);}else{current=domUtils.getNextDomNode(current,true,filterFn);}}return range.moveToBookmark(bookmark2).moveToBookmark(bookmark);};/**
     * 文字输入方向
     * @command directionality
     * @method execCommand
     * @param { String } cmdName 命令字符串
     * @param { String } forward 传入'ltr'表示从左向右输入，传入'rtl'表示从右向左输入
     * @example
     * ```javascript
     * editor.execCommand( 'directionality', 'ltr');
     * ```
     *//**
     * 查询当前选区的文字输入方向
     * @command directionality
     * @method queryCommandValue
     * @param { String } cmdName 命令字符串
     * @return { String } 返回'ltr'表示从左向右输入，返回'rtl'表示从右向左输入
     * @example
     * ```javascript
     * editor.queryCommandValue( 'directionality');
     * ```
     */UE.commands['directionality']={execCommand:function execCommand(cmdName,forward){var range=this.selection.getRange();//闭合时单独处理
if(range.collapsed){var txt=this.document.createTextNode('d');range.insertNode(txt);}doDirectionality(range,this,forward);if(txt){range.setStartBefore(txt).collapse(true);domUtils.remove(txt);}range.select();return true;},queryCommandValue:function queryCommandValue(){var node=getObj(this);return node?node.getAttribute('dir'):'ltr';}};})();// plugins/horizontal.js
/**
 * 插入分割线插件
 * @file
 * @since 1.2.6.1
 *//**
 * 插入分割线
 * @command horizontal
 * @method execCommand
 * @param { String } cmdName 命令字符串
 * @example
 * ```javascript
 * editor.execCommand( 'horizontal' );
 * ```
 */UE.plugins['horizontal']=function(){var me=this;me.commands['horizontal']={execCommand:function execCommand(cmdName){var me=this;if(me.queryCommandState(cmdName)!==-1){me.execCommand('insertHtml','<hr>');var range=me.selection.getRange(),start=range.startContainer;if(start.nodeType==1&&!start.childNodes[range.startOffset]){var tmp;if(tmp=start.childNodes[range.startOffset-1]){if(tmp.nodeType==1&&tmp.tagName=='HR'){if(me.options.enterTag=='p'){tmp=me.document.createElement('p');range.insertNode(tmp);range.setStart(tmp,0).setCursor();}else{tmp=me.document.createElement('br');range.insertNode(tmp);range.setStartBefore(tmp).setCursor();}}}}return true;}},//边界在table里不能加分隔线
queryCommandState:function queryCommandState(){return domUtils.filterNodeList(this.selection.getStartElementPath(),'table')?-1:0;}};//    me.addListener('delkeyup',function(){
//        var rng = this.selection.getRange();
//        if(browser.ie && browser.version > 8){
//            rng.txtToElmBoundary(true);
//            if(domUtils.isStartInblock(rng)){
//                var tmpNode = rng.startContainer;
//                var pre = tmpNode.previousSibling;
//                if(pre && domUtils.isTagNode(pre,'hr')){
//                    domUtils.remove(pre);
//                    rng.select();
//                    return;
//                }
//            }
//        }
//        if(domUtils.isBody(rng.startContainer)){
//            var hr = rng.startContainer.childNodes[rng.startOffset -1];
//            if(hr && hr.nodeName == 'HR'){
//                var next = hr.nextSibling;
//                if(next){
//                    rng.setStart(next,0)
//                }else if(hr.previousSibling){
//                    rng.setStartAtLast(hr.previousSibling)
//                }else{
//                    var p = this.document.createElement('p');
//                    hr.parentNode.insertBefore(p,hr);
//                    domUtils.fillNode(this.document,p);
//                    rng.setStart(p,0);
//                }
//                domUtils.remove(hr);
//                rng.setCursor(false,true);
//            }
//        }
//    })
me.addListener('delkeydown',function(name,evt){var rng=this.selection.getRange();rng.txtToElmBoundary(true);if(domUtils.isStartInblock(rng)){var tmpNode=rng.startContainer;var pre=tmpNode.previousSibling;if(pre&&domUtils.isTagNode(pre,'hr')){domUtils.remove(pre);rng.select();domUtils.preventDefault(evt);return true;}}});};// plugins/time.js
/**
 * 插入时间和日期
 * @file
 * @since 1.2.6.1
 *//**
 * 插入时间，默认格式：12:59:59
 * @command time
 * @method execCommand
 * @param { String } cmd 命令字符串
 * @example
 * ```javascript
 * editor.execCommand( 'time');
 * ```
 *//**
 * 插入日期，默认格式：2013-08-30
 * @command date
 * @method execCommand
 * @param { String } cmd 命令字符串
 * @example
 * ```javascript
 * editor.execCommand( 'date');
 * ```
 */UE.commands['time']=UE.commands["date"]={execCommand:function execCommand(cmd,format){var date=new Date();function formatTime(date,format){var hh=('0'+date.getHours()).slice(-2),ii=('0'+date.getMinutes()).slice(-2),ss=('0'+date.getSeconds()).slice(-2);format=format||'hh:ii:ss';return format.replace(/hh/ig,hh).replace(/ii/ig,ii).replace(/ss/ig,ss);}function formatDate(date,format){var yyyy=('000'+date.getFullYear()).slice(-4),yy=yyyy.slice(-2),mm=('0'+(date.getMonth()+1)).slice(-2),dd=('0'+date.getDate()).slice(-2);format=format||'yyyy-mm-dd';return format.replace(/yyyy/ig,yyyy).replace(/yy/ig,yy).replace(/mm/ig,mm).replace(/dd/ig,dd);}this.execCommand('insertHtml',cmd=="time"?formatTime(date,format):formatDate(date,format));}};// plugins/rowspacing.js
/**
 * 段前段后间距插件
 * @file
 * @since 1.2.6.1
 *//**
 * 设置段间距
 * @command rowspacing
 * @method execCommand
 * @param { String } cmd 命令字符串
 * @param { String } value 段间距的值，以px为单位
 * @param { String } dir 间距位置，top或bottom，分别表示段前和段后
 * @example
 * ```javascript
 * editor.execCommand( 'rowspacing', '10', 'top' );
 * ```
 */UE.plugins['rowspacing']=function(){var me=this;me.setOpt({'rowspacingtop':['5','10','15','20','25'],'rowspacingbottom':['5','10','15','20','25']});me.commands['rowspacing']={execCommand:function execCommand(cmdName,value,dir){this.execCommand('paragraph','p',{style:'margin-'+dir+':'+value+'px'});return true;},queryCommandValue:function queryCommandValue(cmdName,dir){var pN=domUtils.filterNodeList(this.selection.getStartElementPath(),function(node){return domUtils.isBlockElm(node);}),value;//trace:1026
if(pN){value=domUtils.getComputedStyle(pN,'margin-'+dir).replace(/[^\d]/g,'');return!value?0:value;}return 0;}};};// plugins/lineheight.js
/**
 * 设置行内间距
 * @file
 * @since 1.2.6.1
 */UE.plugins['lineheight']=function(){var me=this;me.setOpt({'lineheight':['1','1.5','1.75','2','3','4','5']});/**
     * 行距
     * @command lineheight
     * @method execCommand
     * @param { String } cmdName 命令字符串
     * @param { String } value 传入的行高值， 该值是当前字体的倍数， 例如： 1.5, 1.75
     * @example
     * ```javascript
     * editor.execCommand( 'lineheight', 1.5);
     * ```
     *//**
     * 查询当前选区内容的行高大小
     * @command lineheight
     * @method queryCommandValue
     * @param { String } cmd 命令字符串
     * @return { String } 返回当前行高大小
     * @example
     * ```javascript
     * editor.queryCommandValue( 'lineheight' );
     * ```
     */me.commands['lineheight']={execCommand:function execCommand(cmdName,value){this.execCommand('paragraph','p',{style:'line-height:'+(value=="1"?"normal":value+'em')});return true;},queryCommandValue:function queryCommandValue(){var pN=domUtils.filterNodeList(this.selection.getStartElementPath(),function(node){return domUtils.isBlockElm(node);});if(pN){var value=domUtils.getComputedStyle(pN,'line-height');return value=='normal'?1:value.replace(/[^\d.]*/ig,"");}}};};// plugins/insertcode.js
/**
 * 插入代码插件
 * @file
 * @since 1.2.6.1
 */UE.plugins['insertcode']=function(){var me=this;me.ready(function(){utils.cssRule('pre','pre{margin:.5em 0;padding:.4em .6em;border-radius:8px;background:#f8f8f8;}',me.document);});me.setOpt('insertcode',{'as3':'ActionScript3','bash':'Bash/Shell','cpp':'C/C++','css':'Css','cf':'CodeFunction','c#':'C#','delphi':'Delphi','diff':'Diff','erlang':'Erlang','groovy':'Groovy','html':'Html','java':'Java','jfx':'JavaFx','js':'Javascript','pl':'Perl','php':'Php','plain':'Plain Text','ps':'PowerShell','python':'Python','ruby':'Ruby','scala':'Scala','sql':'Sql','vb':'Vb','xml':'Xml'});/**
     * 插入代码
     * @command insertcode
     * @method execCommand
     * @param { String } cmd 命令字符串
     * @param { String } lang 插入代码的语言
     * @example
     * ```javascript
     * editor.execCommand( 'insertcode', 'javascript' );
     * ```
     *//**
     * 如果选区所在位置是插入插入代码区域，返回代码的语言
     * @command insertcode
     * @method queryCommandValue
     * @param { String } cmd 命令字符串
     * @return { String } 返回代码的语言
     * @example
     * ```javascript
     * editor.queryCommandValue( 'insertcode' );
     * ```
     */me.commands['insertcode']={execCommand:function execCommand(cmd,lang){var me=this,rng=me.selection.getRange(),pre=domUtils.findParentByTagName(rng.startContainer,'pre',true);if(pre){pre.className='brush:'+lang+';toolbar:false;';}else{var code='';if(rng.collapsed){code=browser.ie&&browser.ie11below?browser.version<=8?'&nbsp;':'':'<br/>';}else{var frag=rng.extractContents();var div=me.document.createElement('div');div.appendChild(frag);utils.each(UE.filterNode(UE.htmlparser(div.innerHTML.replace(/[\r\t]/g,'')),me.options.filterTxtRules).children,function(node){if(browser.ie&&browser.ie11below&&browser.version>8){if(node.type=='element'){if(node.tagName=='br'){code+='\n';}else if(!dtd.$empty[node.tagName]){utils.each(node.children,function(cn){if(cn.type=='element'){if(cn.tagName=='br'){code+='\n';}else if(!dtd.$empty[node.tagName]){code+=cn.innerText();}}else{code+=cn.data;}});if(!/\n$/.test(code)){code+='\n';}}}else{code+=node.data+'\n';}if(!node.nextSibling()&&/\n$/.test(code)){code=code.replace(/\n$/,'');}}else{if(browser.ie&&browser.ie11below){if(node.type=='element'){if(node.tagName=='br'){code+='<br>';}else if(!dtd.$empty[node.tagName]){utils.each(node.children,function(cn){if(cn.type=='element'){if(cn.tagName=='br'){code+='<br>';}else if(!dtd.$empty[node.tagName]){code+=cn.innerText();}}else{code+=cn.data;}});if(!/br>$/.test(code)){code+='<br>';}}}else{code+=node.data+'<br>';}if(!node.nextSibling()&&/<br>$/.test(code)){code=code.replace(/<br>$/,'');}}else{code+=node.type=='element'?dtd.$empty[node.tagName]?'':node.innerText():node.data;if(!/br\/?\s*>$/.test(code)){if(!node.nextSibling())return;code+='<br>';}}}});}me.execCommand('inserthtml','<pre id="coder"class="brush:'+lang+';toolbar:false">'+code+'</pre>',true);pre=me.document.getElementById('coder');domUtils.removeAttributes(pre,'id');var tmpNode=pre.previousSibling;if(tmpNode&&(tmpNode.nodeType==3&&tmpNode.nodeValue.length==1&&browser.ie&&browser.version==6||domUtils.isEmptyBlock(tmpNode))){domUtils.remove(tmpNode);}var rng=me.selection.getRange();if(domUtils.isEmptyBlock(pre)){rng.setStart(pre,0).setCursor(false,true);}else{rng.selectNodeContents(pre).select();}}},queryCommandValue:function queryCommandValue(){var path=this.selection.getStartElementPath();var lang='';utils.each(path,function(node){if(node.nodeName=='PRE'){var match=node.className.match(/brush:([^;]+)/);lang=match&&match[1]?match[1]:'';return false;}});return lang;}};me.addInputRule(function(root){utils.each(root.getNodesByTagName('pre'),function(pre){var brs=pre.getNodesByTagName('br');if(brs.length){browser.ie&&browser.ie11below&&browser.version>8&&utils.each(brs,function(br){var txt=UE.uNode.createText('\n');br.parentNode.insertBefore(txt,br);br.parentNode.removeChild(br);});return;}if(browser.ie&&browser.ie11below&&browser.version>8)return;var code=pre.innerText().split(/\n/);pre.innerHTML('');utils.each(code,function(c){if(c.length){pre.appendChild(UE.uNode.createText(c));}pre.appendChild(UE.uNode.createElement('br'));});});});me.addOutputRule(function(root){utils.each(root.getNodesByTagName('pre'),function(pre){var code='';utils.each(pre.children,function(n){if(n.type=='text'){//在ie下文本内容有可能末尾带有\n要去掉
//trace:3396
code+=n.data.replace(/[ ]/g,'&nbsp;').replace(/\n$/,'');}else{if(n.tagName=='br'){code+='\n';}else{code+=!dtd.$empty[n.tagName]?'':n.innerText();}}});pre.innerText(code.replace(/(&nbsp;|\n)+$/,''));});});//不需要判断highlight的command列表
me.notNeedCodeQuery={help:1,undo:1,redo:1,source:1,print:1,searchreplace:1,fullscreen:1,preview:1,insertparagraph:1,elementpath:1,insertcode:1,inserthtml:1,selectall:1};//将queyCommamndState重置
var orgQuery=me.queryCommandState;me.queryCommandState=function(cmd){var me=this;if(!me.notNeedCodeQuery[cmd.toLowerCase()]&&me.selection&&me.queryCommandValue('insertcode')){return-1;}return UE.Editor.prototype.queryCommandState.apply(this,arguments);};me.addListener('beforeenterkeydown',function(){var rng=me.selection.getRange();var pre=domUtils.findParentByTagName(rng.startContainer,'pre',true);if(pre){me.fireEvent('saveScene');if(!rng.collapsed){rng.deleteContents();}if(!browser.ie||browser.ie9above){var tmpNode=me.document.createElement('br'),pre;rng.insertNode(tmpNode).setStartAfter(tmpNode).collapse(true);var next=tmpNode.nextSibling;if(!next&&(!browser.ie||browser.version>10)){rng.insertNode(tmpNode.cloneNode(false));}else{rng.setStartAfter(tmpNode);}pre=tmpNode.previousSibling;var tmp;while(pre){tmp=pre;pre=pre.previousSibling;if(!pre||pre.nodeName=='BR'){pre=tmp;break;}}if(pre){var str='';while(pre&&pre.nodeName!='BR'&&new RegExp('^[\\s'+domUtils.fillChar+']*$').test(pre.nodeValue)){str+=pre.nodeValue;pre=pre.nextSibling;}if(pre.nodeName!='BR'){var match=pre.nodeValue.match(new RegExp('^([\\s'+domUtils.fillChar+']+)'));if(match&&match[1]){str+=match[1];}}if(str){str=me.document.createTextNode(str);rng.insertNode(str).setStartAfter(str);}}rng.collapse(true).select(true);}else{if(browser.version>8){var txt=me.document.createTextNode('\n');var start=rng.startContainer;if(rng.startOffset==0){var preNode=start.previousSibling;if(preNode){rng.insertNode(txt);var fillchar=me.document.createTextNode(' ');rng.setStartAfter(txt).insertNode(fillchar).setStart(fillchar,0).collapse(true).select(true);}}else{rng.insertNode(txt).setStartAfter(txt);var fillchar=me.document.createTextNode(' ');start=rng.startContainer.childNodes[rng.startOffset];if(start&&!/^\n/.test(start.nodeValue)){rng.setStartBefore(txt);}rng.insertNode(fillchar).setStart(fillchar,0).collapse(true).select(true);}}else{var tmpNode=me.document.createElement('br');rng.insertNode(tmpNode);rng.insertNode(me.document.createTextNode(domUtils.fillChar));rng.setStartAfter(tmpNode);pre=tmpNode.previousSibling;var tmp;while(pre){tmp=pre;pre=pre.previousSibling;if(!pre||pre.nodeName=='BR'){pre=tmp;break;}}if(pre){var str='';while(pre&&pre.nodeName!='BR'&&new RegExp('^[ '+domUtils.fillChar+']*$').test(pre.nodeValue)){str+=pre.nodeValue;pre=pre.nextSibling;}if(pre.nodeName!='BR'){var match=pre.nodeValue.match(new RegExp('^([ '+domUtils.fillChar+']+)'));if(match&&match[1]){str+=match[1];}}str=me.document.createTextNode(str);rng.insertNode(str).setStartAfter(str);}rng.collapse(true).select();}}me.fireEvent('saveScene');return true;}});me.addListener('tabkeydown',function(cmd,evt){var rng=me.selection.getRange();var pre=domUtils.findParentByTagName(rng.startContainer,'pre',true);if(pre){me.fireEvent('saveScene');if(evt.shiftKey){}else{if(!rng.collapsed){var bk=rng.createBookmark();var start=bk.start.previousSibling;while(start){if(pre.firstChild===start&&!domUtils.isBr(start)){pre.insertBefore(me.document.createTextNode('    '),start);break;}if(domUtils.isBr(start)){pre.insertBefore(me.document.createTextNode('    '),start.nextSibling);break;}start=start.previousSibling;}var end=bk.end;start=bk.start.nextSibling;if(pre.firstChild===bk.start){pre.insertBefore(me.document.createTextNode('    '),start.nextSibling);}while(start&&start!==end){if(domUtils.isBr(start)&&start.nextSibling){if(start.nextSibling===end){break;}pre.insertBefore(me.document.createTextNode('    '),start.nextSibling);}start=start.nextSibling;}rng.moveToBookmark(bk).select();}else{var tmpNode=me.document.createTextNode('    ');rng.insertNode(tmpNode).setStartAfter(tmpNode).collapse(true).select(true);}}me.fireEvent('saveScene');return true;}});me.addListener('beforeinserthtml',function(evtName,html){var me=this,rng=me.selection.getRange(),pre=domUtils.findParentByTagName(rng.startContainer,'pre',true);if(pre){if(!rng.collapsed){rng.deleteContents();}var htmlstr='';if(browser.ie&&browser.version>8){utils.each(UE.filterNode(UE.htmlparser(html),me.options.filterTxtRules).children,function(node){if(node.type=='element'){if(node.tagName=='br'){htmlstr+='\n';}else if(!dtd.$empty[node.tagName]){utils.each(node.children,function(cn){if(cn.type=='element'){if(cn.tagName=='br'){htmlstr+='\n';}else if(!dtd.$empty[node.tagName]){htmlstr+=cn.innerText();}}else{htmlstr+=cn.data;}});if(!/\n$/.test(htmlstr)){htmlstr+='\n';}}}else{htmlstr+=node.data+'\n';}if(!node.nextSibling()&&/\n$/.test(htmlstr)){htmlstr=htmlstr.replace(/\n$/,'');}});var tmpNode=me.document.createTextNode(utils.html(htmlstr.replace(/&nbsp;/g,' ')));rng.insertNode(tmpNode).selectNode(tmpNode).select();}else{var frag=me.document.createDocumentFragment();utils.each(UE.filterNode(UE.htmlparser(html),me.options.filterTxtRules).children,function(node){if(node.type=='element'){if(node.tagName=='br'){frag.appendChild(me.document.createElement('br'));}else if(!dtd.$empty[node.tagName]){utils.each(node.children,function(cn){if(cn.type=='element'){if(cn.tagName=='br'){frag.appendChild(me.document.createElement('br'));}else if(!dtd.$empty[node.tagName]){frag.appendChild(me.document.createTextNode(utils.html(cn.innerText().replace(/&nbsp;/g,' '))));}}else{frag.appendChild(me.document.createTextNode(utils.html(cn.data.replace(/&nbsp;/g,' '))));}});if(frag.lastChild.nodeName!='BR'){frag.appendChild(me.document.createElement('br'));}}}else{frag.appendChild(me.document.createTextNode(utils.html(node.data.replace(/&nbsp;/g,' '))));}if(!node.nextSibling()&&frag.lastChild.nodeName=='BR'){frag.removeChild(frag.lastChild);}});rng.insertNode(frag).select();}return true;}});//方向键的处理
me.addListener('keydown',function(cmd,evt){var me=this,keyCode=evt.keyCode||evt.which;if(keyCode==40){var rng=me.selection.getRange(),pre,start=rng.startContainer;if(rng.collapsed&&(pre=domUtils.findParentByTagName(rng.startContainer,'pre',true))&&!pre.nextSibling){var last=pre.lastChild;while(last&&last.nodeName=='BR'){last=last.previousSibling;}if(last===start||rng.startContainer===pre&&rng.startOffset==pre.childNodes.length){me.execCommand('insertparagraph');domUtils.preventDefault(evt);}}}});//trace:3395
me.addListener('delkeydown',function(type,evt){var rng=this.selection.getRange();rng.txtToElmBoundary(true);var start=rng.startContainer;if(domUtils.isTagNode(start,'pre')&&rng.collapsed&&domUtils.isStartInblock(rng)){var p=me.document.createElement('p');domUtils.fillNode(me.document,p);start.parentNode.insertBefore(p,start);domUtils.remove(start);rng.setStart(p,0).setCursor(false,true);domUtils.preventDefault(evt);return true;}});};// plugins/cleardoc.js
/**
 * 清空文档插件
 * @file
 * @since 1.2.6.1
 *//**
 * 清空文档
 * @command cleardoc
 * @method execCommand
 * @param { String } cmd 命令字符串
 * @example
 * ```javascript
 * //editor 是编辑器实例
 * editor.execCommand('cleardoc');
 * ```
 */UE.commands['cleardoc']={execCommand:function execCommand(cmdName){var me=this,enterTag=me.options.enterTag,range=me.selection.getRange();if(enterTag=="br"){me.body.innerHTML="<br/>";range.setStart(me.body,0).setCursor();}else{me.body.innerHTML="<p>"+(ie?"":"<br/>")+"</p>";range.setStart(me.body.firstChild,0).setCursor(false,true);}setTimeout(function(){me.fireEvent("clearDoc");},0);}};// plugins/anchor.js
/**
 * 锚点插件，为UEditor提供插入锚点支持
 * @file
 * @since 1.2.6.1
 */UE.plugin.register('anchor',function(){return{bindEvents:{'ready':function ready(){utils.cssRule('anchor','.anchorclass{background: url(\''+this.options.themePath+this.options.theme+'/images/anchor.gif\') no-repeat scroll left center transparent;cursor: auto;display: inline-block;height: 16px;width: 15px;}',this.document);}},outputRule:function outputRule(root){utils.each(root.getNodesByTagName('img'),function(a){var val;if(val=a.getAttr('anchorname')){a.tagName='a';a.setAttr({anchorname:'',name:val,'class':''});}});},inputRule:function inputRule(root){utils.each(root.getNodesByTagName('a'),function(a){var val;if((val=a.getAttr('name'))&&!a.getAttr('href')){a.tagName='img';a.setAttr({anchorname:a.getAttr('name'),'class':'anchorclass'});a.setAttr('name');}});},commands:{/**
            * 插入锚点
            * @command anchor
            * @method execCommand
            * @param { String } cmd 命令字符串
            * @param { String } name 锚点名称字符串
            * @example
            * ```javascript
            * //editor 是编辑器实例
            * editor.execCommand('anchor', 'anchor1');
            * ```
            */'anchor':{execCommand:function execCommand(cmd,name){var range=this.selection.getRange(),img=range.getClosedNode();if(img&&img.getAttribute('anchorname')){if(name){img.setAttribute('anchorname',name);}else{range.setStartBefore(img).setCursor();domUtils.remove(img);}}else{if(name){//只在选区的开始插入
var anchor=this.document.createElement('img');range.collapse(true);domUtils.setAttributes(anchor,{'anchorname':name,'class':'anchorclass'});range.insertNode(anchor).setStartAfter(anchor).setCursor(false,true);}}}}}};});// plugins/wordcount.js
///import core
///commands 字数统计
///commandsName  WordCount,wordCount
///commandsTitle  字数统计
/*
 * Created by JetBrains WebStorm.
 * User: taoqili
 * Date: 11-9-7
 * Time: 下午8:18
 * To change this template use File | Settings | File Templates.
 */UE.plugins['wordcount']=function(){var me=this;me.setOpt('wordCount',true);me.addListener('contentchange',function(){me.fireEvent('wordcount');});var timer;me.addListener('ready',function(){var me=this;domUtils.on(me.body,"keyup",function(evt){var code=evt.keyCode||evt.which,//忽略的按键,ctr,alt,shift,方向键
ignores={"16":1,"18":1,"20":1,"37":1,"38":1,"39":1,"40":1};if(code in ignores)return;clearTimeout(timer);timer=setTimeout(function(){me.fireEvent('wordcount');},200);});});};// plugins/pagebreak.js
/**
 * 分页功能插件
 * @file
 * @since 1.2.6.1
 */UE.plugins['pagebreak']=function(){var me=this,notBreakTags=['td'];me.setOpt('pageBreakTag','_ueditor_page_break_tag_');function fillNode(node){if(domUtils.isEmptyBlock(node)){var firstChild=node.firstChild,tmpNode;while(firstChild&&firstChild.nodeType==1&&domUtils.isEmptyBlock(firstChild)){tmpNode=firstChild;firstChild=firstChild.firstChild;}!tmpNode&&(tmpNode=node);domUtils.fillNode(me.document,tmpNode);}}//分页符样式添加
me.ready(function(){utils.cssRule('pagebreak','.pagebreak{display:block;clear:both !important;cursor:default !important;width: 100% !important;margin:0;}',me.document);});function isHr(node){return node&&node.nodeType==1&&node.tagName=='HR'&&node.className=='pagebreak';}me.addInputRule(function(root){root.traversal(function(node){if(node.type=='text'&&node.data==me.options.pageBreakTag){var hr=UE.uNode.createElement('<hr class="pagebreak" noshade="noshade" size="5" style="-webkit-user-select: none;">');node.parentNode.insertBefore(hr,node);node.parentNode.removeChild(node);}});});me.addOutputRule(function(node){utils.each(node.getNodesByTagName('hr'),function(n){if(n.getAttr('class')=='pagebreak'){var txt=UE.uNode.createText(me.options.pageBreakTag);n.parentNode.insertBefore(txt,n);n.parentNode.removeChild(n);}});});/**
     * 插入分页符
     * @command pagebreak
     * @method execCommand
     * @param { String } cmd 命令字符串
     * @remind 在表格中插入分页符会把表格切分成两部分
     * @remind 获取编辑器内的数据时， 编辑器会把分页符转换成“_ueditor_page_break_tag_”字符串，
     *          以便于提交数据到服务器端后处理分页。
     * @example
     * ```javascript
     * editor.execCommand( 'pagebreak'); //插入一个hr标签，带有样式类名pagebreak
     * ```
     */me.commands['pagebreak']={execCommand:function execCommand(){var range=me.selection.getRange(),hr=me.document.createElement('hr');domUtils.setAttributes(hr,{'class':'pagebreak',noshade:"noshade",size:"5"});domUtils.unSelectable(hr);//table单独处理
var node=domUtils.findParentByTagName(range.startContainer,notBreakTags,true),parents=[],pN;if(node){switch(node.tagName){case'TD':pN=node.parentNode;if(!pN.previousSibling){var table=domUtils.findParentByTagName(pN,'table');//                            var tableWrapDiv = table.parentNode;
//                            if(tableWrapDiv && tableWrapDiv.nodeType == 1
//                                && tableWrapDiv.tagName == 'DIV'
//                                && tableWrapDiv.getAttribute('dropdrag')
//                                ){
//                                domUtils.remove(tableWrapDiv,true);
//                            }
table.parentNode.insertBefore(hr,table);parents=domUtils.findParents(hr,true);}else{pN.parentNode.insertBefore(hr,pN);parents=domUtils.findParents(hr);}pN=parents[1];if(hr!==pN){domUtils.breakParent(hr,pN);}//table要重写绑定一下拖拽
me.fireEvent('afteradjusttable',me.document);}}else{if(!range.collapsed){range.deleteContents();var start=range.startContainer;while(!domUtils.isBody(start)&&domUtils.isBlockElm(start)&&domUtils.isEmptyNode(start)){range.setStartBefore(start).collapse(true);domUtils.remove(start);start=range.startContainer;}}range.insertNode(hr);var pN=hr.parentNode,nextNode;while(!domUtils.isBody(pN)){domUtils.breakParent(hr,pN);nextNode=hr.nextSibling;if(nextNode&&domUtils.isEmptyBlock(nextNode)){domUtils.remove(nextNode);}pN=hr.parentNode;}nextNode=hr.nextSibling;var pre=hr.previousSibling;if(isHr(pre)){domUtils.remove(pre);}else{pre&&fillNode(pre);}if(!nextNode){var p=me.document.createElement('p');hr.parentNode.appendChild(p);domUtils.fillNode(me.document,p);range.setStart(p,0).collapse(true);}else{if(isHr(nextNode)){domUtils.remove(nextNode);}else{fillNode(nextNode);}range.setEndAfter(hr).collapse(false);}range.select(true);}}};};// plugins/wordimage.js
///import core
///commands 本地图片引导上传
///commandsName  WordImage
///commandsTitle  本地图片引导上传
///commandsDialog  dialogs\wordimage
UE.plugin.register('wordimage',function(){var me=this,images=[];return{commands:{'wordimage':{execCommand:function execCommand(){var images=domUtils.getElementsByTagName(me.body,"img");var urlList=[];for(var i=0,ci;ci=images[i++];){var url=ci.getAttribute("word_img");url&&urlList.push(url);}return urlList;},queryCommandState:function queryCommandState(){images=domUtils.getElementsByTagName(me.body,"img");for(var i=0,ci;ci=images[i++];){if(ci.getAttribute("word_img")){return 1;}}return-1;},notNeedUndo:true}},inputRule:function inputRule(root){utils.each(root.getNodesByTagName('img'),function(img){var attrs=img.attrs,flag=parseInt(attrs.width)<128||parseInt(attrs.height)<43,opt=me.options,src=opt.UEDITOR_HOME_URL+'themes/default/images/spacer.gif';if(attrs['src']&&/^(?:(file:\/+))/.test(attrs['src'])){img.setAttr({width:attrs.width,height:attrs.height,alt:attrs.alt,word_img:attrs.src,src:src,'style':'background:url('+(flag?opt.themePath+opt.theme+'/images/word.gif':opt.langPath+opt.lang+'/images/localimage.png')+') no-repeat center center;border:1px solid #ddd'});}});}};});// plugins/dragdrop.js
UE.plugins['dragdrop']=function(){var me=this;me.ready(function(){domUtils.on(this.body,'dragend',function(){var rng=me.selection.getRange();var node=rng.getClosedNode()||me.selection.getStart();if(node&&node.tagName=='IMG'){var pre=node.previousSibling,next;while(next=node.nextSibling){if(next.nodeType==1&&next.tagName=='SPAN'&&!next.firstChild){domUtils.remove(next);}else{break;}}if((pre&&pre.nodeType==1&&!domUtils.isEmptyBlock(pre)||!pre)&&(!next||next&&!domUtils.isEmptyBlock(next))){if(pre&&pre.tagName=='P'&&!domUtils.isEmptyBlock(pre)){pre.appendChild(node);domUtils.moveChild(next,pre);domUtils.remove(next);}else if(next&&next.tagName=='P'&&!domUtils.isEmptyBlock(next)){next.insertBefore(node,next.firstChild);}if(pre&&pre.tagName=='P'&&domUtils.isEmptyBlock(pre)){domUtils.remove(pre);}if(next&&next.tagName=='P'&&domUtils.isEmptyBlock(next)){domUtils.remove(next);}rng.selectNode(node).select();me.fireEvent('saveScene');}}});});me.addListener('keyup',function(type,evt){var keyCode=evt.keyCode||evt.which;if(keyCode==13){var rng=me.selection.getRange(),node;if(node=domUtils.findParentByTagName(rng.startContainer,'p',true)){if(domUtils.getComputedStyle(node,'text-align')=='center'){domUtils.removeStyle(node,'text-align');}}}});};// plugins/undo.js
/**
 * undo redo
 * @file
 * @since 1.2.6.1
 *//**
 * 撤销上一次执行的命令
 * @command undo
 * @method execCommand
 * @param { String } cmd 命令字符串
 * @example
 * ```javascript
 * editor.execCommand( 'undo' );
 * ```
 *//**
 * 重做上一次执行的命令
 * @command redo
 * @method execCommand
 * @param { String } cmd 命令字符串
 * @example
 * ```javascript
 * editor.execCommand( 'redo' );
 * ```
 */UE.plugins['undo']=function(){var saveSceneTimer;var me=this,maxUndoCount=me.options.maxUndoCount||20,maxInputCount=me.options.maxInputCount||20,fillchar=new RegExp(domUtils.fillChar+'|<\/hr>','gi');// ie会产生多余的</hr>
var noNeedFillCharTags={ol:1,ul:1,table:1,tbody:1,tr:1,body:1};var orgState=me.options.autoClearEmptyNode;function compareAddr(indexA,indexB){if(indexA.length!=indexB.length)return 0;for(var i=0,l=indexA.length;i<l;i++){if(indexA[i]!=indexB[i])return 0;}return 1;}function compareRangeAddress(rngAddrA,rngAddrB){if(rngAddrA.collapsed!=rngAddrB.collapsed){return 0;}if(!compareAddr(rngAddrA.startAddress,rngAddrB.startAddress)||!compareAddr(rngAddrA.endAddress,rngAddrB.endAddress)){return 0;}return 1;}function UndoManager(){this.list=[];this.index=0;this.hasUndo=false;this.hasRedo=false;this.undo=function(){if(this.hasUndo){if(!this.list[this.index-1]&&this.list.length==1){this.reset();return;}while(this.list[this.index].content==this.list[this.index-1].content){this.index--;if(this.index==0){return this.restore(0);}}this.restore(--this.index);}};this.redo=function(){if(this.hasRedo){while(this.list[this.index].content==this.list[this.index+1].content){this.index++;if(this.index==this.list.length-1){return this.restore(this.index);}}this.restore(++this.index);}};this.restore=function(){var me=this.editor;var scene=this.list[this.index];var root=UE.htmlparser(scene.content.replace(fillchar,''));me.options.autoClearEmptyNode=false;me.filterInputRule(root);me.options.autoClearEmptyNode=orgState;//trace:873
//去掉展位符
me.document.body.innerHTML=root.toHtml();me.fireEvent('afterscencerestore');//处理undo后空格不展位的问题
if(browser.ie){utils.each(domUtils.getElementsByTagName(me.document,'td th caption p'),function(node){if(domUtils.isEmptyNode(node)){domUtils.fillNode(me.document,node);}});}try{var rng=new dom.Range(me.document).moveToAddress(scene.address);rng.select(noNeedFillCharTags[rng.startContainer.nodeName.toLowerCase()]);}catch(e){}this.update();this.clearKey();//不能把自己reset了
me.fireEvent('reset',true);};this.getScene=function(){var me=this.editor;var rng=me.selection.getRange(),rngAddress=rng.createAddress(false,true);me.fireEvent('beforegetscene');var root=UE.htmlparser(me.body.innerHTML);me.options.autoClearEmptyNode=false;me.filterOutputRule(root);me.options.autoClearEmptyNode=orgState;var cont=root.toHtml();//trace:3461
//这个会引起回退时导致空格丢失的情况
//            browser.ie && (cont = cont.replace(/>&nbsp;</g, '><').replace(/\s*</g, '<').replace(/>\s*/g, '>'));
me.fireEvent('aftergetscene');return{address:rngAddress,content:cont};};this.save=function(notCompareRange,notSetCursor){clearTimeout(saveSceneTimer);var currentScene=this.getScene(notSetCursor),lastScene=this.list[this.index];if(lastScene&&lastScene.content!=currentScene.content){me.trigger('contentchange');}//内容相同位置相同不存
if(lastScene&&lastScene.content==currentScene.content&&(notCompareRange?1:compareRangeAddress(lastScene.address,currentScene.address))){return;}this.list=this.list.slice(0,this.index+1);this.list.push(currentScene);//如果大于最大数量了，就把最前的剔除
if(this.list.length>maxUndoCount){this.list.shift();}this.index=this.list.length-1;this.clearKey();//跟新undo/redo状态
this.update();};this.update=function(){this.hasRedo=!!this.list[this.index+1];this.hasUndo=!!this.list[this.index-1];};this.reset=function(){this.list=[];this.index=0;this.hasUndo=false;this.hasRedo=false;this.clearKey();};this.clearKey=function(){keycont=0;lastKeyCode=null;};}me.undoManger=new UndoManager();me.undoManger.editor=me;function saveScene(){this.undoManger.save();}me.addListener('saveScene',function(){var args=Array.prototype.splice.call(arguments,1);this.undoManger.save.apply(this.undoManger,args);});//    me.addListener('beforeexeccommand', saveScene);
//    me.addListener('afterexeccommand', saveScene);
me.addListener('reset',function(type,exclude){if(!exclude){this.undoManger.reset();}});me.commands['redo']=me.commands['undo']={execCommand:function execCommand(cmdName){this.undoManger[cmdName]();},queryCommandState:function queryCommandState(cmdName){return this.undoManger['has'+(cmdName.toLowerCase()=='undo'?'Undo':'Redo')]?0:-1;},notNeedUndo:1};var keys={//  /*Backspace*/ 8:1, /*Delete*/ 46:1,
/*Shift*/16:1,/*Ctrl*/17:1,/*Alt*/18:1,37:1,38:1,39:1,40:1},keycont=0,lastKeyCode;//输入法状态下不计算字符数
var inputType=false;me.addListener('ready',function(){domUtils.on(this.body,'compositionstart',function(){inputType=true;});domUtils.on(this.body,'compositionend',function(){inputType=false;});});//快捷键
me.addshortcutkey({"Undo":"ctrl+90",//undo
"Redo":"ctrl+89"//redo
});var isCollapsed=true;me.addListener('keydown',function(type,evt){var me=this;var keyCode=evt.keyCode||evt.which;if(!keys[keyCode]&&!evt.ctrlKey&&!evt.metaKey&&!evt.shiftKey&&!evt.altKey){var save=function save(cont){cont.undoManger.save(false,true);cont.fireEvent('selectionchange');};if(inputType)return;if(!me.selection.getRange().collapsed){me.undoManger.save(false,true);isCollapsed=false;return;}if(me.undoManger.list.length==0){me.undoManger.save(true);}clearTimeout(saveSceneTimer);saveSceneTimer=setTimeout(function(){if(inputType){var interalTimer=setInterval(function(){if(!inputType){save(me);clearInterval(interalTimer);}},300);return;}save(me);},200);lastKeyCode=keyCode;keycont++;if(keycont>=maxInputCount){save(me);}}});me.addListener('keyup',function(type,evt){var keyCode=evt.keyCode||evt.which;if(!keys[keyCode]&&!evt.ctrlKey&&!evt.metaKey&&!evt.shiftKey&&!evt.altKey){if(inputType)return;if(!isCollapsed){this.undoManger.save(false,true);isCollapsed=true;}}});//扩展实例，添加关闭和开启命令undo
me.stopCmdUndo=function(){me.__hasEnterExecCommand=true;};me.startCmdUndo=function(){me.__hasEnterExecCommand=false;};};// plugins/copy.js
UE.plugin.register('copy',function(){var me=this;function initZeroClipboard(){ZeroClipboard.config({debug:false,swfPath:me.options.UEDITOR_HOME_URL+'third-party/zeroclipboard/ZeroClipboard.swf'});var client=me.zeroclipboard=new ZeroClipboard();// 复制内容
client.on('copy',function(e){var client=e.client,rng=me.selection.getRange(),div=document.createElement('div');div.appendChild(rng.cloneContents());client.setText(div.innerText||div.textContent);client.setHtml(div.innerHTML);rng.select();});// hover事件传递到target
client.on('mouseover mouseout',function(e){var target=e.target;if(e.type=='mouseover'){domUtils.addClass(target,'edui-state-hover');}else if(e.type=='mouseout'){domUtils.removeClasses(target,'edui-state-hover');}});// flash加载不成功
client.on('wrongflash noflash',function(){ZeroClipboard.destroy();});}return{bindEvents:{'ready':function ready(){if(!browser.ie){if(window.ZeroClipboard){initZeroClipboard();}else{utils.loadFile(document,{src:me.options.UEDITOR_HOME_URL+"third-party/zeroclipboard/ZeroClipboard.js",tag:"script",type:"text/javascript",defer:"defer"},function(){initZeroClipboard();});}}}},commands:{'copy':{execCommand:function execCommand(cmd){if(!me.document.execCommand('copy')){alert(me.getLang('copymsg'));}}}}};});// plugins/paste.js
///import core
///import plugins/inserthtml.js
///import plugins/undo.js
///import plugins/serialize.js
///commands 粘贴
///commandsName  PastePlain
///commandsTitle  纯文本粘贴模式
/**
 * @description 粘贴
 * @author zhanyi
 */UE.plugins['paste']=function(){function getClipboardData(callback){var doc=this.document;if(doc.getElementById('baidu_pastebin')){return;}var range=this.selection.getRange(),bk=range.createBookmark(),//创建剪贴的容器div
pastebin=doc.createElement('div');pastebin.id='baidu_pastebin';// Safari 要求div必须有内容，才能粘贴内容进来
browser.webkit&&pastebin.appendChild(doc.createTextNode(domUtils.fillChar+domUtils.fillChar));doc.body.appendChild(pastebin);//trace:717 隐藏的span不能得到top
//bk.start.innerHTML = '&nbsp;';
bk.start.style.display='';pastebin.style.cssText="position:absolute;width:1px;height:1px;overflow:hidden;left:-1000px;white-space:nowrap;top:"+//要在现在光标平行的位置加入，否则会出现跳动的问题
domUtils.getXY(bk.start).y+'px';range.selectNodeContents(pastebin).select(true);setTimeout(function(){if(browser.webkit){for(var i=0,pastebins=doc.querySelectorAll('#baidu_pastebin'),pi;pi=pastebins[i++];){if(domUtils.isEmptyNode(pi)){domUtils.remove(pi);}else{pastebin=pi;break;}}}try{pastebin.parentNode.removeChild(pastebin);}catch(e){}range.moveToBookmark(bk).select(true);callback(pastebin);},0);}var me=this;me.setOpt({retainOnlyLabelPasted:false});var txtContent,htmlContent,address;function getPureHtml(html){return html.replace(/<(\/?)([\w\-]+)([^>]*)>/gi,function(a,b,tagName,attrs){tagName=tagName.toLowerCase();if({img:1}[tagName]){return a;}attrs=attrs.replace(/([\w\-]*?)\s*=\s*(("([^"]*)")|('([^']*)')|([^\s>]+))/gi,function(str,atr,val){if({'src':1,'href':1,'name':1}[atr.toLowerCase()]){return atr+'='+val+' ';}return'';});if({'span':1,'div':1}[tagName]){return'';}else{return'<'+b+tagName+' '+utils.trim(attrs)+'>';}});}function filter(div){var html;if(div.firstChild){//去掉cut中添加的边界值
var nodes=domUtils.getElementsByTagName(div,'span');for(var i=0,ni;ni=nodes[i++];){if(ni.id=='_baidu_cut_start'||ni.id=='_baidu_cut_end'){domUtils.remove(ni);}}if(browser.webkit){var brs=div.querySelectorAll('div br');for(var i=0,bi;bi=brs[i++];){var pN=bi.parentNode;if(pN.tagName=='DIV'&&pN.childNodes.length==1){pN.innerHTML='<p><br/></p>';domUtils.remove(pN);}}var divs=div.querySelectorAll('#baidu_pastebin');for(var i=0,di;di=divs[i++];){var tmpP=me.document.createElement('p');di.parentNode.insertBefore(tmpP,di);while(di.firstChild){tmpP.appendChild(di.firstChild);}domUtils.remove(di);}var metas=div.querySelectorAll('meta');for(var i=0,ci;ci=metas[i++];){domUtils.remove(ci);}var brs=div.querySelectorAll('br');for(i=0;ci=brs[i++];){if(/^apple-/i.test(ci.className)){domUtils.remove(ci);}}}if(browser.gecko){var dirtyNodes=div.querySelectorAll('[_moz_dirty]');for(i=0;ci=dirtyNodes[i++];){ci.removeAttribute('_moz_dirty');}}if(!browser.ie){var spans=div.querySelectorAll('span.Apple-style-span');for(var i=0,ci;ci=spans[i++];){domUtils.remove(ci,true);}}//ie下使用innerHTML会产生多余的\r\n字符，也会产生&nbsp;这里过滤掉
html=div.innerHTML;//.replace(/>(?:(\s|&nbsp;)*?)</g,'><');
//过滤word粘贴过来的冗余属性
html=UE.filterWord(html);//取消了忽略空白的第二个参数，粘贴过来的有些是有空白的，会被套上相关的标签
var root=UE.htmlparser(html);//如果给了过滤规则就先进行过滤
if(me.options.filterRules){UE.filterNode(root,me.options.filterRules);}//执行默认的处理
me.filterInputRule(root);//针对chrome的处理
if(browser.webkit){var br=root.lastChild();if(br&&br.type=='element'&&br.tagName=='br'){root.removeChild(br);}utils.each(me.body.querySelectorAll('div'),function(node){if(domUtils.isEmptyBlock(node)){domUtils.remove(node,true);}});}html={'html':root.toHtml()};me.fireEvent('beforepaste',html,root);//抢了默认的粘贴，那后边的内容就不执行了，比如表格粘贴
if(!html.html){return;}root=UE.htmlparser(html.html,true);//如果开启了纯文本模式
if(me.queryCommandState('pasteplain')===1){me.execCommand('insertHtml',UE.filterNode(root,me.options.filterTxtRules).toHtml(),true);}else{//文本模式
UE.filterNode(root,me.options.filterTxtRules);txtContent=root.toHtml();//完全模式
htmlContent=html.html;address=me.selection.getRange().createAddress(true);me.execCommand('insertHtml',me.getOpt('retainOnlyLabelPasted')===true?getPureHtml(htmlContent):htmlContent,true);}me.fireEvent("afterpaste",html);}}me.addListener('pasteTransfer',function(cmd,plainType){if(address&&txtContent&&htmlContent&&txtContent!=htmlContent){var range=me.selection.getRange();range.moveToAddress(address,true);if(!range.collapsed){while(!domUtils.isBody(range.startContainer)){var start=range.startContainer;if(start.nodeType==1){start=start.childNodes[range.startOffset];if(!start){range.setStartBefore(range.startContainer);continue;}var pre=start.previousSibling;if(pre&&pre.nodeType==3&&new RegExp('^[\n\r\t '+domUtils.fillChar+']*$').test(pre.nodeValue)){range.setStartBefore(pre);}}if(range.startOffset==0){range.setStartBefore(range.startContainer);}else{break;}}while(!domUtils.isBody(range.endContainer)){var end=range.endContainer;if(end.nodeType==1){end=end.childNodes[range.endOffset];if(!end){range.setEndAfter(range.endContainer);continue;}var next=end.nextSibling;if(next&&next.nodeType==3&&new RegExp('^[\n\r\t'+domUtils.fillChar+']*$').test(next.nodeValue)){range.setEndAfter(next);}}if(range.endOffset==range.endContainer[range.endContainer.nodeType==3?'nodeValue':'childNodes'].length){range.setEndAfter(range.endContainer);}else{break;}}}range.deleteContents();range.select(true);me.__hasEnterExecCommand=true;var html=htmlContent;if(plainType===2){html=getPureHtml(html);}else if(plainType){html=txtContent;}me.execCommand('inserthtml',html,true);me.__hasEnterExecCommand=false;var rng=me.selection.getRange();while(!domUtils.isBody(rng.startContainer)&&!rng.startOffset&&rng.startContainer[rng.startContainer.nodeType==3?'nodeValue':'childNodes'].length){rng.setStartBefore(rng.startContainer);}var tmpAddress=rng.createAddress(true);address.endAddress=tmpAddress.startAddress;}});me.addListener('ready',function(){domUtils.on(me.body,'cut',function(){var range=me.selection.getRange();if(!range.collapsed&&me.undoManger){me.undoManger.save();}});//ie下beforepaste在点击右键时也会触发，所以用监控键盘才处理
domUtils.on(me.body,browser.ie||browser.opera?'keydown':'paste',function(e){if((browser.ie||browser.opera)&&(!e.ctrlKey&&!e.metaKey||e.keyCode!='86')){return;}getClipboardData.call(me,function(div){filter(div);});});});me.commands['paste']={execCommand:function execCommand(cmd){if(browser.ie){getClipboardData.call(me,function(div){filter(div);});me.document.execCommand('paste');}else{alert(me.getLang('pastemsg'));}}};};// plugins/puretxtpaste.js
/**
 * 纯文本粘贴插件
 * @file
 * @since 1.2.6.1
 */UE.plugins['pasteplain']=function(){var me=this;me.setOpt({'pasteplain':false,'filterTxtRules':function(){function transP(node){node.tagName='p';node.setStyle();}function removeNode(node){node.parentNode.removeChild(node,true);}return{//直接删除及其字节点内容
'-':'script style object iframe embed input select','p':{$:{}},'br':{$:{}},div:function div(node){var tmpNode,p=UE.uNode.createElement('p');while(tmpNode=node.firstChild()){if(tmpNode.type=='text'||!UE.dom.dtd.$block[tmpNode.tagName]){p.appendChild(tmpNode);}else{if(p.firstChild()){node.parentNode.insertBefore(p,node);p=UE.uNode.createElement('p');}else{node.parentNode.insertBefore(tmpNode,node);}}}if(p.firstChild()){node.parentNode.insertBefore(p,node);}node.parentNode.removeChild(node);},ol:removeNode,ul:removeNode,dl:removeNode,dt:removeNode,dd:removeNode,'li':removeNode,'caption':transP,'th':transP,'tr':transP,'h1':transP,'h2':transP,'h3':transP,'h4':transP,'h5':transP,'h6':transP,'td':function td(node){//没有内容的td直接删掉
var txt=!!node.innerText();if(txt){node.parentNode.insertAfter(UE.uNode.createText(' &nbsp; &nbsp;'),node);}node.parentNode.removeChild(node,node.innerText());}};}()});//暂时这里支持一下老版本的属性
var pasteplain=me.options.pasteplain;/**
     * 启用或取消纯文本粘贴模式
     * @command pasteplain
     * @method execCommand
     * @param { String } cmd 命令字符串
     * @example
     * ```javascript
     * editor.queryCommandState( 'pasteplain' );
     * ```
     *//**
     * 查询当前是否处于纯文本粘贴模式
     * @command pasteplain
     * @method queryCommandState
     * @param { String } cmd 命令字符串
     * @return { int } 如果处于纯文本模式，返回1，否则，返回0
     * @example
     * ```javascript
     * editor.queryCommandState( 'pasteplain' );
     * ```
     */me.commands['pasteplain']={queryCommandState:function queryCommandState(){return pasteplain?1:0;},execCommand:function execCommand(){pasteplain=!pasteplain|0;},notNeedUndo:1};};// plugins/list.js
/**
 * 有序列表,无序列表插件
 * @file
 * @since 1.2.6.1
 */UE.plugins['list']=function(){var me=this,notExchange={'TD':1,'PRE':1,'BLOCKQUOTE':1};var customStyle={'cn':'cn-1-','cn1':'cn-2-','cn2':'cn-3-','num':'num-1-','num1':'num-2-','num2':'num-3-','dash':'dash','dot':'dot'};me.setOpt({'autoTransWordToList':false,'insertorderedlist':{'num':'','num1':'','num2':'','cn':'','cn1':'','cn2':'','decimal':'','lower-alpha':'','lower-roman':'','upper-alpha':'','upper-roman':''},'insertunorderedlist':{'circle':'','disc':'','square':'','dash':'','dot':''},listDefaultPaddingLeft:'30',listiconpath:'http://bs.baidu.com/listicon/',maxListLevel:-1,//-1不限制
disablePInList:false});function listToArray(list){var arr=[];for(var p in list){arr.push(p);}return arr;}var listStyle={'OL':listToArray(me.options.insertorderedlist),'UL':listToArray(me.options.insertunorderedlist)};var liiconpath=me.options.listiconpath;//根据用户配置，调整customStyle
for(var s in customStyle){if(!me.options.insertorderedlist.hasOwnProperty(s)&&!me.options.insertunorderedlist.hasOwnProperty(s)){delete customStyle[s];}}me.ready(function(){var customCss=[];for(var p in customStyle){if(p=='dash'||p=='dot'){customCss.push('li.list-'+customStyle[p]+'{background-image:url('+liiconpath+customStyle[p]+'.gif)}');customCss.push('ul.custom_'+p+'{list-style:none;}ul.custom_'+p+' li{background-position:0 3px;background-repeat:no-repeat}');}else{for(var i=0;i<99;i++){customCss.push('li.list-'+customStyle[p]+i+'{background-image:url('+liiconpath+'list-'+customStyle[p]+i+'.gif)}');}customCss.push('ol.custom_'+p+'{list-style:none;}ol.custom_'+p+' li{background-position:0 3px;background-repeat:no-repeat}');}switch(p){case'cn':customCss.push('li.list-'+p+'-paddingleft-1{padding-left:25px}');customCss.push('li.list-'+p+'-paddingleft-2{padding-left:40px}');customCss.push('li.list-'+p+'-paddingleft-3{padding-left:55px}');break;case'cn1':customCss.push('li.list-'+p+'-paddingleft-1{padding-left:30px}');customCss.push('li.list-'+p+'-paddingleft-2{padding-left:40px}');customCss.push('li.list-'+p+'-paddingleft-3{padding-left:55px}');break;case'cn2':customCss.push('li.list-'+p+'-paddingleft-1{padding-left:40px}');customCss.push('li.list-'+p+'-paddingleft-2{padding-left:55px}');customCss.push('li.list-'+p+'-paddingleft-3{padding-left:68px}');break;case'num':case'num1':customCss.push('li.list-'+p+'-paddingleft-1{padding-left:25px}');break;case'num2':customCss.push('li.list-'+p+'-paddingleft-1{padding-left:35px}');customCss.push('li.list-'+p+'-paddingleft-2{padding-left:40px}');break;case'dash':customCss.push('li.list-'+p+'-paddingleft{padding-left:35px}');break;case'dot':customCss.push('li.list-'+p+'-paddingleft{padding-left:20px}');}}customCss.push('.list-paddingleft-1{padding-left:0}');customCss.push('.list-paddingleft-2{padding-left:'+me.options.listDefaultPaddingLeft+'px}');customCss.push('.list-paddingleft-3{padding-left:'+me.options.listDefaultPaddingLeft*2+'px}');//如果不给宽度会在自定应样式里出现滚动条
utils.cssRule('list','ol,ul{margin:0;pading:0;'+(browser.ie?'':'width:95%')+'}li{clear:both;}'+customCss.join('\n'),me.document);});//单独处理剪切的问题
me.ready(function(){domUtils.on(me.body,'cut',function(){setTimeout(function(){var rng=me.selection.getRange(),li;//trace:3416
if(!rng.collapsed){if(li=domUtils.findParentByTagName(rng.startContainer,'li',true)){if(!li.nextSibling&&domUtils.isEmptyBlock(li)){var pn=li.parentNode,node;if(node=pn.previousSibling){domUtils.remove(pn);rng.setStartAtLast(node).collapse(true);rng.select(true);}else if(node=pn.nextSibling){domUtils.remove(pn);rng.setStartAtFirst(node).collapse(true);rng.select(true);}else{var tmpNode=me.document.createElement('p');domUtils.fillNode(me.document,tmpNode);pn.parentNode.insertBefore(tmpNode,pn);domUtils.remove(pn);rng.setStart(tmpNode,0).collapse(true);rng.select(true);}}}}});});});function getStyle(node){var cls=node.className;if(domUtils.hasClass(node,/custom_/)){return cls.match(/custom_(\w+)/)[1];}return domUtils.getStyle(node,'list-style-type');}me.addListener('beforepaste',function(type,html){var me=this,rng=me.selection.getRange(),li;var root=UE.htmlparser(html.html,true);if(li=domUtils.findParentByTagName(rng.startContainer,'li',true)){var list=li.parentNode,tagName=list.tagName=='OL'?'ul':'ol';utils.each(root.getNodesByTagName(tagName),function(n){n.tagName=list.tagName;n.setAttr();if(n.parentNode===root){type=getStyle(list)||(list.tagName=='OL'?'decimal':'disc');}else{var className=n.parentNode.getAttr('class');if(className&&/custom_/.test(className)){type=className.match(/custom_(\w+)/)[1];}else{type=n.parentNode.getStyle('list-style-type');}if(!type){type=list.tagName=='OL'?'decimal':'disc';}}var index=utils.indexOf(listStyle[list.tagName],type);if(n.parentNode!==root)index=index+1==listStyle[list.tagName].length?0:index+1;var currentStyle=listStyle[list.tagName][index];if(customStyle[currentStyle]){n.setAttr('class','custom_'+currentStyle);}else{n.setStyle('list-style-type',currentStyle);}});}html.html=root.toHtml();});//导出时，去掉p标签
me.getOpt('disablePInList')===true&&me.addOutputRule(function(root){utils.each(root.getNodesByTagName('li'),function(li){var newChildrens=[],index=0;utils.each(li.children,function(n){if(n.tagName=='p'){var tmpNode;while(tmpNode=n.children.pop()){newChildrens.splice(index,0,tmpNode);tmpNode.parentNode=li;lastNode=tmpNode;}tmpNode=newChildrens[newChildrens.length-1];if(!tmpNode||tmpNode.type!='element'||tmpNode.tagName!='br'){var br=UE.uNode.createElement('br');br.parentNode=li;newChildrens.push(br);}index=newChildrens.length;}});if(newChildrens.length){li.children=newChildrens;}});});//进入编辑器的li要套p标签
me.addInputRule(function(root){utils.each(root.getNodesByTagName('li'),function(li){var tmpP=UE.uNode.createElement('p');for(var i=0,ci;ci=li.children[i];){if(ci.type=='text'||dtd.p[ci.tagName]){tmpP.appendChild(ci);}else{if(tmpP.firstChild()){li.insertBefore(tmpP,ci);tmpP=UE.uNode.createElement('p');i=i+2;}else{i++;}}}if(tmpP.firstChild()&&!tmpP.parentNode||!li.firstChild()){li.appendChild(tmpP);}//trace:3357
//p不能为空
if(!tmpP.firstChild()){tmpP.innerHTML(browser.ie?'&nbsp;':'<br/>');}//去掉末尾的空白
var p=li.firstChild();var lastChild=p.lastChild();if(lastChild&&lastChild.type=='text'&&/^\s*$/.test(lastChild.data)){p.removeChild(lastChild);}});if(me.options.autoTransWordToList){var checkListType=function checkListType(content,container){var span=container.firstChild();if(span&&span.type=='element'&&span.tagName=='span'&&/Wingdings|Symbol/.test(span.getStyle('font-family'))){for(var p in unorderlisttype){if(unorderlisttype[p]==span.data){return p;}}return'disc';}for(var p in orderlisttype){if(orderlisttype[p].test(content)){return p;}}};var orderlisttype={'num1':/^\d+\)/,'decimal':/^\d+\./,'lower-alpha':/^[a-z]+\)/,'upper-alpha':/^[A-Z]+\./,'cn':/^[\u4E00\u4E8C\u4E09\u56DB\u516d\u4e94\u4e03\u516b\u4e5d]+[\u3001]/,'cn2':/^\([\u4E00\u4E8C\u4E09\u56DB\u516d\u4e94\u4e03\u516b\u4e5d]+\)/},unorderlisttype={'square':'n'};utils.each(root.getNodesByTagName('p'),function(node){if(node.getAttr('class')!='MsoListParagraph'){return;}//word粘贴过来的会带有margin要去掉,但这样也可能会误命中一些央视
node.setStyle('margin','');node.setStyle('margin-left','');node.setAttr('class','');function appendLi(list,p,type){if(list.tagName=='ol'){if(browser.ie){var first=p.firstChild();if(first.type=='element'&&first.tagName=='span'&&orderlisttype[type].test(first.innerText())){p.removeChild(first);}}else{p.innerHTML(p.innerHTML().replace(orderlisttype[type],''));}}else{p.removeChild(p.firstChild());}var li=UE.uNode.createElement('li');li.appendChild(p);list.appendChild(li);}var tmp=node,type,cacheNode=node;if(node.parentNode.tagName!='li'&&(type=checkListType(node.innerText(),node))){var list=UE.uNode.createElement(me.options.insertorderedlist.hasOwnProperty(type)?'ol':'ul');if(customStyle[type]){list.setAttr('class','custom_'+type);}else{list.setStyle('list-style-type',type);}while(node&&node.parentNode.tagName!='li'&&checkListType(node.innerText(),node)){tmp=node.nextSibling();if(!tmp){node.parentNode.insertBefore(list,node);}appendLi(list,node,type);node=tmp;}if(!list.parentNode&&node&&node.parentNode){node.parentNode.insertBefore(list,node);}}var span=cacheNode.firstChild();if(span&&span.type=='element'&&span.tagName=='span'&&/^\s*(&nbsp;)+\s*$/.test(span.innerText())){span.parentNode.removeChild(span);}});}});//调整索引标签
me.addListener('contentchange',function(){adjustListStyle(me.document);});function adjustListStyle(doc,ignore){utils.each(domUtils.getElementsByTagName(doc,'ol ul'),function(node){if(!domUtils.inDoc(node,doc))return;var parent=node.parentNode;if(parent.tagName==node.tagName){var nodeStyleType=getStyle(node)||(node.tagName=='OL'?'decimal':'disc'),parentStyleType=getStyle(parent)||(parent.tagName=='OL'?'decimal':'disc');if(nodeStyleType==parentStyleType){var styleIndex=utils.indexOf(listStyle[node.tagName],nodeStyleType);styleIndex=styleIndex+1==listStyle[node.tagName].length?0:styleIndex+1;setListStyle(node,listStyle[node.tagName][styleIndex]);}}var index=0,type=2;if(domUtils.hasClass(node,/custom_/)){if(!(/[ou]l/i.test(parent.tagName)&&domUtils.hasClass(parent,/custom_/))){type=1;}}else{if(/[ou]l/i.test(parent.tagName)&&domUtils.hasClass(parent,/custom_/)){type=3;}}var style=domUtils.getStyle(node,'list-style-type');style&&(node.style.cssText='list-style-type:'+style);node.className=utils.trim(node.className.replace(/list-paddingleft-\w+/,''))+' list-paddingleft-'+type;utils.each(domUtils.getElementsByTagName(node,'li'),function(li){li.style.cssText&&(li.style.cssText='');if(!li.firstChild){domUtils.remove(li);return;}if(li.parentNode!==node){return;}index++;if(domUtils.hasClass(node,/custom_/)){var paddingLeft=1,currentStyle=getStyle(node);if(node.tagName=='OL'){if(currentStyle){switch(currentStyle){case'cn':case'cn1':case'cn2':if(index>10&&(index%10==0||index>10&&index<20)){paddingLeft=2;}else if(index>20){paddingLeft=3;}break;case'num2':if(index>9){paddingLeft=2;}}}li.className='list-'+customStyle[currentStyle]+index+' '+'list-'+currentStyle+'-paddingleft-'+paddingLeft;}else{li.className='list-'+customStyle[currentStyle]+' '+'list-'+currentStyle+'-paddingleft';}}else{li.className=li.className.replace(/list-[\w\-]+/gi,'');}var className=li.getAttribute('class');if(className!==null&&!className.replace(/\s/g,'')){domUtils.removeAttributes(li,'class');}});!ignore&&adjustList(node,node.tagName.toLowerCase(),getStyle(node)||domUtils.getStyle(node,'list-style-type'),true);});}function adjustList(list,tag,style,ignoreEmpty){var nextList=list.nextSibling;if(nextList&&nextList.nodeType==1&&nextList.tagName.toLowerCase()==tag&&(getStyle(nextList)||domUtils.getStyle(nextList,'list-style-type')||(tag=='ol'?'decimal':'disc'))==style){domUtils.moveChild(nextList,list);if(nextList.childNodes.length==0){domUtils.remove(nextList);}}if(nextList&&domUtils.isFillChar(nextList)){domUtils.remove(nextList);}var preList=list.previousSibling;if(preList&&preList.nodeType==1&&preList.tagName.toLowerCase()==tag&&(getStyle(preList)||domUtils.getStyle(preList,'list-style-type')||(tag=='ol'?'decimal':'disc'))==style){domUtils.moveChild(list,preList);}if(preList&&domUtils.isFillChar(preList)){domUtils.remove(preList);}!ignoreEmpty&&domUtils.isEmptyBlock(list)&&domUtils.remove(list);if(getStyle(list)){adjustListStyle(list.ownerDocument,true);}}function setListStyle(list,style){if(customStyle[style]){list.className='custom_'+style;}try{domUtils.setStyle(list,'list-style-type',style);}catch(e){}}function clearEmptySibling(node){var tmpNode=node.previousSibling;if(tmpNode&&domUtils.isEmptyBlock(tmpNode)){domUtils.remove(tmpNode);}tmpNode=node.nextSibling;if(tmpNode&&domUtils.isEmptyBlock(tmpNode)){domUtils.remove(tmpNode);}}me.addListener('keydown',function(type,evt){function preventAndSave(){evt.preventDefault?evt.preventDefault():evt.returnValue=false;me.fireEvent('contentchange');me.undoManger&&me.undoManger.save();}function findList(node,filterFn){while(node&&!domUtils.isBody(node)){if(filterFn(node)){return null;}if(node.nodeType==1&&/[ou]l/i.test(node.tagName)){return node;}node=node.parentNode;}return null;}var keyCode=evt.keyCode||evt.which;if(keyCode==13&&!evt.shiftKey){//回车
var rng=me.selection.getRange(),parent=domUtils.findParent(rng.startContainer,function(node){return domUtils.isBlockElm(node);},true),li=domUtils.findParentByTagName(rng.startContainer,'li',true);if(parent&&parent.tagName!='PRE'&&!li){var html=parent.innerHTML.replace(new RegExp(domUtils.fillChar,'g'),'');if(/^\s*1\s*\.[^\d]/.test(html)){parent.innerHTML=html.replace(/^\s*1\s*\./,'');rng.setStartAtLast(parent).collapse(true).select();me.__hasEnterExecCommand=true;me.execCommand('insertorderedlist');me.__hasEnterExecCommand=false;}}var range=me.selection.getRange(),start=findList(range.startContainer,function(node){return node.tagName=='TABLE';}),end=range.collapsed?start:findList(range.endContainer,function(node){return node.tagName=='TABLE';});if(start&&end&&start===end){if(!range.collapsed){start=domUtils.findParentByTagName(range.startContainer,'li',true);end=domUtils.findParentByTagName(range.endContainer,'li',true);if(start&&end&&start===end){range.deleteContents();li=domUtils.findParentByTagName(range.startContainer,'li',true);if(li&&domUtils.isEmptyBlock(li)){pre=li.previousSibling;next=li.nextSibling;p=me.document.createElement('p');domUtils.fillNode(me.document,p);parentList=li.parentNode;if(pre&&next){range.setStart(next,0).collapse(true).select(true);domUtils.remove(li);}else{if(!pre&&!next||!pre){parentList.parentNode.insertBefore(p,parentList);}else{li.parentNode.parentNode.insertBefore(p,parentList.nextSibling);}domUtils.remove(li);if(!parentList.firstChild){domUtils.remove(parentList);}range.setStart(p,0).setCursor();}preventAndSave();return;}}else{var tmpRange=range.cloneRange(),bk=tmpRange.collapse(false).createBookmark();range.deleteContents();tmpRange.moveToBookmark(bk);var li=domUtils.findParentByTagName(tmpRange.startContainer,'li',true);clearEmptySibling(li);tmpRange.select();preventAndSave();return;}}li=domUtils.findParentByTagName(range.startContainer,'li',true);if(li){if(domUtils.isEmptyBlock(li)){bk=range.createBookmark();var parentList=li.parentNode;if(li!==parentList.lastChild){domUtils.breakParent(li,parentList);clearEmptySibling(li);}else{parentList.parentNode.insertBefore(li,parentList.nextSibling);if(domUtils.isEmptyNode(parentList)){domUtils.remove(parentList);}}//嵌套不处理
if(!dtd.$list[li.parentNode.tagName]){if(!domUtils.isBlockElm(li.firstChild)){p=me.document.createElement('p');li.parentNode.insertBefore(p,li);while(li.firstChild){p.appendChild(li.firstChild);}domUtils.remove(li);}else{domUtils.remove(li,true);}}range.moveToBookmark(bk).select();}else{var first=li.firstChild;if(!first||!domUtils.isBlockElm(first)){var p=me.document.createElement('p');!li.firstChild&&domUtils.fillNode(me.document,p);while(li.firstChild){p.appendChild(li.firstChild);}li.appendChild(p);first=p;}var span=me.document.createElement('span');range.insertNode(span);domUtils.breakParent(span,li);var nextLi=span.nextSibling;first=nextLi.firstChild;if(!first){p=me.document.createElement('p');domUtils.fillNode(me.document,p);nextLi.appendChild(p);first=p;}if(domUtils.isEmptyNode(first)){first.innerHTML='';domUtils.fillNode(me.document,first);}range.setStart(first,0).collapse(true).shrinkBoundary().select();domUtils.remove(span);var pre=nextLi.previousSibling;if(pre&&domUtils.isEmptyBlock(pre)){pre.innerHTML='<p></p>';domUtils.fillNode(me.document,pre.firstChild);}}//                        }
preventAndSave();}}}if(keyCode==8){//修中ie中li下的问题
range=me.selection.getRange();if(range.collapsed&&domUtils.isStartInblock(range)){tmpRange=range.cloneRange().trimBoundary();li=domUtils.findParentByTagName(range.startContainer,'li',true);//要在li的最左边，才能处理
if(li&&domUtils.isStartInblock(tmpRange)){start=domUtils.findParentByTagName(range.startContainer,'p',true);if(start&&start!==li.firstChild){var parentList=domUtils.findParentByTagName(start,['ol','ul']);domUtils.breakParent(start,parentList);clearEmptySibling(start);me.fireEvent('contentchange');range.setStart(start,0).setCursor(false,true);me.fireEvent('saveScene');domUtils.preventDefault(evt);return;}if(li&&(pre=li.previousSibling)){if(keyCode==46&&li.childNodes.length){return;}//有可能上边的兄弟节点是个2级菜单，要追加到2级菜单的最后的li
if(dtd.$list[pre.tagName]){pre=pre.lastChild;}me.undoManger&&me.undoManger.save();first=li.firstChild;if(domUtils.isBlockElm(first)){if(domUtils.isEmptyNode(first)){//                                    range.setEnd(pre, pre.childNodes.length).shrinkBoundary().collapse().select(true);
pre.appendChild(first);range.setStart(first,0).setCursor(false,true);//first不是唯一的节点
while(li.firstChild){pre.appendChild(li.firstChild);}}else{span=me.document.createElement('span');range.insertNode(span);//判断pre是否是空的节点,如果是<p><br/></p>类型的空节点，干掉p标签防止它占位
if(domUtils.isEmptyBlock(pre)){pre.innerHTML='';}domUtils.moveChild(li,pre);range.setStartBefore(span).collapse(true).select(true);domUtils.remove(span);}}else{if(domUtils.isEmptyNode(li)){var p=me.document.createElement('p');pre.appendChild(p);range.setStart(p,0).setCursor();//                                    range.setEnd(pre, pre.childNodes.length).shrinkBoundary().collapse().select(true);
}else{range.setEnd(pre,pre.childNodes.length).collapse().select(true);while(li.firstChild){pre.appendChild(li.firstChild);}}}domUtils.remove(li);me.fireEvent('contentchange');me.fireEvent('saveScene');domUtils.preventDefault(evt);return;}//trace:980
if(li&&!li.previousSibling){var parentList=li.parentNode;var bk=range.createBookmark();if(domUtils.isTagNode(parentList.parentNode,'ol ul')){parentList.parentNode.insertBefore(li,parentList);if(domUtils.isEmptyNode(parentList)){domUtils.remove(parentList);}}else{while(li.firstChild){parentList.parentNode.insertBefore(li.firstChild,parentList);}domUtils.remove(li);if(domUtils.isEmptyNode(parentList)){domUtils.remove(parentList);}}range.moveToBookmark(bk).setCursor(false,true);me.fireEvent('contentchange');me.fireEvent('saveScene');domUtils.preventDefault(evt);return;}}}}});me.addListener('keyup',function(type,evt){var keyCode=evt.keyCode||evt.which;if(keyCode==8){var rng=me.selection.getRange(),list;if(list=domUtils.findParentByTagName(rng.startContainer,['ol','ul'],true)){adjustList(list,list.tagName.toLowerCase(),getStyle(list)||domUtils.getComputedStyle(list,'list-style-type'),true);}}});//处理tab键
me.addListener('tabkeydown',function(){var range=me.selection.getRange();//控制级数
function checkLevel(li){if(me.options.maxListLevel!=-1){var level=li.parentNode,levelNum=0;while(/[ou]l/i.test(level.tagName)){levelNum++;level=level.parentNode;}if(levelNum>=me.options.maxListLevel){return true;}}}//只以开始为准
//todo 后续改进
var li=domUtils.findParentByTagName(range.startContainer,'li',true);if(li){var bk;if(range.collapsed){if(checkLevel(li))return true;var parentLi=li.parentNode,list=me.document.createElement(parentLi.tagName),index=utils.indexOf(listStyle[list.tagName],getStyle(parentLi)||domUtils.getComputedStyle(parentLi,'list-style-type'));index=index+1==listStyle[list.tagName].length?0:index+1;var currentStyle=listStyle[list.tagName][index];setListStyle(list,currentStyle);if(domUtils.isStartInblock(range)){me.fireEvent('saveScene');bk=range.createBookmark();parentLi.insertBefore(list,li);list.appendChild(li);adjustList(list,list.tagName.toLowerCase(),currentStyle);me.fireEvent('contentchange');range.moveToBookmark(bk).select(true);return true;}}else{me.fireEvent('saveScene');bk=range.createBookmark();for(var i=0,closeList,parents=domUtils.findParents(li),ci;ci=parents[i++];){if(domUtils.isTagNode(ci,'ol ul')){closeList=ci;break;}}var current=li;if(bk.end){while(current&&!(domUtils.getPosition(current,bk.end)&domUtils.POSITION_FOLLOWING)){if(checkLevel(current)){current=domUtils.getNextDomNode(current,false,null,function(node){return node!==closeList;});continue;}var parentLi=current.parentNode,list=me.document.createElement(parentLi.tagName),index=utils.indexOf(listStyle[list.tagName],getStyle(parentLi)||domUtils.getComputedStyle(parentLi,'list-style-type'));var currentIndex=index+1==listStyle[list.tagName].length?0:index+1;var currentStyle=listStyle[list.tagName][currentIndex];setListStyle(list,currentStyle);parentLi.insertBefore(list,current);while(current&&!(domUtils.getPosition(current,bk.end)&domUtils.POSITION_FOLLOWING)){li=current.nextSibling;list.appendChild(current);if(!li||domUtils.isTagNode(li,'ol ul')){if(li){while(li=li.firstChild){if(li.tagName=='LI'){break;}}}else{li=domUtils.getNextDomNode(current,false,null,function(node){return node!==closeList;});}break;}current=li;}adjustList(list,list.tagName.toLowerCase(),currentStyle);current=li;}}me.fireEvent('contentchange');range.moveToBookmark(bk).select();return true;}}});function getLi(start){while(start&&!domUtils.isBody(start)){if(start.nodeName=='TABLE'){return null;}if(start.nodeName=='LI'){return start;}start=start.parentNode;}}/**
     * 有序列表，与“insertunorderedlist”命令互斥
     * @command insertorderedlist
     * @method execCommand
     * @param { String } command 命令字符串
     * @param { String } style 插入的有序列表类型，值为：decimal,lower-alpha,lower-roman,upper-alpha,upper-roman,cn,cn1,cn2,num,num1,num2
     * @example
     * ```javascript
     * editor.execCommand( 'insertorderedlist','decimal');
     * ```
     *//**
     * 查询当前选区内容是否有序列表
     * @command insertorderedlist
     * @method queryCommandState
     * @param { String } cmd 命令字符串
     * @return { int } 如果当前选区是有序列表返回1，否则返回0
     * @example
     * ```javascript
     * editor.queryCommandState( 'insertorderedlist' );
     * ```
     *//**
     * 查询当前选区内容是否有序列表
     * @command insertorderedlist
     * @method queryCommandValue
     * @param { String } cmd 命令字符串
     * @return { String } 返回当前有序列表的类型，值为null或decimal,lower-alpha,lower-roman,upper-alpha,upper-roman,cn,cn1,cn2,num,num1,num2
     * @example
     * ```javascript
     * editor.queryCommandValue( 'insertorderedlist' );
     * ```
     *//**
     * 无序列表，与“insertorderedlist”命令互斥
     * @command insertunorderedlist
     * @method execCommand
     * @param { String } command 命令字符串
     * @param { String } style 插入的无序列表类型，值为：circle,disc,square,dash,dot
     * @example
     * ```javascript
     * editor.execCommand( 'insertunorderedlist','circle');
     * ```
     *//**
     * 查询当前是否有word文档粘贴进来的图片
     * @command insertunorderedlist
     * @method insertunorderedlist
     * @param { String } command 命令字符串
     * @return { int } 如果当前选区是无序列表返回1，否则返回0
     * @example
     * ```javascript
     * editor.queryCommandState( 'insertunorderedlist' );
     * ```
     *//**
     * 查询当前选区内容是否有序列表
     * @command insertunorderedlist
     * @method queryCommandValue
     * @param { String } command 命令字符串
     * @return { String } 返回当前无序列表的类型，值为null或circle,disc,square,dash,dot
     * @example
     * ```javascript
     * editor.queryCommandValue( 'insertunorderedlist' );
     * ```
     */me.commands['insertorderedlist']=me.commands['insertunorderedlist']={execCommand:function execCommand(command,style){if(!style){style=command.toLowerCase()=='insertorderedlist'?'decimal':'disc';}var me=this,range=this.selection.getRange(),filterFn=function filterFn(node){return node.nodeType==1?node.tagName.toLowerCase()!='br':!domUtils.isWhitespace(node);},tag=command.toLowerCase()=='insertorderedlist'?'ol':'ul',frag=me.document.createDocumentFragment();//去掉是因为会出现选到末尾，导致adjustmentBoundary缩到ol/ul的位置
//range.shrinkBoundary();//.adjustmentBoundary();
range.adjustmentBoundary().shrinkBoundary();var bko=range.createBookmark(true),start=getLi(me.document.getElementById(bko.start)),modifyStart=0,end=getLi(me.document.getElementById(bko.end)),modifyEnd=0,startParent,endParent,list,tmp;if(start||end){start&&(startParent=start.parentNode);if(!bko.end){end=start;}end&&(endParent=end.parentNode);if(startParent===endParent){while(start!==end){tmp=start;start=start.nextSibling;if(!domUtils.isBlockElm(tmp.firstChild)){var p=me.document.createElement('p');while(tmp.firstChild){p.appendChild(tmp.firstChild);}tmp.appendChild(p);}frag.appendChild(tmp);}tmp=me.document.createElement('span');startParent.insertBefore(tmp,end);if(!domUtils.isBlockElm(end.firstChild)){p=me.document.createElement('p');while(end.firstChild){p.appendChild(end.firstChild);}end.appendChild(p);}frag.appendChild(end);domUtils.breakParent(tmp,startParent);if(domUtils.isEmptyNode(tmp.previousSibling)){domUtils.remove(tmp.previousSibling);}if(domUtils.isEmptyNode(tmp.nextSibling)){domUtils.remove(tmp.nextSibling);}var nodeStyle=getStyle(startParent)||domUtils.getComputedStyle(startParent,'list-style-type')||(command.toLowerCase()=='insertorderedlist'?'decimal':'disc');if(startParent.tagName.toLowerCase()==tag&&nodeStyle==style){for(var i=0,ci,tmpFrag=me.document.createDocumentFragment();ci=frag.firstChild;){if(domUtils.isTagNode(ci,'ol ul')){//                                  删除时，子列表不处理
//                                  utils.each(domUtils.getElementsByTagName(ci,'li'),function(li){
//                                        while(li.firstChild){
//                                            tmpFrag.appendChild(li.firstChild);
//                                        }
//
//                                    });
tmpFrag.appendChild(ci);}else{while(ci.firstChild){tmpFrag.appendChild(ci.firstChild);domUtils.remove(ci);}}}tmp.parentNode.insertBefore(tmpFrag,tmp);}else{list=me.document.createElement(tag);setListStyle(list,style);list.appendChild(frag);tmp.parentNode.insertBefore(list,tmp);}domUtils.remove(tmp);list&&adjustList(list,tag,style);range.moveToBookmark(bko).select();return;}//开始
if(start){while(start){tmp=start.nextSibling;if(domUtils.isTagNode(start,'ol ul')){frag.appendChild(start);}else{var tmpfrag=me.document.createDocumentFragment(),hasBlock=0;while(start.firstChild){if(domUtils.isBlockElm(start.firstChild)){hasBlock=1;}tmpfrag.appendChild(start.firstChild);}if(!hasBlock){var tmpP=me.document.createElement('p');tmpP.appendChild(tmpfrag);frag.appendChild(tmpP);}else{frag.appendChild(tmpfrag);}domUtils.remove(start);}start=tmp;}startParent.parentNode.insertBefore(frag,startParent.nextSibling);if(domUtils.isEmptyNode(startParent)){range.setStartBefore(startParent);domUtils.remove(startParent);}else{range.setStartAfter(startParent);}modifyStart=1;}if(end&&domUtils.inDoc(endParent,me.document)){//结束
start=endParent.firstChild;while(start&&start!==end){tmp=start.nextSibling;if(domUtils.isTagNode(start,'ol ul')){frag.appendChild(start);}else{tmpfrag=me.document.createDocumentFragment();hasBlock=0;while(start.firstChild){if(domUtils.isBlockElm(start.firstChild)){hasBlock=1;}tmpfrag.appendChild(start.firstChild);}if(!hasBlock){tmpP=me.document.createElement('p');tmpP.appendChild(tmpfrag);frag.appendChild(tmpP);}else{frag.appendChild(tmpfrag);}domUtils.remove(start);}start=tmp;}var tmpDiv=domUtils.createElement(me.document,'div',{'tmpDiv':1});domUtils.moveChild(end,tmpDiv);frag.appendChild(tmpDiv);domUtils.remove(end);endParent.parentNode.insertBefore(frag,endParent);range.setEndBefore(endParent);if(domUtils.isEmptyNode(endParent)){domUtils.remove(endParent);}modifyEnd=1;}}if(!modifyStart){range.setStartBefore(me.document.getElementById(bko.start));}if(bko.end&&!modifyEnd){range.setEndAfter(me.document.getElementById(bko.end));}range.enlarge(true,function(node){return notExchange[node.tagName];});frag=me.document.createDocumentFragment();var bk=range.createBookmark(),current=domUtils.getNextDomNode(bk.start,false,filterFn),tmpRange=range.cloneRange(),tmpNode,block=domUtils.isBlockElm;while(current&&current!==bk.end&&domUtils.getPosition(current,bk.end)&domUtils.POSITION_PRECEDING){if(current.nodeType==3||dtd.li[current.tagName]){if(current.nodeType==1&&dtd.$list[current.tagName]){while(current.firstChild){frag.appendChild(current.firstChild);}tmpNode=domUtils.getNextDomNode(current,false,filterFn);domUtils.remove(current);current=tmpNode;continue;}tmpNode=current;tmpRange.setStartBefore(current);while(current&&current!==bk.end&&(!block(current)||domUtils.isBookmarkNode(current))){tmpNode=current;current=domUtils.getNextDomNode(current,false,null,function(node){return!notExchange[node.tagName];});}if(current&&block(current)){tmp=domUtils.getNextDomNode(tmpNode,false,filterFn);if(tmp&&domUtils.isBookmarkNode(tmp)){current=domUtils.getNextDomNode(tmp,false,filterFn);tmpNode=tmp;}}tmpRange.setEndAfter(tmpNode);current=domUtils.getNextDomNode(tmpNode,false,filterFn);var li=range.document.createElement('li');li.appendChild(tmpRange.extractContents());if(domUtils.isEmptyNode(li)){var tmpNode=range.document.createElement('p');while(li.firstChild){tmpNode.appendChild(li.firstChild);}li.appendChild(tmpNode);}frag.appendChild(li);}else{current=domUtils.getNextDomNode(current,true,filterFn);}}range.moveToBookmark(bk).collapse(true);list=me.document.createElement(tag);setListStyle(list,style);list.appendChild(frag);range.insertNode(list);//当前list上下看能否合并
adjustList(list,tag,style);//去掉冗余的tmpDiv
for(var i=0,ci,tmpDivs=domUtils.getElementsByTagName(list,'div');ci=tmpDivs[i++];){if(ci.getAttribute('tmpDiv')){domUtils.remove(ci,true);}}range.moveToBookmark(bko).select();},queryCommandState:function queryCommandState(command){var tag=command.toLowerCase()=='insertorderedlist'?'ol':'ul';var path=this.selection.getStartElementPath();for(var i=0,ci;ci=path[i++];){if(ci.nodeName=='TABLE'){return 0;}if(tag==ci.nodeName.toLowerCase()){return 1;};}return 0;},queryCommandValue:function queryCommandValue(command){var tag=command.toLowerCase()=='insertorderedlist'?'ol':'ul';var path=this.selection.getStartElementPath(),node;for(var i=0,ci;ci=path[i++];){if(ci.nodeName=='TABLE'){node=null;break;}if(tag==ci.nodeName.toLowerCase()){node=ci;break;};}return node?getStyle(node)||domUtils.getComputedStyle(node,'list-style-type'):null;}};};// plugins/source.js
/**
 * 源码编辑插件
 * @file
 * @since 1.2.6.1
 */(function(){var sourceEditors={textarea:function textarea(editor,holder){var textarea=holder.ownerDocument.createElement('textarea');textarea.style.cssText='position:absolute;resize:none;width:100%;height:100%;border:0;padding:0;margin:0;overflow-y:auto;';// todo: IE下只有onresize属性可用... 很纠结
if(browser.ie&&browser.version<8){textarea.style.width=holder.offsetWidth+'px';textarea.style.height=holder.offsetHeight+'px';holder.onresize=function(){textarea.style.width=holder.offsetWidth+'px';textarea.style.height=holder.offsetHeight+'px';};}holder.appendChild(textarea);return{setContent:function setContent(content){textarea.value=content;},getContent:function getContent(){return textarea.value;},select:function select(){var range;if(browser.ie){range=textarea.createTextRange();range.collapse(true);range.select();}else{//todo: chrome下无法设置焦点
textarea.setSelectionRange(0,0);textarea.focus();}},dispose:function dispose(){holder.removeChild(textarea);// todo
holder.onresize=null;textarea=null;holder=null;}};},codemirror:function codemirror(editor,holder){var codeEditor=window.CodeMirror(holder,{mode:"text/html",tabMode:"indent",lineNumbers:true,lineWrapping:true});var dom=codeEditor.getWrapperElement();dom.style.cssText='position:absolute;left:0;top:0;width:100%;height:100%;font-family:consolas,"Courier new",monospace;font-size:13px;';codeEditor.getScrollerElement().style.cssText='position:absolute;left:0;top:0;width:100%;height:100%;';codeEditor.refresh();return{getCodeMirror:function getCodeMirror(){return codeEditor;},setContent:function setContent(content){codeEditor.setValue(content);},getContent:function getContent(){return codeEditor.getValue();},select:function select(){codeEditor.focus();},dispose:function dispose(){holder.removeChild(dom);dom=null;codeEditor=null;}};}};UE.plugins['source']=function(){var me=this;var opt=this.options;var sourceMode=false;var sourceEditor;var orgSetContent;opt.sourceEditor=browser.ie?'textarea':opt.sourceEditor||'codemirror';me.setOpt({sourceEditorFirst:false});function createSourceEditor(holder){return sourceEditors[opt.sourceEditor=='codemirror'&&window.CodeMirror?'codemirror':'textarea'](me,holder);}var bakCssText;//解决在源码模式下getContent不能得到最新的内容问题
var oldGetContent,bakAddress;/**
         * 切换源码模式和编辑模式
         * @command source
         * @method execCommand
         * @param { String } cmd 命令字符串
         * @example
         * ```javascript
         * editor.execCommand( 'source');
         * ```
         *//**
         * 查询当前编辑区域的状态是源码模式还是可视化模式
         * @command source
         * @method queryCommandState
         * @param { String } cmd 命令字符串
         * @return { int } 如果当前是源码编辑模式，返回1，否则返回0
         * @example
         * ```javascript
         * editor.queryCommandState( 'source' );
         * ```
         */me.commands['source']={execCommand:function execCommand(){sourceMode=!sourceMode;if(sourceMode){bakAddress=me.selection.getRange().createAddress(false,true);me.undoManger&&me.undoManger.save(true);if(browser.gecko){me.body.contentEditable=false;}bakCssText=me.iframe.style.cssText;me.iframe.style.cssText+='position:absolute;left:-32768px;top:-32768px;';me.fireEvent('beforegetcontent');var root=UE.htmlparser(me.body.innerHTML);me.filterOutputRule(root);root.traversal(function(node){if(node.type=='element'){switch(node.tagName){case'td':case'th':case'caption':if(node.children&&node.children.length==1){if(node.firstChild().tagName=='br'){node.removeChild(node.firstChild());}};break;case'pre':node.innerText(node.innerText().replace(/&nbsp;/g,' '));}}});me.fireEvent('aftergetcontent');var content=root.toHtml(true);sourceEditor=createSourceEditor(me.iframe.parentNode);sourceEditor.setContent(content);orgSetContent=me.setContent;me.setContent=function(html){//这里暂时不触发事件，防止报错
var root=UE.htmlparser(html);me.filterInputRule(root);html=root.toHtml();sourceEditor.setContent(html);};setTimeout(function(){sourceEditor.select();me.addListener('fullscreenchanged',function(){try{sourceEditor.getCodeMirror().refresh();}catch(e){}});});//重置getContent，源码模式下取值也能是最新的数据
oldGetContent=me.getContent;me.getContent=function(){return sourceEditor.getContent()||'<p>'+(browser.ie?'':'<br/>')+'</p>';};}else{me.iframe.style.cssText=bakCssText;var cont=sourceEditor.getContent()||'<p>'+(browser.ie?'':'<br/>')+'</p>';//处理掉block节点前后的空格,有可能会误命中，暂时不考虑
cont=cont.replace(new RegExp('[\\r\\t\\n ]*<\/?(\\w+)\\s*(?:[^>]*)>','g'),function(a,b){if(b&&!dtd.$inlineWithA[b.toLowerCase()]){return a.replace(/(^[\n\r\t ]*)|([\n\r\t ]*$)/g,'');}return a.replace(/(^[\n\r\t]*)|([\n\r\t]*$)/g,'');});me.setContent=orgSetContent;me.setContent(cont);sourceEditor.dispose();sourceEditor=null;//还原getContent方法
me.getContent=oldGetContent;var first=me.body.firstChild;//trace:1106 都删除空了，下边会报错，所以补充一个p占位
if(!first){me.body.innerHTML='<p>'+(browser.ie?'':'<br/>')+'</p>';first=me.body.firstChild;}//要在ifm为显示时ff才能取到selection,否则报错
//这里不能比较位置了
me.undoManger&&me.undoManger.save(true);if(browser.gecko){var input=document.createElement('input');input.style.cssText='position:absolute;left:0;top:-32768px';document.body.appendChild(input);me.body.contentEditable=false;setTimeout(function(){domUtils.setViewportOffset(input,{left:-32768,top:0});input.focus();setTimeout(function(){me.body.contentEditable=true;me.selection.getRange().moveToAddress(bakAddress).select(true);domUtils.remove(input);});});}else{//ie下有可能报错，比如在代码顶头的情况
try{me.selection.getRange().moveToAddress(bakAddress).select(true);}catch(e){}}}this.fireEvent('sourcemodechanged',sourceMode);},queryCommandState:function queryCommandState(){return sourceMode|0;},notNeedUndo:1};var oldQueryCommandState=me.queryCommandState;me.queryCommandState=function(cmdName){cmdName=cmdName.toLowerCase();if(sourceMode){//源码模式下可以开启的命令
return cmdName in{'source':1,'fullscreen':1}?1:-1;}return oldQueryCommandState.apply(this,arguments);};if(opt.sourceEditor=="codemirror"){me.addListener("ready",function(){utils.loadFile(document,{src:opt.codeMirrorJsUrl||opt.UEDITOR_HOME_URL+"third-party/codemirror/codemirror.js",tag:"script",type:"text/javascript",defer:"defer"},function(){if(opt.sourceEditorFirst){setTimeout(function(){me.execCommand("source");},0);}});utils.loadFile(document,{tag:"link",rel:"stylesheet",type:"text/css",href:opt.codeMirrorCssUrl||opt.UEDITOR_HOME_URL+"third-party/codemirror/codemirror.css"});});}};})();// plugins/enterkey.js
///import core
///import plugins/undo.js
///commands 设置回车标签p或br
///commandsName  EnterKey
///commandsTitle  设置回车标签p或br
/**
 * @description 处理回车
 * @author zhanyi
 */UE.plugins['enterkey']=function(){var hTag,me=this,tag=me.options.enterTag;me.addListener('keyup',function(type,evt){var keyCode=evt.keyCode||evt.which;if(keyCode==13){var range=me.selection.getRange(),start=range.startContainer,doSave;//修正在h1-h6里边回车后不能嵌套p的问题
if(!browser.ie){if(/h\d/i.test(hTag)){if(browser.gecko){var h=domUtils.findParentByTagName(start,['h1','h2','h3','h4','h5','h6','blockquote','caption','table'],true);if(!h){me.document.execCommand('formatBlock',false,'<p>');doSave=1;}}else{//chrome remove div
if(start.nodeType==1){var tmp=me.document.createTextNode(''),div;range.insertNode(tmp);div=domUtils.findParentByTagName(tmp,'div',true);if(div){var p=me.document.createElement('p');while(div.firstChild){p.appendChild(div.firstChild);}div.parentNode.insertBefore(p,div);domUtils.remove(div);range.setStartBefore(tmp).setCursor();doSave=1;}domUtils.remove(tmp);}}if(me.undoManger&&doSave){me.undoManger.save();}}//没有站位符，会出现多行的问题
browser.opera&&range.select();}else{me.fireEvent('saveScene',true,true);}}});me.addListener('keydown',function(type,evt){var keyCode=evt.keyCode||evt.which;if(keyCode==13){//回车
if(me.fireEvent('beforeenterkeydown')){domUtils.preventDefault(evt);return;}me.fireEvent('saveScene',true,true);hTag='';var range=me.selection.getRange();if(!range.collapsed){//跨td不能删
var start=range.startContainer,end=range.endContainer,startTd=domUtils.findParentByTagName(start,'td',true),endTd=domUtils.findParentByTagName(end,'td',true);if(startTd&&endTd&&startTd!==endTd||!startTd&&endTd||startTd&&!endTd){evt.preventDefault?evt.preventDefault():evt.returnValue=false;return;}}if(tag=='p'){if(!browser.ie){start=domUtils.findParentByTagName(range.startContainer,['ol','ul','p','h1','h2','h3','h4','h5','h6','blockquote','caption'],true);//opera下执行formatblock会在table的场景下有问题，回车在opera原生支持很好，所以暂时在opera去掉调用这个原生的command
//trace:2431
if(!start&&!browser.opera){me.document.execCommand('formatBlock',false,'<p>');if(browser.gecko){range=me.selection.getRange();start=domUtils.findParentByTagName(range.startContainer,'p',true);start&&domUtils.removeDirtyAttr(start);}}else{hTag=start.tagName;start.tagName.toLowerCase()=='p'&&browser.gecko&&domUtils.removeDirtyAttr(start);}}}else{evt.preventDefault?evt.preventDefault():evt.returnValue=false;if(!range.collapsed){range.deleteContents();start=range.startContainer;if(start.nodeType==1&&(start=start.childNodes[range.startOffset])){while(start.nodeType==1){if(dtd.$empty[start.tagName]){range.setStartBefore(start).setCursor();if(me.undoManger){me.undoManger.save();}return false;}if(!start.firstChild){var br=range.document.createElement('br');start.appendChild(br);range.setStart(start,0).setCursor();if(me.undoManger){me.undoManger.save();}return false;}start=start.firstChild;}if(start===range.startContainer.childNodes[range.startOffset]){br=range.document.createElement('br');range.insertNode(br).setCursor();}else{range.setStart(start,0).setCursor();}}else{br=range.document.createElement('br');range.insertNode(br).setStartAfter(br).setCursor();}}else{br=range.document.createElement('br');range.insertNode(br);var parent=br.parentNode;if(parent.lastChild===br){br.parentNode.insertBefore(br.cloneNode(true),br);range.setStartBefore(br);}else{range.setStartAfter(br);}range.setCursor();}}}});};// plugins/keystrokes.js
/* 处理特殊键的兼容性问题 */UE.plugins['keystrokes']=function(){var me=this;var collapsed=true;me.addListener('keydown',function(type,evt){var keyCode=evt.keyCode||evt.which,rng=me.selection.getRange();//处理全选的情况
if(!rng.collapsed&&!(evt.ctrlKey||evt.shiftKey||evt.altKey||evt.metaKey)&&(keyCode>=65&&keyCode<=90||keyCode>=48&&keyCode<=57||keyCode>=96&&keyCode<=111||{13:1,8:1,46:1}[keyCode])){var tmpNode=rng.startContainer;if(domUtils.isFillChar(tmpNode)){rng.setStartBefore(tmpNode);}tmpNode=rng.endContainer;if(domUtils.isFillChar(tmpNode)){rng.setEndAfter(tmpNode);}rng.txtToElmBoundary();//结束边界可能放到了br的前边，要把br包含进来
// x[xxx]<br/>
if(rng.endContainer&&rng.endContainer.nodeType==1){tmpNode=rng.endContainer.childNodes[rng.endOffset];if(tmpNode&&domUtils.isBr(tmpNode)){rng.setEndAfter(tmpNode);}}if(rng.startOffset==0){tmpNode=rng.startContainer;if(domUtils.isBoundaryNode(tmpNode,'firstChild')){tmpNode=rng.endContainer;if(rng.endOffset==(tmpNode.nodeType==3?tmpNode.nodeValue.length:tmpNode.childNodes.length)&&domUtils.isBoundaryNode(tmpNode,'lastChild')){me.fireEvent('saveScene');me.body.innerHTML='<p>'+(browser.ie?'':'<br/>')+'</p>';rng.setStart(me.body.firstChild,0).setCursor(false,true);me._selectionChange();return;}}}}//处理backspace
if(keyCode==keymap.Backspace){rng=me.selection.getRange();collapsed=rng.collapsed;if(me.fireEvent('delkeydown',evt)){return;}var start,end;//避免按两次删除才能生效的问题
if(rng.collapsed&&rng.inFillChar()){start=rng.startContainer;if(domUtils.isFillChar(start)){rng.setStartBefore(start).shrinkBoundary(true).collapse(true);domUtils.remove(start);}else{start.nodeValue=start.nodeValue.replace(new RegExp('^'+domUtils.fillChar),'');rng.startOffset--;rng.collapse(true).select(true);}}//解决选中control元素不能删除的问题
if(start=rng.getClosedNode()){me.fireEvent('saveScene');rng.setStartBefore(start);domUtils.remove(start);rng.setCursor();me.fireEvent('saveScene');domUtils.preventDefault(evt);return;}//阻止在table上的删除
if(!browser.ie){start=domUtils.findParentByTagName(rng.startContainer,'table',true);end=domUtils.findParentByTagName(rng.endContainer,'table',true);if(start&&!end||!start&&end||start!==end){evt.preventDefault();return;}}}//处理tab键的逻辑
if(keyCode==keymap.Tab){//不处理以下标签
var excludeTagNameForTabKey={'ol':1,'ul':1,'table':1};//处理组件里的tab按下事件
if(me.fireEvent('tabkeydown',evt)){domUtils.preventDefault(evt);return;}var range=me.selection.getRange();me.fireEvent('saveScene');for(var i=0,txt='',tabSize=me.options.tabSize||4,tabNode=me.options.tabNode||'&nbsp;';i<tabSize;i++){txt+=tabNode;}var span=me.document.createElement('span');span.innerHTML=txt+domUtils.fillChar;if(range.collapsed){range.insertNode(span.cloneNode(true).firstChild).setCursor(true);}else{var filterFn=function filterFn(node){return domUtils.isBlockElm(node)&&!excludeTagNameForTabKey[node.tagName.toLowerCase()];};//普通的情况
start=domUtils.findParent(range.startContainer,filterFn,true);end=domUtils.findParent(range.endContainer,filterFn,true);if(start&&end&&start===end){range.deleteContents();range.insertNode(span.cloneNode(true).firstChild).setCursor(true);}else{var bookmark=range.createBookmark();range.enlarge(true);var bookmark2=range.createBookmark(),current=domUtils.getNextDomNode(bookmark2.start,false,filterFn);while(current&&!(domUtils.getPosition(current,bookmark2.end)&domUtils.POSITION_FOLLOWING)){current.insertBefore(span.cloneNode(true).firstChild,current.firstChild);current=domUtils.getNextDomNode(current,false,filterFn);}range.moveToBookmark(bookmark2).moveToBookmark(bookmark).select();}}domUtils.preventDefault(evt);}//trace:1634
//ff的del键在容器空的时候，也会删除
if(browser.gecko&&keyCode==46){range=me.selection.getRange();if(range.collapsed){start=range.startContainer;if(domUtils.isEmptyBlock(start)){var parent=start.parentNode;while(domUtils.getChildCount(parent)==1&&!domUtils.isBody(parent)){start=parent;parent=parent.parentNode;}if(start===parent.lastChild)evt.preventDefault();return;}}}});me.addListener('keyup',function(type,evt){var keyCode=evt.keyCode||evt.which,rng,me=this;if(keyCode==keymap.Backspace){if(me.fireEvent('delkeyup')){return;}rng=me.selection.getRange();if(rng.collapsed){var tmpNode,autoClearTagName=['h1','h2','h3','h4','h5','h6'];if(tmpNode=domUtils.findParentByTagName(rng.startContainer,autoClearTagName,true)){if(domUtils.isEmptyBlock(tmpNode)){var pre=tmpNode.previousSibling;if(pre&&pre.nodeName!='TABLE'){domUtils.remove(tmpNode);rng.setStartAtLast(pre).setCursor(false,true);return;}else{var next=tmpNode.nextSibling;if(next&&next.nodeName!='TABLE'){domUtils.remove(tmpNode);rng.setStartAtFirst(next).setCursor(false,true);return;}}}}//处理当删除到body时，要重新给p标签展位
if(domUtils.isBody(rng.startContainer)){var tmpNode=domUtils.createElement(me.document,'p',{'innerHTML':browser.ie?domUtils.fillChar:'<br/>'});rng.insertNode(tmpNode).setStart(tmpNode,0).setCursor(false,true);}}//chrome下如果删除了inline标签，浏览器会有记忆，在输入文字还是会套上刚才删除的标签，所以这里再选一次就不会了
if(!collapsed&&(rng.startContainer.nodeType==3||rng.startContainer.nodeType==1&&domUtils.isEmptyBlock(rng.startContainer))){if(browser.ie){var span=rng.document.createElement('span');rng.insertNode(span).setStartBefore(span).collapse(true);rng.select();domUtils.remove(span);}else{rng.select();}}}});};// plugins/fiximgclick.js
///import core
///commands 修复chrome下图片不能点击的问题，出现八个角可改变大小
///commandsName  FixImgClick
///commandsTitle  修复chrome下图片不能点击的问题，出现八个角可改变大小
//修复chrome下图片不能点击的问题，出现八个角可改变大小
UE.plugins['fiximgclick']=function(){var elementUpdated=false;function Scale(){this.editor=null;this.resizer=null;this.cover=null;this.doc=document;this.prePos={x:0,y:0};this.startPos={x:0,y:0};}(function(){var rect=[//[left, top, width, height]
[0,0,-1,-1],[0,0,0,-1],[0,0,1,-1],[0,0,-1,0],[0,0,1,0],[0,0,-1,1],[0,0,0,1],[0,0,1,1]];Scale.prototype={init:function init(editor){var me=this;me.editor=editor;me.startPos=this.prePos={x:0,y:0};me.dragId=-1;var hands=[],cover=me.cover=document.createElement('div'),resizer=me.resizer=document.createElement('div');cover.id=me.editor.ui.id+'_imagescale_cover';cover.style.cssText='position:absolute;display:none;z-index:'+me.editor.options.zIndex+';filter:alpha(opacity=0); opacity:0;background:#CCC;';domUtils.on(cover,'mousedown click',function(){me.hide();});for(i=0;i<8;i++){hands.push('<span class="edui-editor-imagescale-hand'+i+'"></span>');}resizer.id=me.editor.ui.id+'_imagescale';resizer.className='edui-editor-imagescale';resizer.innerHTML=hands.join('');resizer.style.cssText+=';display:none;border:1px solid #3b77ff;z-index:'+me.editor.options.zIndex+';';me.editor.ui.getDom().appendChild(cover);me.editor.ui.getDom().appendChild(resizer);me.initStyle();me.initEvents();},initStyle:function initStyle(){utils.cssRule('imagescale','.edui-editor-imagescale{display:none;position:absolute;border:1px solid #38B2CE;cursor:hand;-webkit-box-sizing: content-box;-moz-box-sizing: content-box;box-sizing: content-box;}'+'.edui-editor-imagescale span{position:absolute;width:6px;height:6px;overflow:hidden;font-size:0px;display:block;background-color:#3C9DD0;}'+'.edui-editor-imagescale .edui-editor-imagescale-hand0{cursor:nw-resize;top:0;margin-top:-4px;left:0;margin-left:-4px;}'+'.edui-editor-imagescale .edui-editor-imagescale-hand1{cursor:n-resize;top:0;margin-top:-4px;left:50%;margin-left:-4px;}'+'.edui-editor-imagescale .edui-editor-imagescale-hand2{cursor:ne-resize;top:0;margin-top:-4px;left:100%;margin-left:-3px;}'+'.edui-editor-imagescale .edui-editor-imagescale-hand3{cursor:w-resize;top:50%;margin-top:-4px;left:0;margin-left:-4px;}'+'.edui-editor-imagescale .edui-editor-imagescale-hand4{cursor:e-resize;top:50%;margin-top:-4px;left:100%;margin-left:-3px;}'+'.edui-editor-imagescale .edui-editor-imagescale-hand5{cursor:sw-resize;top:100%;margin-top:-3px;left:0;margin-left:-4px;}'+'.edui-editor-imagescale .edui-editor-imagescale-hand6{cursor:s-resize;top:100%;margin-top:-3px;left:50%;margin-left:-4px;}'+'.edui-editor-imagescale .edui-editor-imagescale-hand7{cursor:se-resize;top:100%;margin-top:-3px;left:100%;margin-left:-3px;}');},initEvents:function initEvents(){var me=this;me.startPos.x=me.startPos.y=0;me.isDraging=false;},_eventHandler:function _eventHandler(e){var me=this;switch(e.type){case'mousedown':var hand=e.target||e.srcElement,hand;if(hand.className.indexOf('edui-editor-imagescale-hand')!=-1&&me.dragId==-1){me.dragId=hand.className.slice(-1);me.startPos.x=me.prePos.x=e.clientX;me.startPos.y=me.prePos.y=e.clientY;domUtils.on(me.doc,'mousemove',me.proxy(me._eventHandler,me));}break;case'mousemove':if(me.dragId!=-1){me.updateContainerStyle(me.dragId,{x:e.clientX-me.prePos.x,y:e.clientY-me.prePos.y});me.prePos.x=e.clientX;me.prePos.y=e.clientY;elementUpdated=true;me.updateTargetElement();}break;case'mouseup':if(me.dragId!=-1){me.updateContainerStyle(me.dragId,{x:e.clientX-me.prePos.x,y:e.clientY-me.prePos.y});me.updateTargetElement();if(me.target.parentNode)me.attachTo(me.target);me.dragId=-1;}domUtils.un(me.doc,'mousemove',me.proxy(me._eventHandler,me));//修复只是点击挪动点，但没有改变大小，不应该触发contentchange
if(elementUpdated){elementUpdated=false;me.editor.fireEvent('contentchange');}break;default:break;}},updateTargetElement:function updateTargetElement(){var me=this;domUtils.setStyles(me.target,{'width':me.resizer.style.width,'height':me.resizer.style.height});me.target.width=parseInt(me.resizer.style.width);me.target.height=parseInt(me.resizer.style.height);me.attachTo(me.target);},updateContainerStyle:function updateContainerStyle(dir,offset){var me=this,dom=me.resizer,tmp;if(rect[dir][0]!=0){tmp=parseInt(dom.style.left)+offset.x;dom.style.left=me._validScaledProp('left',tmp)+'px';}if(rect[dir][1]!=0){tmp=parseInt(dom.style.top)+offset.y;dom.style.top=me._validScaledProp('top',tmp)+'px';}if(rect[dir][2]!=0){tmp=dom.clientWidth+rect[dir][2]*offset.x;dom.style.width=me._validScaledProp('width',tmp)+'px';}if(rect[dir][3]!=0){tmp=dom.clientHeight+rect[dir][3]*offset.y;dom.style.height=me._validScaledProp('height',tmp)+'px';}},_validScaledProp:function _validScaledProp(prop,value){var ele=this.resizer,wrap=document;value=isNaN(value)?0:value;switch(prop){case'left':return value<0?0:value+ele.clientWidth>wrap.clientWidth?wrap.clientWidth-ele.clientWidth:value;case'top':return value<0?0:value+ele.clientHeight>wrap.clientHeight?wrap.clientHeight-ele.clientHeight:value;case'width':return value<=0?1:value+ele.offsetLeft>wrap.clientWidth?wrap.clientWidth-ele.offsetLeft:value;case'height':return value<=0?1:value+ele.offsetTop>wrap.clientHeight?wrap.clientHeight-ele.offsetTop:value;}},hideCover:function hideCover(){this.cover.style.display='none';},showCover:function showCover(){var me=this,editorPos=domUtils.getXY(me.editor.ui.getDom()),iframePos=domUtils.getXY(me.editor.iframe);domUtils.setStyles(me.cover,{'width':me.editor.iframe.offsetWidth+'px','height':me.editor.iframe.offsetHeight+'px','top':iframePos.y-editorPos.y+'px','left':iframePos.x-editorPos.x+'px','position':'absolute','display':''});},show:function show(targetObj){var me=this;me.resizer.style.display='block';if(targetObj)me.attachTo(targetObj);domUtils.on(this.resizer,'mousedown',me.proxy(me._eventHandler,me));domUtils.on(me.doc,'mouseup',me.proxy(me._eventHandler,me));me.showCover();me.editor.fireEvent('afterscaleshow',me);me.editor.fireEvent('saveScene');},hide:function hide(){var me=this;me.hideCover();me.resizer.style.display='none';domUtils.un(me.resizer,'mousedown',me.proxy(me._eventHandler,me));domUtils.un(me.doc,'mouseup',me.proxy(me._eventHandler,me));me.editor.fireEvent('afterscalehide',me);},proxy:function proxy(fn,context){return function(e){return fn.apply(context||this,arguments);};},attachTo:function attachTo(targetObj){var me=this,target=me.target=targetObj,resizer=this.resizer,imgPos=domUtils.getXY(target),iframePos=domUtils.getXY(me.editor.iframe),editorPos=domUtils.getXY(resizer.parentNode);domUtils.setStyles(resizer,{'width':target.width+'px','height':target.height+'px','left':iframePos.x+imgPos.x-me.editor.document.body.scrollLeft-editorPos.x-parseInt(resizer.style.borderLeftWidth)+'px','top':iframePos.y+imgPos.y-me.editor.document.body.scrollTop-editorPos.y-parseInt(resizer.style.borderTopWidth)+'px'});}};})();return function(){var me=this,imageScale;me.setOpt('imageScaleEnabled',true);if(!browser.ie&&me.options.imageScaleEnabled){me.addListener('click',function(type,e){var range=me.selection.getRange(),img=range.getClosedNode();if(img&&img.tagName=='IMG'&&me.body.contentEditable!="false"){if(img.className.indexOf("edui-faked-music")!=-1||img.getAttribute("anchorname")||domUtils.hasClass(img,'loadingclass')||domUtils.hasClass(img,'loaderrorclass')){return;}if(!imageScale){imageScale=new Scale();imageScale.init(me);me.ui.getDom().appendChild(imageScale.resizer);var _keyDownHandler=function _keyDownHandler(e){imageScale.hide();if(imageScale.target)me.selection.getRange().selectNode(imageScale.target).select();},_mouseDownHandler=function _mouseDownHandler(e){var ele=e.target||e.srcElement;if(ele&&(ele.className===undefined||ele.className.indexOf('edui-editor-imagescale')==-1)){_keyDownHandler(e);}},timer;me.addListener('afterscaleshow',function(e){me.addListener('beforekeydown',_keyDownHandler);me.addListener('beforemousedown',_mouseDownHandler);domUtils.on(document,'keydown',_keyDownHandler);domUtils.on(document,'mousedown',_mouseDownHandler);me.selection.getNative().removeAllRanges();});me.addListener('afterscalehide',function(e){me.removeListener('beforekeydown',_keyDownHandler);me.removeListener('beforemousedown',_mouseDownHandler);domUtils.un(document,'keydown',_keyDownHandler);domUtils.un(document,'mousedown',_mouseDownHandler);var target=imageScale.target;if(target.parentNode){me.selection.getRange().selectNode(target).select();}});//TODO 有iframe的情况，mousedown不能往下传。。
domUtils.on(imageScale.resizer,'mousedown',function(e){me.selection.getNative().removeAllRanges();var ele=e.target||e.srcElement;if(ele&&ele.className.indexOf('edui-editor-imagescale-hand')==-1){timer=setTimeout(function(){imageScale.hide();if(imageScale.target)me.selection.getRange().selectNode(ele).select();},200);}});domUtils.on(imageScale.resizer,'mouseup',function(e){var ele=e.target||e.srcElement;if(ele&&ele.className.indexOf('edui-editor-imagescale-hand')==-1){clearTimeout(timer);}});}imageScale.show(img);}else{if(imageScale&&imageScale.resizer.style.display!='none')imageScale.hide();}});}if(browser.webkit){me.addListener('click',function(type,e){if(e.target.tagName=='IMG'&&me.body.contentEditable!="false"){var range=new dom.Range(me.document);range.selectNode(e.target).select();}});}};}();// plugins/autolink.js
///import core
///commands 为非ie浏览器自动添加a标签
///commandsName  AutoLink
///commandsTitle  自动增加链接
/**
 * @description 为非ie浏览器自动添加a标签
 * @author zhanyi
 */UE.plugin.register('autolink',function(){var cont=0;return!browser.ie?{bindEvents:{'reset':function reset(){cont=0;},'keydown':function keydown(type,evt){var me=this;var keyCode=evt.keyCode||evt.which;if(keyCode==32||keyCode==13){var sel=me.selection.getNative(),range=sel.getRangeAt(0).cloneRange(),offset,charCode;var start=range.startContainer;while(start.nodeType==1&&range.startOffset>0){start=range.startContainer.childNodes[range.startOffset-1];if(!start){break;}range.setStart(start,start.nodeType==1?start.childNodes.length:start.nodeValue.length);range.collapse(true);start=range.startContainer;}do{if(range.startOffset==0){start=range.startContainer.previousSibling;while(start&&start.nodeType==1){start=start.lastChild;}if(!start||domUtils.isFillChar(start)){break;}offset=start.nodeValue.length;}else{start=range.startContainer;offset=range.startOffset;}range.setStart(start,offset-1);charCode=range.toString().charCodeAt(0);}while(charCode!=160&&charCode!=32);if(range.toString().replace(new RegExp(domUtils.fillChar,'g'),'').match(/(?:https?:\/\/|ssh:\/\/|ftp:\/\/|file:\/|www\.)/i)){while(range.toString().length){if(/^(?:https?:\/\/|ssh:\/\/|ftp:\/\/|file:\/|www\.)/i.test(range.toString())){break;}try{range.setStart(range.startContainer,range.startOffset+1);}catch(e){//trace:2121
var start=range.startContainer;while(!(next=start.nextSibling)){if(domUtils.isBody(start)){return;}start=start.parentNode;}range.setStart(next,0);}}//range的开始边界已经在a标签里的不再处理
if(domUtils.findParentByTagName(range.startContainer,'a',true)){return;}var a=me.document.createElement('a'),text=me.document.createTextNode(' '),href;me.undoManger&&me.undoManger.save();a.appendChild(range.extractContents());a.href=a.innerHTML=a.innerHTML.replace(/<[^>]+>/g,'');href=a.getAttribute("href").replace(new RegExp(domUtils.fillChar,'g'),'');href=/^(?:https?:\/\/)/ig.test(href)?href:"http://"+href;a.setAttribute('_src',utils.html(href));a.href=utils.html(href);range.insertNode(a);a.parentNode.insertBefore(text,a.nextSibling);range.setStart(text,0);range.collapse(true);sel.removeAllRanges();sel.addRange(range);me.undoManger&&me.undoManger.save();}}}}}:{};},function(){var keyCodes={37:1,38:1,39:1,40:1,13:1,32:1};function checkIsCludeLink(node){if(node.nodeType==3){return null;}if(node.nodeName=='A'){return node;}var lastChild=node.lastChild;while(lastChild){if(lastChild.nodeName=='A'){return lastChild;}if(lastChild.nodeType==3){if(domUtils.isWhitespace(lastChild)){lastChild=lastChild.previousSibling;continue;}return null;}lastChild=lastChild.lastChild;}}browser.ie&&this.addListener('keyup',function(cmd,evt){var me=this,keyCode=evt.keyCode;if(keyCodes[keyCode]){var rng=me.selection.getRange();var start=rng.startContainer;if(keyCode==13){while(start&&!domUtils.isBody(start)&&!domUtils.isBlockElm(start)){start=start.parentNode;}if(start&&!domUtils.isBody(start)&&start.nodeName=='P'){var pre=start.previousSibling;if(pre&&pre.nodeType==1){var pre=checkIsCludeLink(pre);if(pre&&!pre.getAttribute('_href')){domUtils.remove(pre,true);}}}}else if(keyCode==32){if(start.nodeType==3&&/^\s$/.test(start.nodeValue)){start=start.previousSibling;if(start&&start.nodeName=='A'&&!start.getAttribute('_href')){domUtils.remove(start,true);}}}else{start=domUtils.findParentByTagName(start,'a',true);if(start&&!start.getAttribute('_href')){var bk=rng.createBookmark();domUtils.remove(start,true);rng.moveToBookmark(bk).select(true);}}}});});// plugins/autoheight.js
///import core
///commands 当输入内容超过编辑器高度时，编辑器自动增高
///commandsName  AutoHeight,autoHeightEnabled
///commandsTitle  自动增高
/**
 * @description 自动伸展
 * @author zhanyi
 */UE.plugins['autoheight']=function(){var me=this;//提供开关，就算加载也可以关闭
me.autoHeightEnabled=me.options.autoHeightEnabled!==false;if(!me.autoHeightEnabled){return;}var bakOverflow,lastHeight=0,options=me.options,currentHeight,timer;function adjustHeight(){var me=this;clearTimeout(timer);if(isFullscreen)return;if(!me.queryCommandState||me.queryCommandState&&me.queryCommandState('source')!=1){timer=setTimeout(function(){var node=me.body.lastChild;while(node&&node.nodeType!=1){node=node.previousSibling;}if(node&&node.nodeType==1){node.style.clear='both';currentHeight=Math.max(domUtils.getXY(node).y+node.offsetHeight+25,Math.max(options.minFrameHeight,options.initialFrameHeight));if(currentHeight!=lastHeight){if(currentHeight!==parseInt(me.iframe.parentNode.style.height)){me.iframe.parentNode.style.height=currentHeight+'px';}me.body.style.height=currentHeight+'px';lastHeight=currentHeight;}domUtils.removeStyle(node,'clear');}},50);}}var isFullscreen;me.addListener('fullscreenchanged',function(cmd,f){isFullscreen=f;});me.addListener('destroy',function(){me.removeListener('contentchange afterinserthtml keyup mouseup',adjustHeight);});me.enableAutoHeight=function(){var me=this;if(!me.autoHeightEnabled){return;}var doc=me.document;me.autoHeightEnabled=true;bakOverflow=doc.body.style.overflowY;doc.body.style.overflowY='hidden';me.addListener('contentchange afterinserthtml keyup mouseup',adjustHeight);//ff不给事件算得不对
setTimeout(function(){adjustHeight.call(me);},browser.gecko?100:0);me.fireEvent('autoheightchanged',me.autoHeightEnabled);};me.disableAutoHeight=function(){me.body.style.overflowY=bakOverflow||'';me.removeListener('contentchange',adjustHeight);me.removeListener('keyup',adjustHeight);me.removeListener('mouseup',adjustHeight);me.autoHeightEnabled=false;me.fireEvent('autoheightchanged',me.autoHeightEnabled);};me.on('setHeight',function(){me.disableAutoHeight();});me.addListener('ready',function(){me.enableAutoHeight();//trace:1764
var timer;domUtils.on(browser.ie?me.body:me.document,browser.webkit?'dragover':'drop',function(){clearTimeout(timer);timer=setTimeout(function(){//trace:3681
adjustHeight.call(me);},100);});//修复内容过多时，回到顶部，顶部内容被工具栏遮挡问题
var lastScrollY;window.onscroll=function(){if(lastScrollY===null){lastScrollY=this.scrollY;}else if(this.scrollY==0&&lastScrollY!=0){me.window.scrollTo(0,0);lastScrollY=null;}};});};// plugins/autofloat.js
///import core
///commands 悬浮工具栏
///commandsName  AutoFloat,autoFloatEnabled
///commandsTitle  悬浮工具栏
/**
 *  modified by chengchao01
 *  注意： 引入此功能后，在IE6下会将body的背景图片覆盖掉！
 */UE.plugins['autofloat']=function(){var me=this,lang=me.getLang();me.setOpt({topOffset:0});var optsAutoFloatEnabled=me.options.autoFloatEnabled!==false,topOffset=me.options.topOffset;//如果不固定toolbar的位置，则直接退出
if(!optsAutoFloatEnabled){return;}var uiUtils=UE.ui.uiUtils,LteIE6=browser.ie&&browser.version<=6,quirks=browser.quirks;function checkHasUI(){if(!UE.ui){alert(lang.autofloatMsg);return 0;}return 1;}function fixIE6FixedPos(){var docStyle=document.body.style;docStyle.backgroundImage='url("about:blank")';docStyle.backgroundAttachment='fixed';}var bakCssText,placeHolder=document.createElement('div'),toolbarBox,orgTop,getPosition,flag=true;//ie7模式下需要偏移
function setFloating(){var toobarBoxPos=domUtils.getXY(toolbarBox),origalFloat=domUtils.getComputedStyle(toolbarBox,'position'),origalLeft=domUtils.getComputedStyle(toolbarBox,'left');toolbarBox.style.width=toolbarBox.offsetWidth+'px';toolbarBox.style.zIndex=me.options.zIndex*1+1;toolbarBox.parentNode.insertBefore(placeHolder,toolbarBox);if(LteIE6||quirks&&browser.ie){if(toolbarBox.style.position!='absolute'){toolbarBox.style.position='absolute';}toolbarBox.style.top=(document.body.scrollTop||document.documentElement.scrollTop)-orgTop+topOffset+'px';}else{if(browser.ie7Compat&&flag){flag=false;toolbarBox.style.left=domUtils.getXY(toolbarBox).x-document.documentElement.getBoundingClientRect().left+2+'px';}if(toolbarBox.style.position!='fixed'){toolbarBox.style.position='fixed';toolbarBox.style.top=topOffset+"px";(origalFloat=='absolute'||origalFloat=='relative')&&parseFloat(origalLeft)&&(toolbarBox.style.left=toobarBoxPos.x+'px');}}}function unsetFloating(){flag=true;if(placeHolder.parentNode){placeHolder.parentNode.removeChild(placeHolder);}toolbarBox.style.cssText=bakCssText;}function updateFloating(){var rect3=getPosition(me.container);var offset=me.options.toolbarTopOffset||0;if(rect3.top<0&&rect3.bottom-toolbarBox.offsetHeight>offset){setFloating();}else{unsetFloating();}}var defer_updateFloating=utils.defer(function(){updateFloating();},browser.ie?200:100,true);me.addListener('destroy',function(){domUtils.un(window,['scroll','resize'],updateFloating);me.removeListener('keydown',defer_updateFloating);});me.addListener('ready',function(){if(checkHasUI(me)){//加载了ui组件，但在new时，没有加载ui，导致编辑器实例上没有ui类，所以这里做判断
if(!me.ui){return;}getPosition=uiUtils.getClientRect;toolbarBox=me.ui.getDom('toolbarbox');orgTop=getPosition(toolbarBox).top;bakCssText=toolbarBox.style.cssText;placeHolder.style.height=toolbarBox.offsetHeight+'px';if(LteIE6){fixIE6FixedPos();}domUtils.on(window,['scroll','resize'],updateFloating);me.addListener('keydown',defer_updateFloating);me.addListener('beforefullscreenchange',function(t,enabled){if(enabled){unsetFloating();}});me.addListener('fullscreenchanged',function(t,enabled){if(!enabled){updateFloating();}});me.addListener('sourcemodechanged',function(t,enabled){setTimeout(function(){updateFloating();},0);});me.addListener("clearDoc",function(){setTimeout(function(){updateFloating();},0);});}});};// plugins/video.js
/**
 * video插件， 为UEditor提供视频插入支持
 * @file
 * @since 1.2.6.1
 */UE.plugins['video']=function(){var me=this;/**
     * 创建插入视频字符窜
     * @param url 视频地址
     * @param width 视频宽度
     * @param height 视频高度
     * @param align 视频对齐
     * @param toEmbed 是否以flash代替显示
     * @param addParagraph  是否需要添加P 标签
     */function creatInsertStr(url,width,height,id,align,classname,type){url=utils.unhtmlForUrl(url);align=utils.unhtml(align);classname=utils.unhtml(classname);width=parseInt(width,10)||0;height=parseInt(height,10)||0;var str;switch(type){case'image':str='<img '+(id?'id="'+id+'"':'')+' width="'+width+'" height="'+height+'" _url="'+url+'" class="'+classname.replace(/\bvideo-js\b/,'')+'"'+' src="'+me.options.UEDITOR_HOME_URL+'themes/default/images/spacer.gif" style="background:url('+me.options.UEDITOR_HOME_URL+'themes/default/images/videologo.gif) no-repeat center center; border:1px solid gray;'+(align?'float:'+align+';':'')+'" />';break;case'embed':str='<embed type="application/x-shockwave-flash" class="'+classname+'" pluginspage="http://www.macromedia.com/go/getflashplayer"'+' src="'+utils.html(url)+'" width="'+width+'" height="'+height+'"'+(align?' style="float:'+align+'"':'')+' wmode="transparent" play="true" loop="false" menu="false" allowscriptaccess="never" allowfullscreen="true" >';break;case'video':var ext=url.substr(url.lastIndexOf('.')+1);if(ext=='ogv')ext='ogg';str='<video onclick="this.play();" style="cursor:pointer;" poster="http://171.221.254.165:18080/images/20180423/1524467889140034192.png" '+(id?' id="'+id+'"':'')+' class="'+classname+' video-js" '+(align?' style="float:'+align+'"':'')+' controls preload="none" width="'+width+'" height="'+height+'" src="'+url+'" data-setup="{}">'+'<source src="'+url+'" type="video/'+ext+'"/></video>';break;}return str;}function switchImgAndVideo(root,img2video){utils.each(root.getNodesByTagName(img2video?'img':'embed video'),function(node){var className=node.getAttr('class');if(className&&className.indexOf('edui-faked-video')!=-1){var html=creatInsertStr(img2video?node.getAttr('_url'):node.getAttr('src'),node.getAttr('width'),node.getAttr('height'),null,node.getStyle('float')||'',className,img2video?'embed':'image');node.parentNode.replaceChild(UE.uNode.createElement(html),node);}if(className&&className.indexOf('edui-upload-video')!=-1){var html=creatInsertStr(img2video?node.getAttr('_url'):node.getAttr('src'),node.getAttr('width'),node.getAttr('height'),null,node.getStyle('float')||'',className,img2video?'video':'image');node.parentNode.replaceChild(UE.uNode.createElement(html),node);}});}me.addOutputRule(function(root){switchImgAndVideo(root,true);});me.addInputRule(function(root){switchImgAndVideo(root);});/**
     * 插入视频
     * @command insertvideo
     * @method execCommand
     * @param { String } cmd 命令字符串
     * @param { Object } videoAttr 键值对对象， 描述一个视频的所有属性
     * @example
     * ```javascript
     *
     * var videoAttr = {
     *      //视频地址
     *      url: 'http://www.youku.com/xxx',
     *      //视频宽高值， 单位px
     *      width: 200,
     *      height: 100
     * };
     *
     * //editor 是编辑器实例
     * //向编辑器插入单个视频
     * editor.execCommand( 'insertvideo', videoAttr );
     * ```
     *//**
     * 插入视频
     * @command insertvideo
     * @method execCommand
     * @param { String } cmd 命令字符串
     * @param { Array } videoArr 需要插入的视频的数组， 其中的每一个元素都是一个键值对对象， 描述了一个视频的所有属性
     * @example
     * ```javascript
     *
     * var videoAttr1 = {
     *      //视频地址
     *      url: 'http://www.youku.com/xxx',
     *      //视频宽高值， 单位px
     *      width: 200,
     *      height: 100
     * },
     * videoAttr2 = {
     *      //视频地址
     *      url: 'http://www.youku.com/xxx',
     *      //视频宽高值， 单位px
     *      width: 200,
     *      height: 100
     * }
     *
     * //editor 是编辑器实例
     * //该方法将会向编辑器内插入两个视频
     * editor.execCommand( 'insertvideo', [ videoAttr1, videoAttr2 ] );
     * ```
     *//**
     * 查询当前光标所在处是否是一个视频
     * @command insertvideo
     * @method queryCommandState
     * @param { String } cmd 需要查询的命令字符串
     * @return { int } 如果当前光标所在处的元素是一个视频对象， 则返回1，否则返回0
     * @example
     * ```javascript
     *
     * //editor 是编辑器实例
     * editor.queryCommandState( 'insertvideo' );
     * ```
     */me.commands["insertvideo"]={execCommand:function execCommand(cmd,videoObjs,type){videoObjs=utils.isArray(videoObjs)?videoObjs:[videoObjs];var html=[],id='tmpVedio',cl;for(var i=0,vi,len=videoObjs.length;i<len;i++){vi=videoObjs[i];cl=type=='upload'?'edui-upload-video video-js vjs-default-skin':'edui-faked-video';html.push(creatInsertStr(vi.url,vi.width||420,vi.height||280,id+i,null,cl,'video'));}me.execCommand("inserthtml",html.join(""),true);var rng=this.selection.getRange();for(var i=0,len=videoObjs.length;i<len;i++){var img=this.document.getElementById('tmpVedio'+i);domUtils.removeAttributes(img,'id');rng.selectNode(img).select();me.execCommand('imagefloat',videoObjs[i].align);}},queryCommandState:function queryCommandState(){var img=me.selection.getRange().getClosedNode(),flag=img&&(img.className=="edui-faked-video"||img.className.indexOf("edui-upload-video")!=-1);return flag?1:0;}};};// plugins/table.core.js
/**
 * Created with JetBrains WebStorm.
 * User: taoqili
 * Date: 13-1-18
 * Time: 上午11:09
 * To change this template use File | Settings | File Templates.
 *//**
 * UE表格操作类
 * @param table
 * @constructor
 */(function(){var UETable=UE.UETable=function(table){this.table=table;this.indexTable=[];this.selectedTds=[];this.cellsRange={};this.update(table);};//===以下为静态工具方法===
UETable.removeSelectedClass=function(cells){utils.each(cells,function(cell){domUtils.removeClasses(cell,"selectTdClass");});};UETable.addSelectedClass=function(cells){utils.each(cells,function(cell){domUtils.addClass(cell,"selectTdClass");});};UETable.isEmptyBlock=function(node){var reg=new RegExp(domUtils.fillChar,'g');if(node[browser.ie?'innerText':'textContent'].replace(/^\s*$/,'').replace(reg,'').length>0){return 0;}for(var i in dtd.$isNotEmpty){if(dtd.$isNotEmpty.hasOwnProperty(i)){if(node.getElementsByTagName(i).length){return 0;}}}return 1;};UETable.getWidth=function(cell){if(!cell)return 0;return parseInt(domUtils.getComputedStyle(cell,"width"),10);};/**
     * 获取单元格或者单元格组的“对齐”状态。 如果当前的检测对象是一个单元格组， 只有在满足所有单元格的 水平和竖直 对齐属性都相同的
     * 条件时才会返回其状态值，否则将返回null； 如果当前只检测了一个单元格， 则直接返回当前单元格的对齐状态；
     * @param table cell or table cells , 支持单个单元格dom对象 或者 单元格dom对象数组
     * @return { align: 'left' || 'right' || 'center', valign: 'top' || 'middle' || 'bottom' } 或者 null
     */UETable.getTableCellAlignState=function(cells){!utils.isArray(cells)&&(cells=[cells]);var result={},status=['align','valign'],tempStatus=null,isSame=true;//状态是否相同
utils.each(cells,function(cellNode){utils.each(status,function(currentState){tempStatus=cellNode.getAttribute(currentState);if(!result[currentState]&&tempStatus){result[currentState]=tempStatus;}else if(!result[currentState]||tempStatus!==result[currentState]){isSame=false;return false;}});return isSame;});return isSame?result:null;};/**
     * 根据当前选区获取相关的table信息
     * @return {Object}
     */UETable.getTableItemsByRange=function(editor){var start=editor.selection.getStart();//ff下会选中bookmark
if(start&&start.id&&start.id.indexOf('_baidu_bookmark_start_')===0&&start.nextSibling){start=start.nextSibling;}//在table或者td边缘有可能存在选中tr的情况
var cell=start&&domUtils.findParentByTagName(start,["td","th"],true),tr=cell&&cell.parentNode,caption=start&&domUtils.findParentByTagName(start,'caption',true),table=caption?caption.parentNode:tr&&tr.parentNode.parentNode;return{cell:cell,tr:tr,table:table,caption:caption};};UETable.getUETableBySelected=function(editor){var table=UETable.getTableItemsByRange(editor).table;if(table&&table.ueTable&&table.ueTable.selectedTds.length){return table.ueTable;}return null;};UETable.getDefaultValue=function(editor,table){var borderMap={thin:'0px',medium:'1px',thick:'2px'},tableBorder,tdPadding,tdBorder,tmpValue;if(!table){table=editor.document.createElement('table');table.insertRow(0).insertCell(0).innerHTML='xxx';editor.body.appendChild(table);var td=table.getElementsByTagName('td')[0];tmpValue=domUtils.getComputedStyle(table,'border-left-width');tableBorder=parseInt(borderMap[tmpValue]||tmpValue,10);tmpValue=domUtils.getComputedStyle(td,'padding-left');tdPadding=parseInt(borderMap[tmpValue]||tmpValue,10);tmpValue=domUtils.getComputedStyle(td,'border-left-width');tdBorder=parseInt(borderMap[tmpValue]||tmpValue,10);domUtils.remove(table);return{tableBorder:tableBorder,tdPadding:tdPadding,tdBorder:tdBorder};}else{td=table.getElementsByTagName('td')[0];tmpValue=domUtils.getComputedStyle(table,'border-left-width');tableBorder=parseInt(borderMap[tmpValue]||tmpValue,10);tmpValue=domUtils.getComputedStyle(td,'padding-left');tdPadding=parseInt(borderMap[tmpValue]||tmpValue,10);tmpValue=domUtils.getComputedStyle(td,'border-left-width');tdBorder=parseInt(borderMap[tmpValue]||tmpValue,10);return{tableBorder:tableBorder,tdPadding:tdPadding,tdBorder:tdBorder};}};/**
     * 根据当前点击的td或者table获取索引对象
     * @param tdOrTable
     */UETable.getUETable=function(tdOrTable){var tag=tdOrTable.tagName.toLowerCase();tdOrTable=tag=="td"||tag=="th"||tag=='caption'?domUtils.findParentByTagName(tdOrTable,"table",true):tdOrTable;if(!tdOrTable.ueTable){tdOrTable.ueTable=new UETable(tdOrTable);}return tdOrTable.ueTable;};UETable.cloneCell=function(cell,ignoreMerge,keepPro){if(!cell||utils.isString(cell)){return this.table.ownerDocument.createElement(cell||'td');}var flag=domUtils.hasClass(cell,"selectTdClass");flag&&domUtils.removeClasses(cell,"selectTdClass");var tmpCell=cell.cloneNode(true);if(ignoreMerge){tmpCell.rowSpan=tmpCell.colSpan=1;}//去掉宽高
!keepPro&&domUtils.removeAttributes(tmpCell,'width height');!keepPro&&domUtils.removeAttributes(tmpCell,'style');tmpCell.style.borderLeftStyle="";tmpCell.style.borderTopStyle="";tmpCell.style.borderLeftColor=cell.style.borderRightColor;tmpCell.style.borderLeftWidth=cell.style.borderRightWidth;tmpCell.style.borderTopColor=cell.style.borderBottomColor;tmpCell.style.borderTopWidth=cell.style.borderBottomWidth;flag&&domUtils.addClass(cell,"selectTdClass");return tmpCell;};UETable.prototype={getMaxRows:function getMaxRows(){var rows=this.table.rows,maxLen=1;for(var i=0,row;row=rows[i];i++){var currentMax=1;for(var j=0,cj;cj=row.cells[j++];){currentMax=Math.max(cj.rowSpan||1,currentMax);}maxLen=Math.max(currentMax+i,maxLen);}return maxLen;},/**
         * 获取当前表格的最大列数
         */getMaxCols:function getMaxCols(){var rows=this.table.rows,maxLen=0,cellRows={};for(var i=0,row;row=rows[i];i++){var cellsNum=0;for(var j=0,cj;cj=row.cells[j++];){cellsNum+=cj.colSpan||1;if(cj.rowSpan&&cj.rowSpan>1){for(var k=1;k<cj.rowSpan;k++){if(!cellRows['row_'+(i+k)]){cellRows['row_'+(i+k)]=cj.colSpan||1;}else{cellRows['row_'+(i+k)]++;}}}}cellsNum+=cellRows['row_'+i]||0;maxLen=Math.max(cellsNum,maxLen);}return maxLen;},getCellColIndex:function getCellColIndex(cell){},/**
         * 获取当前cell旁边的单元格，
         * @param cell
         * @param right
         */getHSideCell:function getHSideCell(cell,right){try{var cellInfo=this.getCellInfo(cell),previewRowIndex,previewColIndex;var len=this.selectedTds.length,range=this.cellsRange;//首行或者首列没有前置单元格
if(!right&&(!len?!cellInfo.colIndex:!range.beginColIndex)||right&&(!len?cellInfo.colIndex==this.colsNum-1:range.endColIndex==this.colsNum-1))return null;previewRowIndex=!len?cellInfo.rowIndex:range.beginRowIndex;previewColIndex=!right?!len?cellInfo.colIndex<1?0:cellInfo.colIndex-1:range.beginColIndex-1:!len?cellInfo.colIndex+1:range.endColIndex+1;return this.getCell(this.indexTable[previewRowIndex][previewColIndex].rowIndex,this.indexTable[previewRowIndex][previewColIndex].cellIndex);}catch(e){showError(e);}},getTabNextCell:function getTabNextCell(cell,preRowIndex){var cellInfo=this.getCellInfo(cell),rowIndex=preRowIndex||cellInfo.rowIndex,colIndex=cellInfo.colIndex+1+(cellInfo.colSpan-1),nextCell;try{nextCell=this.getCell(this.indexTable[rowIndex][colIndex].rowIndex,this.indexTable[rowIndex][colIndex].cellIndex);}catch(e){try{rowIndex=rowIndex*1+1;colIndex=0;nextCell=this.getCell(this.indexTable[rowIndex][colIndex].rowIndex,this.indexTable[rowIndex][colIndex].cellIndex);}catch(e){}}return nextCell;},/**
         * 获取视觉上的后置单元格
         * @param cell
         * @param bottom
         */getVSideCell:function getVSideCell(cell,bottom,ignoreRange){try{var cellInfo=this.getCellInfo(cell),nextRowIndex,nextColIndex;var len=this.selectedTds.length&&!ignoreRange,range=this.cellsRange;//末行或者末列没有后置单元格
if(!bottom&&cellInfo.rowIndex==0||bottom&&(!len?cellInfo.rowIndex+cellInfo.rowSpan>this.rowsNum-1:range.endRowIndex==this.rowsNum-1))return null;nextRowIndex=!bottom?!len?cellInfo.rowIndex-1:range.beginRowIndex-1:!len?cellInfo.rowIndex+cellInfo.rowSpan:range.endRowIndex+1;nextColIndex=!len?cellInfo.colIndex:range.beginColIndex;return this.getCell(this.indexTable[nextRowIndex][nextColIndex].rowIndex,this.indexTable[nextRowIndex][nextColIndex].cellIndex);}catch(e){showError(e);}},/**
         * 获取相同结束位置的单元格，xOrY指代了是获取x轴相同还是y轴相同
         */getSameEndPosCells:function getSameEndPosCells(cell,xOrY){try{var flag=xOrY.toLowerCase()==="x",end=domUtils.getXY(cell)[flag?'x':'y']+cell["offset"+(flag?'Width':'Height')],rows=this.table.rows,cells=null,returns=[];for(var i=0;i<this.rowsNum;i++){cells=rows[i].cells;for(var j=0,tmpCell;tmpCell=cells[j++];){var tmpEnd=domUtils.getXY(tmpCell)[flag?'x':'y']+tmpCell["offset"+(flag?'Width':'Height')];//对应行的td已经被上面行rowSpan了
if(tmpEnd>end&&flag)break;if(cell==tmpCell||end==tmpEnd){//只获取单一的单元格
//todo 仅获取单一单元格在特定情况下会造成returns为空，从而影响后续的拖拽实现，修正这个。需考虑性能
if(tmpCell[flag?"colSpan":"rowSpan"]==1){returns.push(tmpCell);}if(flag)break;}}}return returns;}catch(e){showError(e);}},setCellContent:function setCellContent(cell,content){cell.innerHTML=content||(browser.ie?domUtils.fillChar:"<br />");},cloneCell:UETable.cloneCell,/**
         * 获取跟当前单元格的右边竖线为左边的所有未合并单元格
         */getSameStartPosXCells:function getSameStartPosXCells(cell){try{var start=domUtils.getXY(cell).x+cell.offsetWidth,rows=this.table.rows,cells,returns=[];for(var i=0;i<this.rowsNum;i++){cells=rows[i].cells;for(var j=0,tmpCell;tmpCell=cells[j++];){var tmpStart=domUtils.getXY(tmpCell).x;if(tmpStart>start)break;if(tmpStart==start&&tmpCell.colSpan==1){returns.push(tmpCell);break;}}}return returns;}catch(e){showError(e);}},/**
         * 更新table对应的索引表
         */update:function update(table){this.table=table||this.table;this.selectedTds=[];this.cellsRange={};this.indexTable=[];var rows=this.table.rows,rowsNum=this.getMaxRows(),dNum=rowsNum-rows.length,colsNum=this.getMaxCols();while(dNum--){this.table.insertRow(rows.length);}this.rowsNum=rowsNum;this.colsNum=colsNum;for(var i=0,len=rows.length;i<len;i++){this.indexTable[i]=new Array(colsNum);}//填充索引表
for(var rowIndex=0,row;row=rows[rowIndex];rowIndex++){for(var cellIndex=0,cell,cells=row.cells;cell=cells[cellIndex];cellIndex++){//修正整行被rowSpan时导致的行数计算错误
if(cell.rowSpan>rowsNum){cell.rowSpan=rowsNum;}var colIndex=cellIndex,rowSpan=cell.rowSpan||1,colSpan=cell.colSpan||1;//当已经被上一行rowSpan或者被前一列colSpan了，则跳到下一个单元格进行
while(this.indexTable[rowIndex][colIndex]){colIndex++;}for(var j=0;j<rowSpan;j++){for(var k=0;k<colSpan;k++){this.indexTable[rowIndex+j][colIndex+k]={rowIndex:rowIndex,cellIndex:cellIndex,colIndex:colIndex,rowSpan:rowSpan,colSpan:colSpan};}}}}//修复残缺td
for(j=0;j<rowsNum;j++){for(k=0;k<colsNum;k++){if(this.indexTable[j][k]===undefined){row=rows[j];cell=row.cells[row.cells.length-1];cell=cell?cell.cloneNode(true):this.table.ownerDocument.createElement("td");this.setCellContent(cell);if(cell.colSpan!==1)cell.colSpan=1;if(cell.rowSpan!==1)cell.rowSpan=1;row.appendChild(cell);this.indexTable[j][k]={rowIndex:j,cellIndex:cell.cellIndex,colIndex:k,rowSpan:1,colSpan:1};}}}//当框选后删除行或者列后撤销，需要重建选区。
var tds=domUtils.getElementsByTagName(this.table,"td"),selectTds=[];utils.each(tds,function(td){if(domUtils.hasClass(td,"selectTdClass")){selectTds.push(td);}});if(selectTds.length){var start=selectTds[0],end=selectTds[selectTds.length-1],startInfo=this.getCellInfo(start),endInfo=this.getCellInfo(end);this.selectedTds=selectTds;this.cellsRange={beginRowIndex:startInfo.rowIndex,beginColIndex:startInfo.colIndex,endRowIndex:endInfo.rowIndex+endInfo.rowSpan-1,endColIndex:endInfo.colIndex+endInfo.colSpan-1};}//给第一行设置firstRow的样式名称,在排序图标的样式上使用到
if(!domUtils.hasClass(this.table.rows[0],"firstRow")){domUtils.addClass(this.table.rows[0],"firstRow");for(var i=1;i<this.table.rows.length;i++){domUtils.removeClasses(this.table.rows[i],"firstRow");}}},/**
         * 获取单元格的索引信息
         */getCellInfo:function getCellInfo(cell){if(!cell)return;var cellIndex=cell.cellIndex,rowIndex=cell.parentNode.rowIndex,rowInfo=this.indexTable[rowIndex],numCols=this.colsNum;for(var colIndex=cellIndex;colIndex<numCols;colIndex++){var cellInfo=rowInfo[colIndex];if(cellInfo.rowIndex===rowIndex&&cellInfo.cellIndex===cellIndex){return cellInfo;}}},/**
         * 根据行列号获取单元格
         */getCell:function getCell(rowIndex,cellIndex){return rowIndex<this.rowsNum&&this.table.rows[rowIndex].cells[cellIndex]||null;},/**
         * 删除单元格
         */deleteCell:function deleteCell(cell,rowIndex){rowIndex=typeof rowIndex=='number'?rowIndex:cell.parentNode.rowIndex;var row=this.table.rows[rowIndex];row.deleteCell(cell.cellIndex);},/**
         * 根据始末两个单元格获取被框选的所有单元格范围
         */getCellsRange:function getCellsRange(cellA,cellB){function checkRange(beginRowIndex,beginColIndex,endRowIndex,endColIndex){var tmpBeginRowIndex=beginRowIndex,tmpBeginColIndex=beginColIndex,tmpEndRowIndex=endRowIndex,tmpEndColIndex=endColIndex,cellInfo,colIndex,rowIndex;// 通过indexTable检查是否存在超出TableRange上边界的情况
if(beginRowIndex>0){for(colIndex=beginColIndex;colIndex<endColIndex;colIndex++){cellInfo=me.indexTable[beginRowIndex][colIndex];rowIndex=cellInfo.rowIndex;if(rowIndex<beginRowIndex){tmpBeginRowIndex=Math.min(rowIndex,tmpBeginRowIndex);}}}// 通过indexTable检查是否存在超出TableRange右边界的情况
if(endColIndex<me.colsNum){for(rowIndex=beginRowIndex;rowIndex<endRowIndex;rowIndex++){cellInfo=me.indexTable[rowIndex][endColIndex];colIndex=cellInfo.colIndex+cellInfo.colSpan-1;if(colIndex>endColIndex){tmpEndColIndex=Math.max(colIndex,tmpEndColIndex);}}}// 检查是否有超出TableRange下边界的情况
if(endRowIndex<me.rowsNum){for(colIndex=beginColIndex;colIndex<endColIndex;colIndex++){cellInfo=me.indexTable[endRowIndex][colIndex];rowIndex=cellInfo.rowIndex+cellInfo.rowSpan-1;if(rowIndex>endRowIndex){tmpEndRowIndex=Math.max(rowIndex,tmpEndRowIndex);}}}// 检查是否有超出TableRange左边界的情况
if(beginColIndex>0){for(rowIndex=beginRowIndex;rowIndex<endRowIndex;rowIndex++){cellInfo=me.indexTable[rowIndex][beginColIndex];colIndex=cellInfo.colIndex;if(colIndex<beginColIndex){tmpBeginColIndex=Math.min(cellInfo.colIndex,tmpBeginColIndex);}}}//递归调用直至所有完成所有框选单元格的扩展
if(tmpBeginRowIndex!=beginRowIndex||tmpBeginColIndex!=beginColIndex||tmpEndRowIndex!=endRowIndex||tmpEndColIndex!=endColIndex){return checkRange(tmpBeginRowIndex,tmpBeginColIndex,tmpEndRowIndex,tmpEndColIndex);}else{// 不需要扩展TableRange的情况
return{beginRowIndex:beginRowIndex,beginColIndex:beginColIndex,endRowIndex:endRowIndex,endColIndex:endColIndex};}}try{var me=this,cellAInfo=me.getCellInfo(cellA);if(cellA===cellB){return{beginRowIndex:cellAInfo.rowIndex,beginColIndex:cellAInfo.colIndex,endRowIndex:cellAInfo.rowIndex+cellAInfo.rowSpan-1,endColIndex:cellAInfo.colIndex+cellAInfo.colSpan-1};}var cellBInfo=me.getCellInfo(cellB);// 计算TableRange的四个边
var beginRowIndex=Math.min(cellAInfo.rowIndex,cellBInfo.rowIndex),beginColIndex=Math.min(cellAInfo.colIndex,cellBInfo.colIndex),endRowIndex=Math.max(cellAInfo.rowIndex+cellAInfo.rowSpan-1,cellBInfo.rowIndex+cellBInfo.rowSpan-1),endColIndex=Math.max(cellAInfo.colIndex+cellAInfo.colSpan-1,cellBInfo.colIndex+cellBInfo.colSpan-1);return checkRange(beginRowIndex,beginColIndex,endRowIndex,endColIndex);}catch(e){//throw e;
}},/**
         * 依据cellsRange获取对应的单元格集合
         */getCells:function getCells(range){//每次获取cells之前必须先清除上次的选择，否则会对后续获取操作造成影响
this.clearSelected();var beginRowIndex=range.beginRowIndex,beginColIndex=range.beginColIndex,endRowIndex=range.endRowIndex,endColIndex=range.endColIndex,cellInfo,rowIndex,colIndex,tdHash={},returnTds=[];for(var i=beginRowIndex;i<=endRowIndex;i++){for(var j=beginColIndex;j<=endColIndex;j++){cellInfo=this.indexTable[i][j];rowIndex=cellInfo.rowIndex;colIndex=cellInfo.colIndex;// 如果Cells里已经包含了此Cell则跳过
var key=rowIndex+'|'+colIndex;if(tdHash[key])continue;tdHash[key]=1;if(rowIndex<i||colIndex<j||rowIndex+cellInfo.rowSpan-1>endRowIndex||colIndex+cellInfo.colSpan-1>endColIndex){return null;}returnTds.push(this.getCell(rowIndex,cellInfo.cellIndex));}}return returnTds;},/**
         * 清理已经选中的单元格
         */clearSelected:function clearSelected(){UETable.removeSelectedClass(this.selectedTds);this.selectedTds=[];this.cellsRange={};},/**
         * 根据range设置已经选中的单元格
         */setSelected:function setSelected(range){var cells=this.getCells(range);UETable.addSelectedClass(cells);this.selectedTds=cells;this.cellsRange=range;},isFullRow:function isFullRow(){var range=this.cellsRange;return range.endColIndex-range.beginColIndex+1==this.colsNum;},isFullCol:function isFullCol(){var range=this.cellsRange,table=this.table,ths=table.getElementsByTagName("th"),rows=range.endRowIndex-range.beginRowIndex+1;return!ths.length?rows==this.rowsNum:rows==this.rowsNum||rows==this.rowsNum-1;},/**
         * 获取视觉上的前置单元格，默认是左边，top传入时
         * @param cell
         * @param top
         */getNextCell:function getNextCell(cell,bottom,ignoreRange){try{var cellInfo=this.getCellInfo(cell),nextRowIndex,nextColIndex;var len=this.selectedTds.length&&!ignoreRange,range=this.cellsRange;//末行或者末列没有后置单元格
if(!bottom&&cellInfo.rowIndex==0||bottom&&(!len?cellInfo.rowIndex+cellInfo.rowSpan>this.rowsNum-1:range.endRowIndex==this.rowsNum-1))return null;nextRowIndex=!bottom?!len?cellInfo.rowIndex-1:range.beginRowIndex-1:!len?cellInfo.rowIndex+cellInfo.rowSpan:range.endRowIndex+1;nextColIndex=!len?cellInfo.colIndex:range.beginColIndex;return this.getCell(this.indexTable[nextRowIndex][nextColIndex].rowIndex,this.indexTable[nextRowIndex][nextColIndex].cellIndex);}catch(e){showError(e);}},getPreviewCell:function getPreviewCell(cell,top){try{var cellInfo=this.getCellInfo(cell),previewRowIndex,previewColIndex;var len=this.selectedTds.length,range=this.cellsRange;//首行或者首列没有前置单元格
if(!top&&(!len?!cellInfo.colIndex:!range.beginColIndex)||top&&(!len?cellInfo.rowIndex>this.colsNum-1:range.endColIndex==this.colsNum-1))return null;previewRowIndex=!top?!len?cellInfo.rowIndex:range.beginRowIndex:!len?cellInfo.rowIndex<1?0:cellInfo.rowIndex-1:range.beginRowIndex;previewColIndex=!top?!len?cellInfo.colIndex<1?0:cellInfo.colIndex-1:range.beginColIndex-1:!len?cellInfo.colIndex:range.endColIndex+1;return this.getCell(this.indexTable[previewRowIndex][previewColIndex].rowIndex,this.indexTable[previewRowIndex][previewColIndex].cellIndex);}catch(e){showError(e);}},/**
         * 移动单元格中的内容
         */moveContent:function moveContent(cellTo,cellFrom){if(UETable.isEmptyBlock(cellFrom))return;if(UETable.isEmptyBlock(cellTo)){cellTo.innerHTML=cellFrom.innerHTML;return;}var child=cellTo.lastChild;if(child.nodeType==3||!dtd.$block[child.tagName]){cellTo.appendChild(cellTo.ownerDocument.createElement('br'));}while(child=cellFrom.firstChild){cellTo.appendChild(child);}},/**
         * 向右合并单元格
         */mergeRight:function mergeRight(cell){var cellInfo=this.getCellInfo(cell),rightColIndex=cellInfo.colIndex+cellInfo.colSpan,rightCellInfo=this.indexTable[cellInfo.rowIndex][rightColIndex],rightCell=this.getCell(rightCellInfo.rowIndex,rightCellInfo.cellIndex);//合并
cell.colSpan=cellInfo.colSpan+rightCellInfo.colSpan;//被合并的单元格不应存在宽度属性
cell.removeAttribute("width");//移动内容
this.moveContent(cell,rightCell);//删掉被合并的Cell
this.deleteCell(rightCell,rightCellInfo.rowIndex);this.update();},/**
         * 向下合并单元格
         */mergeDown:function mergeDown(cell){var cellInfo=this.getCellInfo(cell),downRowIndex=cellInfo.rowIndex+cellInfo.rowSpan,downCellInfo=this.indexTable[downRowIndex][cellInfo.colIndex],downCell=this.getCell(downCellInfo.rowIndex,downCellInfo.cellIndex);cell.rowSpan=cellInfo.rowSpan+downCellInfo.rowSpan;cell.removeAttribute("height");this.moveContent(cell,downCell);this.deleteCell(downCell,downCellInfo.rowIndex);this.update();},/**
         * 合并整个range中的内容
         */mergeRange:function mergeRange(){//由于合并操作可以在任意时刻进行，所以无法通过鼠标位置等信息实时生成range，只能通过缓存实例中的cellsRange对象来访问
var range=this.cellsRange,leftTopCell=this.getCell(range.beginRowIndex,this.indexTable[range.beginRowIndex][range.beginColIndex].cellIndex);if(leftTopCell.tagName=="TH"&&range.endRowIndex!==range.beginRowIndex){var index=this.indexTable,info=this.getCellInfo(leftTopCell);leftTopCell=this.getCell(1,index[1][info.colIndex].cellIndex);range=this.getCellsRange(leftTopCell,this.getCell(index[this.rowsNum-1][info.colIndex].rowIndex,index[this.rowsNum-1][info.colIndex].cellIndex));}// 删除剩余的Cells
var cells=this.getCells(range);for(var i=0,ci;ci=cells[i++];){if(ci!==leftTopCell){this.moveContent(leftTopCell,ci);this.deleteCell(ci);}}// 修改左上角Cell的rowSpan和colSpan，并调整宽度属性设置
leftTopCell.rowSpan=range.endRowIndex-range.beginRowIndex+1;leftTopCell.rowSpan>1&&leftTopCell.removeAttribute("height");leftTopCell.colSpan=range.endColIndex-range.beginColIndex+1;leftTopCell.colSpan>1&&leftTopCell.removeAttribute("width");if(leftTopCell.rowSpan==this.rowsNum&&leftTopCell.colSpan!=1){leftTopCell.colSpan=1;}if(leftTopCell.colSpan==this.colsNum&&leftTopCell.rowSpan!=1){var rowIndex=leftTopCell.parentNode.rowIndex;//解决IE下的表格操作问题
if(this.table.deleteRow){for(var i=rowIndex+1,curIndex=rowIndex+1,len=leftTopCell.rowSpan;i<len;i++){this.table.deleteRow(curIndex);}}else{for(var i=0,len=leftTopCell.rowSpan-1;i<len;i++){var row=this.table.rows[rowIndex+1];row.parentNode.removeChild(row);}}leftTopCell.rowSpan=1;}this.update();},/**
         * 插入一行单元格
         */insertRow:function insertRow(rowIndex,sourceCell){var numCols=this.colsNum,table=this.table,row=table.insertRow(rowIndex),cell,isInsertTitle=typeof sourceCell=='string'&&sourceCell.toUpperCase()=='TH';function replaceTdToTh(colIndex,cell,tableRow){if(colIndex==0){var tr=tableRow.nextSibling||tableRow.previousSibling,th=tr.cells[colIndex];if(th.tagName=='TH'){th=cell.ownerDocument.createElement("th");th.appendChild(cell.firstChild);tableRow.insertBefore(th,cell);domUtils.remove(cell);}}else{if(cell.tagName=='TH'){var td=cell.ownerDocument.createElement("td");td.appendChild(cell.firstChild);tableRow.insertBefore(td,cell);domUtils.remove(cell);}}}//首行直接插入,无需考虑部分单元格被rowspan的情况
if(rowIndex==0||rowIndex==this.rowsNum){for(var colIndex=0;colIndex<numCols;colIndex++){cell=this.cloneCell(sourceCell,true);this.setCellContent(cell);cell.getAttribute('vAlign')&&cell.setAttribute('vAlign',cell.getAttribute('vAlign'));row.appendChild(cell);if(!isInsertTitle)replaceTdToTh(colIndex,cell,row);}}else{var infoRow=this.indexTable[rowIndex],cellIndex=0;for(colIndex=0;colIndex<numCols;colIndex++){var cellInfo=infoRow[colIndex];//如果存在某个单元格的rowspan穿过待插入行的位置，则修改该单元格的rowspan即可，无需插入单元格
if(cellInfo.rowIndex<rowIndex){cell=this.getCell(cellInfo.rowIndex,cellInfo.cellIndex);cell.rowSpan=cellInfo.rowSpan+1;}else{cell=this.cloneCell(sourceCell,true);this.setCellContent(cell);row.appendChild(cell);}if(!isInsertTitle)replaceTdToTh(colIndex,cell,row);}}//框选时插入不触发contentchange，需要手动更新索引。
this.update();return row;},/**
         * 删除一行单元格
         * @param rowIndex
         */deleteRow:function deleteRow(rowIndex){var row=this.table.rows[rowIndex],infoRow=this.indexTable[rowIndex],colsNum=this.colsNum,count=0;//处理计数
for(var colIndex=0;colIndex<colsNum;){var cellInfo=infoRow[colIndex],cell=this.getCell(cellInfo.rowIndex,cellInfo.cellIndex);if(cell.rowSpan>1){if(cellInfo.rowIndex==rowIndex){var clone=cell.cloneNode(true);clone.rowSpan=cell.rowSpan-1;clone.innerHTML="";cell.rowSpan=1;var nextRowIndex=rowIndex+1,nextRow=this.table.rows[nextRowIndex],insertCellIndex,preMerged=this.getPreviewMergedCellsNum(nextRowIndex,colIndex)-count;if(preMerged<colIndex){insertCellIndex=colIndex-preMerged-1;//nextRow.insertCell(insertCellIndex);
domUtils.insertAfter(nextRow.cells[insertCellIndex],clone);}else{if(nextRow.cells.length)nextRow.insertBefore(clone,nextRow.cells[0]);}count+=1;//cell.parentNode.removeChild(cell);
}}colIndex+=cell.colSpan||1;}var deleteTds=[],cacheMap={};for(colIndex=0;colIndex<colsNum;colIndex++){var tmpRowIndex=infoRow[colIndex].rowIndex,tmpCellIndex=infoRow[colIndex].cellIndex,key=tmpRowIndex+"_"+tmpCellIndex;if(cacheMap[key])continue;cacheMap[key]=1;cell=this.getCell(tmpRowIndex,tmpCellIndex);deleteTds.push(cell);}var mergeTds=[];utils.each(deleteTds,function(td){if(td.rowSpan==1){td.parentNode.removeChild(td);}else{mergeTds.push(td);}});utils.each(mergeTds,function(td){td.rowSpan--;});row.parentNode.removeChild(row);//浏览器方法本身存在bug,采用自定义方法删除
//this.table.deleteRow(rowIndex);
this.update();},insertCol:function insertCol(colIndex,sourceCell,defaultValue){var rowsNum=this.rowsNum,rowIndex=0,tableRow,cell,backWidth=parseInt((this.table.offsetWidth-(this.colsNum+1)*20-(this.colsNum+1))/(this.colsNum+1),10),isInsertTitleCol=typeof sourceCell=='string'&&sourceCell.toUpperCase()=='TH';function replaceTdToTh(rowIndex,cell,tableRow){if(rowIndex==0){var th=cell.nextSibling||cell.previousSibling;if(th.tagName=='TH'){th=cell.ownerDocument.createElement("th");th.appendChild(cell.firstChild);tableRow.insertBefore(th,cell);domUtils.remove(cell);}}else{if(cell.tagName=='TH'){var td=cell.ownerDocument.createElement("td");td.appendChild(cell.firstChild);tableRow.insertBefore(td,cell);domUtils.remove(cell);}}}var preCell;if(colIndex==0||colIndex==this.colsNum){for(;rowIndex<rowsNum;rowIndex++){tableRow=this.table.rows[rowIndex];preCell=tableRow.cells[colIndex==0?colIndex:tableRow.cells.length];cell=this.cloneCell(sourceCell,true);//tableRow.insertCell(colIndex == 0 ? colIndex : tableRow.cells.length);
this.setCellContent(cell);cell.setAttribute('vAlign',cell.getAttribute('vAlign'));preCell&&cell.setAttribute('width',preCell.getAttribute('width'));if(!colIndex){tableRow.insertBefore(cell,tableRow.cells[0]);}else{domUtils.insertAfter(tableRow.cells[tableRow.cells.length-1],cell);}if(!isInsertTitleCol)replaceTdToTh(rowIndex,cell,tableRow);}}else{for(;rowIndex<rowsNum;rowIndex++){var cellInfo=this.indexTable[rowIndex][colIndex];if(cellInfo.colIndex<colIndex){cell=this.getCell(cellInfo.rowIndex,cellInfo.cellIndex);cell.colSpan=cellInfo.colSpan+1;}else{tableRow=this.table.rows[rowIndex];preCell=tableRow.cells[cellInfo.cellIndex];cell=this.cloneCell(sourceCell,true);//tableRow.insertCell(cellInfo.cellIndex);
this.setCellContent(cell);cell.setAttribute('vAlign',cell.getAttribute('vAlign'));preCell&&cell.setAttribute('width',preCell.getAttribute('width'));//防止IE下报错
preCell?tableRow.insertBefore(cell,preCell):tableRow.appendChild(cell);}if(!isInsertTitleCol)replaceTdToTh(rowIndex,cell,tableRow);}}//框选时插入不触发contentchange，需要手动更新索引
this.update();this.updateWidth(backWidth,defaultValue||{tdPadding:10,tdBorder:1});},updateWidth:function updateWidth(width,defaultValue){var table=this.table,tmpWidth=UETable.getWidth(table)-defaultValue.tdPadding*2-defaultValue.tdBorder+width;if(tmpWidth<table.ownerDocument.body.offsetWidth){table.setAttribute("width",tmpWidth);return;}var tds=domUtils.getElementsByTagName(this.table,"td th");utils.each(tds,function(td){td.setAttribute("width",width);});},deleteCol:function deleteCol(colIndex){var indexTable=this.indexTable,tableRows=this.table.rows,backTableWidth=this.table.getAttribute("width"),backTdWidth=0,rowsNum=this.rowsNum,cacheMap={};for(var rowIndex=0;rowIndex<rowsNum;){var infoRow=indexTable[rowIndex],cellInfo=infoRow[colIndex],key=cellInfo.rowIndex+'_'+cellInfo.colIndex;// 跳过已经处理过的Cell
if(cacheMap[key])continue;cacheMap[key]=1;var cell=this.getCell(cellInfo.rowIndex,cellInfo.cellIndex);if(!backTdWidth)backTdWidth=cell&&parseInt(cell.offsetWidth/cell.colSpan,10).toFixed(0);// 如果Cell的colSpan大于1, 就修改colSpan, 否则就删掉这个Cell
if(cell.colSpan>1){cell.colSpan--;}else{tableRows[rowIndex].deleteCell(cellInfo.cellIndex);}rowIndex+=cellInfo.rowSpan||1;}this.table.setAttribute("width",backTableWidth-backTdWidth);this.update();},splitToCells:function splitToCells(cell){var me=this,cells=this.splitToRows(cell);utils.each(cells,function(cell){me.splitToCols(cell);});},splitToRows:function splitToRows(cell){var cellInfo=this.getCellInfo(cell),rowIndex=cellInfo.rowIndex,colIndex=cellInfo.colIndex,results=[];// 修改Cell的rowSpan
cell.rowSpan=1;results.push(cell);// 补齐单元格
for(var i=rowIndex,endRow=rowIndex+cellInfo.rowSpan;i<endRow;i++){if(i==rowIndex)continue;var tableRow=this.table.rows[i],tmpCell=tableRow.insertCell(colIndex-this.getPreviewMergedCellsNum(i,colIndex));tmpCell.colSpan=cellInfo.colSpan;this.setCellContent(tmpCell);tmpCell.setAttribute('vAlign',cell.getAttribute('vAlign'));tmpCell.setAttribute('align',cell.getAttribute('align'));if(cell.style.cssText){tmpCell.style.cssText=cell.style.cssText;}results.push(tmpCell);}this.update();return results;},getPreviewMergedCellsNum:function getPreviewMergedCellsNum(rowIndex,colIndex){var indexRow=this.indexTable[rowIndex],num=0;for(var i=0;i<colIndex;){var colSpan=indexRow[i].colSpan,tmpRowIndex=indexRow[i].rowIndex;num+=colSpan-(tmpRowIndex==rowIndex?1:0);i+=colSpan;}return num;},splitToCols:function splitToCols(cell){var backWidth=(cell.offsetWidth/cell.colSpan-22).toFixed(0),cellInfo=this.getCellInfo(cell),rowIndex=cellInfo.rowIndex,colIndex=cellInfo.colIndex,results=[];// 修改Cell的rowSpan
cell.colSpan=1;cell.setAttribute("width",backWidth);results.push(cell);// 补齐单元格
for(var j=colIndex,endCol=colIndex+cellInfo.colSpan;j<endCol;j++){if(j==colIndex)continue;var tableRow=this.table.rows[rowIndex],tmpCell=tableRow.insertCell(this.indexTable[rowIndex][j].cellIndex+1);tmpCell.rowSpan=cellInfo.rowSpan;this.setCellContent(tmpCell);tmpCell.setAttribute('vAlign',cell.getAttribute('vAlign'));tmpCell.setAttribute('align',cell.getAttribute('align'));tmpCell.setAttribute('width',backWidth);if(cell.style.cssText){tmpCell.style.cssText=cell.style.cssText;}//处理th的情况
if(cell.tagName=='TH'){var th=cell.ownerDocument.createElement('th');th.appendChild(tmpCell.firstChild);th.setAttribute('vAlign',cell.getAttribute('vAlign'));th.rowSpan=tmpCell.rowSpan;tableRow.insertBefore(th,tmpCell);domUtils.remove(tmpCell);}results.push(tmpCell);}this.update();return results;},isLastCell:function isLastCell(cell,rowsNum,colsNum){rowsNum=rowsNum||this.rowsNum;colsNum=colsNum||this.colsNum;var cellInfo=this.getCellInfo(cell);return cellInfo.rowIndex+cellInfo.rowSpan==rowsNum&&cellInfo.colIndex+cellInfo.colSpan==colsNum;},getLastCell:function getLastCell(cells){cells=cells||this.table.getElementsByTagName("td");var firstInfo=this.getCellInfo(cells[0]);var me=this,last=cells[0],tr=last.parentNode,cellsNum=0,cols=0,rows;utils.each(cells,function(cell){if(cell.parentNode==tr)cols+=cell.colSpan||1;cellsNum+=cell.rowSpan*cell.colSpan||1;});rows=cellsNum/cols;utils.each(cells,function(cell){if(me.isLastCell(cell,rows,cols)){last=cell;return false;}});return last;},selectRow:function selectRow(rowIndex){var indexRow=this.indexTable[rowIndex],start=this.getCell(indexRow[0].rowIndex,indexRow[0].cellIndex),end=this.getCell(indexRow[this.colsNum-1].rowIndex,indexRow[this.colsNum-1].cellIndex),range=this.getCellsRange(start,end);this.setSelected(range);},selectTable:function selectTable(){var tds=this.table.getElementsByTagName("td"),range=this.getCellsRange(tds[0],tds[tds.length-1]);this.setSelected(range);},setBackground:function setBackground(cells,value){if(typeof value==="string"){utils.each(cells,function(cell){cell.style.backgroundColor=value;});}else if((typeof value==='undefined'?'undefined':(0,_typeof3.default)(value))==="object"){value=utils.extend({repeat:true,colorList:["#ddd","#fff"]},value);var rowIndex=this.getCellInfo(cells[0]).rowIndex,count=0,colors=value.colorList,getColor=function getColor(list,index,repeat){return list[index]?list[index]:repeat?list[index%list.length]:"";};for(var i=0,cell;cell=cells[i++];){var cellInfo=this.getCellInfo(cell);cell.style.backgroundColor=getColor(colors,rowIndex+count==cellInfo.rowIndex?count:++count,value.repeat);}}},removeBackground:function removeBackground(cells){utils.each(cells,function(cell){cell.style.backgroundColor="";});}};function showError(e){}})();// plugins/table.cmds.js
/**
 * Created with JetBrains PhpStorm.
 * User: taoqili
 * Date: 13-2-20
 * Time: 下午6:25
 * To change this template use File | Settings | File Templates.
 */;(function(){var UT=UE.UETable,getTableItemsByRange=function getTableItemsByRange(editor){return UT.getTableItemsByRange(editor);},getUETableBySelected=function getUETableBySelected(editor){return UT.getUETableBySelected(editor);},getDefaultValue=function getDefaultValue(editor,table){return UT.getDefaultValue(editor,table);},getUETable=function getUETable(tdOrTable){return UT.getUETable(tdOrTable);};UE.commands['inserttable']={queryCommandState:function queryCommandState(){return getTableItemsByRange(this).table?-1:0;},execCommand:function execCommand(cmd,opt){function createTable(opt,tdWidth){var html=[],rowsNum=opt.numRows,colsNum=opt.numCols;for(var r=0;r<rowsNum;r++){html.push('<tr'+(r==0?' class="firstRow"':'')+'>');for(var c=0;c<colsNum;c++){html.push('<td width="'+tdWidth+'"  vAlign="'+opt.tdvalign+'" >'+(browser.ie&&browser.version<11?domUtils.fillChar:'<br/>')+'</td>');}html.push('</tr>');}//禁止指定table-width
return'<table><tbody>'+html.join('')+'</tbody></table>';}if(!opt){opt=utils.extend({},{numCols:this.options.defaultCols,numRows:this.options.defaultRows,tdvalign:this.options.tdvalign});}var me=this;var range=this.selection.getRange(),start=range.startContainer,firstParentBlock=domUtils.findParent(start,function(node){return domUtils.isBlockElm(node);},true)||me.body;var defaultValue=getDefaultValue(me),tableWidth=firstParentBlock.offsetWidth,tdWidth=Math.floor(tableWidth/opt.numCols-defaultValue.tdPadding*2-defaultValue.tdBorder);//todo其他属性
!opt.tdvalign&&(opt.tdvalign=me.options.tdvalign);me.execCommand("inserthtml",createTable(opt,tdWidth));}};UE.commands['insertparagraphbeforetable']={queryCommandState:function queryCommandState(){return getTableItemsByRange(this).cell?0:-1;},execCommand:function execCommand(){var table=getTableItemsByRange(this).table;if(table){var p=this.document.createElement("p");p.innerHTML=browser.ie?'&nbsp;':'<br />';table.parentNode.insertBefore(p,table);this.selection.getRange().setStart(p,0).setCursor();}}};UE.commands['deletetable']={queryCommandState:function queryCommandState(){var rng=this.selection.getRange();return domUtils.findParentByTagName(rng.startContainer,'table',true)?0:-1;},execCommand:function execCommand(cmd,table){var rng=this.selection.getRange();table=table||domUtils.findParentByTagName(rng.startContainer,'table',true);if(table){var next=table.nextSibling;if(!next){next=domUtils.createElement(this.document,'p',{'innerHTML':browser.ie?domUtils.fillChar:'<br/>'});table.parentNode.insertBefore(next,table);}domUtils.remove(table);rng=this.selection.getRange();if(next.nodeType==3){rng.setStartBefore(next);}else{rng.setStart(next,0);}rng.setCursor(false,true);this.fireEvent("tablehasdeleted");}}};UE.commands['cellalign']={queryCommandState:function queryCommandState(){return getSelectedArr(this).length?0:-1;},execCommand:function execCommand(cmd,align){var selectedTds=getSelectedArr(this);if(selectedTds.length){for(var i=0,ci;ci=selectedTds[i++];){ci.setAttribute('align',align);}}}};UE.commands['cellvalign']={queryCommandState:function queryCommandState(){return getSelectedArr(this).length?0:-1;},execCommand:function execCommand(cmd,valign){var selectedTds=getSelectedArr(this);if(selectedTds.length){for(var i=0,ci;ci=selectedTds[i++];){ci.setAttribute('vAlign',valign);}}}};UE.commands['insertcaption']={queryCommandState:function queryCommandState(){var table=getTableItemsByRange(this).table;if(table){return table.getElementsByTagName('caption').length==0?1:-1;}return-1;},execCommand:function execCommand(){var table=getTableItemsByRange(this).table;if(table){var caption=this.document.createElement('caption');caption.innerHTML=browser.ie?domUtils.fillChar:'<br/>';table.insertBefore(caption,table.firstChild);var range=this.selection.getRange();range.setStart(caption,0).setCursor();}}};UE.commands['deletecaption']={queryCommandState:function queryCommandState(){var rng=this.selection.getRange(),table=domUtils.findParentByTagName(rng.startContainer,'table');if(table){return table.getElementsByTagName('caption').length==0?-1:1;}return-1;},execCommand:function execCommand(){var rng=this.selection.getRange(),table=domUtils.findParentByTagName(rng.startContainer,'table');if(table){domUtils.remove(table.getElementsByTagName('caption')[0]);var range=this.selection.getRange();range.setStart(table.rows[0].cells[0],0).setCursor();}}};UE.commands['inserttitle']={queryCommandState:function queryCommandState(){var table=getTableItemsByRange(this).table;if(table){var firstRow=table.rows[0];return firstRow.cells[firstRow.cells.length-1].tagName.toLowerCase()!='th'?0:-1;}return-1;},execCommand:function execCommand(){var table=getTableItemsByRange(this).table;if(table){getUETable(table).insertRow(0,'th');}var th=table.getElementsByTagName('th')[0];this.selection.getRange().setStart(th,0).setCursor(false,true);}};UE.commands['deletetitle']={queryCommandState:function queryCommandState(){var table=getTableItemsByRange(this).table;if(table){var firstRow=table.rows[0];return firstRow.cells[firstRow.cells.length-1].tagName.toLowerCase()=='th'?0:-1;}return-1;},execCommand:function execCommand(){var table=getTableItemsByRange(this).table;if(table){domUtils.remove(table.rows[0]);}var td=table.getElementsByTagName('td')[0];this.selection.getRange().setStart(td,0).setCursor(false,true);}};UE.commands['inserttitlecol']={queryCommandState:function queryCommandState(){var table=getTableItemsByRange(this).table;if(table){var lastRow=table.rows[table.rows.length-1];return lastRow.getElementsByTagName('th').length?-1:0;}return-1;},execCommand:function execCommand(cmd){var table=getTableItemsByRange(this).table;if(table){getUETable(table).insertCol(0,'th');}resetTdWidth(table,this);var th=table.getElementsByTagName('th')[0];this.selection.getRange().setStart(th,0).setCursor(false,true);}};UE.commands['deletetitlecol']={queryCommandState:function queryCommandState(){var table=getTableItemsByRange(this).table;if(table){var lastRow=table.rows[table.rows.length-1];return lastRow.getElementsByTagName('th').length?0:-1;}return-1;},execCommand:function execCommand(){var table=getTableItemsByRange(this).table;if(table){for(var i=0;i<table.rows.length;i++){domUtils.remove(table.rows[i].children[0]);}}resetTdWidth(table,this);var td=table.getElementsByTagName('td')[0];this.selection.getRange().setStart(td,0).setCursor(false,true);}};UE.commands["mergeright"]={queryCommandState:function queryCommandState(cmd){var tableItems=getTableItemsByRange(this),table=tableItems.table,cell=tableItems.cell;if(!table||!cell)return-1;var ut=getUETable(table);if(ut.selectedTds.length)return-1;var cellInfo=ut.getCellInfo(cell),rightColIndex=cellInfo.colIndex+cellInfo.colSpan;if(rightColIndex>=ut.colsNum)return-1;// 如果处于最右边则不能向右合并
var rightCellInfo=ut.indexTable[cellInfo.rowIndex][rightColIndex],rightCell=table.rows[rightCellInfo.rowIndex].cells[rightCellInfo.cellIndex];if(!rightCell||cell.tagName!=rightCell.tagName)return-1;// TH和TD不能相互合并
// 当且仅当两个Cell的开始列号和结束列号一致时能进行合并
return rightCellInfo.rowIndex==cellInfo.rowIndex&&rightCellInfo.rowSpan==cellInfo.rowSpan?0:-1;},execCommand:function execCommand(cmd){var rng=this.selection.getRange(),bk=rng.createBookmark(true);var cell=getTableItemsByRange(this).cell,ut=getUETable(cell);ut.mergeRight(cell);rng.moveToBookmark(bk).select();}};UE.commands["mergedown"]={queryCommandState:function queryCommandState(cmd){var tableItems=getTableItemsByRange(this),table=tableItems.table,cell=tableItems.cell;if(!table||!cell)return-1;var ut=getUETable(table);if(ut.selectedTds.length)return-1;var cellInfo=ut.getCellInfo(cell),downRowIndex=cellInfo.rowIndex+cellInfo.rowSpan;if(downRowIndex>=ut.rowsNum)return-1;// 如果处于最下边则不能向下合并
var downCellInfo=ut.indexTable[downRowIndex][cellInfo.colIndex],downCell=table.rows[downCellInfo.rowIndex].cells[downCellInfo.cellIndex];if(!downCell||cell.tagName!=downCell.tagName)return-1;// TH和TD不能相互合并
// 当且仅当两个Cell的开始列号和结束列号一致时能进行合并
return downCellInfo.colIndex==cellInfo.colIndex&&downCellInfo.colSpan==cellInfo.colSpan?0:-1;},execCommand:function execCommand(){var rng=this.selection.getRange(),bk=rng.createBookmark(true);var cell=getTableItemsByRange(this).cell,ut=getUETable(cell);ut.mergeDown(cell);rng.moveToBookmark(bk).select();}};UE.commands["mergecells"]={queryCommandState:function queryCommandState(){return getUETableBySelected(this)?0:-1;},execCommand:function execCommand(){var ut=getUETableBySelected(this);if(ut&&ut.selectedTds.length){var cell=ut.selectedTds[0];ut.mergeRange();var rng=this.selection.getRange();if(domUtils.isEmptyBlock(cell)){rng.setStart(cell,0).collapse(true);}else{rng.selectNodeContents(cell);}rng.select();}}};UE.commands["insertrow"]={queryCommandState:function queryCommandState(){var tableItems=getTableItemsByRange(this),cell=tableItems.cell;return cell&&(cell.tagName=="TD"||cell.tagName=='TH'&&tableItems.tr!==tableItems.table.rows[0])&&getUETable(tableItems.table).rowsNum<this.options.maxRowNum?0:-1;},execCommand:function execCommand(){var rng=this.selection.getRange(),bk=rng.createBookmark(true);var tableItems=getTableItemsByRange(this),cell=tableItems.cell,table=tableItems.table,ut=getUETable(table),cellInfo=ut.getCellInfo(cell);//ut.insertRow(!ut.selectedTds.length ? cellInfo.rowIndex:ut.cellsRange.beginRowIndex,'');
if(!ut.selectedTds.length){ut.insertRow(cellInfo.rowIndex,cell);}else{var range=ut.cellsRange;for(var i=0,len=range.endRowIndex-range.beginRowIndex+1;i<len;i++){ut.insertRow(range.beginRowIndex,cell);}}rng.moveToBookmark(bk).select();if(table.getAttribute("interlaced")==="enabled")this.fireEvent("interlacetable",table);}};//后插入行
UE.commands["insertrownext"]={queryCommandState:function queryCommandState(){var tableItems=getTableItemsByRange(this),cell=tableItems.cell;return cell&&cell.tagName=="TD"&&getUETable(tableItems.table).rowsNum<this.options.maxRowNum?0:-1;},execCommand:function execCommand(){var rng=this.selection.getRange(),bk=rng.createBookmark(true);var tableItems=getTableItemsByRange(this),cell=tableItems.cell,table=tableItems.table,ut=getUETable(table),cellInfo=ut.getCellInfo(cell);//ut.insertRow(!ut.selectedTds.length? cellInfo.rowIndex + cellInfo.rowSpan : ut.cellsRange.endRowIndex + 1,'');
if(!ut.selectedTds.length){ut.insertRow(cellInfo.rowIndex+cellInfo.rowSpan,cell);}else{var range=ut.cellsRange;for(var i=0,len=range.endRowIndex-range.beginRowIndex+1;i<len;i++){ut.insertRow(range.endRowIndex+1,cell);}}rng.moveToBookmark(bk).select();if(table.getAttribute("interlaced")==="enabled")this.fireEvent("interlacetable",table);}};UE.commands["deleterow"]={queryCommandState:function queryCommandState(){var tableItems=getTableItemsByRange(this);return tableItems.cell?0:-1;},execCommand:function execCommand(){var cell=getTableItemsByRange(this).cell,ut=getUETable(cell),cellsRange=ut.cellsRange,cellInfo=ut.getCellInfo(cell),preCell=ut.getVSideCell(cell),nextCell=ut.getVSideCell(cell,true),rng=this.selection.getRange();if(utils.isEmptyObject(cellsRange)){ut.deleteRow(cellInfo.rowIndex);}else{for(var i=cellsRange.beginRowIndex;i<cellsRange.endRowIndex+1;i++){ut.deleteRow(cellsRange.beginRowIndex);}}var table=ut.table;if(!table.getElementsByTagName('td').length){var nextSibling=table.nextSibling;domUtils.remove(table);if(nextSibling){rng.setStart(nextSibling,0).setCursor(false,true);}}else{if(cellInfo.rowSpan==1||cellInfo.rowSpan==cellsRange.endRowIndex-cellsRange.beginRowIndex+1){if(nextCell||preCell)rng.selectNodeContents(nextCell||preCell).setCursor(false,true);}else{var newCell=ut.getCell(cellInfo.rowIndex,ut.indexTable[cellInfo.rowIndex][cellInfo.colIndex].cellIndex);if(newCell)rng.selectNodeContents(newCell).setCursor(false,true);}}if(table.getAttribute("interlaced")==="enabled")this.fireEvent("interlacetable",table);}};UE.commands["insertcol"]={queryCommandState:function queryCommandState(cmd){var tableItems=getTableItemsByRange(this),cell=tableItems.cell;return cell&&(cell.tagName=="TD"||cell.tagName=='TH'&&cell!==tableItems.tr.cells[0])&&getUETable(tableItems.table).colsNum<this.options.maxColNum?0:-1;},execCommand:function execCommand(cmd){var rng=this.selection.getRange(),bk=rng.createBookmark(true);if(this.queryCommandState(cmd)==-1)return;var cell=getTableItemsByRange(this).cell,ut=getUETable(cell),cellInfo=ut.getCellInfo(cell);//ut.insertCol(!ut.selectedTds.length ? cellInfo.colIndex:ut.cellsRange.beginColIndex);
if(!ut.selectedTds.length){ut.insertCol(cellInfo.colIndex,cell);}else{var range=ut.cellsRange;for(var i=0,len=range.endColIndex-range.beginColIndex+1;i<len;i++){ut.insertCol(range.beginColIndex,cell);}}rng.moveToBookmark(bk).select(true);}};UE.commands["insertcolnext"]={queryCommandState:function queryCommandState(){var tableItems=getTableItemsByRange(this),cell=tableItems.cell;return cell&&getUETable(tableItems.table).colsNum<this.options.maxColNum?0:-1;},execCommand:function execCommand(){var rng=this.selection.getRange(),bk=rng.createBookmark(true);var cell=getTableItemsByRange(this).cell,ut=getUETable(cell),cellInfo=ut.getCellInfo(cell);//ut.insertCol(!ut.selectedTds.length ? cellInfo.colIndex + cellInfo.colSpan:ut.cellsRange.endColIndex +1);
if(!ut.selectedTds.length){ut.insertCol(cellInfo.colIndex+cellInfo.colSpan,cell);}else{var range=ut.cellsRange;for(var i=0,len=range.endColIndex-range.beginColIndex+1;i<len;i++){ut.insertCol(range.endColIndex+1,cell);}}rng.moveToBookmark(bk).select();}};UE.commands["deletecol"]={queryCommandState:function queryCommandState(){var tableItems=getTableItemsByRange(this);return tableItems.cell?0:-1;},execCommand:function execCommand(){var cell=getTableItemsByRange(this).cell,ut=getUETable(cell),range=ut.cellsRange,cellInfo=ut.getCellInfo(cell),preCell=ut.getHSideCell(cell),nextCell=ut.getHSideCell(cell,true);if(utils.isEmptyObject(range)){ut.deleteCol(cellInfo.colIndex);}else{for(var i=range.beginColIndex;i<range.endColIndex+1;i++){ut.deleteCol(range.beginColIndex);}}var table=ut.table,rng=this.selection.getRange();if(!table.getElementsByTagName('td').length){var nextSibling=table.nextSibling;domUtils.remove(table);if(nextSibling){rng.setStart(nextSibling,0).setCursor(false,true);}}else{if(domUtils.inDoc(cell,this.document)){rng.setStart(cell,0).setCursor(false,true);}else{if(nextCell&&domUtils.inDoc(nextCell,this.document)){rng.selectNodeContents(nextCell).setCursor(false,true);}else{if(preCell&&domUtils.inDoc(preCell,this.document)){rng.selectNodeContents(preCell).setCursor(true,true);}}}}}};UE.commands["splittocells"]={queryCommandState:function queryCommandState(){var tableItems=getTableItemsByRange(this),cell=tableItems.cell;if(!cell)return-1;var ut=getUETable(tableItems.table);if(ut.selectedTds.length>0)return-1;return cell&&(cell.colSpan>1||cell.rowSpan>1)?0:-1;},execCommand:function execCommand(){var rng=this.selection.getRange(),bk=rng.createBookmark(true);var cell=getTableItemsByRange(this).cell,ut=getUETable(cell);ut.splitToCells(cell);rng.moveToBookmark(bk).select();}};UE.commands["splittorows"]={queryCommandState:function queryCommandState(){var tableItems=getTableItemsByRange(this),cell=tableItems.cell;if(!cell)return-1;var ut=getUETable(tableItems.table);if(ut.selectedTds.length>0)return-1;return cell&&cell.rowSpan>1?0:-1;},execCommand:function execCommand(){var rng=this.selection.getRange(),bk=rng.createBookmark(true);var cell=getTableItemsByRange(this).cell,ut=getUETable(cell);ut.splitToRows(cell);rng.moveToBookmark(bk).select();}};UE.commands["splittocols"]={queryCommandState:function queryCommandState(){var tableItems=getTableItemsByRange(this),cell=tableItems.cell;if(!cell)return-1;var ut=getUETable(tableItems.table);if(ut.selectedTds.length>0)return-1;return cell&&cell.colSpan>1?0:-1;},execCommand:function execCommand(){var rng=this.selection.getRange(),bk=rng.createBookmark(true);var cell=getTableItemsByRange(this).cell,ut=getUETable(cell);ut.splitToCols(cell);rng.moveToBookmark(bk).select();}};UE.commands["adaptbytext"]=UE.commands["adaptbywindow"]={queryCommandState:function queryCommandState(){return getTableItemsByRange(this).table?0:-1;},execCommand:function execCommand(cmd){var tableItems=getTableItemsByRange(this),table=tableItems.table;if(table){if(cmd=='adaptbywindow'){resetTdWidth(table,this);}else{var cells=domUtils.getElementsByTagName(table,"td th");utils.each(cells,function(cell){cell.removeAttribute("width");});table.removeAttribute("width");}}}};//平均分配各列
UE.commands['averagedistributecol']={queryCommandState:function queryCommandState(){var ut=getUETableBySelected(this);if(!ut)return-1;return ut.isFullRow()||ut.isFullCol()?0:-1;},execCommand:function execCommand(cmd){var me=this,ut=getUETableBySelected(me);function getAverageWidth(){var tb=ut.table,averageWidth,sumWidth=0,colsNum=0,tbAttr=getDefaultValue(me,tb);if(ut.isFullRow()){sumWidth=tb.offsetWidth;colsNum=ut.colsNum;}else{var begin=ut.cellsRange.beginColIndex,end=ut.cellsRange.endColIndex,node;for(var i=begin;i<=end;){node=ut.selectedTds[i];sumWidth+=node.offsetWidth;i+=node.colSpan;colsNum+=1;}}averageWidth=Math.ceil(sumWidth/colsNum)-tbAttr.tdBorder*2-tbAttr.tdPadding*2;return averageWidth;}function setAverageWidth(averageWidth){utils.each(domUtils.getElementsByTagName(ut.table,"th"),function(node){node.setAttribute("width","");});var cells=ut.isFullRow()?domUtils.getElementsByTagName(ut.table,"td"):ut.selectedTds;utils.each(cells,function(node){if(node.colSpan==1){node.setAttribute("width",averageWidth);}});}if(ut&&ut.selectedTds.length){setAverageWidth(getAverageWidth());}}};//平均分配各行
UE.commands['averagedistributerow']={queryCommandState:function queryCommandState(){var ut=getUETableBySelected(this);if(!ut)return-1;if(ut.selectedTds&&/th/ig.test(ut.selectedTds[0].tagName))return-1;return ut.isFullRow()||ut.isFullCol()?0:-1;},execCommand:function execCommand(cmd){var me=this,ut=getUETableBySelected(me);function getAverageHeight(){var averageHeight,rowNum,sumHeight=0,tb=ut.table,tbAttr=getDefaultValue(me,tb),tdpadding=parseInt(domUtils.getComputedStyle(tb.getElementsByTagName('td')[0],"padding-top"));if(ut.isFullCol()){var captionArr=domUtils.getElementsByTagName(tb,"caption"),thArr=domUtils.getElementsByTagName(tb,"th"),captionHeight,thHeight;if(captionArr.length>0){captionHeight=captionArr[0].offsetHeight;}if(thArr.length>0){thHeight=thArr[0].offsetHeight;}sumHeight=tb.offsetHeight-(captionHeight||0)-(thHeight||0);rowNum=thArr.length==0?ut.rowsNum:ut.rowsNum-1;}else{var begin=ut.cellsRange.beginRowIndex,end=ut.cellsRange.endRowIndex,count=0,trs=domUtils.getElementsByTagName(tb,"tr");for(var i=begin;i<=end;i++){sumHeight+=trs[i].offsetHeight;count+=1;}rowNum=count;}//ie8下是混杂模式
if(browser.ie&&browser.version<9){averageHeight=Math.ceil(sumHeight/rowNum);}else{averageHeight=Math.ceil(sumHeight/rowNum)-tbAttr.tdBorder*2-tdpadding*2;}return averageHeight;}function setAverageHeight(averageHeight){var cells=ut.isFullCol()?domUtils.getElementsByTagName(ut.table,"td"):ut.selectedTds;utils.each(cells,function(node){if(node.rowSpan==1){node.setAttribute("height",averageHeight);}});}if(ut&&ut.selectedTds.length){setAverageHeight(getAverageHeight());}}};//单元格对齐方式
UE.commands['cellalignment']={queryCommandState:function queryCommandState(){return getTableItemsByRange(this).table?0:-1;},execCommand:function execCommand(cmd,data){var me=this,ut=getUETableBySelected(me);if(!ut){var start=me.selection.getStart(),cell=start&&domUtils.findParentByTagName(start,["td","th","caption"],true);if(!/caption/ig.test(cell.tagName)){domUtils.setAttributes(cell,data);}else{cell.style.textAlign=data.align;cell.style.verticalAlign=data.vAlign;}me.selection.getRange().setCursor(true);}else{utils.each(ut.selectedTds,function(cell){domUtils.setAttributes(cell,data);});}},/**
         * 查询当前点击的单元格的对齐状态， 如果当前已经选择了多个单元格， 则会返回所有单元格经过统一协调过后的状态
         * @see UE.UETable.getTableCellAlignState
         */queryCommandValue:function queryCommandValue(cmd){var activeMenuCell=getTableItemsByRange(this).cell;if(!activeMenuCell){activeMenuCell=getSelectedArr(this)[0];}if(!activeMenuCell){return null;}else{//获取同时选中的其他单元格
var cells=UE.UETable.getUETable(activeMenuCell).selectedTds;!cells.length&&(cells=activeMenuCell);return UE.UETable.getTableCellAlignState(cells);}}};//表格对齐方式
UE.commands['tablealignment']={queryCommandState:function queryCommandState(){if(browser.ie&&browser.version<8){return-1;}return getTableItemsByRange(this).table?0:-1;},execCommand:function execCommand(cmd,value){var me=this,start=me.selection.getStart(),table=start&&domUtils.findParentByTagName(start,["table"],true);if(table){table.setAttribute("align",value);}}};//表格属性
UE.commands['edittable']={queryCommandState:function queryCommandState(){return getTableItemsByRange(this).table?0:-1;},execCommand:function execCommand(cmd,color){var rng=this.selection.getRange(),table=domUtils.findParentByTagName(rng.startContainer,'table');if(table){var arr=domUtils.getElementsByTagName(table,"td").concat(domUtils.getElementsByTagName(table,"th"),domUtils.getElementsByTagName(table,"caption"));utils.each(arr,function(node){node.style.borderColor=color;});}}};//单元格属性
UE.commands['edittd']={queryCommandState:function queryCommandState(){return getTableItemsByRange(this).table?0:-1;},execCommand:function execCommand(cmd,bkColor){var me=this,ut=getUETableBySelected(me);if(!ut){var start=me.selection.getStart(),cell=start&&domUtils.findParentByTagName(start,["td","th","caption"],true);if(cell){cell.style.backgroundColor=bkColor;}}else{utils.each(ut.selectedTds,function(cell){cell.style.backgroundColor=bkColor;});}}};UE.commands["settablebackground"]={queryCommandState:function queryCommandState(){return getSelectedArr(this).length>1?0:-1;},execCommand:function execCommand(cmd,value){var cells,ut;cells=getSelectedArr(this);ut=getUETable(cells[0]);ut.setBackground(cells,value);}};UE.commands["cleartablebackground"]={queryCommandState:function queryCommandState(){var cells=getSelectedArr(this);if(!cells.length)return-1;for(var i=0,cell;cell=cells[i++];){if(cell.style.backgroundColor!=="")return 0;}return-1;},execCommand:function execCommand(){var cells=getSelectedArr(this),ut=getUETable(cells[0]);ut.removeBackground(cells);}};UE.commands["interlacetable"]=UE.commands["uninterlacetable"]={queryCommandState:function queryCommandState(cmd){var table=getTableItemsByRange(this).table;if(!table)return-1;var interlaced=table.getAttribute("interlaced");if(cmd=="interlacetable"){//TODO 待定
//是否需要待定，如果设置，则命令只能单次执行成功，但反射具备toggle效果；否则可以覆盖前次命令，但反射将不存在toggle效果
return interlaced==="enabled"?-1:0;}else{return!interlaced||interlaced==="disabled"?-1:0;}},execCommand:function execCommand(cmd,classList){var table=getTableItemsByRange(this).table;if(cmd=="interlacetable"){table.setAttribute("interlaced","enabled");this.fireEvent("interlacetable",table,classList);}else{table.setAttribute("interlaced","disabled");this.fireEvent("uninterlacetable",table);}}};UE.commands["setbordervisible"]={queryCommandState:function queryCommandState(cmd){var table=getTableItemsByRange(this).table;if(!table)return-1;return 0;},execCommand:function execCommand(){var table=getTableItemsByRange(this).table;utils.each(domUtils.getElementsByTagName(table,'td'),function(td){td.style.borderWidth='1px';td.style.borderStyle='solid';});}};function resetTdWidth(table,editor){var tds=domUtils.getElementsByTagName(table,'td th');utils.each(tds,function(td){td.removeAttribute("width");});table.setAttribute('width',getTableWidth(editor,true,getDefaultValue(editor,table)));var tdsWidths=[];setTimeout(function(){utils.each(tds,function(td){td.colSpan==1&&tdsWidths.push(td.offsetWidth);});utils.each(tds,function(td,i){td.colSpan==1&&td.setAttribute("width",tdsWidths[i]+"");});},0);}function getTableWidth(editor,needIEHack,defaultValue){var body=editor.body;return body.offsetWidth-(needIEHack?parseInt(domUtils.getComputedStyle(body,'margin-left'),10)*2:0)-defaultValue.tableBorder*2-(editor.options.offsetWidth||0);}function getSelectedArr(editor){var cell=getTableItemsByRange(editor).cell;if(cell){var ut=getUETable(cell);return ut.selectedTds.length?ut.selectedTds:[cell];}else{return[];}}})();// plugins/table.action.js
/**
 * Created with JetBrains PhpStorm.
 * User: taoqili
 * Date: 12-10-12
 * Time: 上午10:05
 * To change this template use File | Settings | File Templates.
 */UE.plugins['table']=function(){var me=this,tabTimer=null,//拖动计时器
tableDragTimer=null,//双击计时器
tableResizeTimer=null,//单元格最小宽度
cellMinWidth=5,isInResizeBuffer=false,//单元格边框大小
cellBorderWidth=5,//鼠标偏移距离
offsetOfTableCell=10,//记录在有限时间内的点击状态， 共有3个取值， 0, 1, 2。 0代表未初始化， 1代表单击了1次，2代表2次
singleClickState=0,userActionStatus=null,//双击允许的时间范围
dblclickTime=360,UT=UE.UETable,getUETable=function getUETable(tdOrTable){return UT.getUETable(tdOrTable);},getUETableBySelected=function getUETableBySelected(editor){return UT.getUETableBySelected(editor);},getDefaultValue=function getDefaultValue(editor,table){return UT.getDefaultValue(editor,table);},removeSelectedClass=function removeSelectedClass(cells){return UT.removeSelectedClass(cells);};function showError(e){//        throw e;
}me.ready(function(){var me=this;var orgGetText=me.selection.getText;me.selection.getText=function(){var table=getUETableBySelected(me);if(table){var str='';utils.each(table.selectedTds,function(td){str+=td[browser.ie?'innerText':'textContent'];});return str;}else{return orgGetText.call(me.selection);}};});//处理拖动及框选相关方法
var startTd=null,//鼠标按下时的锚点td
currentTd=null,//当前鼠标经过时的td
onDrag="",//指示当前拖动状态，其值可为"","h","v" ,分别表示未拖动状态，横向拖动状态，纵向拖动状态，用于鼠标移动过程中的判断
onBorder=false,//检测鼠标按下时是否处在单元格边缘位置
dragButton=null,dragOver=false,dragLine=null,//模拟的拖动线
dragTd=null;//发生拖动的目标td
var mousedown=false,//todo 判断混乱模式
needIEHack=true;me.setOpt({'maxColNum':20,'maxRowNum':100,'defaultCols':5,'defaultRows':5,'tdvalign':'top','cursorpath':me.options.UEDITOR_HOME_URL+"themes/default/images/cursor_",'tableDragable':false,'classList':["ue-table-interlace-color-single","ue-table-interlace-color-double"]});me.getUETable=getUETable;var commands={'deletetable':1,'inserttable':1,'cellvalign':1,'insertcaption':1,'deletecaption':1,'inserttitle':1,'deletetitle':1,"mergeright":1,"mergedown":1,"mergecells":1,"insertrow":1,"insertrownext":1,"deleterow":1,"insertcol":1,"insertcolnext":1,"deletecol":1,"splittocells":1,"splittorows":1,"splittocols":1,"adaptbytext":1,"adaptbywindow":1,"adaptbycustomer":1,"insertparagraph":1,"insertparagraphbeforetable":1,"averagedistributecol":1,"averagedistributerow":1};me.ready(function(){utils.cssRule('table',//选中的td上的样式
'.selectTdClass{background-color:#edf5fa !important}'+'table.noBorderTable td,table.noBorderTable th,table.noBorderTable caption{border:1px dashed #ddd !important}'+//插入的表格的默认样式
'table{margin-bottom:10px;border-collapse:collapse;display:table;}'+'td,th{padding: 5px 10px;border: 1px solid #DDD;}'+'caption{border:1px dashed #DDD;border-bottom:0;padding:3px;text-align:center;}'+'th{border-top:1px solid #BBB;background-color:#F7F7F7;}'+'table tr.firstRow th{border-top-width:2px;}'+'.ue-table-interlace-color-single{ background-color: #fcfcfc; } .ue-table-interlace-color-double{ background-color: #f7faff; }'+'td p{margin:0;padding:0;}',me.document);var tableCopyList,isFullCol,isFullRow;//注册del/backspace事件
me.addListener('keydown',function(cmd,evt){var me=this;var keyCode=evt.keyCode||evt.which;if(keyCode==8){var ut=getUETableBySelected(me);if(ut&&ut.selectedTds.length){if(ut.isFullCol()){me.execCommand('deletecol');}else if(ut.isFullRow()){me.execCommand('deleterow');}else{me.fireEvent('delcells');}domUtils.preventDefault(evt);}var caption=domUtils.findParentByTagName(me.selection.getStart(),'caption',true),range=me.selection.getRange();if(range.collapsed&&caption&&isEmptyBlock(caption)){me.fireEvent('saveScene');var table=caption.parentNode;domUtils.remove(caption);if(table){range.setStart(table.rows[0].cells[0],0).setCursor(false,true);}me.fireEvent('saveScene');}}if(keyCode==46){ut=getUETableBySelected(me);if(ut){me.fireEvent('saveScene');for(var i=0,ci;ci=ut.selectedTds[i++];){domUtils.fillNode(me.document,ci);}me.fireEvent('saveScene');domUtils.preventDefault(evt);}}if(keyCode==13){var rng=me.selection.getRange(),caption=domUtils.findParentByTagName(rng.startContainer,'caption',true);if(caption){var table=domUtils.findParentByTagName(caption,'table');if(!rng.collapsed){rng.deleteContents();me.fireEvent('saveScene');}else{if(caption){rng.setStart(table.rows[0].cells[0],0).setCursor(false,true);}}domUtils.preventDefault(evt);return;}if(rng.collapsed){var table=domUtils.findParentByTagName(rng.startContainer,'table');if(table){var cell=table.rows[0].cells[0],start=domUtils.findParentByTagName(me.selection.getStart(),['td','th'],true),preNode=table.previousSibling;if(cell===start&&(!preNode||preNode.nodeType==1&&preNode.tagName=='TABLE')&&domUtils.isStartInblock(rng)){var first=domUtils.findParent(me.selection.getStart(),function(n){return domUtils.isBlockElm(n);},true);if(first&&(/t(h|d)/i.test(first.tagName)||first===start.firstChild)){me.execCommand('insertparagraphbeforetable');domUtils.preventDefault(evt);}}}}}if((evt.ctrlKey||evt.metaKey)&&evt.keyCode=='67'){tableCopyList=null;var ut=getUETableBySelected(me);if(ut){var tds=ut.selectedTds;isFullCol=ut.isFullCol();isFullRow=ut.isFullRow();tableCopyList=[[ut.cloneCell(tds[0],null,true)]];for(var i=1,ci;ci=tds[i];i++){if(ci.parentNode!==tds[i-1].parentNode){tableCopyList.push([ut.cloneCell(ci,null,true)]);}else{tableCopyList[tableCopyList.length-1].push(ut.cloneCell(ci,null,true));}}}}});me.addListener("tablehasdeleted",function(){toggleDraggableState(this,false,"",null);if(dragButton)domUtils.remove(dragButton);});me.addListener('beforepaste',function(cmd,html){var me=this;var rng=me.selection.getRange();if(domUtils.findParentByTagName(rng.startContainer,'caption',true)){var div=me.document.createElement("div");div.innerHTML=html.html;//trace:3729
html.html=div[browser.ie9below?'innerText':'textContent'];return;}var table=getUETableBySelected(me);if(tableCopyList){me.fireEvent('saveScene');var rng=me.selection.getRange();var td=domUtils.findParentByTagName(rng.startContainer,['td','th'],true),tmpNode,preNode;if(td){var ut=getUETable(td);if(isFullRow){var rowIndex=ut.getCellInfo(td).rowIndex;if(td.tagName=='TH'){rowIndex++;}for(var i=0,ci;ci=tableCopyList[i++];){var tr=ut.insertRow(rowIndex++,"td");for(var j=0,cj;cj=ci[j];j++){var cell=tr.cells[j];if(!cell){cell=tr.insertCell(j);}cell.innerHTML=cj.innerHTML;cj.getAttribute('width')&&cell.setAttribute('width',cj.getAttribute('width'));cj.getAttribute('vAlign')&&cell.setAttribute('vAlign',cj.getAttribute('vAlign'));cj.getAttribute('align')&&cell.setAttribute('align',cj.getAttribute('align'));cj.style.cssText&&(cell.style.cssText=cj.style.cssText);}for(var j=0,cj;cj=tr.cells[j];j++){if(!ci[j])break;cj.innerHTML=ci[j].innerHTML;ci[j].getAttribute('width')&&cj.setAttribute('width',ci[j].getAttribute('width'));ci[j].getAttribute('vAlign')&&cj.setAttribute('vAlign',ci[j].getAttribute('vAlign'));ci[j].getAttribute('align')&&cj.setAttribute('align',ci[j].getAttribute('align'));ci[j].style.cssText&&(cj.style.cssText=ci[j].style.cssText);}}}else{if(isFullCol){cellInfo=ut.getCellInfo(td);var maxColNum=0;for(var j=0,ci=tableCopyList[0],cj;cj=ci[j++];){maxColNum+=cj.colSpan||1;}me.__hasEnterExecCommand=true;for(i=0;i<maxColNum;i++){me.execCommand('insertcol');}me.__hasEnterExecCommand=false;td=ut.table.rows[0].cells[cellInfo.cellIndex];if(td.tagName=='TH'){td=ut.table.rows[1].cells[cellInfo.cellIndex];}}for(var i=0,ci;ci=tableCopyList[i++];){tmpNode=td;for(var j=0,cj;cj=ci[j++];){if(td){td.innerHTML=cj.innerHTML;//todo 定制处理
cj.getAttribute('width')&&td.setAttribute('width',cj.getAttribute('width'));cj.getAttribute('vAlign')&&td.setAttribute('vAlign',cj.getAttribute('vAlign'));cj.getAttribute('align')&&td.setAttribute('align',cj.getAttribute('align'));cj.style.cssText&&(td.style.cssText=cj.style.cssText);preNode=td;td=td.nextSibling;}else{var cloneTd=cj.cloneNode(true);domUtils.removeAttributes(cloneTd,['class','rowSpan','colSpan']);preNode.parentNode.appendChild(cloneTd);}}td=ut.getNextCell(tmpNode,true,true);if(!tableCopyList[i])break;if(!td){var cellInfo=ut.getCellInfo(tmpNode);ut.table.insertRow(ut.table.rows.length);ut.update();td=ut.getVSideCell(tmpNode,true);}}}ut.update();}else{table=me.document.createElement('table');for(var i=0,ci;ci=tableCopyList[i++];){var tr=table.insertRow(table.rows.length);for(var j=0,cj;cj=ci[j++];){cloneTd=UT.cloneCell(cj,null,true);domUtils.removeAttributes(cloneTd,['class']);tr.appendChild(cloneTd);}if(j==2&&cloneTd.rowSpan>1){cloneTd.rowSpan=1;}}var defaultValue=getDefaultValue(me),width=me.body.offsetWidth-(needIEHack?parseInt(domUtils.getComputedStyle(me.body,'margin-left'),10)*2:0)-defaultValue.tableBorder*2-(me.options.offsetWidth||0);me.execCommand('insertHTML','<table  '+(isFullCol&&isFullRow?'width="'+width+'"':'')+'>'+table.innerHTML.replace(/>\s*</g,'><').replace(/\bth\b/gi,"td")+'</table>');}me.fireEvent('contentchange');me.fireEvent('saveScene');html.html='';return true;}else{var div=me.document.createElement("div"),tables;div.innerHTML=html.html;tables=div.getElementsByTagName("table");if(domUtils.findParentByTagName(me.selection.getStart(),'table')){utils.each(tables,function(t){domUtils.remove(t);});if(domUtils.findParentByTagName(me.selection.getStart(),'caption',true)){div.innerHTML=div[browser.ie?'innerText':'textContent'];}}else{utils.each(tables,function(table){removeStyleSize(table,true);domUtils.removeAttributes(table,['style','border']);utils.each(domUtils.getElementsByTagName(table,"td"),function(td){if(isEmptyBlock(td)){domUtils.fillNode(me.document,td);}removeStyleSize(td,true);//                            domUtils.removeAttributes(td, ['style'])
});});}html.html=div.innerHTML;}});me.addListener('afterpaste',function(){utils.each(domUtils.getElementsByTagName(me.body,"table"),function(table){if(table.offsetWidth>me.body.offsetWidth){var defaultValue=getDefaultValue(me,table);table.style.width=me.body.offsetWidth-(needIEHack?parseInt(domUtils.getComputedStyle(me.body,'margin-left'),10)*2:0)-defaultValue.tableBorder*2-(me.options.offsetWidth||0)+'px';}});});me.addListener('blur',function(){tableCopyList=null;});var timer;me.addListener('keydown',function(){clearTimeout(timer);timer=setTimeout(function(){var rng=me.selection.getRange(),cell=domUtils.findParentByTagName(rng.startContainer,['th','td'],true);if(cell){var table=cell.parentNode.parentNode.parentNode;if(table.offsetWidth>table.getAttribute("width")){cell.style.wordBreak="break-all";}}},100);});me.addListener("selectionchange",function(){toggleDraggableState(me,false,"",null);});//内容变化时触发索引更新
//todo 可否考虑标记检测，如果不涉及表格的变化就不进行索引重建和更新
me.addListener("contentchange",function(){var me=this;//尽可能排除一些不需要更新的状况
hideDragLine(me);if(getUETableBySelected(me))return;var rng=me.selection.getRange();var start=rng.startContainer;start=domUtils.findParentByTagName(start,['td','th'],true);utils.each(domUtils.getElementsByTagName(me.document,'table'),function(table){if(me.fireEvent("excludetable",table)===true)return;table.ueTable=new UT(table);//trace:3742
//                utils.each(domUtils.getElementsByTagName(me.document, 'td'), function (td) {
//
//                    if (domUtils.isEmptyBlock(td) && td !== start) {
//                        domUtils.fillNode(me.document, td);
//                        if (browser.ie && browser.version == 6) {
//                            td.innerHTML = '&nbsp;'
//                        }
//                    }
//                });
//                utils.each(domUtils.getElementsByTagName(me.document, 'th'), function (th) {
//                    if (domUtils.isEmptyBlock(th) && th !== start) {
//                        domUtils.fillNode(me.document, th);
//                        if (browser.ie && browser.version == 6) {
//                            th.innerHTML = '&nbsp;'
//                        }
//                    }
//                });
table.onmouseover=function(){me.fireEvent('tablemouseover',table);};table.onmousemove=function(){me.fireEvent('tablemousemove',table);me.options.tableDragable&&toggleDragButton(true,this,me);utils.defer(function(){me.fireEvent('contentchange',50);},true);};table.onmouseout=function(){me.fireEvent('tablemouseout',table);toggleDraggableState(me,false,"",null);hideDragLine(me);};table.onclick=function(evt){evt=me.window.event||evt;var target=getParentTdOrTh(evt.target||evt.srcElement);if(!target)return;var ut=getUETable(target),table=ut.table,cellInfo=ut.getCellInfo(target),cellsRange,rng=me.selection.getRange();//                    if ("topLeft" == inPosition(table, mouseCoords(evt))) {
//                        cellsRange = ut.getCellsRange(ut.table.rows[0].cells[0], ut.getLastCell());
//                        ut.setSelected(cellsRange);
//                        return;
//                    }
//                    if ("bottomRight" == inPosition(table, mouseCoords(evt))) {
//
//                        return;
//                    }
if(inTableSide(table,target,evt,true)){var endTdCol=ut.getCell(ut.indexTable[ut.rowsNum-1][cellInfo.colIndex].rowIndex,ut.indexTable[ut.rowsNum-1][cellInfo.colIndex].cellIndex);if(evt.shiftKey&&ut.selectedTds.length){if(ut.selectedTds[0]!==endTdCol){cellsRange=ut.getCellsRange(ut.selectedTds[0],endTdCol);ut.setSelected(cellsRange);}else{rng&&rng.selectNodeContents(endTdCol).select();}}else{if(target!==endTdCol){cellsRange=ut.getCellsRange(target,endTdCol);ut.setSelected(cellsRange);}else{rng&&rng.selectNodeContents(endTdCol).select();}}return;}if(inTableSide(table,target,evt)){var endTdRow=ut.getCell(ut.indexTable[cellInfo.rowIndex][ut.colsNum-1].rowIndex,ut.indexTable[cellInfo.rowIndex][ut.colsNum-1].cellIndex);if(evt.shiftKey&&ut.selectedTds.length){if(ut.selectedTds[0]!==endTdRow){cellsRange=ut.getCellsRange(ut.selectedTds[0],endTdRow);ut.setSelected(cellsRange);}else{rng&&rng.selectNodeContents(endTdRow).select();}}else{if(target!==endTdRow){cellsRange=ut.getCellsRange(target,endTdRow);ut.setSelected(cellsRange);}else{rng&&rng.selectNodeContents(endTdRow).select();}}}};});switchBorderColor(me,true);});domUtils.on(me.document,"mousemove",mouseMoveEvent);domUtils.on(me.document,"mouseout",function(evt){var target=evt.target||evt.srcElement;if(target.tagName=="TABLE"){toggleDraggableState(me,false,"",null);}});/**
         * 表格隔行变色
         */me.addListener("interlacetable",function(type,table,classList){if(!table)return;var me=this,rows=table.rows,len=rows.length,getClass=function getClass(list,index,repeat){return list[index]?list[index]:repeat?list[index%list.length]:"";};for(var i=0;i<len;i++){rows[i].className=getClass(classList||me.options.classList,i,true);}});me.addListener("uninterlacetable",function(type,table){if(!table)return;var me=this,rows=table.rows,classList=me.options.classList,len=rows.length;for(var i=0;i<len;i++){domUtils.removeClasses(rows[i],classList);}});me.addListener("mousedown",mouseDownEvent);me.addListener("mouseup",mouseUpEvent);//拖动的时候触发mouseup
domUtils.on(me.body,'dragstart',function(evt){mouseUpEvent.call(me,'dragstart',evt);});me.addOutputRule(function(root){utils.each(root.getNodesByTagName('div'),function(n){if(n.getAttr('id')=='ue_tableDragLine'){n.parentNode.removeChild(n);}});});var currentRowIndex=0;me.addListener("mousedown",function(){currentRowIndex=0;});me.addListener('tabkeydown',function(){var range=this.selection.getRange(),common=range.getCommonAncestor(true,true),table=domUtils.findParentByTagName(common,'table');if(table){if(domUtils.findParentByTagName(common,'caption',true)){var cell=domUtils.getElementsByTagName(table,'th td');if(cell&&cell.length){range.setStart(cell[0],0).setCursor(false,true);}}else{var cell=domUtils.findParentByTagName(common,['td','th'],true),ua=getUETable(cell);currentRowIndex=cell.rowSpan>1?currentRowIndex:ua.getCellInfo(cell).rowIndex;var nextCell=ua.getTabNextCell(cell,currentRowIndex);if(nextCell){if(isEmptyBlock(nextCell)){range.setStart(nextCell,0).setCursor(false,true);}else{range.selectNodeContents(nextCell).select();}}else{me.fireEvent('saveScene');me.__hasEnterExecCommand=true;this.execCommand('insertrownext');me.__hasEnterExecCommand=false;range=this.selection.getRange();range.setStart(table.rows[table.rows.length-1].cells[0],0).setCursor();me.fireEvent('saveScene');}}return true;}});browser.ie&&me.addListener('selectionchange',function(){toggleDraggableState(this,false,"",null);});me.addListener("keydown",function(type,evt){var me=this;//处理在表格的最后一个输入tab产生新的表格
var keyCode=evt.keyCode||evt.which;if(keyCode==8||keyCode==46){return;}var notCtrlKey=!evt.ctrlKey&&!evt.metaKey&&!evt.shiftKey&&!evt.altKey;notCtrlKey&&removeSelectedClass(domUtils.getElementsByTagName(me.body,"td"));var ut=getUETableBySelected(me);if(!ut)return;notCtrlKey&&ut.clearSelected();});me.addListener("beforegetcontent",function(){switchBorderColor(this,false);browser.ie&&utils.each(this.document.getElementsByTagName('caption'),function(ci){if(domUtils.isEmptyNode(ci)){ci.innerHTML='&nbsp;';}});});me.addListener("aftergetcontent",function(){switchBorderColor(this,true);});me.addListener("getAllHtml",function(){removeSelectedClass(me.document.getElementsByTagName("td"));});//修正全屏状态下插入的表格宽度在非全屏状态下撑开编辑器的情况
me.addListener("fullscreenchanged",function(type,fullscreen){if(!fullscreen){var ratio=this.body.offsetWidth/document.body.offsetWidth,tables=domUtils.getElementsByTagName(this.body,"table");utils.each(tables,function(table){if(table.offsetWidth<me.body.offsetWidth)return false;var tds=domUtils.getElementsByTagName(table,"td"),backWidths=[];utils.each(tds,function(td){backWidths.push(td.offsetWidth);});for(var i=0,td;td=tds[i];i++){td.setAttribute("width",Math.floor(backWidths[i]*ratio));}table.setAttribute("width",Math.floor(getTableWidth(me,needIEHack,getDefaultValue(me))));});}});//重写execCommand命令，用于处理框选时的处理
var oldExecCommand=me.execCommand;me.execCommand=function(cmd,datatat){var me=this,args=arguments;cmd=cmd.toLowerCase();var ut=getUETableBySelected(me),tds,range=new dom.Range(me.document),cmdFun=me.commands[cmd]||UE.commands[cmd],result;if(!cmdFun)return;if(ut&&!commands[cmd]&&!cmdFun.notNeedUndo&&!me.__hasEnterExecCommand){me.__hasEnterExecCommand=true;me.fireEvent("beforeexeccommand",cmd);tds=ut.selectedTds;var lastState=-2,lastValue=-2,value,state;for(var i=0,td;td=tds[i];i++){if(isEmptyBlock(td)){range.setStart(td,0).setCursor(false,true);}else{range.selectNode(td).select(true);}state=me.queryCommandState(cmd);value=me.queryCommandValue(cmd);if(state!=-1){if(lastState!==state||lastValue!==value){me._ignoreContentChange=true;result=oldExecCommand.apply(me,arguments);me._ignoreContentChange=false;}lastState=me.queryCommandState(cmd);lastValue=me.queryCommandValue(cmd);if(domUtils.isEmptyBlock(td)){domUtils.fillNode(me.document,td);}}}range.setStart(tds[0],0).shrinkBoundary(true).setCursor(false,true);me.fireEvent('contentchange');me.fireEvent("afterexeccommand",cmd);me.__hasEnterExecCommand=false;me._selectionChange();}else{result=oldExecCommand.apply(me,arguments);}return result;};});/**
     * 删除obj的宽高style，改成属性宽高
     * @param obj
     * @param replaceToProperty
     */function removeStyleSize(obj,replaceToProperty){removeStyle(obj,"width",true);removeStyle(obj,"height",true);}function removeStyle(obj,styleName,replaceToProperty){if(obj.style[styleName]){replaceToProperty&&obj.setAttribute(styleName,parseInt(obj.style[styleName],10));obj.style[styleName]="";}}function getParentTdOrTh(ele){if(ele.tagName=="TD"||ele.tagName=="TH")return ele;var td;if(td=domUtils.findParentByTagName(ele,"td",true)||domUtils.findParentByTagName(ele,"th",true))return td;return null;}function isEmptyBlock(node){var reg=new RegExp(domUtils.fillChar,'g');if(node[browser.ie?'innerText':'textContent'].replace(/^\s*$/,'').replace(reg,'').length>0){return 0;}for(var n in dtd.$isNotEmpty){if(node.getElementsByTagName(n).length){return 0;}}return 1;}function mouseCoords(evt){if(evt.pageX||evt.pageY){return{x:evt.pageX,y:evt.pageY};}return{x:evt.clientX+me.document.body.scrollLeft-me.document.body.clientLeft,y:evt.clientY+me.document.body.scrollTop-me.document.body.clientTop};}function mouseMoveEvent(evt){if(isEditorDisabled()){return;}try{//普通状态下鼠标移动
var target=getParentTdOrTh(evt.target||evt.srcElement),pos;//区分用户的行为是拖动还是双击
if(isInResizeBuffer){me.body.style.webkitUserSelect='none';if(Math.abs(userActionStatus.x-evt.clientX)>offsetOfTableCell||Math.abs(userActionStatus.y-evt.clientY)>offsetOfTableCell){clearTableDragTimer();isInResizeBuffer=false;singleClickState=0;//drag action
tableBorderDrag(evt);}}//修改单元格大小时的鼠标移动
if(onDrag&&dragTd){singleClickState=0;me.body.style.webkitUserSelect='none';me.selection.getNative()[browser.ie9below?'empty':'removeAllRanges']();pos=mouseCoords(evt);toggleDraggableState(me,true,onDrag,pos,target);if(onDrag=="h"){dragLine.style.left=getPermissionX(dragTd,evt)+"px";}else if(onDrag=="v"){dragLine.style.top=getPermissionY(dragTd,evt)+"px";}return;}//当鼠标处于table上时，修改移动过程中的光标状态
if(target){//针对使用table作为容器的组件不触发拖拽效果
if(me.fireEvent('excludetable',target)===true)return;pos=mouseCoords(evt);var state=getRelation(target,pos),table=domUtils.findParentByTagName(target,"table",true);if(inTableSide(table,target,evt,true)){if(me.fireEvent("excludetable",table)===true)return;me.body.style.cursor="url("+me.options.cursorpath+"h.png),pointer";}else if(inTableSide(table,target,evt)){if(me.fireEvent("excludetable",table)===true)return;me.body.style.cursor="url("+me.options.cursorpath+"v.png),pointer";}else{me.body.style.cursor="text";var curCell=target;if(/\d/.test(state)){state=state.replace(/\d/,'');target=getUETable(target).getPreviewCell(target,state=="v");}//位于第一行的顶部或者第一列的左边时不可拖动
toggleDraggableState(me,target?!!state:false,target?state:'',pos,target);}}else{toggleDragButton(false,table,me);}}catch(e){showError(e);}}var dragButtonTimer;function toggleDragButton(show,table,editor){if(!show){if(dragOver)return;dragButtonTimer=setTimeout(function(){!dragOver&&dragButton&&dragButton.parentNode&&dragButton.parentNode.removeChild(dragButton);},2000);}else{createDragButton(table,editor);}}function createDragButton(table,editor){var pos=domUtils.getXY(table),doc=table.ownerDocument;if(dragButton&&dragButton.parentNode)return dragButton;dragButton=doc.createElement("div");dragButton.contentEditable=false;dragButton.innerHTML="";dragButton.style.cssText="width:15px;height:15px;background-image:url("+editor.options.UEDITOR_HOME_URL+"dialogs/table/dragicon.png);position: absolute;cursor:move;top:"+(pos.y-15)+"px;left:"+pos.x+"px;";domUtils.unSelectable(dragButton);dragButton.onmouseover=function(evt){dragOver=true;};dragButton.onmouseout=function(evt){dragOver=false;};domUtils.on(dragButton,'click',function(type,evt){doClick(evt,this);});domUtils.on(dragButton,'dblclick',function(type,evt){doDblClick(evt);});domUtils.on(dragButton,'dragstart',function(type,evt){domUtils.preventDefault(evt);});var timer;function doClick(evt,button){// 部分浏览器下需要清理
clearTimeout(timer);timer=setTimeout(function(){editor.fireEvent("tableClicked",table,button);},300);}function doDblClick(evt){clearTimeout(timer);var ut=getUETable(table),start=table.rows[0].cells[0],end=ut.getLastCell(),range=ut.getCellsRange(start,end);editor.selection.getRange().setStart(start,0).setCursor(false,true);ut.setSelected(range);}doc.body.appendChild(dragButton);}//    function inPosition(table, pos) {
//        var tablePos = domUtils.getXY(table),
//            width = table.offsetWidth,
//            height = table.offsetHeight;
//        if (pos.x - tablePos.x < 5 && pos.y - tablePos.y < 5) {
//            return "topLeft";
//        } else if (tablePos.x + width - pos.x < 5 && tablePos.y + height - pos.y < 5) {
//            return "bottomRight";
//        }
//    }
function inTableSide(table,cell,evt,top){var pos=mouseCoords(evt),state=getRelation(cell,pos);if(top){var caption=table.getElementsByTagName("caption")[0],capHeight=caption?caption.offsetHeight:0;return state=="v1"&&pos.y-domUtils.getXY(table).y-capHeight<8;}else{return state=="h1"&&pos.x-domUtils.getXY(table).x<8;}}/**
     * 获取拖动时允许的X轴坐标
     * @param dragTd
     * @param evt
     */function getPermissionX(dragTd,evt){var ut=getUETable(dragTd);if(ut){var preTd=ut.getSameEndPosCells(dragTd,"x")[0],nextTd=ut.getSameStartPosXCells(dragTd)[0],mouseX=mouseCoords(evt).x,left=(preTd?domUtils.getXY(preTd).x:domUtils.getXY(ut.table).x)+20,right=nextTd?domUtils.getXY(nextTd).x+nextTd.offsetWidth-20:me.body.offsetWidth+5||parseInt(domUtils.getComputedStyle(me.body,"width"),10);left+=cellMinWidth;right-=cellMinWidth;return mouseX<left?left:mouseX>right?right:mouseX;}}/**
     * 获取拖动时允许的Y轴坐标
     */function getPermissionY(dragTd,evt){try{var top=domUtils.getXY(dragTd).y,mousePosY=mouseCoords(evt).y;return mousePosY<top?top:mousePosY;}catch(e){showError(e);}}/**
     * 移动状态切换
     */function toggleDraggableState(editor,draggable,dir,mousePos,cell){try{editor.body.style.cursor=dir=="h"?"col-resize":dir=="v"?"row-resize":"text";if(browser.ie){if(dir&&!mousedown&&!getUETableBySelected(editor)){getDragLine(editor,editor.document);showDragLineAt(dir,cell);}else{hideDragLine(editor);}}onBorder=draggable;}catch(e){showError(e);}}/**
     * 获取与UETable相关的resize line
     * @param uetable UETable对象
     */function getResizeLineByUETable(){var lineId='_UETableResizeLine',line=this.document.getElementById(lineId);if(!line){line=this.document.createElement("div");line.id=lineId;line.contnetEditable=false;line.setAttribute("unselectable","on");var styles={width:2*cellBorderWidth+1+'px',position:'absolute','z-index':100000,cursor:'col-resize',background:'red',display:'none'};//切换状态
line.onmouseout=function(){this.style.display='none';};utils.extend(line.style,styles);this.document.body.appendChild(line);}return line;}/**
     * 更新resize-line
     */function updateResizeLine(cell,uetable){var line=getResizeLineByUETable.call(this),table=uetable.table,styles={top:domUtils.getXY(table).y+'px',left:domUtils.getXY(cell).x+cell.offsetWidth-cellBorderWidth+'px',display:'block',height:table.offsetHeight+'px'};utils.extend(line.style,styles);}/**
     * 显示resize-line
     */function showResizeLine(cell){var uetable=getUETable(cell);updateResizeLine.call(this,cell,uetable);}/**
     * 获取鼠标与当前单元格的相对位置
     * @param ele
     * @param mousePos
     */function getRelation(ele,mousePos){var elePos=domUtils.getXY(ele);if(!elePos){return'';}if(elePos.x+ele.offsetWidth-mousePos.x<cellBorderWidth){return"h";}if(mousePos.x-elePos.x<cellBorderWidth){return'h1';}if(elePos.y+ele.offsetHeight-mousePos.y<cellBorderWidth){return"v";}if(mousePos.y-elePos.y<cellBorderWidth){return'v1';}return'';}function mouseDownEvent(type,evt){if(isEditorDisabled()){return;}userActionStatus={x:evt.clientX,y:evt.clientY};//右键菜单单独处理
if(evt.button==2){var ut=getUETableBySelected(me),flag=false;if(ut){var td=getTargetTd(me,evt);utils.each(ut.selectedTds,function(ti){if(ti===td){flag=true;}});if(!flag){removeSelectedClass(domUtils.getElementsByTagName(me.body,"th td"));ut.clearSelected();}else{td=ut.selectedTds[0];setTimeout(function(){me.selection.getRange().setStart(td,0).setCursor(false,true);},0);}}}else{tableClickHander(evt);}}//清除表格的计时器
function clearTableTimer(){tabTimer&&clearTimeout(tabTimer);tabTimer=null;}//双击收缩
function tableDbclickHandler(evt){singleClickState=0;evt=evt||me.window.event;var target=getParentTdOrTh(evt.target||evt.srcElement);if(target){var h;if(h=getRelation(target,mouseCoords(evt))){hideDragLine(me);if(h=='h1'){h='h';if(inTableSide(domUtils.findParentByTagName(target,"table"),target,evt)){me.execCommand('adaptbywindow');}else{target=getUETable(target).getPreviewCell(target);if(target){var rng=me.selection.getRange();rng.selectNodeContents(target).setCursor(true,true);}}}if(h=='h'){var ut=getUETable(target),table=ut.table,cells=getCellsByMoveBorder(target,table,true);cells=extractArray(cells,'left');ut.width=ut.offsetWidth;var oldWidth=[],newWidth=[];utils.each(cells,function(cell){oldWidth.push(cell.offsetWidth);});utils.each(cells,function(cell){cell.removeAttribute("width");});window.setTimeout(function(){//是否允许改变
var changeable=true;utils.each(cells,function(cell,index){var width=cell.offsetWidth;if(width>oldWidth[index]){changeable=false;return false;}newWidth.push(width);});var change=changeable?newWidth:oldWidth;utils.each(cells,function(cell,index){cell.width=change[index]-getTabcellSpace();});},0);//                    minWidth -= cellMinWidth;
//
//                    table.removeAttribute("width");
//                    utils.each(cells, function (cell) {
//                        cell.style.width = "";
//                        cell.width -= minWidth;
//                    });
}}}}function tableClickHander(evt){removeSelectedClass(domUtils.getElementsByTagName(me.body,"td th"));//trace:3113
//选中单元格，点击table外部，不会清掉table上挂的ueTable,会引起getUETableBySelected方法返回值
utils.each(me.document.getElementsByTagName('table'),function(t){t.ueTable=null;});startTd=getTargetTd(me,evt);if(!startTd)return;var table=domUtils.findParentByTagName(startTd,"table",true);ut=getUETable(table);ut&&ut.clearSelected();//判断当前鼠标状态
if(!onBorder){me.document.body.style.webkitUserSelect='';mousedown=true;me.addListener('mouseover',mouseOverEvent);}else{//边框上的动作处理
borderActionHandler(evt);}}//处理表格边框上的动作, 这里做延时处理，避免两种动作互相影响
function borderActionHandler(evt){if(browser.ie){evt=reconstruct(evt);}clearTableDragTimer();//是否正在等待resize的缓冲中
isInResizeBuffer=true;tableDragTimer=setTimeout(function(){tableBorderDrag(evt);},dblclickTime);}function extractArray(originArr,key){var result=[],tmp=null;for(var i=0,len=originArr.length;i<len;i++){tmp=originArr[i][key];if(tmp){result.push(tmp);}}return result;}function clearTableDragTimer(){tableDragTimer&&clearTimeout(tableDragTimer);tableDragTimer=null;}function reconstruct(obj){var attrs=['pageX','pageY','clientX','clientY','srcElement','target'],newObj={};if(obj){for(var i=0,key,val;key=attrs[i];i++){val=obj[key];val&&(newObj[key]=val);}}return newObj;}//边框拖动
function tableBorderDrag(evt){isInResizeBuffer=false;startTd=evt.target||evt.srcElement;if(!startTd)return;var state=getRelation(startTd,mouseCoords(evt));if(/\d/.test(state)){state=state.replace(/\d/,'');startTd=getUETable(startTd).getPreviewCell(startTd,state=='v');}hideDragLine(me);getDragLine(me,me.document);me.fireEvent('saveScene');showDragLineAt(state,startTd);mousedown=true;//拖动开始
onDrag=state;dragTd=startTd;}function mouseUpEvent(type,evt){if(isEditorDisabled()){return;}clearTableDragTimer();isInResizeBuffer=false;if(onBorder){singleClickState=++singleClickState%3;userActionStatus={x:evt.clientX,y:evt.clientY};tableResizeTimer=setTimeout(function(){singleClickState>0&&singleClickState--;},dblclickTime);if(singleClickState===2){singleClickState=0;tableDbclickHandler(evt);return;}}if(evt.button==2)return;var me=this;//清除表格上原生跨选问题
var range=me.selection.getRange(),start=domUtils.findParentByTagName(range.startContainer,'table',true),end=domUtils.findParentByTagName(range.endContainer,'table',true);if(start||end){if(start===end){start=domUtils.findParentByTagName(range.startContainer,['td','th','caption'],true);end=domUtils.findParentByTagName(range.endContainer,['td','th','caption'],true);if(start!==end){me.selection.clearRange();}}else{me.selection.clearRange();}}mousedown=false;me.document.body.style.webkitUserSelect='';//拖拽状态下的mouseUP
if(onDrag&&dragTd){me.selection.getNative()[browser.ie9below?'empty':'removeAllRanges']();singleClickState=0;dragLine=me.document.getElementById('ue_tableDragLine');// trace 3973
if(dragLine){var dragTdPos=domUtils.getXY(dragTd),dragLinePos=domUtils.getXY(dragLine);switch(onDrag){case"h":changeColWidth(dragTd,dragLinePos.x-dragTdPos.x);break;case"v":changeRowHeight(dragTd,dragLinePos.y-dragTdPos.y-dragTd.offsetHeight);break;default:}onDrag="";dragTd=null;hideDragLine(me);me.fireEvent('saveScene');return;}}//正常状态下的mouseup
if(!startTd){var target=domUtils.findParentByTagName(evt.target||evt.srcElement,"td",true);if(!target)target=domUtils.findParentByTagName(evt.target||evt.srcElement,"th",true);if(target&&(target.tagName=="TD"||target.tagName=="TH")){if(me.fireEvent("excludetable",target)===true)return;range=new dom.Range(me.document);range.setStart(target,0).setCursor(false,true);}}else{var ut=getUETable(startTd),cell=ut?ut.selectedTds[0]:null;if(cell){range=new dom.Range(me.document);if(domUtils.isEmptyBlock(cell)){range.setStart(cell,0).setCursor(false,true);}else{range.selectNodeContents(cell).shrinkBoundary().setCursor(false,true);}}else{range=me.selection.getRange().shrinkBoundary();if(!range.collapsed){var start=domUtils.findParentByTagName(range.startContainer,['td','th'],true),end=domUtils.findParentByTagName(range.endContainer,['td','th'],true);//在table里边的不能清除
if(start&&!end||!start&&end||start&&end&&start!==end){range.setCursor(false,true);}}}startTd=null;me.removeListener('mouseover',mouseOverEvent);}me._selectionChange(250,evt);}function mouseOverEvent(type,evt){if(isEditorDisabled()){return;}var me=this,tar=evt.target||evt.srcElement;currentTd=domUtils.findParentByTagName(tar,"td",true)||domUtils.findParentByTagName(tar,"th",true);//需要判断两个TD是否位于同一个表格内
if(startTd&&currentTd&&(startTd.tagName=="TD"&&currentTd.tagName=="TD"||startTd.tagName=="TH"&&currentTd.tagName=="TH")&&domUtils.findParentByTagName(startTd,'table')==domUtils.findParentByTagName(currentTd,'table')){var ut=getUETable(currentTd);if(startTd!=currentTd){me.document.body.style.webkitUserSelect='none';me.selection.getNative()[browser.ie9below?'empty':'removeAllRanges']();var range=ut.getCellsRange(startTd,currentTd);ut.setSelected(range);}else{me.document.body.style.webkitUserSelect='';ut.clearSelected();}}evt.preventDefault?evt.preventDefault():evt.returnValue=false;}function setCellHeight(cell,height,backHeight){var lineHight=parseInt(domUtils.getComputedStyle(cell,"line-height"),10),tmpHeight=backHeight+height;height=tmpHeight<lineHight?lineHight:tmpHeight;if(cell.style.height)cell.style.height="";cell.rowSpan==1?cell.setAttribute("height",height):cell.removeAttribute&&cell.removeAttribute("height");}function getWidth(cell){if(!cell)return 0;return parseInt(domUtils.getComputedStyle(cell,"width"),10);}function changeColWidth(cell,changeValue){var ut=getUETable(cell);if(ut){//根据当前移动的边框获取相关的单元格
var table=ut.table,cells=getCellsByMoveBorder(cell,table);table.style.width="";table.removeAttribute("width");//修正改变量
changeValue=correctChangeValue(changeValue,cell,cells);if(cell.nextSibling){var i=0;utils.each(cells,function(cellGroup){cellGroup.left.width=+cellGroup.left.width+changeValue;cellGroup.right&&(cellGroup.right.width=+cellGroup.right.width-changeValue);});}else{utils.each(cells,function(cellGroup){cellGroup.left.width-=-changeValue;});}}}function isEditorDisabled(){return me.body.contentEditable==="false";}function changeRowHeight(td,changeValue){if(Math.abs(changeValue)<10)return;var ut=getUETable(td);if(ut){var cells=ut.getSameEndPosCells(td,"y"),//备份需要连带变化的td的原始高度，否则后期无法获取正确的值
backHeight=cells[0]?cells[0].offsetHeight:0;for(var i=0,cell;cell=cells[i++];){setCellHeight(cell,changeValue,backHeight);}}}/**
     * 获取调整单元格大小的相关单元格
     * @isContainMergeCell 返回的结果中是否包含发生合并后的单元格
     */function getCellsByMoveBorder(cell,table,isContainMergeCell){if(!table){table=domUtils.findParentByTagName(cell,'table');}if(!table){return null;}//获取到该单元格所在行的序列号
var index=domUtils.getNodeIndex(cell),temp=cell,rows=table.rows,colIndex=0;while(temp){//获取到当前单元格在未发生单元格合并时的序列
if(temp.nodeType===1){colIndex+=temp.colSpan||1;}temp=temp.previousSibling;}temp=null;//记录想关的单元格
var borderCells=[];utils.each(rows,function(tabRow){var cells=tabRow.cells,currIndex=0;utils.each(cells,function(tabCell){currIndex+=tabCell.colSpan||1;if(currIndex===colIndex){borderCells.push({left:tabCell,right:tabCell.nextSibling||null});return false;}else if(currIndex>colIndex){if(isContainMergeCell){borderCells.push({left:tabCell});}return false;}});});return borderCells;}/**
     * 通过给定的单元格集合获取最小的单元格width
     */function getMinWidthByTableCells(cells){var minWidth=Number.MAX_VALUE;for(var i=0,curCell;curCell=cells[i];i++){minWidth=Math.min(minWidth,curCell.width||getTableCellWidth(curCell));}return minWidth;}function correctChangeValue(changeValue,relatedCell,cells){//为单元格的paading预留空间
changeValue-=getTabcellSpace();if(changeValue<0){return 0;}changeValue-=getTableCellWidth(relatedCell);//确定方向
var direction=changeValue<0?'left':'right';changeValue=Math.abs(changeValue);//只关心非最后一个单元格就可以
utils.each(cells,function(cellGroup){var curCell=cellGroup[direction];//为单元格保留最小空间
if(curCell){changeValue=Math.min(changeValue,getTableCellWidth(curCell)-cellMinWidth);}});//修正越界
changeValue=changeValue<0?0:changeValue;return direction==='left'?-changeValue:changeValue;}function getTableCellWidth(cell){var width=0,//偏移纠正量
offset=0,width=cell.offsetWidth-getTabcellSpace();//最后一个节点纠正一下
if(!cell.nextSibling){width-=getTableCellOffset(cell);}width=width<0?0:width;try{cell.width=width;}catch(e){}return width;}/**
     * 获取单元格所在表格的最末单元格的偏移量
     */function getTableCellOffset(cell){tab=domUtils.findParentByTagName(cell,"table",false);if(tab.offsetVal===undefined){var prev=cell.previousSibling;if(prev){//最后一个单元格和前一个单元格的width diff结果 如果恰好为一个border width， 则条件成立
tab.offsetVal=cell.offsetWidth-prev.offsetWidth===UT.borderWidth?UT.borderWidth:0;}else{tab.offsetVal=0;}}return tab.offsetVal;}function getTabcellSpace(){if(UT.tabcellSpace===undefined){var cell=null,tab=me.document.createElement("table"),tbody=me.document.createElement("tbody"),trow=me.document.createElement("tr"),tabcell=me.document.createElement("td"),mirror=null;tabcell.style.cssText='border: 0;';tabcell.width=1;trow.appendChild(tabcell);trow.appendChild(mirror=tabcell.cloneNode(false));tbody.appendChild(trow);tab.appendChild(tbody);tab.style.cssText="visibility: hidden;";me.body.appendChild(tab);UT.paddingSpace=tabcell.offsetWidth-1;var tmpTabWidth=tab.offsetWidth;tabcell.style.cssText='';mirror.style.cssText='';UT.borderWidth=(tab.offsetWidth-tmpTabWidth)/3;UT.tabcellSpace=UT.paddingSpace+UT.borderWidth;me.body.removeChild(tab);}getTabcellSpace=function getTabcellSpace(){return UT.tabcellSpace;};return UT.tabcellSpace;}function getDragLine(editor,doc){if(mousedown)return;dragLine=editor.document.createElement("div");domUtils.setAttributes(dragLine,{id:"ue_tableDragLine",unselectable:'on',contenteditable:false,'onresizestart':'return false','ondragstart':'return false','onselectstart':'return false',style:"background-color:blue;position:absolute;padding:0;margin:0;background-image:none;border:0px none;opacity:0;filter:alpha(opacity=0)"});editor.body.appendChild(dragLine);}function hideDragLine(editor){if(mousedown)return;var line;while(line=editor.document.getElementById('ue_tableDragLine')){domUtils.remove(line);}}/**
     * 依据state（v|h）在cell位置显示横线
     * @param state
     * @param cell
     */function showDragLineAt(state,cell){if(!cell)return;var table=domUtils.findParentByTagName(cell,"table"),caption=table.getElementsByTagName('caption'),width=table.offsetWidth,height=table.offsetHeight-(caption.length>0?caption[0].offsetHeight:0),tablePos=domUtils.getXY(table),cellPos=domUtils.getXY(cell),css;switch(state){case"h":css='height:'+height+'px;top:'+(tablePos.y+(caption.length>0?caption[0].offsetHeight:0))+'px;left:'+(cellPos.x+cell.offsetWidth);dragLine.style.cssText=css+'px;position: absolute;display:block;background-color:blue;width:1px;border:0; color:blue;opacity:.3;filter:alpha(opacity=30)';break;case"v":css='width:'+width+'px;left:'+tablePos.x+'px;top:'+(cellPos.y+cell.offsetHeight);//必须加上border:0和color:blue，否则低版ie不支持背景色显示
dragLine.style.cssText=css+'px;overflow:hidden;position: absolute;display:block;background-color:blue;height:1px;border:0;color:blue;opacity:.2;filter:alpha(opacity=20)';break;default:}}/**
     * 当表格边框颜色为白色时设置为虚线,true为添加虚线
     * @param editor
     * @param flag
     */function switchBorderColor(editor,flag){var tableArr=domUtils.getElementsByTagName(editor.body,"table"),color;for(var i=0,node;node=tableArr[i++];){var td=domUtils.getElementsByTagName(node,"td");if(td[0]){if(flag){color=td[0].style.borderColor.replace(/\s/g,"");if(/(#ffffff)|(rgb\(255,255,255\))/ig.test(color))domUtils.addClass(node,"noBorderTable");}else{domUtils.removeClasses(node,"noBorderTable");}}}}function getTableWidth(editor,needIEHack,defaultValue){var body=editor.body;return body.offsetWidth-(needIEHack?parseInt(domUtils.getComputedStyle(body,'margin-left'),10)*2:0)-defaultValue.tableBorder*2-(editor.options.offsetWidth||0);}/**
     * 获取当前拖动的单元格
     */function getTargetTd(editor,evt){var target=domUtils.findParentByTagName(evt.target||evt.srcElement,["td","th"],true),dir=null;if(!target){return null;}dir=getRelation(target,mouseCoords(evt));//如果有前一个节点， 需要做一个修正， 否则可能会得到一个错误的td
if(!target){return null;}if(dir==='h1'&&target.previousSibling){var position=domUtils.getXY(target),cellWidth=target.offsetWidth;if(Math.abs(position.x+cellWidth-evt.clientX)>cellWidth/3){target=target.previousSibling;}}else if(dir==='v1'&&target.parentNode.previousSibling){var position=domUtils.getXY(target),cellHeight=target.offsetHeight;if(Math.abs(position.y+cellHeight-evt.clientY)>cellHeight/3){target=target.parentNode.previousSibling.firstChild;}}//排除了非td内部以及用于代码高亮部分的td
return target&&!(editor.fireEvent("excludetable",target)===true)?target:null;}};// plugins/table.sort.js
/**
 * Created with JetBrains PhpStorm.
 * User: Jinqn
 * Date: 13-10-12
 * Time: 上午10:20
 * To change this template use File | Settings | File Templates.
 */UE.UETable.prototype.sortTable=function(sortByCellIndex,compareFn){var table=this.table,rows=table.rows,trArray=[],flag=rows[0].cells[0].tagName==="TH",lastRowIndex=0;if(this.selectedTds.length){var range=this.cellsRange,len=range.endRowIndex+1;for(var i=range.beginRowIndex;i<len;i++){trArray[i]=rows[i];}trArray.splice(0,range.beginRowIndex);lastRowIndex=range.endRowIndex+1===this.rowsNum?0:range.endRowIndex+1;}else{for(var i=0,len=rows.length;i<len;i++){trArray[i]=rows[i];}}var Fn={'reversecurrent':function reversecurrent(td1,td2){return 1;},'orderbyasc':function orderbyasc(td1,td2){var value1=td1.innerText||td1.textContent,value2=td2.innerText||td2.textContent;return value1.localeCompare(value2);},'reversebyasc':function reversebyasc(td1,td2){var value1=td1.innerHTML,value2=td2.innerHTML;return value2.localeCompare(value1);},'orderbynum':function orderbynum(td1,td2){var value1=td1[browser.ie?'innerText':'textContent'].match(/\d+/),value2=td2[browser.ie?'innerText':'textContent'].match(/\d+/);if(value1)value1=+value1[0];if(value2)value2=+value2[0];return(value1||0)-(value2||0);},'reversebynum':function reversebynum(td1,td2){var value1=td1[browser.ie?'innerText':'textContent'].match(/\d+/),value2=td2[browser.ie?'innerText':'textContent'].match(/\d+/);if(value1)value1=+value1[0];if(value2)value2=+value2[0];return(value2||0)-(value1||0);}};//对表格设置排序的标记data-sort-type
table.setAttribute('data-sort-type',compareFn&&typeof compareFn==="string"&&Fn[compareFn]?compareFn:'');//th不参与排序
flag&&trArray.splice(0,1);trArray=utils.sort(trArray,function(tr1,tr2){var result;if(compareFn&&typeof compareFn==="function"){result=compareFn.call(this,tr1.cells[sortByCellIndex],tr2.cells[sortByCellIndex]);}else if(compareFn&&typeof compareFn==="number"){result=1;}else if(compareFn&&typeof compareFn==="string"&&Fn[compareFn]){result=Fn[compareFn].call(this,tr1.cells[sortByCellIndex],tr2.cells[sortByCellIndex]);}else{result=Fn['orderbyasc'].call(this,tr1.cells[sortByCellIndex],tr2.cells[sortByCellIndex]);}return result;});var fragment=table.ownerDocument.createDocumentFragment();for(var j=0,len=trArray.length;j<len;j++){fragment.appendChild(trArray[j]);}var tbody=table.getElementsByTagName("tbody")[0];if(!lastRowIndex){tbody.appendChild(fragment);}else{tbody.insertBefore(fragment,rows[lastRowIndex-range.endRowIndex+range.beginRowIndex-1]);}};UE.plugins['tablesort']=function(){var me=this,UT=UE.UETable,getUETable=function getUETable(tdOrTable){return UT.getUETable(tdOrTable);},getTableItemsByRange=function getTableItemsByRange(editor){return UT.getTableItemsByRange(editor);};me.ready(function(){//添加表格可排序的样式
utils.cssRule('tablesort','table.sortEnabled tr.firstRow th,table.sortEnabled tr.firstRow td{padding-right:20px;background-repeat: no-repeat;background-position: center right;'+'   background-image:url('+me.options.themePath+me.options.theme+'/images/sortable.png);}',me.document);//做单元格合并操作时,清除可排序标识
me.addListener("afterexeccommand",function(type,cmd){if(cmd=='mergeright'||cmd=='mergedown'||cmd=='mergecells'){this.execCommand('disablesort');}});});//表格排序
UE.commands['sorttable']={queryCommandState:function queryCommandState(){var me=this,tableItems=getTableItemsByRange(me);if(!tableItems.cell)return-1;var table=tableItems.table,cells=table.getElementsByTagName("td");for(var i=0,cell;cell=cells[i++];){if(cell.rowSpan!=1||cell.colSpan!=1)return-1;}return 0;},execCommand:function execCommand(cmd,fn){var me=this,range=me.selection.getRange(),bk=range.createBookmark(true),tableItems=getTableItemsByRange(me),cell=tableItems.cell,ut=getUETable(tableItems.table),cellInfo=ut.getCellInfo(cell);ut.sortTable(cellInfo.cellIndex,fn);range.moveToBookmark(bk);try{range.select();}catch(e){}}};//设置表格可排序,清除表格可排序
UE.commands["enablesort"]=UE.commands["disablesort"]={queryCommandState:function queryCommandState(cmd){var table=getTableItemsByRange(this).table;if(table&&cmd=='enablesort'){var cells=domUtils.getElementsByTagName(table,'th td');for(var i=0;i<cells.length;i++){if(cells[i].getAttribute('colspan')>1||cells[i].getAttribute('rowspan')>1)return-1;}}return!table?-1:cmd=='enablesort'^table.getAttribute('data-sort')!='sortEnabled'?-1:0;},execCommand:function execCommand(cmd){var table=getTableItemsByRange(this).table;table.setAttribute("data-sort",cmd=="enablesort"?"sortEnabled":"sortDisabled");cmd=="enablesort"?domUtils.addClass(table,"sortEnabled"):domUtils.removeClasses(table,"sortEnabled");}};};// plugins/contextmenu.js
///import core
///commands 右键菜单
///commandsName  ContextMenu
///commandsTitle  右键菜单
/**
 * 右键菜单
 * @function
 * @name baidu.editor.plugins.contextmenu
 * @author zhanyi
 */UE.plugins['contextmenu']=function(){var me=this;me.setOpt('enableContextMenu',true);if(me.getOpt('enableContextMenu')===false){return;}var lang=me.getLang("contextMenu"),menu,items=me.options.contextMenu||[{label:lang['selectall'],cmdName:'selectall'},{label:lang.cleardoc,cmdName:'cleardoc',exec:function exec(){if(confirm(lang.confirmclear)){this.execCommand('cleardoc');}}},'-',{label:lang.unlink,cmdName:'unlink'},'-',{group:lang.paragraph,icon:'justifyjustify',subMenu:[{label:lang.justifyleft,cmdName:'justify',value:'left'},{label:lang.justifyright,cmdName:'justify',value:'right'},{label:lang.justifycenter,cmdName:'justify',value:'center'},{label:lang.justifyjustify,cmdName:'justify',value:'justify'}]},'-',{group:lang.table,icon:'table',subMenu:[{label:lang.inserttable,cmdName:'inserttable'},{label:lang.deletetable,cmdName:'deletetable'},'-',{label:lang.deleterow,cmdName:'deleterow'},{label:lang.deletecol,cmdName:'deletecol'},{label:lang.insertcol,cmdName:'insertcol'},{label:lang.insertcolnext,cmdName:'insertcolnext'},{label:lang.insertrow,cmdName:'insertrow'},{label:lang.insertrownext,cmdName:'insertrownext'},'-',{label:lang.insertcaption,cmdName:'insertcaption'},{label:lang.deletecaption,cmdName:'deletecaption'},{label:lang.inserttitle,cmdName:'inserttitle'},{label:lang.deletetitle,cmdName:'deletetitle'},{label:lang.inserttitlecol,cmdName:'inserttitlecol'},{label:lang.deletetitlecol,cmdName:'deletetitlecol'},'-',{label:lang.mergecells,cmdName:'mergecells'},{label:lang.mergeright,cmdName:'mergeright'},{label:lang.mergedown,cmdName:'mergedown'},'-',{label:lang.splittorows,cmdName:'splittorows'},{label:lang.splittocols,cmdName:'splittocols'},{label:lang.splittocells,cmdName:'splittocells'},'-',{label:lang.averageDiseRow,cmdName:'averagedistributerow'},{label:lang.averageDisCol,cmdName:'averagedistributecol'},'-',{label:lang.edittd,cmdName:'edittd',exec:function exec(){if(UE.ui['edittd']){new UE.ui['edittd'](this);}this.getDialog('edittd').open();}},{label:lang.edittable,cmdName:'edittable',exec:function exec(){if(UE.ui['edittable']){new UE.ui['edittable'](this);}this.getDialog('edittable').open();}},{label:lang.setbordervisible,cmdName:'setbordervisible'}]},{group:lang.tablesort,icon:'tablesort',subMenu:[{label:lang.enablesort,cmdName:'enablesort'},{label:lang.disablesort,cmdName:'disablesort'},'-',{label:lang.reversecurrent,cmdName:'sorttable',value:'reversecurrent'},{label:lang.orderbyasc,cmdName:'sorttable',value:'orderbyasc'},{label:lang.reversebyasc,cmdName:'sorttable',value:'reversebyasc'},{label:lang.orderbynum,cmdName:'sorttable',value:'orderbynum'},{label:lang.reversebynum,cmdName:'sorttable',value:'reversebynum'}]},{group:lang.borderbk,icon:'borderBack',subMenu:[{label:lang.setcolor,cmdName:"interlacetable",exec:function exec(){this.execCommand("interlacetable");}},{label:lang.unsetcolor,cmdName:"uninterlacetable",exec:function exec(){this.execCommand("uninterlacetable");}},{label:lang.setbackground,cmdName:"settablebackground",exec:function exec(){this.execCommand("settablebackground",{repeat:true,colorList:["#bbb","#ccc"]});}},{label:lang.unsetbackground,cmdName:"cleartablebackground",exec:function exec(){this.execCommand("cleartablebackground");}},{label:lang.redandblue,cmdName:"settablebackground",exec:function exec(){this.execCommand("settablebackground",{repeat:true,colorList:["red","blue"]});}},{label:lang.threecolorgradient,cmdName:"settablebackground",exec:function exec(){this.execCommand("settablebackground",{repeat:true,colorList:["#aaa","#bbb","#ccc"]});}}]},{group:lang.aligntd,icon:'aligntd',subMenu:[{cmdName:'cellalignment',value:{align:'left',vAlign:'top'}},{cmdName:'cellalignment',value:{align:'center',vAlign:'top'}},{cmdName:'cellalignment',value:{align:'right',vAlign:'top'}},{cmdName:'cellalignment',value:{align:'left',vAlign:'middle'}},{cmdName:'cellalignment',value:{align:'center',vAlign:'middle'}},{cmdName:'cellalignment',value:{align:'right',vAlign:'middle'}},{cmdName:'cellalignment',value:{align:'left',vAlign:'bottom'}},{cmdName:'cellalignment',value:{align:'center',vAlign:'bottom'}},{cmdName:'cellalignment',value:{align:'right',vAlign:'bottom'}}]},{group:lang.aligntable,icon:'aligntable',subMenu:[{cmdName:'tablealignment',className:'left',label:lang.tableleft,value:"left"},{cmdName:'tablealignment',className:'center',label:lang.tablecenter,value:"center"},{cmdName:'tablealignment',className:'right',label:lang.tableright,value:"right"}]},'-',{label:lang.insertparagraphbefore,cmdName:'insertparagraph',value:true},{label:lang.insertparagraphafter,cmdName:'insertparagraph'},{label:lang['copy'],cmdName:'copy'},{label:lang['paste'],cmdName:'paste'}];if(!items.length){return;}var uiUtils=UE.ui.uiUtils;me.addListener('contextmenu',function(type,evt){var offset=uiUtils.getViewportOffsetByEvent(evt);me.fireEvent('beforeselectionchange');if(menu){menu.destroy();}for(var i=0,ti,contextItems=[];ti=items[i];i++){var last;(function(item){if(item=='-'){if((last=contextItems[contextItems.length-1])&&last!=='-'){contextItems.push('-');}}else if(item.hasOwnProperty("group")){for(var j=0,cj,subMenu=[];cj=item.subMenu[j];j++){(function(subItem){if(subItem=='-'){if((last=subMenu[subMenu.length-1])&&last!=='-'){subMenu.push('-');}else{subMenu.splice(subMenu.length-1);}}else{if((me.commands[subItem.cmdName]||UE.commands[subItem.cmdName]||subItem.query)&&(subItem.query?subItem.query():me.queryCommandState(subItem.cmdName))>-1){subMenu.push({'label':subItem.label||me.getLang("contextMenu."+subItem.cmdName+(subItem.value||''))||"",'className':'edui-for-'+subItem.cmdName+(subItem.className?' edui-for-'+subItem.cmdName+'-'+subItem.className:''),onclick:subItem.exec?function(){subItem.exec.call(me);}:function(){me.execCommand(subItem.cmdName,subItem.value);}});}}})(cj);}if(subMenu.length){var getLabel=function getLabel(){switch(item.icon){case"table":return me.getLang("contextMenu.table");case"justifyjustify":return me.getLang("contextMenu.paragraph");case"aligntd":return me.getLang("contextMenu.aligntd");case"aligntable":return me.getLang("contextMenu.aligntable");case"tablesort":return lang.tablesort;case"borderBack":return lang.borderbk;default:return'';}};contextItems.push({//todo 修正成自动获取方式
'label':getLabel(),className:'edui-for-'+item.icon,'subMenu':{items:subMenu,editor:me}});}}else{//有可能commmand没有加载右键不能出来，或者没有command也想能展示出来添加query方法
if((me.commands[item.cmdName]||UE.commands[item.cmdName]||item.query)&&(item.query?item.query.call(me):me.queryCommandState(item.cmdName))>-1){contextItems.push({'label':item.label||me.getLang("contextMenu."+item.cmdName),className:'edui-for-'+(item.icon?item.icon:item.cmdName+(item.value||'')),onclick:item.exec?function(){item.exec.call(me);}:function(){me.execCommand(item.cmdName,item.value);}});}}})(ti);}if(contextItems[contextItems.length-1]=='-'){contextItems.pop();}menu=new UE.ui.Menu({items:contextItems,className:"edui-contextmenu",editor:me});menu.render();menu.showAt(offset);me.fireEvent("aftershowcontextmenu",menu);domUtils.preventDefault(evt);if(browser.ie){var ieRange;try{ieRange=me.selection.getNative().createRange();}catch(e){return;}if(ieRange.item){var range=new dom.Range(me.document);range.selectNode(ieRange.item(0)).select(true,true);}}});// 添加复制的flash按钮
me.addListener('aftershowcontextmenu',function(type,menu){if(me.zeroclipboard){var items=menu.items;for(var key in items){if(items[key].className=='edui-for-copy'){me.zeroclipboard.clip(items[key].getDom());}}}});};// plugins/shortcutmenu.js
///import core
///commands       弹出菜单
// commandsName  popupmenu
///commandsTitle  弹出菜单
/**
 * 弹出菜单
 * @function
 * @name baidu.editor.plugins.popupmenu
 * @author xuheng
 */UE.plugins['shortcutmenu']=function(){var me=this,menu,items=me.options.shortcutMenu||[];if(!items.length){return;}me.addListener('contextmenu mouseup',function(type,e){var me=this,customEvt={type:type,target:e.target||e.srcElement,screenX:e.screenX,screenY:e.screenY,clientX:e.clientX,clientY:e.clientY};setTimeout(function(){var rng=me.selection.getRange();if(rng.collapsed===false||type=="contextmenu"){if(!menu){menu=new baidu.editor.ui.ShortCutMenu({editor:me,items:items,theme:me.options.theme,className:'edui-shortcutmenu'});menu.render();me.fireEvent("afterrendershortcutmenu",menu);}menu.show(customEvt,!!UE.plugins['contextmenu']);}});if(type=='contextmenu'){domUtils.preventDefault(e);if(browser.ie9below){var ieRange;try{ieRange=me.selection.getNative().createRange();}catch(e){return;}if(ieRange.item){var range=new dom.Range(me.document);range.selectNode(ieRange.item(0)).select(true,true);}}}});me.addListener('keydown',function(type){if(type=="keydown"){menu&&!menu.isHidden&&menu.hide();}});};// plugins/basestyle.js
/**
 * B、I、sub、super命令支持
 * @file
 * @since 1.2.6.1
 */UE.plugins['basestyle']=function(){/**
     * 字体加粗
     * @command bold
     * @param { String } cmd 命令字符串
     * @remind 对已加粗的文本内容执行该命令， 将取消加粗
     * @method execCommand
     * @example
     * ```javascript
     * //editor是编辑器实例
     * //对当前选中的文本内容执行加粗操作
     * //第一次执行， 文本内容加粗
     * editor.execCommand( 'bold' );
     *
     * //第二次执行， 文本内容取消加粗
     * editor.execCommand( 'bold' );
     * ```
     *//**
     * 字体倾斜
     * @command italic
     * @method execCommand
     * @param { String } cmd 命令字符串
     * @remind 对已倾斜的文本内容执行该命令， 将取消倾斜
     * @example
     * ```javascript
     * //editor是编辑器实例
     * //对当前选中的文本内容执行斜体操作
     * //第一次操作， 文本内容将变成斜体
     * editor.execCommand( 'italic' );
     *
     * //再次对同一文本内容执行， 则文本内容将恢复正常
     * editor.execCommand( 'italic' );
     * ```
     *//**
     * 下标文本，与“superscript”命令互斥
     * @command subscript
     * @method execCommand
     * @remind  把选中的文本内容切换成下标文本， 如果当前选中的文本已经是下标， 则该操作会把文本内容还原成正常文本
     * @param { String } cmd 命令字符串
     * @example
     * ```javascript
     * //editor是编辑器实例
     * //对当前选中的文本内容执行下标操作
     * //第一次操作， 文本内容将变成下标文本
     * editor.execCommand( 'subscript' );
     *
     * //再次对同一文本内容执行， 则文本内容将恢复正常
     * editor.execCommand( 'subscript' );
     * ```
     *//**
     * 上标文本，与“subscript”命令互斥
     * @command superscript
     * @method execCommand
     * @remind 把选中的文本内容切换成上标文本， 如果当前选中的文本已经是上标， 则该操作会把文本内容还原成正常文本
     * @param { String } cmd 命令字符串
     * @example
     * ```javascript
     * //editor是编辑器实例
     * //对当前选中的文本内容执行上标操作
     * //第一次操作， 文本内容将变成上标文本
     * editor.execCommand( 'superscript' );
     *
     * //再次对同一文本内容执行， 则文本内容将恢复正常
     * editor.execCommand( 'superscript' );
     * ```
     */var basestyles={'bold':['strong','b'],'italic':['em','i'],'subscript':['sub'],'superscript':['sup']},getObj=function getObj(editor,tagNames){return domUtils.filterNodeList(editor.selection.getStartElementPath(),tagNames);},me=this;//添加快捷键
me.addshortcutkey({"Bold":"ctrl+66",//^B
"Italic":"ctrl+73",//^I
"Underline":"ctrl+85"//^U
});me.addInputRule(function(root){utils.each(root.getNodesByTagName('b i'),function(node){switch(node.tagName){case'b':node.tagName='strong';break;case'i':node.tagName='em';}});});for(var style in basestyles){(function(cmd,tagNames){me.commands[cmd]={execCommand:function execCommand(cmdName){var range=me.selection.getRange(),obj=getObj(this,tagNames);if(range.collapsed){if(obj){var tmpText=me.document.createTextNode('');range.insertNode(tmpText).removeInlineStyle(tagNames);range.setStartBefore(tmpText);domUtils.remove(tmpText);}else{var tmpNode=range.document.createElement(tagNames[0]);if(cmdName=='superscript'||cmdName=='subscript'){tmpText=me.document.createTextNode('');range.insertNode(tmpText).removeInlineStyle(['sub','sup']).setStartBefore(tmpText).collapse(true);}range.insertNode(tmpNode).setStart(tmpNode,0);}range.collapse(true);}else{if(cmdName=='superscript'||cmdName=='subscript'){if(!obj||obj.tagName.toLowerCase()!=cmdName){range.removeInlineStyle(['sub','sup']);}}obj?range.removeInlineStyle(tagNames):range.applyInlineStyle(tagNames[0]);}range.select();},queryCommandState:function queryCommandState(){return getObj(this,tagNames)?1:0;}};})(style,basestyles[style]);}};// plugins/elementpath.js
/**
 * 选取路径命令
 * @file
 */UE.plugins['elementpath']=function(){var currentLevel,tagNames,me=this;me.setOpt('elementPathEnabled',true);if(!me.options.elementPathEnabled){return;}me.commands['elementpath']={execCommand:function execCommand(cmdName,level){var start=tagNames[level],range=me.selection.getRange();currentLevel=level*1;range.selectNode(start).select();},queryCommandValue:function queryCommandValue(){//产生一个副本，不能修改原来的startElementPath;
var parents=[].concat(this.selection.getStartElementPath()).reverse(),names=[];tagNames=parents;for(var i=0,ci;ci=parents[i];i++){if(ci.nodeType==3){continue;}var name=ci.tagName.toLowerCase();if(name=='img'&&ci.getAttribute('anchorname')){name='anchor';}names[i]=name;if(currentLevel==i){currentLevel=-1;break;}}return names;}};};// plugins/formatmatch.js
/**
 * 格式刷，只格式inline的
 * @file
 * @since 1.2.6.1
 *//**
 * 格式刷
 * @command formatmatch
 * @method execCommand
 * @remind 该操作不能复制段落格式
 * @param { String } cmd 命令字符串
 * @example
 * ```javascript
 * //editor是编辑器实例
 * //获取格式刷
 * editor.execCommand( 'formatmatch' );
 * ```
 */UE.plugins['formatmatch']=function(){var me=this,list=[],img,flag=0;me.addListener('reset',function(){list=[];flag=0;});function addList(type,evt){if(browser.webkit){var target=evt.target.tagName=='IMG'?evt.target:null;}function addFormat(range){if(text){range.selectNode(text);}return range.applyInlineStyle(list[list.length-1].tagName,null,list);}me.undoManger&&me.undoManger.save();var range=me.selection.getRange(),imgT=target||range.getClosedNode();if(img&&imgT&&imgT.tagName=='IMG'){//trace:964
imgT.style.cssText+=';float:'+(img.style.cssFloat||img.style.styleFloat||'none')+';display:'+(img.style.display||'inline');img=null;}else{if(!img){var collapsed=range.collapsed;if(collapsed){var text=me.document.createTextNode('match');range.insertNode(text).select();}me.__hasEnterExecCommand=true;//不能把block上的属性干掉
//trace:1553
var removeFormatAttributes=me.options.removeFormatAttributes;me.options.removeFormatAttributes='';me.execCommand('removeformat');me.options.removeFormatAttributes=removeFormatAttributes;me.__hasEnterExecCommand=false;//trace:969
range=me.selection.getRange();if(list.length){addFormat(range);}if(text){range.setStartBefore(text).collapse(true);}range.select();text&&domUtils.remove(text);}}me.undoManger&&me.undoManger.save();me.removeListener('mouseup',addList);flag=0;}me.commands['formatmatch']={execCommand:function execCommand(cmdName){if(flag){flag=0;list=[];me.removeListener('mouseup',addList);return;}var range=me.selection.getRange();img=range.getClosedNode();if(!img||img.tagName!='IMG'){range.collapse(true).shrinkBoundary();var start=range.startContainer;list=domUtils.findParents(start,true,function(node){return!domUtils.isBlockElm(node)&&node.nodeType==1;});//a不能加入格式刷, 并且克隆节点
for(var i=0,ci;ci=list[i];i++){if(ci.tagName=='A'){list.splice(i,1);break;}}}me.addListener('mouseup',addList);flag=1;},queryCommandState:function queryCommandState(){return flag;},notNeedUndo:1};};// plugins/searchreplace.js
///import core
///commands 查找替换
///commandsName  SearchReplace
///commandsTitle  查询替换
///commandsDialog  dialogs\searchreplace
/**
 * @description 查找替换
 * @author zhanyi
 */UE.plugin.register('searchreplace',function(){var me=this;var _blockElm={'table':1,'tbody':1,'tr':1,'ol':1,'ul':1};function findTextInString(textContent,opt,currentIndex){var str=opt.searchStr;if(opt.dir==-1){textContent=textContent.split('').reverse().join('');str=str.split('').reverse().join('');currentIndex=textContent.length-currentIndex;}var reg=new RegExp(str,'g'+(opt.casesensitive?'':'i')),match;while(match=reg.exec(textContent)){if(match.index>=currentIndex){return opt.dir==-1?textContent.length-match.index-opt.searchStr.length:match.index;}}return-1;}function findTextBlockElm(node,currentIndex,opt){var textContent,index,methodName=opt.all||opt.dir==1?'getNextDomNode':'getPreDomNode';if(domUtils.isBody(node)){node=node.firstChild;}var first=1;while(node){textContent=node.nodeType==3?node.nodeValue:node[browser.ie?'innerText':'textContent'];index=findTextInString(textContent,opt,currentIndex);first=0;if(index!=-1){return{'node':node,'index':index};}node=domUtils[methodName](node);while(node&&_blockElm[node.nodeName.toLowerCase()]){node=domUtils[methodName](node,true);}if(node){currentIndex=opt.dir==-1?(node.nodeType==3?node.nodeValue:node[browser.ie?'innerText':'textContent']).length:0;}}}function findNTextInBlockElm(node,index,str){var currentIndex=0,currentNode=node.firstChild,currentNodeLength=0,result;while(currentNode){if(currentNode.nodeType==3){currentNodeLength=currentNode.nodeValue.replace(/(^[\t\r\n]+)|([\t\r\n]+$)/,'').length;currentIndex+=currentNodeLength;if(currentIndex>=index){return{'node':currentNode,'index':currentNodeLength-(currentIndex-index)};}}else if(!dtd.$empty[currentNode.tagName]){currentNodeLength=currentNode[browser.ie?'innerText':'textContent'].replace(/(^[\t\r\n]+)|([\t\r\n]+$)/,'').length;currentIndex+=currentNodeLength;if(currentIndex>=index){result=findNTextInBlockElm(currentNode,currentNodeLength-(currentIndex-index),str);if(result){return result;}}}currentNode=domUtils.getNextDomNode(currentNode);}}function searchReplace(me,opt){var rng=me.selection.getRange(),startBlockNode,searchStr=opt.searchStr,span=me.document.createElement('span');span.innerHTML='$$ueditor_searchreplace_key$$';rng.shrinkBoundary(true);//判断是不是第一次选中
if(!rng.collapsed){rng.select();var rngText=me.selection.getText();if(new RegExp('^'+opt.searchStr+'$',opt.casesensitive?'':'i').test(rngText)){if(opt.replaceStr!=undefined){replaceText(rng,opt.replaceStr);rng.select();return true;}else{rng.collapse(opt.dir==-1);}}}rng.insertNode(span);rng.enlargeToBlockElm(true);startBlockNode=rng.startContainer;var currentIndex=startBlockNode[browser.ie?'innerText':'textContent'].indexOf('$$ueditor_searchreplace_key$$');rng.setStartBefore(span);domUtils.remove(span);var result=findTextBlockElm(startBlockNode,currentIndex,opt);if(result){var rngStart=findNTextInBlockElm(result.node,result.index,searchStr);var rngEnd=findNTextInBlockElm(result.node,result.index+searchStr.length,searchStr);rng.setStart(rngStart.node,rngStart.index).setEnd(rngEnd.node,rngEnd.index);if(opt.replaceStr!==undefined){replaceText(rng,opt.replaceStr);}rng.select();return true;}else{rng.setCursor();}}function replaceText(rng,str){str=me.document.createTextNode(str);rng.deleteContents().insertNode(str);}return{commands:{'searchreplace':{execCommand:function execCommand(cmdName,opt){utils.extend(opt,{all:false,casesensitive:false,dir:1},true);var num=0;if(opt.all){var rng=me.selection.getRange(),first=me.body.firstChild;if(first&&first.nodeType==1){rng.setStart(first,0);rng.shrinkBoundary(true);}else if(first.nodeType==3){rng.setStartBefore(first);}rng.collapse(true).select(true);if(opt.replaceStr!==undefined){me.fireEvent('saveScene');}while(searchReplace(this,opt)){num++;}if(num){me.fireEvent('saveScene');}}else{if(opt.replaceStr!==undefined){me.fireEvent('saveScene');}if(searchReplace(this,opt)){num++;}if(num){me.fireEvent('saveScene');}}return num;},notNeedUndo:1}}};});// plugins/customstyle.js
/**
 * 自定义样式
 * @file
 * @since 1.2.6.1
 *//**
 * 根据config配置文件里“customstyle”选项的值对匹配的标签执行样式替换。
 * @command customstyle
 * @method execCommand
 * @param { String } cmd 命令字符串
 * @example
 * ```javascript
 * editor.execCommand( 'customstyle' );
 * ```
 */UE.plugins['customstyle']=function(){var me=this;me.setOpt({'customstyle':[{tag:'h1',name:'tc',style:'font-size:32px;font-weight:bold;border-bottom:#ccc 2px solid;padding:0 4px 0 0;text-align:center;margin:0 0 20px 0;'},{tag:'h1',name:'tl',style:'font-size:32px;font-weight:bold;border-bottom:#ccc 2px solid;padding:0 4px 0 0;text-align:left;margin:0 0 10px 0;'},{tag:'span',name:'im',style:'font-size:16px;font-style:italic;font-weight:bold;line-height:18px;'},{tag:'span',name:'hi',style:'font-size:16px;font-style:italic;font-weight:bold;color:rgb(51, 153, 204);line-height:18px;'}]});me.commands['customstyle']={execCommand:function execCommand(cmdName,obj){var me=this,tagName=obj.tag,node=domUtils.findParent(me.selection.getStart(),function(node){return node.getAttribute('label');},true),range,bk,tmpObj={};for(var p in obj){if(obj[p]!==undefined)tmpObj[p]=obj[p];}delete tmpObj.tag;if(node&&node.getAttribute('label')==obj.label){range=this.selection.getRange();bk=range.createBookmark();if(range.collapsed){//trace:1732 删掉自定义标签，要有p来回填站位
if(dtd.$block[node.tagName]){var fillNode=me.document.createElement('p');domUtils.moveChild(node,fillNode);node.parentNode.insertBefore(fillNode,node);domUtils.remove(node);}else{domUtils.remove(node,true);}}else{var common=domUtils.getCommonAncestor(bk.start,bk.end),nodes=domUtils.getElementsByTagName(common,tagName);if(new RegExp(tagName,'i').test(common.tagName)){nodes.push(common);}for(var i=0,ni;ni=nodes[i++];){if(ni.getAttribute('label')==obj.label){var ps=domUtils.getPosition(ni,bk.start),pe=domUtils.getPosition(ni,bk.end);if((ps&domUtils.POSITION_FOLLOWING||ps&domUtils.POSITION_CONTAINS)&&(pe&domUtils.POSITION_PRECEDING||pe&domUtils.POSITION_CONTAINS))if(dtd.$block[tagName]){var fillNode=me.document.createElement('p');domUtils.moveChild(ni,fillNode);ni.parentNode.insertBefore(fillNode,ni);}domUtils.remove(ni,true);}}node=domUtils.findParent(common,function(node){return node.getAttribute('label')==obj.label;},true);if(node){domUtils.remove(node,true);}}range.moveToBookmark(bk).select();}else{if(dtd.$block[tagName]){this.execCommand('paragraph',tagName,tmpObj,'customstyle');range=me.selection.getRange();if(!range.collapsed){range.collapse();node=domUtils.findParent(me.selection.getStart(),function(node){return node.getAttribute('label')==obj.label;},true);var pNode=me.document.createElement('p');domUtils.insertAfter(node,pNode);domUtils.fillNode(me.document,pNode);range.setStart(pNode,0).setCursor();}}else{range=me.selection.getRange();if(range.collapsed){node=me.document.createElement(tagName);domUtils.setAttributes(node,tmpObj);range.insertNode(node).setStart(node,0).setCursor();return;}bk=range.createBookmark();range.applyInlineStyle(tagName,tmpObj).moveToBookmark(bk).select();}}},queryCommandValue:function queryCommandValue(){var parent=domUtils.filterNodeList(this.selection.getStartElementPath(),function(node){return node.getAttribute('label');});return parent?parent.getAttribute('label'):'';}};//当去掉customstyle是，如果是块元素，用p代替
me.addListener('keyup',function(type,evt){var keyCode=evt.keyCode||evt.which;if(keyCode==32||keyCode==13){var range=me.selection.getRange();if(range.collapsed){var node=domUtils.findParent(me.selection.getStart(),function(node){return node.getAttribute('label');},true);if(node&&dtd.$block[node.tagName]&&domUtils.isEmptyNode(node)){var p=me.document.createElement('p');domUtils.insertAfter(node,p);domUtils.fillNode(me.document,p);domUtils.remove(node);range.setStart(p,0).setCursor();}}}});};// plugins/catchremoteimage.js
///import core
///commands 远程图片抓取
///commandsName  catchRemoteImage,catchremoteimageenable
///commandsTitle  远程图片抓取
/**
 * 远程图片抓取,当开启本插件时所有不符合本地域名的图片都将被抓取成为本地服务器上的图片
 */UE.plugins['catchremoteimage']=function(){var me=this,ajax=UE.ajax;/* 设置默认值 */if(me.options.catchRemoteImageEnable===undefined)return;me.setOpt({catchRemoteImageEnable:false});me.addListener("afterpaste",function(){me.fireEvent("catchRemoteImage");});me.addListener("catchRemoteImage",function(){var catcherLocalDomain=me.getOpt('catcherLocalDomain'),catcherActionUrl=me.getActionUrl(me.getOpt('catcherActionName')),catcherUrlPrefix=me.getOpt('catcherUrlPrefix'),catcherFieldName=me.getOpt('catcherFieldName');var remoteImages=[],imgs=domUtils.getElementsByTagName(me.document,"img"),test=function test(src,urls){if(src.indexOf(location.host)!=-1||/(^\.)|(^\/)/.test(src)){return true;}if(urls){for(var j=0,url;url=urls[j++];){if(src.indexOf(url)!==-1){return true;}}}return false;};for(var i=0,ci;ci=imgs[i++];){if(ci.getAttribute("word_img")){continue;}var src=ci.getAttribute("_src")||ci.src||"";if(/^(https?|ftp):/i.test(src)&&!test(src,catcherLocalDomain)){remoteImages.push(src);}}if(remoteImages.length){catchremoteimage(remoteImages,{//成功抓取
success:function success(r){try{var info=r.state!==undefined?r:eval("("+r.responseText+")");}catch(e){return;}/* 获取源路径和新路径 */var i,j,ci,cj,oldSrc,newSrc,list=info.list;for(i=0;ci=imgs[i++];){oldSrc=ci.getAttribute("_src")||ci.src||"";for(j=0;cj=list[j++];){if(oldSrc==cj.source&&cj.state=="SUCCESS"){//抓取失败时不做替换处理
newSrc=catcherUrlPrefix+cj.url;domUtils.setAttributes(ci,{"src":newSrc,"_src":newSrc});break;}}}me.fireEvent('catchremotesuccess');},//回调失败，本次请求超时
error:function error(){me.fireEvent("catchremoteerror");}});}function catchremoteimage(imgs,callbacks){var params=utils.serializeParam(me.queryCommandValue('serverparam'))||'',url=utils.formatUrl(catcherActionUrl+(catcherActionUrl.indexOf('?')==-1?'?':'&')+params),isJsonp=utils.isCrossDomainUrl(url),opt={'method':'POST','dataType':isJsonp?'jsonp':'','timeout':60000,//单位：毫秒，回调请求超时设置。目标用户如果网速不是很快的话此处建议设置一个较大的数值
'onsuccess':callbacks["success"],'onerror':callbacks["error"]};opt[catcherFieldName]=imgs;ajax.request(url,opt);}});};// plugins/snapscreen.js
/**
 * 截屏插件，为UEditor提供插入支持
 * @file
 * @since 1.4.2
 */UE.plugin.register('snapscreen',function(){var me=this;var snapplugin;function getLocation(url){var search,a=document.createElement('a'),params=utils.serializeParam(me.queryCommandValue('serverparam'))||'';a.href=url;if(browser.ie){a.href=a.href;}search=a.search;if(params){search=search+(search.indexOf('?')==-1?'?':'&')+params;search=search.replace(/[&]+/ig,'&');}return{'port':a.port,'hostname':a.hostname,'path':a.pathname+search||+a.hash};}return{commands:{/**
             * 字体背景颜色
             * @command snapscreen
             * @method execCommand
             * @param { String } cmd 命令字符串
             * @example
             * ```javascript
             * editor.execCommand('snapscreen');
             * ```
             */'snapscreen':{execCommand:function execCommand(cmd){var url,local,res;var lang=me.getLang("snapScreen_plugin");if(!snapplugin){var container=me.container;var doc=me.container.ownerDocument||me.container.document;snapplugin=doc.createElement("object");try{snapplugin.type="application/x-pluginbaidusnap";}catch(e){return;}snapplugin.style.cssText="position:absolute;left:-9999px;width:0;height:0;";snapplugin.setAttribute("width","0");snapplugin.setAttribute("height","0");container.appendChild(snapplugin);}function onSuccess(rs){try{rs=eval("("+rs+")");if(rs.state=='SUCCESS'){var opt=me.options;me.execCommand('insertimage',{src:opt.snapscreenUrlPrefix+rs.url,_src:opt.snapscreenUrlPrefix+rs.url,alt:rs.title||'',floatStyle:opt.snapscreenImgAlign});}else{alert(rs.state);}}catch(e){alert(lang.callBackErrorMsg);}}url=me.getActionUrl(me.getOpt('snapscreenActionName'));local=getLocation(url);setTimeout(function(){try{res=snapplugin.saveSnapshot(local.hostname,local.path,local.port);}catch(e){me.ui._dialogs['snapscreenDialog'].open();return;}onSuccess(res);},50);},queryCommandState:function queryCommandState(){return navigator.userAgent.indexOf("Windows",0)!=-1?0:-1;}}}};});// plugins/insertparagraph.js
/**
 * 插入段落
 * @file
 * @since 1.2.6.1
 *//**
 * 插入段落
 * @command insertparagraph
 * @method execCommand
 * @param { String } cmd 命令字符串
 * @example
 * ```javascript
 * //editor是编辑器实例
 * editor.execCommand( 'insertparagraph' );
 * ```
 */UE.commands['insertparagraph']={execCommand:function execCommand(cmdName,front){var me=this,range=me.selection.getRange(),start=range.startContainer,tmpNode;while(start){if(domUtils.isBody(start)){break;}tmpNode=start;start=start.parentNode;}if(tmpNode){var p=me.document.createElement('p');if(front){tmpNode.parentNode.insertBefore(p,tmpNode);}else{tmpNode.parentNode.insertBefore(p,tmpNode.nextSibling);}domUtils.fillNode(me.document,p);range.setStart(p,0).setCursor(false,true);}}};// plugins/webapp.js
/**
 * 百度应用
 * @file
 * @since 1.2.6.1
 *//**
 * 插入百度应用
 * @command webapp
 * @method execCommand
 * @remind 需要百度APPKey
 * @remind 百度应用主页： <a href="http://app.baidu.com/" target="_blank">http://app.baidu.com/</a>
 * @param { Object } appOptions 应用所需的参数项， 支持的key有： title=>应用标题， width=>应用容器宽度，
 * height=>应用容器高度，logo=>应用logo，url=>应用地址
 * @example
 * ```javascript
 * //editor是编辑器实例
 * //在编辑器里插入一个“植物大战僵尸”的APP
 * editor.execCommand( 'webapp' , {
 *     title: '植物大战僵尸',
 *     width: 560,
 *     height: 465,
 *     logo: '应用展示的图片',
 *     url: '百度应用的地址'
 * } );
 * ```
 *///UE.plugins['webapp'] = function () {
//    var me = this;
//    function createInsertStr( obj, toIframe, addParagraph ) {
//        return !toIframe ?
//                (addParagraph ? '<p>' : '') + '<img title="'+obj.title+'" width="' + obj.width + '" height="' + obj.height + '"' +
//                        ' src="' + me.options.UEDITOR_HOME_URL + 'themes/default/images/spacer.gif" style="background:url(' + obj.logo+') no-repeat center center; border:1px solid gray;" class="edui-faked-webapp" _url="' + obj.url + '" />' +
//                        (addParagraph ? '</p>' : '')
//                :
//                '<iframe class="edui-faked-webapp" title="'+obj.title+'" width="' + obj.width + '" height="' + obj.height + '"  scrolling="no" frameborder="0" src="' + obj.url + '" logo_url = '+obj.logo+'></iframe>';
//    }
//
//    function switchImgAndIframe( img2frame ) {
//        var tmpdiv,
//                nodes = domUtils.getElementsByTagName( me.document, !img2frame ? "iframe" : "img" );
//        for ( var i = 0, node; node = nodes[i++]; ) {
//            if ( node.className != "edui-faked-webapp" ){
//                continue;
//            }
//            tmpdiv = me.document.createElement( "div" );
//            tmpdiv.innerHTML = createInsertStr( img2frame ? {url:node.getAttribute( "_url" ), width:node.width, height:node.height,title:node.title,logo:node.style.backgroundImage.replace("url(","").replace(")","")} : {url:node.getAttribute( "src", 2 ),title:node.title, width:node.width, height:node.height,logo:node.getAttribute("logo_url")}, img2frame ? true : false,false );
//            node.parentNode.replaceChild( tmpdiv.firstChild, node );
//        }
//    }
//
//    me.addListener( "beforegetcontent", function () {
//        switchImgAndIframe( true );
//    } );
//    me.addListener( 'aftersetcontent', function () {
//        switchImgAndIframe( false );
//    } );
//    me.addListener( 'aftergetcontent', function ( cmdName ) {
//        if ( cmdName == 'aftergetcontent' && me.queryCommandState( 'source' ) ){
//            return;
//        }
//        switchImgAndIframe( false );
//    } );
//
//    me.commands['webapp'] = {
//        execCommand:function ( cmd, obj ) {
//            me.execCommand( "inserthtml", createInsertStr( obj, false,true ) );
//        }
//    };
//};
UE.plugin.register('webapp',function(){var me=this;function createInsertStr(obj,toEmbed){return!toEmbed?'<img title="'+obj.title+'" width="'+obj.width+'" height="'+obj.height+'"'+' src="'+me.options.UEDITOR_HOME_URL+'themes/default/images/spacer.gif" _logo_url="'+obj.logo+'" style="background:url('+obj.logo+') no-repeat center center; border:1px solid gray;" class="edui-faked-webapp" _url="'+obj.url+'" '+(obj.align&&!obj.cssfloat?'align="'+obj.align+'"':'')+(obj.cssfloat?'style="float:'+obj.cssfloat+'"':'')+'/>':'<iframe class="edui-faked-webapp" title="'+obj.title+'" '+(obj.align&&!obj.cssfloat?'align="'+obj.align+'"':'')+(obj.cssfloat?'style="float:'+obj.cssfloat+'"':'')+'width="'+obj.width+'" height="'+obj.height+'"  scrolling="no" frameborder="0" src="'+obj.url+'" logo_url = "'+obj.logo+'"></iframe>';}return{outputRule:function outputRule(root){utils.each(root.getNodesByTagName('img'),function(node){var html;if(node.getAttr('class')=='edui-faked-webapp'){html=createInsertStr({title:node.getAttr('title'),'width':node.getAttr('width'),'height':node.getAttr('height'),'align':node.getAttr('align'),'cssfloat':node.getStyle('float'),'url':node.getAttr("_url"),'logo':node.getAttr('_logo_url')},true);var embed=UE.uNode.createElement(html);node.parentNode.replaceChild(embed,node);}});},inputRule:function inputRule(root){utils.each(root.getNodesByTagName('iframe'),function(node){if(node.getAttr('class')=='edui-faked-webapp'){var img=UE.uNode.createElement(createInsertStr({title:node.getAttr('title'),'width':node.getAttr('width'),'height':node.getAttr('height'),'align':node.getAttr('align'),'cssfloat':node.getStyle('float'),'url':node.getAttr("src"),'logo':node.getAttr('logo_url')}));node.parentNode.replaceChild(img,node);}});},commands:{/**
             * 插入百度应用
             * @command webapp
             * @method execCommand
             * @remind 需要百度APPKey
             * @remind 百度应用主页： <a href="http://app.baidu.com/" target="_blank">http://app.baidu.com/</a>
             * @param { Object } appOptions 应用所需的参数项， 支持的key有： title=>应用标题， width=>应用容器宽度，
             * height=>应用容器高度，logo=>应用logo，url=>应用地址
             * @example
             * ```javascript
             * //editor是编辑器实例
             * //在编辑器里插入一个“植物大战僵尸”的APP
             * editor.execCommand( 'webapp' , {
             *     title: '植物大战僵尸',
             *     width: 560,
             *     height: 465,
             *     logo: '应用展示的图片',
             *     url: '百度应用的地址'
             * } );
             * ```
             */'webapp':{execCommand:function execCommand(cmd,obj){var me=this,str=createInsertStr(utils.extend(obj,{align:'none'}),false);me.execCommand("inserthtml",str);},queryCommandState:function queryCommandState(){var me=this,img=me.selection.getRange().getClosedNode(),flag=img&&img.className=="edui-faked-webapp";return flag?1:0;}}}};});// plugins/template.js
///import core
///import plugins\inserthtml.js
///import plugins\cleardoc.js
///commands 模板
///commandsName  template
///commandsTitle  模板
///commandsDialog  dialogs\template
UE.plugins['template']=function(){UE.commands['template']={execCommand:function execCommand(cmd,obj){obj.html&&this.execCommand("inserthtml",obj.html);}};this.addListener("click",function(type,evt){var el=evt.target||evt.srcElement,range=this.selection.getRange();var tnode=domUtils.findParent(el,function(node){if(node.className&&domUtils.hasClass(node,"ue_t")){return node;}},true);tnode&&range.selectNode(tnode).shrinkBoundary().select();});this.addListener("keydown",function(type,evt){var range=this.selection.getRange();if(!range.collapsed){if(!evt.ctrlKey&&!evt.metaKey&&!evt.shiftKey&&!evt.altKey){var tnode=domUtils.findParent(range.startContainer,function(node){if(node.className&&domUtils.hasClass(node,"ue_t")){return node;}},true);if(tnode){domUtils.removeClasses(tnode,["ue_t"]);}}}});};// plugins/music.js
/**
 * 插入音乐命令
 * @file
 */UE.plugin.register('music',function(){var me=this;function creatInsertStr(url,width,height,align,cssfloat,toEmbed){// return  !toEmbed ?
//         '<img ' +
//             (align && !cssfloat? 'align="' + align + '"' : '') +
//             (cssfloat ? 'style="float:' + cssfloat + '"' : '') +
//             ' width="'+ width +'" height="' + height + '" _url="'+url+'" class="edui-faked-music"' +
//             ' src="'+me.options.langPath+me.options.lang+'/images/music.png" />'
//     :
//     '<embed type="application/x-shockwave-flash" class="edui-faked-music" pluginspage="http://www.macromedia.com/go/getflashplayer"' +
//         ' src="' + url + '" width="' + width  + '" height="' + height  + '" '+ (align && !cssfloat? 'align="' + align + '"' : '') +
//         (cssfloat ? 'style="float:' + cssfloat + '"' : '') +
//         ' wmode="transparent" play="true" loop="false" menu="false" allowscriptaccess="never" allowfullscreen="true" >';
return false?'<img '+(align&&!cssfloat?'align="'+align+'"':'')+(cssfloat?'style="float:'+cssfloat+'"':'')+' width="'+width+'" height="'+height+'" _url="'+url+'" class="edui-faked-music"'+' src="'+me.options.langPath+me.options.lang+'/images/music.png" />':'<audio class="edui-faked-music" controls="controls" src="'+url+'" width="'+width+'" height="'+height+'" '+(align&&!cssfloat?'align="'+align+'"':"")+(cssfloat?'style="float:'+cssfloat+'"':"")+'>';// '<embed type="application/x-shockwave-flash" class="edui-faked-music" pluginspage="http://www.macromedia.com/go/getflashplayer"' +
//     ' src="' + url + '" width="' + width  + '" height="' + height  + '" '+ (align && !cssfloat? 'align="' + align + '"' : '') +
//     (cssfloat ? 'style="float:' + cssfloat + '"' : '') +
//     ' wmode="transparent" play="true" loop="false" menu="false" allowscriptaccess="never" allowfullscreen="true" >';
}return{outputRule:function outputRule(root){utils.each(root.getNodesByTagName('img'),function(node){var html;if(node.getAttr('class')=='edui-faked-music'){var cssfloat=node.getStyle('float');var align=node.getAttr('align');html=creatInsertStr(node.getAttr("_url"),node.getAttr('width'),node.getAttr('height'),align,cssfloat,true);var embed=UE.uNode.createElement(html);node.parentNode.replaceChild(embed,node);}});},inputRule:function inputRule(root){utils.each(root.getNodesByTagName('embed'),function(node){if(node.getAttr('class')=='edui-faked-music'){var cssfloat=node.getStyle('float');var align=node.getAttr('align');html=creatInsertStr(node.getAttr("src"),node.getAttr('width'),node.getAttr('height'),align,cssfloat,false);var img=UE.uNode.createElement(html);node.parentNode.replaceChild(img,node);}});},commands:{/**
             * 插入音乐
             * @command music
             * @method execCommand
             * @param { Object } musicOptions 插入音乐的参数项， 支持的key有： url=>音乐地址；
             * width=>音乐容器宽度；height=>音乐容器高度；align=>音乐文件的对齐方式， 可选值有: left, center, right, none
             * @example
             * ```javascript
             * //editor是编辑器实例
             * //在编辑器里插入一个“植物大战僵尸”的APP
             * editor.execCommand( 'music' , {
             *     width: 400,
             *     height: 95,
             *     align: "center",
             *     url: "音乐地址"
             * } );
             * ```
             */'music':{execCommand:function execCommand(cmd,musicObj){var me=this,str=creatInsertStr(musicObj.url,musicObj.width||400,musicObj.height||95,"none",false);me.execCommand("inserthtml",str);},queryCommandState:function queryCommandState(){var me=this,img=me.selection.getRange().getClosedNode(),flag=img&&img.className=="edui-faked-music";return flag?1:0;}}}};});// plugins/autoupload.js
/**
 * @description
 * 1.拖放文件到编辑区域，自动上传并插入到选区
 * 2.插入粘贴板的图片，自动上传并插入到选区
 * @author Jinqn
 * @date 2013-10-14
 */UE.plugin.register('autoupload',function(){function sendAndInsertFile(file,editor){var me=editor;//模拟数据
var fieldName,urlPrefix,maxSize,allowFiles,actionUrl,loadingHtml,errorHandler,successHandler,filetype=/image\/\w+/i.test(file.type)?'image':'file',loadingId='loading_'+(+new Date()).toString(36);fieldName=me.getOpt(filetype+'FieldName');urlPrefix=me.getOpt(filetype+'UrlPrefix');maxSize=me.getOpt(filetype+'MaxSize');allowFiles=me.getOpt(filetype+'AllowFiles');actionUrl=me.getActionUrl(me.getOpt(filetype+'ActionName'));errorHandler=function errorHandler(title){var loader=me.document.getElementById(loadingId);loader&&domUtils.remove(loader);me.fireEvent('showmessage',{'id':loadingId,'content':title,'type':'error','timeout':4000});};if(filetype=='image'){loadingHtml='<img class="loadingclass" id="'+loadingId+'" src="'+me.options.themePath+me.options.theme+'/images/spacer.gif" title="'+(me.getLang('autoupload.loading')||'')+'" >';successHandler=function successHandler(data){var link=urlPrefix+data.url,loader=me.document.getElementById(loadingId);if(loader){loader.setAttribute('src',link);loader.setAttribute('_src',link);loader.setAttribute('title',data.title||'');loader.setAttribute('alt',data.original||'');loader.removeAttribute('id');domUtils.removeClasses(loader,'loadingclass');}};}else{loadingHtml='<p>'+'<img class="loadingclass" id="'+loadingId+'" src="'+me.options.themePath+me.options.theme+'/images/spacer.gif" title="'+(me.getLang('autoupload.loading')||'')+'" >'+'</p>';successHandler=function successHandler(data){var link=urlPrefix+data.url,loader=me.document.getElementById(loadingId);var rng=me.selection.getRange(),bk=rng.createBookmark();rng.selectNode(loader).select();me.execCommand('insertfile',{'url':link});rng.moveToBookmark(bk).select();};}/* 插入loading的占位符 */me.execCommand('inserthtml',loadingHtml);/* 判断后端配置是否没有加载成功 */if(!me.getOpt(filetype+'ActionName')){errorHandler(me.getLang('autoupload.errorLoadConfig'));return;}/* 判断文件大小是否超出限制 */if(file.size>maxSize){errorHandler(me.getLang('autoupload.exceedSizeError'));return;}/* 判断文件格式是否超出允许 */var fileext=file.name?file.name.substr(file.name.lastIndexOf('.')):'';if(fileext&&filetype!='image'||allowFiles&&(allowFiles.join('')+'.').indexOf(fileext.toLowerCase()+'.')==-1){errorHandler(me.getLang('autoupload.exceedTypeError'));return;}/* 创建Ajax并提交 */var xhr=new XMLHttpRequest(),fd=new FormData(),params=utils.serializeParam(me.queryCommandValue('serverparam'))||'',url=utils.formatUrl(actionUrl+(actionUrl.indexOf('?')==-1?'?':'&')+params);fd.append(fieldName,file,file.name||'blob.'+file.type.substr('image/'.length));fd.append('type','ajax');xhr.open("post",url,true);xhr.setRequestHeader("X-Requested-With","XMLHttpRequest");xhr.addEventListener('load',function(e){try{var json=new Function("return "+utils.trim(e.target.response))();if(json.state=='SUCCESS'&&json.url){successHandler(json);}else{errorHandler(json.state);}}catch(er){errorHandler(me.getLang('autoupload.loadError'));}});xhr.send(fd);}function getPasteImage(e){return e.clipboardData&&e.clipboardData.items&&e.clipboardData.items.length==1&&/^image\//.test(e.clipboardData.items[0].type)?e.clipboardData.items:null;}function getDropImage(e){return e.dataTransfer&&e.dataTransfer.files?e.dataTransfer.files:null;}return{outputRule:function outputRule(root){utils.each(root.getNodesByTagName('img'),function(n){if(/\b(loaderrorclass)|(bloaderrorclass)\b/.test(n.getAttr('class'))){n.parentNode.removeChild(n);}});utils.each(root.getNodesByTagName('p'),function(n){if(/\bloadpara\b/.test(n.getAttr('class'))){n.parentNode.removeChild(n);}});},bindEvents:{//插入粘贴板的图片，拖放插入图片
'ready':function ready(e){var me=this;if(window.FormData&&window.FileReader){domUtils.on(me.body,'paste drop',function(e){var hasImg=false,items;//获取粘贴板文件列表或者拖放文件列表
items=e.type=='paste'?getPasteImage(e):getDropImage(e);if(items){var len=items.length,file;while(len--){file=items[len];if(file.getAsFile)file=file.getAsFile();if(file&&file.size>0){sendAndInsertFile(file,me);hasImg=true;}}hasImg&&e.preventDefault();}});//取消拖放图片时出现的文字光标位置提示
domUtils.on(me.body,'dragover',function(e){if(e.dataTransfer.types[0]=='Files'){e.preventDefault();}});//设置loading的样式
utils.cssRule('loading','.loadingclass{display:inline-block;cursor:default;background: url(\''+this.options.themePath+this.options.theme+'/images/loading.gif\') no-repeat center center transparent;border:1px solid #cccccc;margin-left:1px;height: 22px;width: 22px;}\n'+'.loaderrorclass{display:inline-block;cursor:default;background: url(\''+this.options.themePath+this.options.theme+'/images/loaderror.png\') no-repeat center center transparent;border:1px solid #cccccc;margin-right:1px;height: 22px;width: 22px;'+'}',this.document);}}}};});// plugins/autosave.js
UE.plugin.register('autosave',function(){var me=this,//无限循环保护
lastSaveTime=new Date(),//最小保存间隔时间
MIN_TIME=20,//auto save key
saveKey=null;function save(editor){var saveData;if(new Date()-lastSaveTime<MIN_TIME){return;}if(!editor.hasContents()){//这里不能调用命令来删除， 会造成事件死循环
saveKey&&me.removePreferences(saveKey);return;}lastSaveTime=new Date();editor._saveFlag=null;saveData=me.body.innerHTML;if(editor.fireEvent("beforeautosave",{content:saveData})===false){return;}me.setPreferences(saveKey,saveData);editor.fireEvent("afterautosave",{content:saveData});}return{defaultOptions:{//默认间隔时间
saveInterval:500},bindEvents:{'ready':function ready(){var _suffix="-drafts-data",key=null;if(me.key){key=me.key+_suffix;}else{key=(me.container.parentNode.id||'ue-common')+_suffix;}//页面地址+编辑器ID 保持唯一
saveKey=(location.protocol+location.host+location.pathname).replace(/[.:\/]/g,'_')+key;},'contentchange':function contentchange(){if(!saveKey){return;}if(me._saveFlag){window.clearTimeout(me._saveFlag);}if(me.options.saveInterval>0){me._saveFlag=window.setTimeout(function(){save(me);},me.options.saveInterval);}else{save(me);}}},commands:{'clearlocaldata':{execCommand:function execCommand(cmd,name){if(saveKey&&me.getPreferences(saveKey)){me.removePreferences(saveKey);}},notNeedUndo:true,ignoreContentChange:true},'getlocaldata':{execCommand:function execCommand(cmd,name){return saveKey?me.getPreferences(saveKey)||'':'';},notNeedUndo:true,ignoreContentChange:true},'drafts':{execCommand:function execCommand(cmd,name){if(saveKey){me.body.innerHTML=me.getPreferences(saveKey)||'<p>'+domUtils.fillHtml+'</p>';me.focus(true);}},queryCommandState:function queryCommandState(){return saveKey?me.getPreferences(saveKey)===null?-1:0:-1;},notNeedUndo:true,ignoreContentChange:true}}};});// plugins/charts.js
UE.plugin.register('charts',function(){var me=this;return{bindEvents:{'chartserror':function chartserror(){}},commands:{'charts':{execCommand:function execCommand(cmd,data){var tableNode=domUtils.findParentByTagName(this.selection.getRange().startContainer,'table',true),flagText=[],config={};if(!tableNode){return false;}if(!validData(tableNode)){me.fireEvent("chartserror");return false;}config.title=data.title||'';config.subTitle=data.subTitle||'';config.xTitle=data.xTitle||'';config.yTitle=data.yTitle||'';config.suffix=data.suffix||'';config.tip=data.tip||'';//数据对齐方式
config.dataFormat=data.tableDataFormat||'';//图表类型
config.chartType=data.chartType||0;for(var key in config){if(!config.hasOwnProperty(key)){continue;}flagText.push(key+":"+config[key]);}tableNode.setAttribute("data-chart",flagText.join(";"));domUtils.addClass(tableNode,"edui-charts-table");},queryCommandState:function queryCommandState(cmd,name){var tableNode=domUtils.findParentByTagName(this.selection.getRange().startContainer,'table',true);return tableNode&&validData(tableNode)?0:-1;}}},inputRule:function inputRule(root){utils.each(root.getNodesByTagName('table'),function(tableNode){if(tableNode.getAttr("data-chart")!==undefined){tableNode.setAttr("style");}});},outputRule:function outputRule(root){utils.each(root.getNodesByTagName('table'),function(tableNode){if(tableNode.getAttr("data-chart")!==undefined){tableNode.setAttr("style","display: none;");}});}};function validData(table){var firstRows=null,cellCount=0;//行数不够
if(table.rows.length<2){return false;}//列数不够
if(table.rows[0].cells.length<2){return false;}//第一行所有cell必须是th
firstRows=table.rows[0].cells;cellCount=firstRows.length;for(var i=0,cell;cell=firstRows[i];i++){if(cell.tagName.toLowerCase()!=='th'){return false;}}for(var i=1,row;row=table.rows[i];i++){//每行单元格数不匹配， 返回false
if(row.cells.length!=cellCount){return false;}//第一列不是th也返回false
if(row.cells[0].tagName.toLowerCase()!=='th'){return false;}for(var j=1,cell;cell=row.cells[j];j++){var value=utils.trim(cell.innerText||cell.textContent||'');value=value.replace(new RegExp(UE.dom.domUtils.fillChar,'g'),'').replace(/^\s+|\s+$/g,'');//必须是数字
if(!/^\d*\.?\d+$/.test(value)){return false;}}}return true;}});// plugins/section.js
/**
 * 目录大纲支持插件
 * @file
 * @since 1.3.0
 */UE.plugin.register('section',function(){/* 目录节点对象 */function Section(option){this.tag='';this.level=-1,this.dom=null;this.nextSection=null;this.previousSection=null;this.parentSection=null;this.startAddress=[];this.endAddress=[];this.children=[];}function getSection(option){var section=new Section();return utils.extend(section,option);}function getNodeFromAddress(startAddress,root){var current=root;for(var i=0;i<startAddress.length;i++){if(!current.childNodes)return null;current=current.childNodes[startAddress[i]];}return current;}var me=this;return{bindMultiEvents:{type:'aftersetcontent afterscencerestore',handler:function handler(){me.fireEvent('updateSections');}},bindEvents:{/* 初始化、拖拽、粘贴、执行setcontent之后 */'ready':function ready(){me.fireEvent('updateSections');domUtils.on(me.body,'drop paste',function(){me.fireEvent('updateSections');});},/* 执行paragraph命令之后 */'afterexeccommand':function afterexeccommand(type,cmd){if(cmd=='paragraph'){me.fireEvent('updateSections');}},/* 部分键盘操作，触发updateSections事件 */'keyup':function keyup(type,e){var me=this,range=me.selection.getRange();if(range.collapsed!=true){me.fireEvent('updateSections');}else{var keyCode=e.keyCode||e.which;if(keyCode==13||keyCode==8||keyCode==46){me.fireEvent('updateSections');}}}},commands:{'getsections':{execCommand:function execCommand(cmd,levels){var levelFn=levels||['h1','h2','h3','h4','h5','h6'];for(var i=0;i<levelFn.length;i++){if(typeof levelFn[i]=='string'){levelFn[i]=function(fn){return function(node){return node.tagName==fn.toUpperCase();};}(levelFn[i]);}else if(typeof levelFn[i]!='function'){levelFn[i]=function(node){return null;};}}function getSectionLevel(node){for(var i=0;i<levelFn.length;i++){if(levelFn[i](node))return i;}return-1;}var me=this,Directory=getSection({'level':-1,'title':'root'}),previous=Directory;function traversal(node,Directory){var level,tmpSection=null,parent,child,children=node.childNodes;for(var i=0,len=children.length;i<len;i++){child=children[i];level=getSectionLevel(child);if(level>=0){var address=me.selection.getRange().selectNode(child).createAddress(true).startAddress,current=getSection({'tag':child.tagName,'title':child.innerText||child.textContent||'','level':level,'dom':child,'startAddress':utils.clone(address,[]),'endAddress':utils.clone(address,[]),'children':[]});previous.nextSection=current;current.previousSection=previous;parent=previous;while(level<=parent.level){parent=parent.parentSection;}current.parentSection=parent;parent.children.push(current);tmpSection=previous=current;}else{child.nodeType===1&&traversal(child,Directory);tmpSection&&tmpSection.endAddress[tmpSection.endAddress.length-1]++;}}}traversal(me.body,Directory);return Directory;},notNeedUndo:true},'movesection':{execCommand:function execCommand(cmd,sourceSection,targetSection,isAfter){var me=this,targetAddress,target;if(!sourceSection||!targetSection||targetSection.level==-1)return;targetAddress=isAfter?targetSection.endAddress:targetSection.startAddress;target=getNodeFromAddress(targetAddress,me.body);/* 判断目标地址是否被源章节包含 */if(!targetAddress||!target||isContainsAddress(sourceSection.startAddress,sourceSection.endAddress,targetAddress))return;var startNode=getNodeFromAddress(sourceSection.startAddress,me.body),endNode=getNodeFromAddress(sourceSection.endAddress,me.body),current,nextNode;if(isAfter){current=endNode;while(current&&!(domUtils.getPosition(startNode,current)&domUtils.POSITION_FOLLOWING)){nextNode=current.previousSibling;domUtils.insertAfter(target,current);if(current==startNode)break;current=nextNode;}}else{current=startNode;while(current&&!(domUtils.getPosition(current,endNode)&domUtils.POSITION_FOLLOWING)){nextNode=current.nextSibling;target.parentNode.insertBefore(current,target);if(current==endNode)break;current=nextNode;}}me.fireEvent('updateSections');/* 获取地址的包含关系 */function isContainsAddress(startAddress,endAddress,addressTarget){var isAfterStartAddress=false,isBeforeEndAddress=false;for(var i=0;i<startAddress.length;i++){if(i>=addressTarget.length)break;if(addressTarget[i]>startAddress[i]){isAfterStartAddress=true;break;}else if(addressTarget[i]<startAddress[i]){break;}}for(var i=0;i<endAddress.length;i++){if(i>=addressTarget.length)break;if(addressTarget[i]<startAddress[i]){isBeforeEndAddress=true;break;}else if(addressTarget[i]>startAddress[i]){break;}}return isAfterStartAddress&&isBeforeEndAddress;}}},'deletesection':{execCommand:function execCommand(cmd,section,keepChildren){var me=this;if(!section)return;function getNodeFromAddress(startAddress){var current=me.body;for(var i=0;i<startAddress.length;i++){if(!current.childNodes)return null;current=current.childNodes[startAddress[i]];}return current;}var startNode=getNodeFromAddress(section.startAddress),endNode=getNodeFromAddress(section.endAddress),current=startNode,nextNode;if(!keepChildren){while(current&&domUtils.inDoc(endNode,me.document)&&!(domUtils.getPosition(current,endNode)&domUtils.POSITION_FOLLOWING)){nextNode=current.nextSibling;domUtils.remove(current);current=nextNode;}}else{domUtils.remove(current);}me.fireEvent('updateSections');}},'selectsection':{execCommand:function execCommand(cmd,section){if(!section&&!section.dom)return false;var me=this,range=me.selection.getRange(),address={'startAddress':utils.clone(section.startAddress,[]),'endAddress':utils.clone(section.endAddress,[])};address.endAddress[address.endAddress.length-1]++;range.moveToAddress(address).select().scrollToView();return true;},notNeedUndo:true},'scrolltosection':{execCommand:function execCommand(cmd,section){if(!section&&!section.dom)return false;var me=this,range=me.selection.getRange(),address={'startAddress':section.startAddress,'endAddress':section.endAddress};address.endAddress[address.endAddress.length-1]++;range.moveToAddress(address).scrollToView();return true;},notNeedUndo:true}}};});// plugins/simpleupload.js
/**
 * @description
 * 简单上传:点击按钮,直接选择文件上传
 * @author Jinqn
 * @date 2014-03-31
 */UE.plugin.register('simpleupload',function(){var me=this,isLoaded=false,containerBtn;function initUploadBtn(){var w=containerBtn.offsetWidth||20,h=containerBtn.offsetHeight||20,btnIframe=document.createElement('iframe'),btnStyle='display:block;width:'+w+'px;height:'+h+'px;overflow:hidden;border:0;margin:0;padding:0;position:absolute;top:0;left:0;filter:alpha(opacity=0);-moz-opacity:0;-khtml-opacity: 0;opacity: 0;cursor:pointer;';domUtils.on(btnIframe,'load',function(){var timestrap=(+new Date()).toString(36),wrapper,btnIframeDoc,btnIframeBody;btnIframeDoc=btnIframe.contentDocument||btnIframe.contentWindow.document;btnIframeBody=btnIframeDoc.body;wrapper=btnIframeDoc.createElement('div');wrapper.innerHTML='<form id="edui_form_'+timestrap+'" target="edui_iframe_'+timestrap+'" method="POST" enctype="multipart/form-data" action="'+me.getOpt('serverUrl')+'" '+'style="'+btnStyle+'">'+'<input id="edui_input_'+timestrap+'" type="file" accept="image/*" name="'+me.options.imageFieldName+'" '+'style="'+btnStyle+'">'+'</form>'+'<iframe id="edui_iframe_'+timestrap+'" name="edui_iframe_'+timestrap+'" style="display:none;width:0;height:0;border:0;margin:0;padding:0;position:absolute;"></iframe>';wrapper.className='edui-'+me.options.theme;wrapper.id=me.ui.id+'_iframeupload';btnIframeBody.style.cssText=btnStyle;btnIframeBody.style.width=w+'px';btnIframeBody.style.height=h+'px';btnIframeBody.appendChild(wrapper);if(btnIframeBody.parentNode){btnIframeBody.parentNode.style.width=w+'px';btnIframeBody.parentNode.style.height=w+'px';}var form=btnIframeDoc.getElementById('edui_form_'+timestrap);var input=btnIframeDoc.getElementById('edui_input_'+timestrap);var iframe=btnIframeDoc.getElementById('edui_iframe_'+timestrap);/**
           * 2017-09-07 改掉了ueditor源码，将本身的单文件上传的方法改为ajax上传，主要目的是为了解决跨域的问题
           * @author Guoqing
           */domUtils.on(input,'change',function(){if(!input.value)return;var loadingId='loading_'+(+new Date()).toString(36);var imageActionUrl=me.getActionUrl(me.getOpt('imageActionName'));var allowFiles=me.getOpt('imageAllowFiles');me.focus();me.execCommand('inserthtml','<img class="loadingclass" id="'+loadingId+'" src="'+me.options.themePath+me.options.theme+'/images/spacer.gif" title="'+(me.getLang('simpleupload.loading')||'')+'" >');/!* 判断后端配置是否没有加载成功 *!/;if(!me.getOpt('imageActionName')){errorHandler(me.getLang('autoupload.errorLoadConfig'));return;}// 判断文件格式是否错误
var filename=input.value,fileext=filename?filename.substr(filename.lastIndexOf('.')):'';if(!fileext||allowFiles&&(allowFiles.join('')+'.').indexOf(fileext.toLowerCase()+'.')==-1){showErrorLoader(me.getLang('simpleupload.exceedTypeError'));return;}var params=utils.serializeParam(me.queryCommandValue('serverparam'))||'';var action=utils.formatUrl(imageActionUrl+(imageActionUrl.indexOf('?')==-1?'?':'&')+params);var formData=new FormData();formData.append("upfile",form[0].files[0]);$.ajax({url:action,type:'POST',cache:false,data:formData,processData:false,contentType:false,success:function success(data){data=JSON.parse(data);var link,loader,body=(iframe.contentDocument||iframe.contentWindow.document).body,result=body.innerText||body.textContent||'';link=me.options.imageUrlPrefix+data.url;if(data.state=='SUCCESS'&&data.url){loader=me.document.getElementById(loadingId);loader.setAttribute('src',link);loader.setAttribute('_src',link);loader.setAttribute('title',data.title||'');loader.setAttribute('alt',data.original||'');loader.removeAttribute('id');domUtils.removeClasses(loader,'loadingclass');}else{showErrorLoader&&showErrorLoader(data.state);}form.reset();}});function showErrorLoader(title){if(loadingId){var loader=me.document.getElementById(loadingId);loader&&domUtils.remove(loader);me.fireEvent('showmessage',{'id':loadingId,'content':title,'type':'error','timeout':4000});}}});/*domUtils.on(input, 'change', function(){

                if(!input.value) return;
                var loadingId = 'loading_' + (+new Date()).toString(36);
                var params = utils.serializeParam(me.queryCommandValue('serverparam')) || '';

                var imageActionUrl = me.getActionUrl(me.getOpt('imageActionName'));
                var allowFiles = me.getOpt('imageAllowFiles');

                me.focus();
                me.execCommand('inserthtml', '<img class="loadingclass" id="' + loadingId + '" src="' + me.options.themePath + me.options.theme +'/images/spacer.gif" title="' + (me.getLang('simpleupload.loading') || '') + '" >');

                function callback(){
                    try{
                        var link, json, loader,
                            body = (iframe.contentDocument || iframe.contentWindow.document).body,
                            result = body.innerText || body.textContent || '';
                        json = (new Function("return " + result))();
                        link = me.options.imageUrlPrefix + json.url;

                        if(json.state == 'SUCCESS' && json.url) {
                            loader = me.document.getElementById(loadingId);
                            loader.setAttribute('src', link);
                            loader.setAttribute('_src', link);
                            loader.setAttribute('title', json.title || '');
                            loader.setAttribute('alt', json.original || '');
                            loader.removeAttribute('id');
                            domUtils.removeClasses(loader, 'loadingclass');
                        } else {
                            showErrorLoader && showErrorLoader(json.state);
                        }
                    }catch(er){
                        showErrorLoader && showErrorLoader(me.getLang('simpleupload.loadError'));
                    }
                    form.reset();
                    domUtils.un(iframe, 'load', callback);
                }
                function showErrorLoader(title){
                    if(loadingId) {
                        var loader = me.document.getElementById(loadingId);
                        loader && domUtils.remove(loader);
                        me.fireEvent('showmessage', {
                            'id': loadingId,
                            'content': title,
                            'type': 'error',
                            'timeout': 4000
                        });
                    }
                }

                /!* 判断后端配置是否没有加载成功 *!/
                if (!me.getOpt('imageActionName')) {
                    errorHandler(me.getLang('autoupload.errorLoadConfig'));
                    return;
                }
                // 判断文件格式是否错误
                var filename = input.value,
                    fileext = filename ? filename.substr(filename.lastIndexOf('.')):'';
                if (!fileext || (allowFiles && (allowFiles.join('') + '.').indexOf(fileext.toLowerCase() + '.') == -1)) {
                    showErrorLoader(me.getLang('simpleupload.exceedTypeError'));
                    return;
                }

                domUtils.on(iframe, 'load', callback);
                form.action = utils.formatUrl(imageActionUrl + (imageActionUrl.indexOf('?') == -1 ? '?':'&') + params);
                form.submit();
            });*/var stateTimer;me.addListener('selectionchange',function(){clearTimeout(stateTimer);stateTimer=setTimeout(function(){var state=me.queryCommandState('simpleupload');if(state==-1){input.disabled='disabled';}else{input.disabled=false;}},400);});isLoaded=true;});btnIframe.style.cssText=btnStyle;containerBtn.appendChild(btnIframe);}return{bindEvents:{'ready':function ready(){//设置loading的样式
utils.cssRule('loading','.loadingclass{display:inline-block;cursor:default;background: url(\''+this.options.themePath+this.options.theme+'/images/loading.gif\') no-repeat center center transparent;border:1px solid #cccccc;margin-right:1px;height: 22px;width: 22px;}\n'+'.loaderrorclass{display:inline-block;cursor:default;background: url(\''+this.options.themePath+this.options.theme+'/images/loaderror.png\') no-repeat center center transparent;border:1px solid #cccccc;margin-right:1px;height: 22px;width: 22px;'+'}',this.document);},/* 初始化简单上传按钮 */'simpleuploadbtnready':function simpleuploadbtnready(type,container){containerBtn=container;me.afterConfigReady(initUploadBtn);}},outputRule:function outputRule(root){utils.each(root.getNodesByTagName('img'),function(n){if(/\b(loaderrorclass)|(bloaderrorclass)\b/.test(n.getAttr('class'))){n.parentNode.removeChild(n);}});},commands:{'simpleupload':{queryCommandState:function queryCommandState(){return isLoaded?0:-1;}}}};});// plugins/serverparam.js
/**
 * 服务器提交的额外参数列表设置插件
 * @file
 * @since 1.2.6.1
 */UE.plugin.register('serverparam',function(){var me=this,serverParam={};return{commands:{/**
             * 修改服务器提交的额外参数列表,清除所有项
             * @command serverparam
             * @method execCommand
             * @param { String } cmd 命令字符串
             * @example
             * ```javascript
             * editor.execCommand('serverparam');
             * editor.queryCommandValue('serverparam'); //返回空
             * ```
             *//**
             * 修改服务器提交的额外参数列表,删除指定项
             * @command serverparam
             * @method execCommand
             * @param { String } cmd 命令字符串
             * @param { String } key 要清除的属性
             * @example
             * ```javascript
             * editor.execCommand('serverparam', 'name'); //删除属性name
             * ```
             *//**
             * 修改服务器提交的额外参数列表,使用键值添加项
             * @command serverparam
             * @method execCommand
             * @param { String } cmd 命令字符串
             * @param { String } key 要添加的属性
             * @param { String } value 要添加属性的值
             * @example
             * ```javascript
             * editor.execCommand('serverparam', 'name', 'hello');
             * editor.queryCommandValue('serverparam'); //返回对象 {'name': 'hello'}
             * ```
             *//**
             * 修改服务器提交的额外参数列表,传入键值对对象添加多项
             * @command serverparam
             * @method execCommand
             * @param { String } cmd 命令字符串
             * @param { Object } key 传入的键值对对象
             * @example
             * ```javascript
             * editor.execCommand('serverparam', {'name': 'hello'});
             * editor.queryCommandValue('serverparam'); //返回对象 {'name': 'hello'}
             * ```
             *//**
             * 修改服务器提交的额外参数列表,使用自定义函数添加多项
             * @command serverparam
             * @method execCommand
             * @param { String } cmd 命令字符串
             * @param { Function } key 自定义获取参数的函数
             * @example
             * ```javascript
             * editor.execCommand('serverparam', function(editor){
             *     return {'key': 'value'};
             * });
             * editor.queryCommandValue('serverparam'); //返回对象 {'key': 'value'}
             * ```
             *//**
             * 获取服务器提交的额外参数列表
             * @command serverparam
             * @method queryCommandValue
             * @param { String } cmd 命令字符串
             * @example
             * ```javascript
             * editor.queryCommandValue( 'serverparam' ); //返回对象 {'key': 'value'}
             * ```
             */'serverparam':{execCommand:function execCommand(cmd,key,value){if(key===undefined||key===null){//不传参数,清空列表
serverParam={};}else if(utils.isString(key)){//传入键值
if(value===undefined||value===null){delete serverParam[key];}else{serverParam[key]=value;}}else if(utils.isObject(key)){//传入对象,覆盖列表项
utils.extend(serverParam,key,true);}else if(utils.isFunction(key)){//传入函数,添加列表项
utils.extend(serverParam,key(),true);}},queryCommandValue:function queryCommandValue(){return serverParam||{};}}}};});// plugins/insertfile.js
/**
 * 插入附件
 */UE.plugin.register('insertfile',function(){var me=this;function getFileIcon(url){var ext=url.substr(url.lastIndexOf('.')+1).toLowerCase(),maps={"rar":"icon_rar.gif","zip":"icon_rar.gif","tar":"icon_rar.gif","gz":"icon_rar.gif","bz2":"icon_rar.gif","doc":"icon_doc.gif","docx":"icon_doc.gif","pdf":"icon_pdf.gif","mp3":"icon_mp3.gif","xls":"icon_xls.gif","chm":"icon_chm.gif","ppt":"icon_ppt.gif","pptx":"icon_ppt.gif","avi":"icon_mv.gif","rmvb":"icon_mv.gif","wmv":"icon_mv.gif","flv":"icon_mv.gif","swf":"icon_mv.gif","rm":"icon_mv.gif","exe":"icon_exe.gif","psd":"icon_psd.gif","txt":"icon_txt.gif","jpg":"icon_jpg.gif","png":"icon_jpg.gif","jpeg":"icon_jpg.gif","gif":"icon_jpg.gif","ico":"icon_jpg.gif","bmp":"icon_jpg.gif"};return maps[ext]?maps[ext]:maps['txt'];}return{commands:{'insertfile':{execCommand:function execCommand(command,filelist){filelist=utils.isArray(filelist)?filelist:[filelist];var i,item,icon,title,html='',URL=me.getOpt('UEDITOR_HOME_URL'),iconDir=URL+(URL.substr(URL.length-1)=='/'?'':'/')+'dialogs/attachment/fileTypeImages/';for(i=0;i<filelist.length;i++){item=filelist[i];icon=iconDir+getFileIcon(item.url);title=item.title||item.url.substr(item.url.lastIndexOf('/')+1);html+='<p style="line-height: 16px;">'+'<img style="vertical-align: middle; margin-right: 2px;" src="'+icon+'" _src="'+icon+'" />'+'<a style="font-size:12px; color:#0066cc;" href="'+item.url+'" title="'+title+'">'+title+'</a>'+'</p>';}me.execCommand('insertHtml',html);}}}};});// plugins/xssFilter.js
/**
 * @file xssFilter.js
 * @desc xss过滤器
 * @author robbenmu
 */UE.plugins.xssFilter=function(){var config=UEDITOR_CONFIG;var whitList=config.whitList;function filter(node){var tagName=node.tagName;var attrs=node.attrs;if(!whitList.hasOwnProperty(tagName)){node.parentNode.removeChild(node);return false;}UE.utils.each(attrs,function(val,key){if(whitList[tagName].indexOf(key)===-1){node.setAttr(key);}});}// 添加inserthtml\paste等操作用的过滤规则
if(whitList&&config.xssFilterRules){this.options.filterRules=function(){var result={};UE.utils.each(whitList,function(val,key){result[key]=function(node){return filter(node);};});return result;}();}var tagList=[];UE.utils.each(whitList,function(val,key){tagList.push(key);});// 添加input过滤规则
//
if(whitList&&config.inputXssFilter){this.addInputRule(function(root){root.traversal(function(node){if(node.type!=='element'){return false;}filter(node);});});}// 添加output过滤规则
//
if(whitList&&config.outputXssFilter){this.addOutputRule(function(root){root.traversal(function(node){if(node.type!=='element'){return false;}filter(node);});});}};// ui/ui.js
var baidu=baidu||{};baidu.editor=baidu.editor||{};UE.ui=baidu.editor.ui={};// ui/uiutils.js
(function(){var browser=baidu.editor.browser,domUtils=baidu.editor.dom.domUtils;var magic='$EDITORUI';var root=window[magic]={};var uidMagic='ID'+magic;var uidCount=0;var uiUtils=baidu.editor.ui.uiUtils={uid:function uid(obj){return obj?obj[uidMagic]||(obj[uidMagic]=++uidCount):++uidCount;},hook:function hook(fn,callback){var _dg;if(fn&&fn._callbacks){_dg=fn;}else{_dg=function dg(){var q;if(fn){q=fn.apply(this,arguments);}var callbacks=_dg._callbacks;var k=callbacks.length;while(k--){var r=callbacks[k].apply(this,arguments);if(q===undefined){q=r;}}return q;};_dg._callbacks=[];}_dg._callbacks.push(callback);return _dg;},createElementByHtml:function createElementByHtml(html){var el=document.createElement('div');el.innerHTML=html;el=el.firstChild;el.parentNode.removeChild(el);return el;},getViewportElement:function getViewportElement(){return browser.ie&&browser.quirks?document.body:document.documentElement;},getClientRect:function getClientRect(element){var bcr;//trace  IE6下在控制编辑器显隐时可能会报错，catch一下
try{bcr=element.getBoundingClientRect();}catch(e){bcr={left:0,top:0,height:0,width:0};}var rect={left:Math.round(bcr.left),top:Math.round(bcr.top),height:Math.round(bcr.bottom-bcr.top),width:Math.round(bcr.right-bcr.left)};var doc;while((doc=element.ownerDocument)!==document&&(element=domUtils.getWindow(doc).frameElement)){bcr=element.getBoundingClientRect();rect.left+=bcr.left;rect.top+=bcr.top;}rect.bottom=rect.top+rect.height;rect.right=rect.left+rect.width;return rect;},getViewportRect:function getViewportRect(){var viewportEl=uiUtils.getViewportElement();var width=(window.innerWidth||viewportEl.clientWidth)|0;var height=(window.innerHeight||viewportEl.clientHeight)|0;return{left:0,top:0,height:height,width:width,bottom:height,right:width};},setViewportOffset:function setViewportOffset(element,offset){var rect;var fixedLayer=uiUtils.getFixedLayer();if(element.parentNode===fixedLayer){element.style.left=offset.left+'px';element.style.top=offset.top+'px';}else{domUtils.setViewportOffset(element,offset);}},getEventOffset:function getEventOffset(evt){var el=evt.target||evt.srcElement;var rect=uiUtils.getClientRect(el);var offset=uiUtils.getViewportOffsetByEvent(evt);return{left:offset.left-rect.left,top:offset.top-rect.top};},getViewportOffsetByEvent:function getViewportOffsetByEvent(evt){var el=evt.target||evt.srcElement;var frameEl=domUtils.getWindow(el).frameElement;var offset={left:evt.clientX,top:evt.clientY};if(frameEl&&el.ownerDocument!==document){var rect=uiUtils.getClientRect(frameEl);offset.left+=rect.left;offset.top+=rect.top;}return offset;},setGlobal:function setGlobal(id,obj){root[id]=obj;return magic+'["'+id+'"]';},unsetGlobal:function unsetGlobal(id){delete root[id];},copyAttributes:function copyAttributes(tgt,src){var attributes=src.attributes;var k=attributes.length;while(k--){var attrNode=attributes[k];if(attrNode.nodeName!='style'&&attrNode.nodeName!='class'&&(!browser.ie||attrNode.specified)){tgt.setAttribute(attrNode.nodeName,attrNode.nodeValue);}}if(src.className){domUtils.addClass(tgt,src.className);}if(src.style.cssText){tgt.style.cssText+=';'+src.style.cssText;}},removeStyle:function removeStyle(el,styleName){if(el.style.removeProperty){el.style.removeProperty(styleName);}else if(el.style.removeAttribute){el.style.removeAttribute(styleName);}else throw'';},contains:function contains(elA,elB){return elA&&elB&&(elA===elB?false:elA.contains?elA.contains(elB):elA.compareDocumentPosition(elB)&16);},startDrag:function startDrag(evt,callbacks,doc){var doc=doc||document;var startX=evt.clientX;var startY=evt.clientY;function handleMouseMove(evt){var x=evt.clientX-startX;var y=evt.clientY-startY;callbacks.ondragmove(x,y,evt);if(evt.stopPropagation){evt.stopPropagation();}else{evt.cancelBubble=true;}}if(doc.addEventListener){var handleMouseUp=function handleMouseUp(evt){doc.removeEventListener('mousemove',handleMouseMove,true);doc.removeEventListener('mouseup',handleMouseUp,true);window.removeEventListener('mouseup',handleMouseUp,true);callbacks.ondragstop();};doc.addEventListener('mousemove',handleMouseMove,true);doc.addEventListener('mouseup',handleMouseUp,true);window.addEventListener('mouseup',handleMouseUp,true);evt.preventDefault();}else{var releaseCaptrue=function releaseCaptrue(){elm.releaseCapture();elm.detachEvent('onmousemove',handleMouseMove);elm.detachEvent('onmouseup',releaseCaptrue);elm.detachEvent('onlosecaptrue',releaseCaptrue);callbacks.ondragstop();};var elm=evt.srcElement;elm.setCapture();elm.attachEvent('onmousemove',handleMouseMove);elm.attachEvent('onmouseup',releaseCaptrue);elm.attachEvent('onlosecaptrue',releaseCaptrue);evt.returnValue=false;}callbacks.ondragstart();},getFixedLayer:function getFixedLayer(){var layer=document.getElementById('edui_fixedlayer');if(layer==null){layer=document.createElement('div');layer.id='edui_fixedlayer';document.body.appendChild(layer);if(browser.ie&&browser.version<=8){layer.style.position='absolute';bindFixedLayer();setTimeout(updateFixedOffset);}else{layer.style.position='fixed';}layer.style.left='0';layer.style.top='0';layer.style.width='0';layer.style.height='0';}return layer;},makeUnselectable:function makeUnselectable(element){if(browser.opera||browser.ie&&browser.version<9){element.unselectable='on';if(element.hasChildNodes()){for(var i=0;i<element.childNodes.length;i++){if(element.childNodes[i].nodeType==1){uiUtils.makeUnselectable(element.childNodes[i]);}}}}else{if(element.style.MozUserSelect!==undefined){element.style.MozUserSelect='none';}else if(element.style.WebkitUserSelect!==undefined){element.style.WebkitUserSelect='none';}else if(element.style.KhtmlUserSelect!==undefined){element.style.KhtmlUserSelect='none';}}}};function updateFixedOffset(){var layer=document.getElementById('edui_fixedlayer');uiUtils.setViewportOffset(layer,{left:0,top:0});//        layer.style.display = 'none';
//        layer.style.display = 'block';
//#trace: 1354
//        setTimeout(updateFixedOffset);
}function bindFixedLayer(adjOffset){domUtils.on(window,'scroll',updateFixedOffset);domUtils.on(window,'resize',baidu.editor.utils.defer(updateFixedOffset,0,true));}})();// ui/uibase.js
(function(){var utils=baidu.editor.utils,uiUtils=baidu.editor.ui.uiUtils,EventBase=baidu.editor.EventBase,UIBase=baidu.editor.ui.UIBase=function(){};UIBase.prototype={className:'',uiName:'',initOptions:function initOptions(options){var me=this;for(var k in options){me[k]=options[k];}this.id=this.id||'edui'+uiUtils.uid();},initUIBase:function initUIBase(){this._globalKey=utils.unhtml(uiUtils.setGlobal(this.id,this));},render:function render(holder){var html=this.renderHtml();var el=uiUtils.createElementByHtml(html);//by xuheng 给每个node添加class
var list=domUtils.getElementsByTagName(el,"*");var theme="edui-"+(this.theme||this.editor.options.theme);var layer=document.getElementById('edui_fixedlayer');for(var i=0,node;node=list[i++];){domUtils.addClass(node,theme);}domUtils.addClass(el,theme);if(layer){layer.className="";domUtils.addClass(layer,theme);}var seatEl=this.getDom();if(seatEl!=null){seatEl.parentNode.replaceChild(el,seatEl);uiUtils.copyAttributes(el,seatEl);}else{if(typeof holder=='string'){holder=document.getElementById(holder);}holder=holder||uiUtils.getFixedLayer();domUtils.addClass(holder,theme);holder.appendChild(el);}this.postRender();},getDom:function getDom(name){if(!name){return document.getElementById(this.id);}else{return document.getElementById(this.id+'_'+name);}},postRender:function postRender(){this.fireEvent('postrender');},getHtmlTpl:function getHtmlTpl(){return'';},formatHtml:function formatHtml(tpl){var prefix='edui-'+this.uiName;return tpl.replace(/##/g,this.id).replace(/%%-/g,this.uiName?prefix+'-':'').replace(/%%/g,(this.uiName?prefix:'')+' '+this.className).replace(/\$\$/g,this._globalKey);},renderHtml:function renderHtml(){return this.formatHtml(this.getHtmlTpl());},dispose:function dispose(){var box=this.getDom();if(box)baidu.editor.dom.domUtils.remove(box);uiUtils.unsetGlobal(this.id);}};utils.inherits(UIBase,EventBase);})();// ui/separator.js
(function(){var utils=baidu.editor.utils,UIBase=baidu.editor.ui.UIBase,Separator=baidu.editor.ui.Separator=function(options){this.initOptions(options);this.initSeparator();};Separator.prototype={uiName:'separator',initSeparator:function initSeparator(){this.initUIBase();},getHtmlTpl:function getHtmlTpl(){return'<div id="##" class="edui-box %%"></div>';}};utils.inherits(Separator,UIBase);})();// ui/mask.js
///import core
///import uicore
(function(){var utils=baidu.editor.utils,domUtils=baidu.editor.dom.domUtils,UIBase=baidu.editor.ui.UIBase,uiUtils=baidu.editor.ui.uiUtils;var Mask=baidu.editor.ui.Mask=function(options){this.initOptions(options);this.initUIBase();};Mask.prototype={getHtmlTpl:function getHtmlTpl(){return'<div id="##" class="edui-mask %%" onclick="return $$._onClick(event, this);" onmousedown="return $$._onMouseDown(event, this);"></div>';},postRender:function postRender(){var me=this;domUtils.on(window,'resize',function(){setTimeout(function(){if(!me.isHidden()){me._fill();}});});},show:function show(zIndex){this._fill();this.getDom().style.display='';this.getDom().style.zIndex=zIndex;},hide:function hide(){this.getDom().style.display='none';this.getDom().style.zIndex='';},isHidden:function isHidden(){return this.getDom().style.display=='none';},_onMouseDown:function _onMouseDown(){return false;},_onClick:function _onClick(e,target){this.fireEvent('click',e,target);},_fill:function _fill(){var el=this.getDom();var vpRect=uiUtils.getViewportRect();el.style.width=vpRect.width+'px';el.style.height=vpRect.height+'px';}};utils.inherits(Mask,UIBase);})();// ui/popup.js
///import core
///import uicore
(function(){var utils=baidu.editor.utils,uiUtils=baidu.editor.ui.uiUtils,domUtils=baidu.editor.dom.domUtils,UIBase=baidu.editor.ui.UIBase,Popup=baidu.editor.ui.Popup=function(options){this.initOptions(options);this.initPopup();};var allPopups=[];function closeAllPopup(evt,el){for(var i=0;i<allPopups.length;i++){var pop=allPopups[i];if(!pop.isHidden()){if(pop.queryAutoHide(el)!==false){if(evt&&/scroll/ig.test(evt.type)&&pop.className=="edui-wordpastepop")return;pop.hide();}}}if(allPopups.length)pop.editor.fireEvent("afterhidepop");}Popup.postHide=closeAllPopup;var ANCHOR_CLASSES=['edui-anchor-topleft','edui-anchor-topright','edui-anchor-bottomleft','edui-anchor-bottomright'];Popup.prototype={SHADOW_RADIUS:5,content:null,_hidden:false,autoRender:true,canSideLeft:true,canSideUp:true,initPopup:function initPopup(){this.initUIBase();allPopups.push(this);},getHtmlTpl:function getHtmlTpl(){return'<div id="##" class="edui-popup %%" onmousedown="return false;">'+' <div id="##_body" class="edui-popup-body">'+' <iframe style="position:absolute;z-index:-1;left:0;top:0;background-color: transparent;" frameborder="0" width="100%" height="100%" src="about:blank"></iframe>'+' <div class="edui-shadow"></div>'+' <div id="##_content" class="edui-popup-content">'+this.getContentHtmlTpl()+'  </div>'+' </div>'+'</div>';},getContentHtmlTpl:function getContentHtmlTpl(){if(this.content){if(typeof this.content=='string'){return this.content;}return this.content.renderHtml();}else{return'';}},_UIBase_postRender:UIBase.prototype.postRender,postRender:function postRender(){if(this.content instanceof UIBase){this.content.postRender();}//捕获鼠标滚轮
if(this.captureWheel&&!this.captured){this.captured=true;var winHeight=(document.documentElement.clientHeight||document.body.clientHeight)-80,_height=this.getDom().offsetHeight,_top=uiUtils.getClientRect(this.combox.getDom()).top,content=this.getDom('content'),ifr=this.getDom('body').getElementsByTagName('iframe'),me=this;ifr.length&&(ifr=ifr[0]);while(_top+_height>winHeight){_height-=30;}content.style.height=_height+'px';//同步更改iframe高度
ifr&&(ifr.style.height=_height+'px');//阻止在combox上的鼠标滚轮事件, 防止用户的正常操作被误解
if(window.XMLHttpRequest){domUtils.on(content,'onmousewheel'in document.body?'mousewheel':'DOMMouseScroll',function(e){if(e.preventDefault){e.preventDefault();}else{e.returnValue=false;}if(e.wheelDelta){content.scrollTop-=e.wheelDelta/120*60;}else{content.scrollTop-=e.detail/-3*60;}});}else{//ie6
domUtils.on(this.getDom(),'mousewheel',function(e){e.returnValue=false;me.getDom('content').scrollTop-=e.wheelDelta/120*60;});}}this.fireEvent('postRenderAfter');this.hide(true);this._UIBase_postRender();},_doAutoRender:function _doAutoRender(){if(!this.getDom()&&this.autoRender){this.render();}},mesureSize:function mesureSize(){var box=this.getDom('content');return uiUtils.getClientRect(box);},fitSize:function fitSize(){if(this.captureWheel&&this.sized){return this.__size;}this.sized=true;var popBodyEl=this.getDom('body');popBodyEl.style.width='';popBodyEl.style.height='';var size=this.mesureSize();if(this.captureWheel){popBodyEl.style.width=-(-20-size.width)+'px';var height=parseInt(this.getDom('content').style.height,10);!window.isNaN(height)&&(size.height=height);}else{popBodyEl.style.width=size.width+'px';}popBodyEl.style.height=size.height+'px';this.__size=size;this.captureWheel&&(this.getDom('content').style.overflow='auto');return size;},showAnchor:function showAnchor(element,hoz){this.showAnchorRect(uiUtils.getClientRect(element),hoz);},showAnchorRect:function showAnchorRect(rect,hoz,adj){this._doAutoRender();var vpRect=uiUtils.getViewportRect();this.getDom().style.visibility='hidden';this._show();var popSize=this.fitSize();var sideLeft,sideUp,left,top;if(hoz){sideLeft=this.canSideLeft&&rect.right+popSize.width>vpRect.right&&rect.left>popSize.width;sideUp=this.canSideUp&&rect.top+popSize.height>vpRect.bottom&&rect.bottom>popSize.height;left=sideLeft?rect.left-popSize.width:rect.right;top=sideUp?rect.bottom-popSize.height:rect.top;}else{sideLeft=this.canSideLeft&&rect.right+popSize.width>vpRect.right&&rect.left>popSize.width;sideUp=this.canSideUp&&rect.top+popSize.height>vpRect.bottom&&rect.bottom>popSize.height;left=sideLeft?rect.right-popSize.width:rect.left;top=sideUp?rect.top-popSize.height:rect.bottom;}var popEl=this.getDom();uiUtils.setViewportOffset(popEl,{left:left,top:top});domUtils.removeClasses(popEl,ANCHOR_CLASSES);popEl.className+=' '+ANCHOR_CLASSES[(sideUp?1:0)*2+(sideLeft?1:0)];if(this.editor){popEl.style.zIndex=this.editor.container.style.zIndex*1+10;baidu.editor.ui.uiUtils.getFixedLayer().style.zIndex=popEl.style.zIndex-1;}this.getDom().style.visibility='visible';},showAt:function showAt(offset){var left=offset.left;var top=offset.top;var rect={left:left,top:top,right:left,bottom:top,height:0,width:0};this.showAnchorRect(rect,false,true);},_show:function _show(){if(this._hidden){var box=this.getDom();box.style.display='';this._hidden=false;//                if (box.setActive) {
//                    box.setActive();
//                }
this.fireEvent('show');}},isHidden:function isHidden(){return this._hidden;},show:function show(){this._doAutoRender();this._show();},hide:function hide(notNofity){if(!this._hidden&&this.getDom()){this.getDom().style.display='none';this._hidden=true;if(!notNofity){this.fireEvent('hide');}}},queryAutoHide:function queryAutoHide(el){return!el||!uiUtils.contains(this.getDom(),el);}};utils.inherits(Popup,UIBase);domUtils.on(document,'mousedown',function(evt){var el=evt.target||evt.srcElement;closeAllPopup(evt,el);});domUtils.on(window,'scroll',function(evt,el){closeAllPopup(evt,el);});})();// ui/colorpicker.js
///import core
///import uicore
(function(){var utils=baidu.editor.utils,UIBase=baidu.editor.ui.UIBase,ColorPicker=baidu.editor.ui.ColorPicker=function(options){this.initOptions(options);this.noColorText=this.noColorText||this.editor.getLang("clearColor");this.initUIBase();};ColorPicker.prototype={getHtmlTpl:function getHtmlTpl(){return genColorPicker(this.noColorText,this.editor);},_onTableClick:function _onTableClick(evt){var tgt=evt.target||evt.srcElement;var color=tgt.getAttribute('data-color');if(color){this.fireEvent('pickcolor',color);}},_onTableOver:function _onTableOver(evt){var tgt=evt.target||evt.srcElement;var color=tgt.getAttribute('data-color');if(color){this.getDom('preview').style.backgroundColor=color;}},_onTableOut:function _onTableOut(){this.getDom('preview').style.backgroundColor='';},_onPickNoColor:function _onPickNoColor(){this.fireEvent('picknocolor');}};utils.inherits(ColorPicker,UIBase);var COLORS=('ffffff,000000,eeece1,1f497d,4f81bd,c0504d,9bbb59,8064a2,4bacc6,f79646,'+'f2f2f2,7f7f7f,ddd9c3,c6d9f0,dbe5f1,f2dcdb,ebf1dd,e5e0ec,dbeef3,fdeada,'+'d8d8d8,595959,c4bd97,8db3e2,b8cce4,e5b9b7,d7e3bc,ccc1d9,b7dde8,fbd5b5,'+'bfbfbf,3f3f3f,938953,548dd4,95b3d7,d99694,c3d69b,b2a2c7,92cddc,fac08f,'+'a5a5a5,262626,494429,17365d,366092,953734,76923c,5f497a,31859b,e36c09,'+'7f7f7f,0c0c0c,1d1b10,0f243e,244061,632423,4f6128,3f3151,205867,974806,'+'c00000,ff0000,ffc000,ffff00,92d050,00b050,00b0f0,0070c0,002060,7030a0,').split(',');function genColorPicker(noColorText,editor){var html='<div id="##" class="edui-colorpicker %%">'+'<div class="edui-colorpicker-topbar edui-clearfix">'+'<div unselectable="on" id="##_preview" class="edui-colorpicker-preview"></div>'+'<div unselectable="on" class="edui-colorpicker-nocolor" onclick="$$._onPickNoColor(event, this);">'+noColorText+'</div>'+'</div>'+'<table  class="edui-box" style="border-collapse: collapse;" onmouseover="$$._onTableOver(event, this);" onmouseout="$$._onTableOut(event, this);" onclick="return $$._onTableClick(event, this);" cellspacing="0" cellpadding="0">'+'<tr style="border-bottom: 1px solid #ddd;font-size: 13px;line-height: 25px;color:#39C;padding-top: 2px"><td colspan="10">'+editor.getLang("themeColor")+'</td> </tr>'+'<tr class="edui-colorpicker-tablefirstrow" >';for(var i=0;i<COLORS.length;i++){if(i&&i%10===0){html+='</tr>'+(i==60?'<tr style="border-bottom: 1px solid #ddd;font-size: 13px;line-height: 25px;color:#39C;"><td colspan="10">'+editor.getLang("standardColor")+'</td></tr>':'')+'<tr'+(i==60?' class="edui-colorpicker-tablefirstrow"':'')+'>';}html+=i<70?'<td style="padding: 0 2px;"><a hidefocus title="'+COLORS[i]+'" onclick="return false;" href="javascript:" unselectable="on" class="edui-box edui-colorpicker-colorcell"'+' data-color="#'+COLORS[i]+'"'+' style="background-color:#'+COLORS[i]+';border:solid #ccc;'+(i<10||i>=60?'border-width:1px;':i>=10&&i<20?'border-width:1px 1px 0 1px;':'border-width:0 1px 0 1px;')+'"'+'></a></td>':'';}html+='</tr></table></div>';return html;}})();// ui/tablepicker.js
///import core
///import uicore
(function(){var utils=baidu.editor.utils,uiUtils=baidu.editor.ui.uiUtils,UIBase=baidu.editor.ui.UIBase;var TablePicker=baidu.editor.ui.TablePicker=function(options){this.initOptions(options);this.initTablePicker();};TablePicker.prototype={defaultNumRows:10,defaultNumCols:10,maxNumRows:20,maxNumCols:20,numRows:10,numCols:10,lengthOfCellSide:22,initTablePicker:function initTablePicker(){this.initUIBase();},getHtmlTpl:function getHtmlTpl(){var me=this;return'<div id="##" class="edui-tablepicker %%">'+'<div class="edui-tablepicker-body">'+'<div class="edui-infoarea">'+'<span id="##_label" class="edui-label"></span>'+'</div>'+'<div class="edui-pickarea"'+' onmousemove="$$._onMouseMove(event, this);"'+' onmouseover="$$._onMouseOver(event, this);"'+' onmouseout="$$._onMouseOut(event, this);"'+' onclick="$$._onClick(event, this);"'+'>'+'<div id="##_overlay" class="edui-overlay"></div>'+'</div>'+'</div>'+'</div>';},_UIBase_render:UIBase.prototype.render,render:function render(holder){this._UIBase_render(holder);this.getDom('label').innerHTML='0'+this.editor.getLang("t_row")+' x 0'+this.editor.getLang("t_col");},_track:function _track(numCols,numRows){var style=this.getDom('overlay').style;var sideLen=this.lengthOfCellSide;style.width=numCols*sideLen+'px';style.height=numRows*sideLen+'px';var label=this.getDom('label');label.innerHTML=numCols+this.editor.getLang("t_col")+' x '+numRows+this.editor.getLang("t_row");this.numCols=numCols;this.numRows=numRows;},_onMouseOver:function _onMouseOver(evt,el){var rel=evt.relatedTarget||evt.fromElement;if(!uiUtils.contains(el,rel)&&el!==rel){this.getDom('label').innerHTML='0'+this.editor.getLang("t_col")+' x 0'+this.editor.getLang("t_row");this.getDom('overlay').style.visibility='';}},_onMouseOut:function _onMouseOut(evt,el){var rel=evt.relatedTarget||evt.toElement;if(!uiUtils.contains(el,rel)&&el!==rel){this.getDom('label').innerHTML='0'+this.editor.getLang("t_col")+' x 0'+this.editor.getLang("t_row");this.getDom('overlay').style.visibility='hidden';}},_onMouseMove:function _onMouseMove(evt,el){var style=this.getDom('overlay').style;var offset=uiUtils.getEventOffset(evt);var sideLen=this.lengthOfCellSide;var numCols=Math.ceil(offset.left/sideLen);var numRows=Math.ceil(offset.top/sideLen);this._track(numCols,numRows);},_onClick:function _onClick(){this.fireEvent('picktable',this.numCols,this.numRows);}};utils.inherits(TablePicker,UIBase);})();// ui/stateful.js
(function(){var browser=baidu.editor.browser,domUtils=baidu.editor.dom.domUtils,uiUtils=baidu.editor.ui.uiUtils;var TPL_STATEFUL='onmousedown="$$.Stateful_onMouseDown(event, this);"'+' onmouseup="$$.Stateful_onMouseUp(event, this);"'+(browser.ie?' onmouseenter="$$.Stateful_onMouseEnter(event, this);"'+' onmouseleave="$$.Stateful_onMouseLeave(event, this);"':' onmouseover="$$.Stateful_onMouseOver(event, this);"'+' onmouseout="$$.Stateful_onMouseOut(event, this);"');baidu.editor.ui.Stateful={alwalysHoverable:false,target:null,//目标元素和this指向dom不一样
Stateful_init:function Stateful_init(){this._Stateful_dGetHtmlTpl=this.getHtmlTpl;this.getHtmlTpl=this.Stateful_getHtmlTpl;},Stateful_getHtmlTpl:function Stateful_getHtmlTpl(){var tpl=this._Stateful_dGetHtmlTpl();// 使用function避免$转义
return tpl.replace(/stateful/g,function(){return TPL_STATEFUL;});},Stateful_onMouseEnter:function Stateful_onMouseEnter(evt,el){this.target=el;if(!this.isDisabled()||this.alwalysHoverable){this.addState('hover');this.fireEvent('over');}},Stateful_onMouseLeave:function Stateful_onMouseLeave(evt,el){if(!this.isDisabled()||this.alwalysHoverable){this.removeState('hover');this.removeState('active');this.fireEvent('out');}},Stateful_onMouseOver:function Stateful_onMouseOver(evt,el){var rel=evt.relatedTarget;if(!uiUtils.contains(el,rel)&&el!==rel){this.Stateful_onMouseEnter(evt,el);}},Stateful_onMouseOut:function Stateful_onMouseOut(evt,el){var rel=evt.relatedTarget;if(!uiUtils.contains(el,rel)&&el!==rel){this.Stateful_onMouseLeave(evt,el);}},Stateful_onMouseDown:function Stateful_onMouseDown(evt,el){if(!this.isDisabled()){this.addState('active');}},Stateful_onMouseUp:function Stateful_onMouseUp(evt,el){if(!this.isDisabled()){this.removeState('active');}},Stateful_postRender:function Stateful_postRender(){if(this.disabled&&!this.hasState('disabled')){this.addState('disabled');}},hasState:function hasState(state){return domUtils.hasClass(this.getStateDom(),'edui-state-'+state);},addState:function addState(state){if(!this.hasState(state)){this.getStateDom().className+=' edui-state-'+state;}},removeState:function removeState(state){if(this.hasState(state)){domUtils.removeClasses(this.getStateDom(),['edui-state-'+state]);}},getStateDom:function getStateDom(){return this.getDom('state');},isChecked:function isChecked(){return this.hasState('checked');},setChecked:function setChecked(checked){if(!this.isDisabled()&&checked){this.addState('checked');}else{this.removeState('checked');}},isDisabled:function isDisabled(){return this.hasState('disabled');},setDisabled:function setDisabled(disabled){if(disabled){this.removeState('hover');this.removeState('checked');this.removeState('active');this.addState('disabled');}else{this.removeState('disabled');}}};})();// ui/button.js
///import core
///import uicore
///import ui/stateful.js
(function(){var utils=baidu.editor.utils,UIBase=baidu.editor.ui.UIBase,Stateful=baidu.editor.ui.Stateful,Button=baidu.editor.ui.Button=function(options){if(options.name){var btnName=options.name;var cssRules=options.cssRules;if(!options.className){options.className='edui-for-'+btnName;}options.cssRules='.edui-default  .edui-for-'+btnName+' .edui-icon {'+cssRules+'}';}this.initOptions(options);this.initButton();};Button.prototype={uiName:'button',label:'',title:'',showIcon:true,showText:true,cssRules:'',initButton:function initButton(){this.initUIBase();this.Stateful_init();if(this.cssRules){utils.cssRule('edui-customize-'+this.name+'-style',this.cssRules);}},getHtmlTpl:function getHtmlTpl(){return'<div id="##" class="edui-box %%">'+'<div id="##_state" stateful>'+'<div class="%%-wrap"><div id="##_body" unselectable="on" '+(this.title?'title="'+this.title+'"':'')+' class="%%-body" onmousedown="return $$._onMouseDown(event, this);" onclick="return $$._onClick(event, this);">'+(this.showIcon?'<div class="edui-box edui-icon"></div>':'')+(this.showText?'<div class="edui-box edui-label">'+this.label+'</div>':'')+'</div>'+'</div>'+'</div></div>';},postRender:function postRender(){this.Stateful_postRender();this.setDisabled(this.disabled);},_onMouseDown:function _onMouseDown(e){var target=e.target||e.srcElement,tagName=target&&target.tagName&&target.tagName.toLowerCase();if(tagName=='input'||tagName=='object'||tagName=='object'){return false;}},_onClick:function _onClick(){if(!this.isDisabled()){this.fireEvent('click');}},setTitle:function setTitle(text){var label=this.getDom('label');label.innerHTML=text;}};utils.inherits(Button,UIBase);utils.extend(Button.prototype,Stateful);})();// ui/splitbutton.js
///import core
///import uicore
///import ui/stateful.js
(function(){var utils=baidu.editor.utils,uiUtils=baidu.editor.ui.uiUtils,domUtils=baidu.editor.dom.domUtils,UIBase=baidu.editor.ui.UIBase,Stateful=baidu.editor.ui.Stateful,SplitButton=baidu.editor.ui.SplitButton=function(options){this.initOptions(options);this.initSplitButton();};SplitButton.prototype={popup:null,uiName:'splitbutton',title:'',initSplitButton:function initSplitButton(){this.initUIBase();this.Stateful_init();var me=this;if(this.popup!=null){var popup=this.popup;this.popup=null;this.setPopup(popup);}},_UIBase_postRender:UIBase.prototype.postRender,postRender:function postRender(){this.Stateful_postRender();this._UIBase_postRender();},setPopup:function setPopup(popup){if(this.popup===popup)return;if(this.popup!=null){this.popup.dispose();}popup.addListener('show',utils.bind(this._onPopupShow,this));popup.addListener('hide',utils.bind(this._onPopupHide,this));popup.addListener('postrender',utils.bind(function(){popup.getDom('body').appendChild(uiUtils.createElementByHtml('<div id="'+this.popup.id+'_bordereraser" class="edui-bordereraser edui-background" style="width:'+(uiUtils.getClientRect(this.getDom()).width+20)+'px"></div>'));popup.getDom().className+=' '+this.className;},this));this.popup=popup;},_onPopupShow:function _onPopupShow(){this.addState('opened');},_onPopupHide:function _onPopupHide(){this.removeState('opened');},getHtmlTpl:function getHtmlTpl(){return'<div id="##" class="edui-box %%">'+'<div '+(this.title?'title="'+this.title+'"':'')+' id="##_state" stateful><div class="%%-body">'+'<div id="##_button_body" class="edui-box edui-button-body" onclick="$$._onButtonClick(event, this);">'+'<div class="edui-box edui-icon"></div>'+'</div>'+'<div class="edui-box edui-splitborder"></div>'+'<div class="edui-box edui-arrow" onclick="$$._onArrowClick();"></div>'+'</div></div></div>';},showPopup:function showPopup(){// 当popup往上弹出的时候，做特殊处理
var rect=uiUtils.getClientRect(this.getDom());rect.top-=this.popup.SHADOW_RADIUS;rect.height+=this.popup.SHADOW_RADIUS;this.popup.showAnchorRect(rect);},_onArrowClick:function _onArrowClick(event,el){if(!this.isDisabled()){this.showPopup();}},_onButtonClick:function _onButtonClick(){if(!this.isDisabled()){this.fireEvent('buttonclick');}}};utils.inherits(SplitButton,UIBase);utils.extend(SplitButton.prototype,Stateful,true);})();// ui/colorbutton.js
///import core
///import uicore
///import ui/colorpicker.js
///import ui/popup.js
///import ui/splitbutton.js
(function(){var utils=baidu.editor.utils,uiUtils=baidu.editor.ui.uiUtils,ColorPicker=baidu.editor.ui.ColorPicker,Popup=baidu.editor.ui.Popup,SplitButton=baidu.editor.ui.SplitButton,ColorButton=baidu.editor.ui.ColorButton=function(options){this.initOptions(options);this.initColorButton();};ColorButton.prototype={initColorButton:function initColorButton(){var me=this;this.popup=new Popup({content:new ColorPicker({noColorText:me.editor.getLang("clearColor"),editor:me.editor,onpickcolor:function onpickcolor(t,color){me._onPickColor(color);},onpicknocolor:function onpicknocolor(t,color){me._onPickNoColor(color);}}),editor:me.editor});this.initSplitButton();},_SplitButton_postRender:SplitButton.prototype.postRender,postRender:function postRender(){this._SplitButton_postRender();this.getDom('button_body').appendChild(uiUtils.createElementByHtml('<div id="'+this.id+'_colorlump" class="edui-colorlump"></div>'));this.getDom().className+=' edui-colorbutton';},setColor:function setColor(color){this.getDom('colorlump').style.backgroundColor=color;this.color=color;},_onPickColor:function _onPickColor(color){if(this.fireEvent('pickcolor',color)!==false){this.setColor(color);this.popup.hide();}},_onPickNoColor:function _onPickNoColor(color){if(this.fireEvent('picknocolor')!==false){this.popup.hide();}}};utils.inherits(ColorButton,SplitButton);})();// ui/tablebutton.js
///import core
///import uicore
///import ui/popup.js
///import ui/tablepicker.js
///import ui/splitbutton.js
(function(){var utils=baidu.editor.utils,Popup=baidu.editor.ui.Popup,TablePicker=baidu.editor.ui.TablePicker,SplitButton=baidu.editor.ui.SplitButton,TableButton=baidu.editor.ui.TableButton=function(options){this.initOptions(options);this.initTableButton();};TableButton.prototype={initTableButton:function initTableButton(){var me=this;this.popup=new Popup({content:new TablePicker({editor:me.editor,onpicktable:function onpicktable(t,numCols,numRows){me._onPickTable(numCols,numRows);}}),'editor':me.editor});this.initSplitButton();},_onPickTable:function _onPickTable(numCols,numRows){if(this.fireEvent('picktable',numCols,numRows)!==false){this.popup.hide();}}};utils.inherits(TableButton,SplitButton);})();// ui/autotypesetpicker.js
///import core
///import uicore
(function(){var utils=baidu.editor.utils,UIBase=baidu.editor.ui.UIBase;var AutoTypeSetPicker=baidu.editor.ui.AutoTypeSetPicker=function(options){this.initOptions(options);this.initAutoTypeSetPicker();};AutoTypeSetPicker.prototype={initAutoTypeSetPicker:function initAutoTypeSetPicker(){this.initUIBase();},getHtmlTpl:function getHtmlTpl(){var me=this.editor,opt=me.options.autotypeset,lang=me.getLang("autoTypeSet");var textAlignInputName='textAlignValue'+me.uid,imageBlockInputName='imageBlockLineValue'+me.uid,symbolConverInputName='symbolConverValue'+me.uid;return'<div id="##" class="edui-autotypesetpicker %%">'+'<div class="edui-autotypesetpicker-body">'+'<table >'+'<tr><td nowrap><input type="checkbox" name="mergeEmptyline" '+(opt["mergeEmptyline"]?"checked":"")+'>'+lang.mergeLine+'</td><td colspan="2"><input type="checkbox" name="removeEmptyline" '+(opt["removeEmptyline"]?"checked":"")+'>'+lang.delLine+'</td></tr>'+'<tr><td nowrap><input type="checkbox" name="removeClass" '+(opt["removeClass"]?"checked":"")+'>'+lang.removeFormat+'</td><td colspan="2"><input type="checkbox" name="indent" '+(opt["indent"]?"checked":"")+'>'+lang.indent+'</td></tr>'+'<tr>'+'<td nowrap><input type="checkbox" name="textAlign" '+(opt["textAlign"]?"checked":"")+'>'+lang.alignment+'</td>'+'<td colspan="2" id="'+textAlignInputName+'">'+'<input type="radio" name="'+textAlignInputName+'" value="left" '+(opt["textAlign"]&&opt["textAlign"]=="left"?"checked":"")+'>'+me.getLang("justifyleft")+'<input type="radio" name="'+textAlignInputName+'" value="center" '+(opt["textAlign"]&&opt["textAlign"]=="center"?"checked":"")+'>'+me.getLang("justifycenter")+'<input type="radio" name="'+textAlignInputName+'" value="right" '+(opt["textAlign"]&&opt["textAlign"]=="right"?"checked":"")+'>'+me.getLang("justifyright")+'</td>'+'</tr>'+'<tr>'+'<td nowrap><input type="checkbox" name="imageBlockLine" '+(opt["imageBlockLine"]?"checked":"")+'>'+lang.imageFloat+'</td>'+'<td nowrap id="'+imageBlockInputName+'">'+'<input type="radio" name="'+imageBlockInputName+'" value="none" '+(opt["imageBlockLine"]&&opt["imageBlockLine"]=="none"?"checked":"")+'>'+me.getLang("default")+'<input type="radio" name="'+imageBlockInputName+'" value="left" '+(opt["imageBlockLine"]&&opt["imageBlockLine"]=="left"?"checked":"")+'>'+me.getLang("justifyleft")+'<input type="radio" name="'+imageBlockInputName+'" value="center" '+(opt["imageBlockLine"]&&opt["imageBlockLine"]=="center"?"checked":"")+'>'+me.getLang("justifycenter")+'<input type="radio" name="'+imageBlockInputName+'" value="right" '+(opt["imageBlockLine"]&&opt["imageBlockLine"]=="right"?"checked":"")+'>'+me.getLang("justifyright")+'</td>'+'</tr>'+'<tr><td nowrap><input type="checkbox" name="clearFontSize" '+(opt["clearFontSize"]?"checked":"")+'>'+lang.removeFontsize+'</td><td colspan="2"><input type="checkbox" name="clearFontFamily" '+(opt["clearFontFamily"]?"checked":"")+'>'+lang.removeFontFamily+'</td></tr>'+'<tr><td nowrap colspan="3"><input type="checkbox" name="removeEmptyNode" '+(opt["removeEmptyNode"]?"checked":"")+'>'+lang.removeHtml+'</td></tr>'+'<tr><td nowrap colspan="3"><input type="checkbox" name="pasteFilter" '+(opt["pasteFilter"]?"checked":"")+'>'+lang.pasteFilter+'</td></tr>'+'<tr>'+'<td nowrap><input type="checkbox" name="symbolConver" '+(opt["bdc2sb"]||opt["tobdc"]?"checked":"")+'>'+lang.symbol+'</td>'+'<td id="'+symbolConverInputName+'">'+'<input type="radio" name="bdc" value="bdc2sb" '+(opt["bdc2sb"]?"checked":"")+'>'+lang.bdc2sb+'<input type="radio" name="bdc" value="tobdc" '+(opt["tobdc"]?"checked":"")+'>'+lang.tobdc+''+'</td>'+'<td nowrap align="right"><button >'+lang.run+'</button></td>'+'</tr>'+'</table>'+'</div>'+'</div>';},_UIBase_render:UIBase.prototype.render};utils.inherits(AutoTypeSetPicker,UIBase);})();// ui/autotypesetbutton.js
///import core
///import uicore
///import ui/popup.js
///import ui/autotypesetpicker.js
///import ui/splitbutton.js
(function(){var utils=baidu.editor.utils,Popup=baidu.editor.ui.Popup,AutoTypeSetPicker=baidu.editor.ui.AutoTypeSetPicker,SplitButton=baidu.editor.ui.SplitButton,AutoTypeSetButton=baidu.editor.ui.AutoTypeSetButton=function(options){this.initOptions(options);this.initAutoTypeSetButton();};function getPara(me){var opt={},cont=me.getDom(),editorId=me.editor.uid,inputType=null,attrName=null,ipts=domUtils.getElementsByTagName(cont,"input");for(var i=ipts.length-1,ipt;ipt=ipts[i--];){inputType=ipt.getAttribute("type");if(inputType=="checkbox"){attrName=ipt.getAttribute("name");opt[attrName]&&delete opt[attrName];if(ipt.checked){var attrValue=document.getElementById(attrName+"Value"+editorId);if(attrValue){if(/input/ig.test(attrValue.tagName)){opt[attrName]=attrValue.value;}else{var iptChilds=attrValue.getElementsByTagName("input");for(var j=iptChilds.length-1,iptchild;iptchild=iptChilds[j--];){if(iptchild.checked){opt[attrName]=iptchild.value;break;}}}}else{opt[attrName]=true;}}else{opt[attrName]=false;}}else{opt[ipt.getAttribute("value")]=ipt.checked;}}var selects=domUtils.getElementsByTagName(cont,"select");for(var i=0,si;si=selects[i++];){var attr=si.getAttribute('name');opt[attr]=opt[attr]?si.value:'';}utils.extend(me.editor.options.autotypeset,opt);me.editor.setPreferences('autotypeset',opt);}AutoTypeSetButton.prototype={initAutoTypeSetButton:function initAutoTypeSetButton(){var me=this;this.popup=new Popup({//传入配置参数
content:new AutoTypeSetPicker({editor:me.editor}),'editor':me.editor,hide:function hide(){if(!this._hidden&&this.getDom()){getPara(this);this.getDom().style.display='none';this._hidden=true;this.fireEvent('hide');}}});var flag=0;this.popup.addListener('postRenderAfter',function(){var popupUI=this;if(flag)return;var cont=this.getDom(),btn=cont.getElementsByTagName('button')[0];btn.onclick=function(){getPara(popupUI);me.editor.execCommand('autotypeset');popupUI.hide();};domUtils.on(cont,'click',function(e){var target=e.target||e.srcElement,editorId=me.editor.uid;if(target&&target.tagName=='INPUT'){// 点击图片浮动的checkbox,去除对应的radio
if(target.name=='imageBlockLine'||target.name=='textAlign'||target.name=='symbolConver'){var checked=target.checked,radioTd=document.getElementById(target.name+'Value'+editorId),radios=radioTd.getElementsByTagName('input'),defalutSelect={'imageBlockLine':'none','textAlign':'left','symbolConver':'tobdc'};for(var i=0;i<radios.length;i++){if(checked){if(radios[i].value==defalutSelect[target.name]){radios[i].checked='checked';}}else{radios[i].checked=false;}}}// 点击radio,选中对应的checkbox
if(target.name=='imageBlockLineValue'+editorId||target.name=='textAlignValue'+editorId||target.name=='bdc'){var checkboxs=target.parentNode.previousSibling.getElementsByTagName('input');checkboxs&&(checkboxs[0].checked=true);}getPara(popupUI);}});flag=1;});this.initSplitButton();}};utils.inherits(AutoTypeSetButton,SplitButton);})();// ui/cellalignpicker.js
///import core
///import uicore
(function(){var utils=baidu.editor.utils,Popup=baidu.editor.ui.Popup,Stateful=baidu.editor.ui.Stateful,UIBase=baidu.editor.ui.UIBase;/**
     * 该参数将新增一个参数： selected， 参数类型为一个Object， 形如{ 'align': 'center', 'valign': 'top' }， 表示单元格的初始
     * 对齐状态为： 竖直居上，水平居中; 其中 align的取值为：'center', 'left', 'right'; valign的取值为: 'top', 'middle', 'bottom'
     * @update 2013/4/2 hancong03@baidu.com
     */var CellAlignPicker=baidu.editor.ui.CellAlignPicker=function(options){this.initOptions(options);this.initSelected();this.initCellAlignPicker();};CellAlignPicker.prototype={//初始化选中状态， 该方法将根据传递进来的参数获取到应该选中的对齐方式图标的索引
initSelected:function initSelected(){var status={valign:{top:0,middle:1,bottom:2},align:{left:0,center:1,right:2},count:3},result=-1;if(this.selected){this.selectedIndex=status.valign[this.selected.valign]*status.count+status.align[this.selected.align];}},initCellAlignPicker:function initCellAlignPicker(){this.initUIBase();this.Stateful_init();},getHtmlTpl:function getHtmlTpl(){var alignType=['left','center','right'],COUNT=9,tempClassName=null,tempIndex=-1,tmpl=[];for(var i=0;i<COUNT;i++){tempClassName=this.selectedIndex===i?' class="edui-cellalign-selected" ':'';tempIndex=i%3;tempIndex===0&&tmpl.push('<tr>');tmpl.push('<td index="'+i+'" '+tempClassName+' stateful><div class="edui-icon edui-'+alignType[tempIndex]+'"></div></td>');tempIndex===2&&tmpl.push('</tr>');}return'<div id="##" class="edui-cellalignpicker %%">'+'<div class="edui-cellalignpicker-body">'+'<table onclick="$$._onClick(event);">'+tmpl.join('')+'</table>'+'</div>'+'</div>';},getStateDom:function getStateDom(){return this.target;},_onClick:function _onClick(evt){var target=evt.target||evt.srcElement;if(/icon/.test(target.className)){this.items[target.parentNode.getAttribute("index")].onclick();Popup.postHide(evt);}},_UIBase_render:UIBase.prototype.render};utils.inherits(CellAlignPicker,UIBase);utils.extend(CellAlignPicker.prototype,Stateful,true);})();// ui/pastepicker.js
///import core
///import uicore
(function(){var utils=baidu.editor.utils,Stateful=baidu.editor.ui.Stateful,uiUtils=baidu.editor.ui.uiUtils,UIBase=baidu.editor.ui.UIBase;var PastePicker=baidu.editor.ui.PastePicker=function(options){this.initOptions(options);this.initPastePicker();};PastePicker.prototype={initPastePicker:function initPastePicker(){this.initUIBase();this.Stateful_init();},getHtmlTpl:function getHtmlTpl(){return'<div class="edui-pasteicon" onclick="$$._onClick(this)"></div>'+'<div class="edui-pastecontainer">'+'<div class="edui-title">'+this.editor.getLang("pasteOpt")+'</div>'+'<div class="edui-button">'+'<div title="'+this.editor.getLang("pasteSourceFormat")+'" onclick="$$.format(false)" stateful>'+'<div class="edui-richtxticon"></div></div>'+'<div title="'+this.editor.getLang("tagFormat")+'" onclick="$$.format(2)" stateful>'+'<div class="edui-tagicon"></div></div>'+'<div title="'+this.editor.getLang("pasteTextFormat")+'" onclick="$$.format(true)" stateful>'+'<div class="edui-plaintxticon"></div></div>'+'</div>'+'</div>'+'</div>';},getStateDom:function getStateDom(){return this.target;},format:function format(param){this.editor.ui._isTransfer=true;this.editor.fireEvent('pasteTransfer',param);},_onClick:function _onClick(cur){var node=domUtils.getNextDomNode(cur),screenHt=uiUtils.getViewportRect().height,subPop=uiUtils.getClientRect(node);if(subPop.top+subPop.height>screenHt)node.style.top=-subPop.height-cur.offsetHeight+"px";else node.style.top="";if(/hidden/ig.test(domUtils.getComputedStyle(node,"visibility"))){node.style.visibility="visible";domUtils.addClass(cur,"edui-state-opened");}else{node.style.visibility="hidden";domUtils.removeClasses(cur,"edui-state-opened");}},_UIBase_render:UIBase.prototype.render};utils.inherits(PastePicker,UIBase);utils.extend(PastePicker.prototype,Stateful,true);})();// ui/toolbar.js
(function(){var utils=baidu.editor.utils,uiUtils=baidu.editor.ui.uiUtils,UIBase=baidu.editor.ui.UIBase,Toolbar=baidu.editor.ui.Toolbar=function(options){this.initOptions(options);this.initToolbar();};Toolbar.prototype={items:null,initToolbar:function initToolbar(){this.items=this.items||[];this.initUIBase();},add:function add(item,index){if(index===undefined){this.items.push(item);}else{this.items.splice(index,0,item);}},getHtmlTpl:function getHtmlTpl(){var buff=[];for(var i=0;i<this.items.length;i++){buff[i]=this.items[i].renderHtml();}return'<div id="##" class="edui-toolbar %%" onselectstart="return false;" onmousedown="return $$._onMouseDown(event, this);">'+buff.join('')+'</div>';},postRender:function postRender(){var box=this.getDom();for(var i=0;i<this.items.length;i++){this.items[i].postRender();}uiUtils.makeUnselectable(box);},_onMouseDown:function _onMouseDown(e){var target=e.target||e.srcElement,tagName=target&&target.tagName&&target.tagName.toLowerCase();if(tagName=='input'||tagName=='object'||tagName=='object'){return false;}}};utils.inherits(Toolbar,UIBase);})();// ui/menu.js
///import core
///import uicore
///import ui\popup.js
///import ui\stateful.js
(function(){var utils=baidu.editor.utils,domUtils=baidu.editor.dom.domUtils,uiUtils=baidu.editor.ui.uiUtils,UIBase=baidu.editor.ui.UIBase,Popup=baidu.editor.ui.Popup,Stateful=baidu.editor.ui.Stateful,CellAlignPicker=baidu.editor.ui.CellAlignPicker,Menu=baidu.editor.ui.Menu=function(options){this.initOptions(options);this.initMenu();};var menuSeparator={renderHtml:function renderHtml(){return'<div class="edui-menuitem edui-menuseparator"><div class="edui-menuseparator-inner"></div></div>';},postRender:function postRender(){},queryAutoHide:function queryAutoHide(){return true;}};Menu.prototype={items:null,uiName:'menu',initMenu:function initMenu(){this.items=this.items||[];this.initPopup();this.initItems();},initItems:function initItems(){for(var i=0;i<this.items.length;i++){var item=this.items[i];if(item=='-'){this.items[i]=this.getSeparator();}else if(!(item instanceof MenuItem)){item.editor=this.editor;item.theme=this.editor.options.theme;this.items[i]=this.createItem(item);}}},getSeparator:function getSeparator(){return menuSeparator;},createItem:function createItem(item){//新增一个参数menu, 该参数存储了menuItem所对应的menu引用
item.menu=this;return new MenuItem(item);},_Popup_getContentHtmlTpl:Popup.prototype.getContentHtmlTpl,getContentHtmlTpl:function getContentHtmlTpl(){if(this.items.length==0){return this._Popup_getContentHtmlTpl();}var buff=[];for(var i=0;i<this.items.length;i++){var item=this.items[i];buff[i]=item.renderHtml();}return'<div class="%%-body">'+buff.join('')+'</div>';},_Popup_postRender:Popup.prototype.postRender,postRender:function postRender(){var me=this;for(var i=0;i<this.items.length;i++){var item=this.items[i];item.ownerMenu=this;item.postRender();}domUtils.on(this.getDom(),'mouseover',function(evt){evt=evt||event;var rel=evt.relatedTarget||evt.fromElement;var el=me.getDom();if(!uiUtils.contains(el,rel)&&el!==rel){me.fireEvent('over');}});this._Popup_postRender();},queryAutoHide:function queryAutoHide(el){if(el){if(uiUtils.contains(this.getDom(),el)){return false;}for(var i=0;i<this.items.length;i++){var item=this.items[i];if(item.queryAutoHide(el)===false){return false;}}}},clearItems:function clearItems(){for(var i=0;i<this.items.length;i++){var item=this.items[i];clearTimeout(item._showingTimer);clearTimeout(item._closingTimer);if(item.subMenu){item.subMenu.destroy();}}this.items=[];},destroy:function destroy(){if(this.getDom()){domUtils.remove(this.getDom());}this.clearItems();},dispose:function dispose(){this.destroy();}};utils.inherits(Menu,Popup);/**
     * @update 2013/04/03 hancong03 新增一个参数menu, 该参数存储了menuItem所对应的menu引用
     * @type {Function}
     */var MenuItem=baidu.editor.ui.MenuItem=function(options){this.initOptions(options);this.initUIBase();this.Stateful_init();if(this.subMenu&&!(this.subMenu instanceof Menu)){if(options.className&&options.className.indexOf("aligntd")!=-1){var me=this;//获取单元格对齐初始状态
this.subMenu.selected=this.editor.queryCommandValue('cellalignment');this.subMenu=new Popup({content:new CellAlignPicker(this.subMenu),parentMenu:me,editor:me.editor,destroy:function destroy(){if(this.getDom()){domUtils.remove(this.getDom());}}});this.subMenu.addListener("postRenderAfter",function(){domUtils.on(this.getDom(),"mouseover",function(){me.addState('opened');});});}else{this.subMenu=new Menu(this.subMenu);}}};MenuItem.prototype={label:'',subMenu:null,ownerMenu:null,uiName:'menuitem',alwalysHoverable:true,getHtmlTpl:function getHtmlTpl(){return'<div id="##" class="%%" stateful onclick="$$._onClick(event, this);">'+'<div class="%%-body">'+this.renderLabelHtml()+'</div>'+'</div>';},postRender:function postRender(){var me=this;this.addListener('over',function(){me.ownerMenu.fireEvent('submenuover',me);if(me.subMenu){me.delayShowSubMenu();}});if(this.subMenu){this.getDom().className+=' edui-hassubmenu';this.subMenu.render();this.addListener('out',function(){me.delayHideSubMenu();});this.subMenu.addListener('over',function(){clearTimeout(me._closingTimer);me._closingTimer=null;me.addState('opened');});this.ownerMenu.addListener('hide',function(){me.hideSubMenu();});this.ownerMenu.addListener('submenuover',function(t,subMenu){if(subMenu!==me){me.delayHideSubMenu();}});this.subMenu._bakQueryAutoHide=this.subMenu.queryAutoHide;this.subMenu.queryAutoHide=function(el){if(el&&uiUtils.contains(me.getDom(),el)){return false;}return this._bakQueryAutoHide(el);};}this.getDom().style.tabIndex='-1';uiUtils.makeUnselectable(this.getDom());this.Stateful_postRender();},delayShowSubMenu:function delayShowSubMenu(){var me=this;if(!me.isDisabled()){me.addState('opened');clearTimeout(me._showingTimer);clearTimeout(me._closingTimer);me._closingTimer=null;me._showingTimer=setTimeout(function(){me.showSubMenu();},250);}},delayHideSubMenu:function delayHideSubMenu(){var me=this;if(!me.isDisabled()){me.removeState('opened');clearTimeout(me._showingTimer);if(!me._closingTimer){me._closingTimer=setTimeout(function(){if(!me.hasState('opened')){me.hideSubMenu();}me._closingTimer=null;},400);}}},renderLabelHtml:function renderLabelHtml(){return'<div class="edui-arrow"></div>'+'<div class="edui-box edui-icon"></div>'+'<div class="edui-box edui-label %%-label">'+(this.label||'')+'</div>';},getStateDom:function getStateDom(){return this.getDom();},queryAutoHide:function queryAutoHide(el){if(this.subMenu&&this.hasState('opened')){return this.subMenu.queryAutoHide(el);}},_onClick:function _onClick(event,this_){if(this.hasState('disabled'))return;if(this.fireEvent('click',event,this_)!==false){if(this.subMenu){this.showSubMenu();}else{Popup.postHide(event);}}},showSubMenu:function showSubMenu(){var rect=uiUtils.getClientRect(this.getDom());rect.right-=5;rect.left+=2;rect.width-=7;rect.top-=4;rect.bottom+=4;rect.height+=8;this.subMenu.showAnchorRect(rect,true,true);},hideSubMenu:function hideSubMenu(){this.subMenu.hide();}};utils.inherits(MenuItem,UIBase);utils.extend(MenuItem.prototype,Stateful,true);})();// ui/combox.js
///import core
///import uicore
///import ui/menu.js
///import ui/splitbutton.js
(function(){// todo: menu和item提成通用list
var utils=baidu.editor.utils,uiUtils=baidu.editor.ui.uiUtils,Menu=baidu.editor.ui.Menu,SplitButton=baidu.editor.ui.SplitButton,Combox=baidu.editor.ui.Combox=function(options){this.initOptions(options);this.initCombox();};Combox.prototype={uiName:'combox',onbuttonclick:function onbuttonclick(){this.showPopup();},initCombox:function initCombox(){var me=this;this.items=this.items||[];for(var i=0;i<this.items.length;i++){var item=this.items[i];item.uiName='listitem';item.index=i;item.onclick=function(){me.selectByIndex(this.index);};}this.popup=new Menu({items:this.items,uiName:'list',editor:this.editor,captureWheel:true,combox:this});this.initSplitButton();},_SplitButton_postRender:SplitButton.prototype.postRender,postRender:function postRender(){this._SplitButton_postRender();this.setLabel(this.label||'');this.setValue(this.initValue||'');},showPopup:function showPopup(){var rect=uiUtils.getClientRect(this.getDom());rect.top+=1;rect.bottom-=1;rect.height-=2;this.popup.showAnchorRect(rect);},getValue:function getValue(){return this.value;},setValue:function setValue(value){var index=this.indexByValue(value);if(index!=-1){this.selectedIndex=index;this.setLabel(this.items[index].label);this.value=this.items[index].value;}else{this.selectedIndex=-1;this.setLabel(this.getLabelForUnknowValue(value));this.value=value;}},setLabel:function setLabel(label){this.getDom('button_body').innerHTML=label;this.label=label;},getLabelForUnknowValue:function getLabelForUnknowValue(value){return value;},indexByValue:function indexByValue(value){for(var i=0;i<this.items.length;i++){if(value==this.items[i].value){return i;}}return-1;},getItem:function getItem(index){return this.items[index];},selectByIndex:function selectByIndex(index){if(index<this.items.length&&this.fireEvent('select',index)!==false){this.selectedIndex=index;this.value=this.items[index].value;this.setLabel(this.items[index].label);}}};utils.inherits(Combox,SplitButton);})();// ui/dialog.js
///import core
///import uicore
///import ui/mask.js
///import ui/button.js
(function(){var utils=baidu.editor.utils,domUtils=baidu.editor.dom.domUtils,uiUtils=baidu.editor.ui.uiUtils,Mask=baidu.editor.ui.Mask,UIBase=baidu.editor.ui.UIBase,Button=baidu.editor.ui.Button,Dialog=baidu.editor.ui.Dialog=function(options){if(options.name){var name=options.name;var cssRules=options.cssRules;if(!options.className){options.className='edui-for-'+name;}if(cssRules){options.cssRules='.edui-default .edui-for-'+name+' .edui-dialog-content  {'+cssRules+'}';}}this.initOptions(utils.extend({autoReset:true,draggable:true,onok:function onok(){},oncancel:function oncancel(){},onclose:function onclose(t,ok){return ok?this.onok():this.oncancel();},//是否控制dialog中的scroll事件， 默认为不阻止
holdScroll:false},options));this.initDialog();};var modalMask;var dragMask;var activeDialog;Dialog.prototype={draggable:false,uiName:'dialog',initDialog:function initDialog(){var me=this,theme=this.editor.options.theme;if(this.cssRules){utils.cssRule('edui-customize-'+this.name+'-style',this.cssRules);}this.initUIBase();this.modalMask=modalMask||(modalMask=new Mask({className:'edui-dialog-modalmask',theme:theme,onclick:function onclick(){activeDialog&&activeDialog.close(false);}}));this.dragMask=dragMask||(dragMask=new Mask({className:'edui-dialog-dragmask',theme:theme}));this.closeButton=new Button({className:'edui-dialog-closebutton',title:me.closeDialog,theme:theme,onclick:function onclick(){me.close(false);}});this.fullscreen&&this.initResizeEvent();if(this.buttons){for(var i=0;i<this.buttons.length;i++){if(!(this.buttons[i]instanceof Button)){this.buttons[i]=new Button(utils.extend(this.buttons[i],{editor:this.editor},true));}}}},initResizeEvent:function initResizeEvent(){var me=this;domUtils.on(window,"resize",function(){if(me._hidden||me._hidden===undefined){return;}if(me.__resizeTimer){window.clearTimeout(me.__resizeTimer);}me.__resizeTimer=window.setTimeout(function(){me.__resizeTimer=null;var dialogWrapNode=me.getDom(),contentNode=me.getDom('content'),wrapRect=UE.ui.uiUtils.getClientRect(dialogWrapNode),contentRect=UE.ui.uiUtils.getClientRect(contentNode),vpRect=uiUtils.getViewportRect();contentNode.style.width=vpRect.width-wrapRect.width+contentRect.width+"px";contentNode.style.height=vpRect.height-wrapRect.height+contentRect.height+"px";dialogWrapNode.style.width=vpRect.width+"px";dialogWrapNode.style.height=vpRect.height+"px";me.fireEvent("resize");},100);});},fitSize:function fitSize(){var popBodyEl=this.getDom('body');//            if (!(baidu.editor.browser.ie && baidu.editor.browser.version == 7)) {
//                uiUtils.removeStyle(popBodyEl, 'width');
//                uiUtils.removeStyle(popBodyEl, 'height');
//            }
var size=this.mesureSize();popBodyEl.style.width=size.width+'px';popBodyEl.style.height=size.height+'px';return size;},safeSetOffset:function safeSetOffset(offset){var me=this;var el=me.getDom();var vpRect=uiUtils.getViewportRect();var rect=uiUtils.getClientRect(el);var left=offset.left;if(left+rect.width>vpRect.right){left=vpRect.right-rect.width;}var top=offset.top;if(top+rect.height>vpRect.bottom){top=vpRect.bottom-rect.height;}el.style.left=Math.max(left,0)+'px';el.style.top=Math.max(top,0)+'px';},showAtCenter:function showAtCenter(){var vpRect=uiUtils.getViewportRect();if(!this.fullscreen){this.getDom().style.display='';var popSize=this.fitSize();var titleHeight=this.getDom('titlebar').offsetHeight|0;var left=vpRect.width/2-popSize.width/2;var top=vpRect.height/2-(popSize.height-titleHeight)/2-titleHeight;var popEl=this.getDom();this.safeSetOffset({left:Math.max(left|0,0),top:Math.max(top|0,0)});if(!domUtils.hasClass(popEl,'edui-state-centered')){popEl.className+=' edui-state-centered';}}else{var dialogWrapNode=this.getDom(),contentNode=this.getDom('content');dialogWrapNode.style.display="block";var wrapRect=UE.ui.uiUtils.getClientRect(dialogWrapNode),contentRect=UE.ui.uiUtils.getClientRect(contentNode);dialogWrapNode.style.left="-100000px";contentNode.style.width=vpRect.width-wrapRect.width+contentRect.width+"px";contentNode.style.height=vpRect.height-wrapRect.height+contentRect.height+"px";dialogWrapNode.style.width=vpRect.width+"px";dialogWrapNode.style.height=vpRect.height+"px";dialogWrapNode.style.left=0;//保存环境的overflow值
this._originalContext={html:{overflowX:document.documentElement.style.overflowX,overflowY:document.documentElement.style.overflowY},body:{overflowX:document.body.style.overflowX,overflowY:document.body.style.overflowY}};document.documentElement.style.overflowX='hidden';document.documentElement.style.overflowY='hidden';document.body.style.overflowX='hidden';document.body.style.overflowY='hidden';}this._show();},getContentHtml:function getContentHtml(){var contentHtml='';if(typeof this.content=='string'){contentHtml=this.content;}else if(this.iframeUrl){contentHtml='<span id="'+this.id+'_contmask" class="dialogcontmask"></span><iframe id="'+this.id+'_iframe" class="%%-iframe" height="100%" width="100%" frameborder="0" src="'+this.iframeUrl+'"></iframe>';}return contentHtml;},getHtmlTpl:function getHtmlTpl(){var footHtml='';if(this.buttons){var buff=[];for(var i=0;i<this.buttons.length;i++){buff[i]=this.buttons[i].renderHtml();}footHtml='<div class="%%-foot">'+'<div id="##_buttons" class="%%-buttons">'+buff.join('')+'</div>'+'</div>';}return'<div id="##" class="%%"><div '+(!this.fullscreen?'class="%%"':'class="%%-wrap edui-dialog-fullscreen-flag"')+'><div id="##_body" class="%%-body">'+'<div class="%%-shadow"></div>'+'<div id="##_titlebar" class="%%-titlebar">'+'<div class="%%-draghandle" onmousedown="$$._onTitlebarMouseDown(event, this);">'+'<span class="%%-caption">'+(this.title||'')+'</span>'+'</div>'+this.closeButton.renderHtml()+'</div>'+'<div id="##_content" class="%%-content">'+(this.autoReset?'':this.getContentHtml())+'</div>'+footHtml+'</div></div></div>';},postRender:function postRender(){// todo: 保持居中/记住上次关闭位置选项
if(!this.modalMask.getDom()){this.modalMask.render();this.modalMask.hide();}if(!this.dragMask.getDom()){this.dragMask.render();this.dragMask.hide();}var me=this;this.addListener('show',function(){me.modalMask.show(this.getDom().style.zIndex-2);});this.addListener('hide',function(){me.modalMask.hide();});if(this.buttons){for(var i=0;i<this.buttons.length;i++){this.buttons[i].postRender();}}domUtils.on(window,'resize',function(){setTimeout(function(){if(!me.isHidden()){me.safeSetOffset(uiUtils.getClientRect(me.getDom()));}});});//hold住scroll事件，防止dialog的滚动影响页面
//            if( this.holdScroll ) {
//
//                if( !me.iframeUrl ) {
//                    domUtils.on( document.getElementById( me.id + "_iframe"), !browser.gecko ? "mousewheel" : "DOMMouseScroll", function(e){
//                        domUtils.preventDefault(e);
//                    } );
//                } else {
//                    me.addListener('dialogafterreset', function(){
//                        window.setTimeout(function(){
//                            var iframeWindow = document.getElementById( me.id + "_iframe").contentWindow;
//
//                            if( browser.ie ) {
//
//                                var timer = window.setInterval(function(){
//
//                                    if( iframeWindow.document && iframeWindow.document.body ) {
//                                        window.clearInterval( timer );
//                                        timer = null;
//                                        domUtils.on( iframeWindow.document.body, !browser.gecko ? "mousewheel" : "DOMMouseScroll", function(e){
//                                            domUtils.preventDefault(e);
//                                        } );
//                                    }
//
//                                }, 100);
//
//                            } else {
//                                domUtils.on( iframeWindow, !browser.gecko ? "mousewheel" : "DOMMouseScroll", function(e){
//                                    domUtils.preventDefault(e);
//                                } );
//                            }
//
//                        }, 1);
//                    });
//                }
//
//            }
this._hide();},mesureSize:function mesureSize(){var body=this.getDom('body');var width=uiUtils.getClientRect(this.getDom('content')).width;var dialogBodyStyle=body.style;dialogBodyStyle.width=width;return uiUtils.getClientRect(body);},_onTitlebarMouseDown:function _onTitlebarMouseDown(evt,el){if(this.draggable){var rect;var vpRect=uiUtils.getViewportRect();var me=this;uiUtils.startDrag(evt,{ondragstart:function ondragstart(){rect=uiUtils.getClientRect(me.getDom());me.getDom('contmask').style.visibility='visible';me.dragMask.show(me.getDom().style.zIndex-1);},ondragmove:function ondragmove(x,y){var left=rect.left+x;var top=rect.top+y;me.safeSetOffset({left:left,top:top});},ondragstop:function ondragstop(){me.getDom('contmask').style.visibility='hidden';domUtils.removeClasses(me.getDom(),['edui-state-centered']);me.dragMask.hide();}});}},reset:function reset(){this.getDom('content').innerHTML=this.getContentHtml();this.fireEvent('dialogafterreset');},_show:function _show(){if(this._hidden){this.getDom().style.display='';//要高过编辑器的zindxe
this.editor.container.style.zIndex&&(this.getDom().style.zIndex=this.editor.container.style.zIndex*1+10);this._hidden=false;this.fireEvent('show');baidu.editor.ui.uiUtils.getFixedLayer().style.zIndex=this.getDom().style.zIndex-4;}},isHidden:function isHidden(){return this._hidden;},_hide:function _hide(){if(!this._hidden){var wrapNode=this.getDom();wrapNode.style.display='none';wrapNode.style.zIndex='';wrapNode.style.width='';wrapNode.style.height='';this._hidden=true;this.fireEvent('hide');}},open:function open(){if(this.autoReset){//有可能还没有渲染
try{this.reset();}catch(e){this.render();this.open();}}this.showAtCenter();if(this.iframeUrl){try{this.getDom('iframe').focus();}catch(ex){}}activeDialog=this;},_onCloseButtonClick:function _onCloseButtonClick(evt,el){this.close(false);},close:function close(ok){if(this.fireEvent('close',ok)!==false){//还原环境
if(this.fullscreen){document.documentElement.style.overflowX=this._originalContext.html.overflowX;document.documentElement.style.overflowY=this._originalContext.html.overflowY;document.body.style.overflowX=this._originalContext.body.overflowX;document.body.style.overflowY=this._originalContext.body.overflowY;delete this._originalContext;}this._hide();//销毁content
var content=this.getDom('content');var iframe=this.getDom('iframe');if(content&&iframe){var doc=iframe.contentDocument||iframe.contentWindow.document;doc&&(doc.body.innerHTML='');domUtils.remove(content);}}}};utils.inherits(Dialog,UIBase);})();// ui/menubutton.js
///import core
///import uicore
///import ui/menu.js
///import ui/splitbutton.js
(function(){var utils=baidu.editor.utils,Menu=baidu.editor.ui.Menu,SplitButton=baidu.editor.ui.SplitButton,MenuButton=baidu.editor.ui.MenuButton=function(options){this.initOptions(options);this.initMenuButton();};MenuButton.prototype={initMenuButton:function initMenuButton(){var me=this;this.uiName="menubutton";this.popup=new Menu({items:me.items,className:me.className,editor:me.editor});this.popup.addListener('show',function(){var list=this;for(var i=0;i<list.items.length;i++){list.items[i].removeState('checked');if(list.items[i].value==me._value){list.items[i].addState('checked');this.value=me._value;}}});this.initSplitButton();},setValue:function setValue(value){this._value=value;}};utils.inherits(MenuButton,SplitButton);})();// ui/multiMenu.js
///import core
///import uicore
///commands 表情
(function(){var utils=baidu.editor.utils,Popup=baidu.editor.ui.Popup,SplitButton=baidu.editor.ui.SplitButton,MultiMenuPop=baidu.editor.ui.MultiMenuPop=function(options){this.initOptions(options);this.initMultiMenu();};MultiMenuPop.prototype={initMultiMenu:function initMultiMenu(){var me=this;this.popup=new Popup({content:'',editor:me.editor,iframe_rendered:false,onshow:function onshow(){if(!this.iframe_rendered){this.iframe_rendered=true;this.getDom('content').innerHTML='<iframe id="'+me.id+'_iframe" src="'+me.iframeUrl+'" frameborder="0"></iframe>';me.editor.container.style.zIndex&&(this.getDom().style.zIndex=me.editor.container.style.zIndex*1+1);}}// canSideUp:false,
// canSideLeft:false
});this.onbuttonclick=function(){this.showPopup();};this.initSplitButton();}};utils.inherits(MultiMenuPop,SplitButton);})();// ui/shortcutmenu.js
(function(){var UI=baidu.editor.ui,UIBase=UI.UIBase,uiUtils=UI.uiUtils,utils=baidu.editor.utils,domUtils=baidu.editor.dom.domUtils;var allMenus=[],//存储所有快捷菜单
timeID,isSubMenuShow=false;//是否有子pop显示
var ShortCutMenu=UI.ShortCutMenu=function(options){this.initOptions(options);this.initShortCutMenu();};ShortCutMenu.postHide=hideAllMenu;ShortCutMenu.prototype={isHidden:true,SPACE:5,initShortCutMenu:function initShortCutMenu(){this.items=this.items||[];this.initUIBase();this.initItems();this.initEvent();allMenus.push(this);},initEvent:function initEvent(){var me=this,doc=me.editor.document;domUtils.on(doc,"mousemove",function(e){if(me.isHidden===false){//有pop显示就不隐藏快捷菜单
if(me.getSubMenuMark()||me.eventType=="contextmenu")return;var flag=true,el=me.getDom(),wt=el.offsetWidth,ht=el.offsetHeight,distanceX=wt/2+me.SPACE,//距离中心X标准
distanceY=ht/2,//距离中心Y标准
x=Math.abs(e.screenX-me.left),//离中心距离横坐标
y=Math.abs(e.screenY-me.top);//离中心距离纵坐标
clearTimeout(timeID);timeID=setTimeout(function(){if(y>0&&y<distanceY){me.setOpacity(el,"1");}else if(y>distanceY&&y<distanceY+70){me.setOpacity(el,"0.5");flag=false;}else if(y>distanceY+70&&y<distanceY+140){me.hide();}if(flag&&x>0&&x<distanceX){me.setOpacity(el,"1");}else if(x>distanceX&&x<distanceX+70){me.setOpacity(el,"0.5");}else if(x>distanceX+70&&x<distanceX+140){me.hide();}});}});//ie\ff下 mouseout不准
if(browser.chrome){domUtils.on(doc,"mouseout",function(e){var relatedTgt=e.relatedTarget||e.toElement;if(relatedTgt==null||relatedTgt.tagName=="HTML"){me.hide();}});}me.editor.addListener("afterhidepop",function(){if(!me.isHidden){isSubMenuShow=true;}});},initItems:function initItems(){if(utils.isArray(this.items)){for(var i=0,len=this.items.length;i<len;i++){var item=this.items[i].toLowerCase();if(UI[item]){this.items[i]=new UI[item](this.editor);this.items[i].className+=" edui-shortcutsubmenu ";}}}},setOpacity:function setOpacity(el,value){if(browser.ie&&browser.version<9){el.style.filter="alpha(opacity = "+parseFloat(value)*100+");";}else{el.style.opacity=value;}},getSubMenuMark:function getSubMenuMark(){isSubMenuShow=false;var layerEle=uiUtils.getFixedLayer();var list=domUtils.getElementsByTagName(layerEle,"div",function(node){return domUtils.hasClass(node,"edui-shortcutsubmenu edui-popup");});for(var i=0,node;node=list[i++];){if(node.style.display!="none"){isSubMenuShow=true;}}return isSubMenuShow;},show:function show(e,hasContextmenu){var me=this,offset={},el=this.getDom(),fixedlayer=uiUtils.getFixedLayer();function setPos(offset){if(offset.left<0){offset.left=0;}if(offset.top<0){offset.top=0;}el.style.cssText="position:absolute;left:"+offset.left+"px;top:"+offset.top+"px;";}function setPosByCxtMenu(menu){if(!menu.tagName){menu=menu.getDom();}offset.left=parseInt(menu.style.left);offset.top=parseInt(menu.style.top);offset.top-=el.offsetHeight+15;setPos(offset);}me.eventType=e.type;el.style.cssText="display:block;left:-9999px";if(e.type=="contextmenu"&&hasContextmenu){var menu=domUtils.getElementsByTagName(fixedlayer,"div","edui-contextmenu")[0];if(menu){setPosByCxtMenu(menu);}else{me.editor.addListener("aftershowcontextmenu",function(type,menu){setPosByCxtMenu(menu);});}}else{offset=uiUtils.getViewportOffsetByEvent(e);offset.top-=el.offsetHeight+me.SPACE;offset.left+=me.SPACE+20;setPos(offset);me.setOpacity(el,0.2);}me.isHidden=false;me.left=e.screenX+el.offsetWidth/2-me.SPACE;me.top=e.screenY-el.offsetHeight/2-me.SPACE;if(me.editor){el.style.zIndex=me.editor.container.style.zIndex*1+10;fixedlayer.style.zIndex=el.style.zIndex-1;}},hide:function hide(){if(this.getDom()){this.getDom().style.display="none";}this.isHidden=true;},postRender:function postRender(){if(utils.isArray(this.items)){for(var i=0,item;item=this.items[i++];){item.postRender();}}},getHtmlTpl:function getHtmlTpl(){var buff;if(utils.isArray(this.items)){buff=[];for(var i=0;i<this.items.length;i++){buff[i]=this.items[i].renderHtml();}buff=buff.join("");}else{buff=this.items;}return'<div id="##" class="%% edui-toolbar" data-src="shortcutmenu" onmousedown="return false;" onselectstart="return false;" >'+buff+'</div>';}};utils.inherits(ShortCutMenu,UIBase);function hideAllMenu(e){var tgt=e.target||e.srcElement,cur=domUtils.findParent(tgt,function(node){return domUtils.hasClass(node,"edui-shortcutmenu")||domUtils.hasClass(node,"edui-popup");},true);if(!cur){for(var i=0,menu;menu=allMenus[i++];){menu.hide();}}}domUtils.on(document,'mousedown',function(e){hideAllMenu(e);});domUtils.on(window,'scroll',function(e){hideAllMenu(e);});})();// ui/breakline.js
(function(){var utils=baidu.editor.utils,UIBase=baidu.editor.ui.UIBase,Breakline=baidu.editor.ui.Breakline=function(options){this.initOptions(options);this.initSeparator();};Breakline.prototype={uiName:'Breakline',initSeparator:function initSeparator(){this.initUIBase();},getHtmlTpl:function getHtmlTpl(){return'<br/>';}};utils.inherits(Breakline,UIBase);})();// ui/message.js
///import core
///import uicore
(function(){var utils=baidu.editor.utils,domUtils=baidu.editor.dom.domUtils,UIBase=baidu.editor.ui.UIBase,Message=baidu.editor.ui.Message=function(options){this.initOptions(options);this.initMessage();};Message.prototype={initMessage:function initMessage(){this.initUIBase();},getHtmlTpl:function getHtmlTpl(){return'<div id="##" class="edui-message %%">'+' <div id="##_closer" class="edui-message-closer">×</div>'+' <div id="##_body" class="edui-message-body edui-message-type-info">'+' <iframe style="position:absolute;z-index:-1;left:0;top:0;background-color: transparent;" frameborder="0" width="100%" height="100%" src="about:blank"></iframe>'+' <div class="edui-shadow"></div>'+' <div id="##_content" class="edui-message-content">'+'  </div>'+' </div>'+'</div>';},reset:function reset(opt){var me=this;if(!opt.keepshow){clearTimeout(this.timer);me.timer=setTimeout(function(){me.hide();},opt.timeout||4000);}opt.content!==undefined&&me.setContent(opt.content);opt.type!==undefined&&me.setType(opt.type);me.show();},postRender:function postRender(){var me=this,closer=this.getDom('closer');closer&&domUtils.on(closer,'click',function(){me.hide();});},setContent:function setContent(content){this.getDom('content').innerHTML=content;},setType:function setType(type){type=type||'info';var body=this.getDom('body');body.className=body.className.replace(/edui-message-type-[\w-]+/,'edui-message-type-'+type);},getContent:function getContent(){return this.getDom('content').innerHTML;},getType:function getType(){var arr=this.getDom('body').match(/edui-message-type-([\w-]+)/);return arr?arr[1]:'';},show:function show(){this.getDom().style.display='block';},hide:function hide(){var dom=this.getDom();if(dom){dom.style.display='none';dom.parentNode&&dom.parentNode.removeChild(dom);}}};utils.inherits(Message,UIBase);})();// adapter/editorui.js
//ui跟编辑器的适配層
//那个按钮弹出是dialog，是下拉筐等都是在这个js中配置
//自己写的ui也要在这里配置，放到baidu.editor.ui下边，当编辑器实例化的时候会根据ueditor.config中的toolbars找到相应的进行实例化
(function(){var utils=baidu.editor.utils;var editorui=baidu.editor.ui;var _Dialog=editorui.Dialog;editorui.buttons={};editorui.Dialog=function(options){var dialog=new _Dialog(options);dialog.addListener('hide',function(){if(dialog.editor){var editor=dialog.editor;try{if(browser.gecko){var y=editor.window.scrollY,x=editor.window.scrollX;editor.body.focus();editor.window.scrollTo(x,y);}else{editor.focus();}}catch(ex){}}});return dialog;};var iframeUrlMap={'anchor':'~/dialogs/anchor/anchor.html','insertimage':'~/dialogs/image/image.html','link':'~/dialogs/link/link.html','spechars':'~/dialogs/spechars/spechars.html','searchreplace':'~/dialogs/searchreplace/searchreplace.html','map':'~/dialogs/map/map.html','gmap':'~/dialogs/gmap/gmap.html','insertvideo':'~/dialogs/video/video.html','help':'~/dialogs/help/help.html','preview':'~/dialogs/preview/preview.html','emotion':'~/dialogs/emotion/emotion.html','wordimage':'~/dialogs/wordimage/wordimage.html','attachment':'~/dialogs/attachment/attachment.html','insertframe':'~/dialogs/insertframe/insertframe.html','edittip':'~/dialogs/table/edittip.html','edittable':'~/dialogs/table/edittable.html','edittd':'~/dialogs/table/edittd.html','webapp':'~/dialogs/webapp/webapp.html','snapscreen':'~/dialogs/snapscreen/snapscreen.html','scrawl':'~/dialogs/scrawl/scrawl.html','music':'~/dialogs/music/music.html','template':'~/dialogs/template/template.html','background':'~/dialogs/background/background.html','charts':'~/dialogs/charts/charts.html'};//为工具栏添加按钮，以下都是统一的按钮触发命令，所以写在一起
var btnCmds=['undo','redo','formatmatch','bold','italic','underline','fontborder','touppercase','tolowercase','strikethrough','subscript','superscript','source','indent','outdent','blockquote','pasteplain','pagebreak','selectall','print','horizontal','removeformat','time','date','unlink','insertparagraphbeforetable','insertrow','insertcol','mergeright','mergedown','deleterow','deletecol','splittorows','splittocols','splittocells','mergecells','deletetable','drafts'];for(var i=0,ci;ci=btnCmds[i++];){ci=ci.toLowerCase();editorui[ci]=function(cmd){return function(editor){var ui=new editorui.Button({className:'edui-for-'+cmd,title:editor.options.labelMap[cmd]||editor.getLang("labelMap."+cmd)||'',onclick:function onclick(){editor.execCommand(cmd);},theme:editor.options.theme,showText:false});editorui.buttons[cmd]=ui;editor.addListener('selectionchange',function(type,causeByUi,uiReady){var state=editor.queryCommandState(cmd);if(state==-1){ui.setDisabled(true);ui.setChecked(false);}else{if(!uiReady){ui.setDisabled(false);ui.setChecked(state);}}});return ui;};}(ci);}//清除文档
editorui.cleardoc=function(editor){var ui=new editorui.Button({className:'edui-for-cleardoc',title:editor.options.labelMap.cleardoc||editor.getLang("labelMap.cleardoc")||'',theme:editor.options.theme,onclick:function onclick(){if(confirm(editor.getLang("confirmClear"))){editor.execCommand('cleardoc');}}});editorui.buttons["cleardoc"]=ui;editor.addListener('selectionchange',function(){ui.setDisabled(editor.queryCommandState('cleardoc')==-1);});return ui;};//排版，图片排版，文字方向
var typeset={'justify':['left','right','center','justify'],'imagefloat':['none','left','center','right'],'directionality':['ltr','rtl']};for(var p in typeset){(function(cmd,val){for(var i=0,ci;ci=val[i++];){(function(cmd2){editorui[cmd.replace('float','')+cmd2]=function(editor){var ui=new editorui.Button({className:'edui-for-'+cmd.replace('float','')+cmd2,title:editor.options.labelMap[cmd.replace('float','')+cmd2]||editor.getLang("labelMap."+cmd.replace('float','')+cmd2)||'',theme:editor.options.theme,onclick:function onclick(){editor.execCommand(cmd,cmd2);}});editorui.buttons[cmd]=ui;editor.addListener('selectionchange',function(type,causeByUi,uiReady){ui.setDisabled(editor.queryCommandState(cmd)==-1);ui.setChecked(editor.queryCommandValue(cmd)==cmd2&&!uiReady);});return ui;};})(ci);}})(p,typeset[p]);}//字体颜色和背景颜色
for(var i=0,ci;ci=['backcolor','forecolor'][i++];){editorui[ci]=function(cmd){return function(editor){var ui=new editorui.ColorButton({className:'edui-for-'+cmd,color:'default',title:editor.options.labelMap[cmd]||editor.getLang("labelMap."+cmd)||'',editor:editor,onpickcolor:function onpickcolor(t,color){editor.execCommand(cmd,color);},onpicknocolor:function onpicknocolor(){editor.execCommand(cmd,'default');this.setColor('transparent');this.color='default';},onbuttonclick:function onbuttonclick(){editor.execCommand(cmd,this.color);}});editorui.buttons[cmd]=ui;editor.addListener('selectionchange',function(){ui.setDisabled(editor.queryCommandState(cmd)==-1);});return ui;};}(ci);}var dialogBtns={noOk:['searchreplace','help','spechars','webapp','preview'],ok:['attachment','anchor','link','insertimage','map','gmap','insertframe','wordimage','insertvideo','insertframe','edittip','edittable','edittd','scrawl','template','music','background','charts']};for(var p in dialogBtns){(function(type,vals){for(var i=0,ci;ci=vals[i++];){//todo opera下存在问题
if(browser.opera&&ci==="searchreplace"){continue;}(function(cmd){editorui[cmd]=function(editor,iframeUrl,title){iframeUrl=iframeUrl||(editor.options.iframeUrlMap||{})[cmd]||iframeUrlMap[cmd];title=editor.options.labelMap[cmd]||editor.getLang("labelMap."+cmd)||'';var dialog;//没有iframeUrl不创建dialog
if(iframeUrl){dialog=new editorui.Dialog(utils.extend({iframeUrl:editor.ui.mapUrl(iframeUrl),editor:editor,className:'edui-for-'+cmd,title:title,holdScroll:cmd==='insertimage',fullscreen:/charts|preview/.test(cmd),closeDialog:editor.getLang("closeDialog")},type=='ok'?{buttons:[{className:'edui-okbutton',label:editor.getLang("ok"),editor:editor,onclick:function onclick(){dialog.close(true);}},{className:'edui-cancelbutton',label:editor.getLang("cancel"),editor:editor,onclick:function onclick(){dialog.close(false);}}]}:{}));editor.ui._dialogs[cmd+"Dialog"]=dialog;}var ui=new editorui.Button({className:'edui-for-'+cmd,title:title,onclick:function onclick(){if(dialog){switch(cmd){case"wordimage":var images=editor.execCommand("wordimage");if(images&&images.length){dialog.render();dialog.open();}break;case"scrawl":if(editor.queryCommandState("scrawl")!=-1){dialog.render();dialog.open();}break;default:dialog.render();dialog.open();}}},theme:editor.options.theme,disabled:cmd=='scrawl'&&editor.queryCommandState("scrawl")==-1||cmd=='charts'});editorui.buttons[cmd]=ui;editor.addListener('selectionchange',function(){//只存在于右键菜单而无工具栏按钮的ui不需要检测状态
var unNeedCheckState={'edittable':1};if(cmd in unNeedCheckState)return;var state=editor.queryCommandState(cmd);if(ui.getDom()){ui.setDisabled(state==-1);ui.setChecked(state);}});return ui;};})(ci.toLowerCase());}})(p,dialogBtns[p]);}editorui.snapscreen=function(editor,iframeUrl,title){title=editor.options.labelMap['snapscreen']||editor.getLang("labelMap.snapscreen")||'';var ui=new editorui.Button({className:'edui-for-snapscreen',title:title,onclick:function onclick(){editor.execCommand("snapscreen");},theme:editor.options.theme});editorui.buttons['snapscreen']=ui;iframeUrl=iframeUrl||(editor.options.iframeUrlMap||{})["snapscreen"]||iframeUrlMap["snapscreen"];if(iframeUrl){var dialog=new editorui.Dialog({iframeUrl:editor.ui.mapUrl(iframeUrl),editor:editor,className:'edui-for-snapscreen',title:title,buttons:[{className:'edui-okbutton',label:editor.getLang("ok"),editor:editor,onclick:function onclick(){dialog.close(true);}},{className:'edui-cancelbutton',label:editor.getLang("cancel"),editor:editor,onclick:function onclick(){dialog.close(false);}}]});dialog.render();editor.ui._dialogs["snapscreenDialog"]=dialog;}editor.addListener('selectionchange',function(){ui.setDisabled(editor.queryCommandState('snapscreen')==-1);});return ui;};editorui.insertcode=function(editor,list,title){list=editor.options['insertcode']||[];title=editor.options.labelMap['insertcode']||editor.getLang("labelMap.insertcode")||'';// if (!list.length) return;
var items=[];utils.each(list,function(key,val){items.push({label:key,value:val,theme:editor.options.theme,renderLabelHtml:function renderLabelHtml(){return'<div class="edui-label %%-label" >'+(this.label||'')+'</div>';}});});var ui=new editorui.Combox({editor:editor,items:items,onselect:function onselect(t,index){editor.execCommand('insertcode',this.items[index].value);},onbuttonclick:function onbuttonclick(){this.showPopup();},title:title,initValue:title,className:'edui-for-insertcode',indexByValue:function indexByValue(value){if(value){for(var i=0,ci;ci=this.items[i];i++){if(ci.value.indexOf(value)!=-1)return i;}}return-1;}});editorui.buttons['insertcode']=ui;editor.addListener('selectionchange',function(type,causeByUi,uiReady){if(!uiReady){var state=editor.queryCommandState('insertcode');if(state==-1){ui.setDisabled(true);}else{ui.setDisabled(false);var value=editor.queryCommandValue('insertcode');if(!value){ui.setValue(title);return;}//trace:1871 ie下从源码模式切换回来时，字体会带单引号，而且会有逗号
value&&(value=value.replace(/['"]/g,'').split(',')[0]);ui.setValue(value);}}});return ui;};editorui.fontfamily=function(editor,list,title){list=editor.options['fontfamily']||[];title=editor.options.labelMap['fontfamily']||editor.getLang("labelMap.fontfamily")||'';if(!list.length)return;for(var i=0,ci,items=[];ci=list[i];i++){var langLabel=editor.getLang('fontfamily')[ci.name]||"";(function(key,val){items.push({label:key,value:val,theme:editor.options.theme,renderLabelHtml:function renderLabelHtml(){return'<div class="edui-label %%-label" style="font-family:'+utils.unhtml(this.value)+'">'+(this.label||'')+'</div>';}});})(ci.label||langLabel,ci.val);}var ui=new editorui.Combox({editor:editor,items:items,onselect:function onselect(t,index){editor.execCommand('FontFamily',this.items[index].value);},onbuttonclick:function onbuttonclick(){this.showPopup();},title:title,initValue:title,className:'edui-for-fontfamily',indexByValue:function indexByValue(value){if(value){for(var i=0,ci;ci=this.items[i];i++){if(ci.value.indexOf(value)!=-1)return i;}}return-1;}});editorui.buttons['fontfamily']=ui;editor.addListener('selectionchange',function(type,causeByUi,uiReady){if(!uiReady){var state=editor.queryCommandState('FontFamily');if(state==-1){ui.setDisabled(true);}else{ui.setDisabled(false);var value=editor.queryCommandValue('FontFamily');//trace:1871 ie下从源码模式切换回来时，字体会带单引号，而且会有逗号
value&&(value=value.replace(/['"]/g,'').split(',')[0]);ui.setValue(value);}}});return ui;};editorui.fontsize=function(editor,list,title){title=editor.options.labelMap['fontsize']||editor.getLang("labelMap.fontsize")||'';list=list||editor.options['fontsize']||[];if(!list.length)return;var items=[];for(var i=0;i<list.length;i++){var size=list[i]+'px';items.push({label:size,value:size,theme:editor.options.theme,renderLabelHtml:function renderLabelHtml(){return'<div class="edui-label %%-label" style="line-height:1;font-size:'+this.value+'">'+(this.label||'')+'</div>';}});}var ui=new editorui.Combox({editor:editor,items:items,title:title,initValue:title,onselect:function onselect(t,index){editor.execCommand('FontSize',this.items[index].value);},onbuttonclick:function onbuttonclick(){this.showPopup();},className:'edui-for-fontsize'});editorui.buttons['fontsize']=ui;editor.addListener('selectionchange',function(type,causeByUi,uiReady){if(!uiReady){var state=editor.queryCommandState('FontSize');if(state==-1){ui.setDisabled(true);}else{ui.setDisabled(false);ui.setValue(editor.queryCommandValue('FontSize'));}}});return ui;};editorui.paragraph=function(editor,list,title){title=editor.options.labelMap['paragraph']||editor.getLang("labelMap.paragraph")||'';list=editor.options['paragraph']||[];if(utils.isEmptyObject(list))return;var items=[];for(var i in list){items.push({value:i,label:list[i]||editor.getLang("paragraph")[i],theme:editor.options.theme,renderLabelHtml:function renderLabelHtml(){return'<div class="edui-label %%-label"><span class="edui-for-'+this.value+'">'+(this.label||'')+'</span></div>';}});}var ui=new editorui.Combox({editor:editor,items:items,title:title,initValue:title,className:'edui-for-paragraph',onselect:function onselect(t,index){editor.execCommand('Paragraph',this.items[index].value);},onbuttonclick:function onbuttonclick(){this.showPopup();}});editorui.buttons['paragraph']=ui;editor.addListener('selectionchange',function(type,causeByUi,uiReady){if(!uiReady){var state=editor.queryCommandState('Paragraph');if(state==-1){ui.setDisabled(true);}else{ui.setDisabled(false);var value=editor.queryCommandValue('Paragraph');var index=ui.indexByValue(value);if(index!=-1){ui.setValue(value);}else{ui.setValue(ui.initValue);}}}});return ui;};//自定义标题
editorui.customstyle=function(editor){var list=editor.options['customstyle']||[],title=editor.options.labelMap['customstyle']||editor.getLang("labelMap.customstyle")||'';if(!list.length)return;var langCs=editor.getLang('customstyle');for(var i=0,items=[],t;t=list[i++];){(function(t){var ck={};ck.label=t.label?t.label:langCs[t.name];ck.style=t.style;ck.className=t.className;ck.tag=t.tag;items.push({label:ck.label,value:ck,theme:editor.options.theme,renderLabelHtml:function renderLabelHtml(){return'<div class="edui-label %%-label">'+'<'+ck.tag+' '+(ck.className?' class="'+ck.className+'"':"")+(ck.style?' style="'+ck.style+'"':"")+'>'+ck.label+"<\/"+ck.tag+">"+'</div>';}});})(t);}var ui=new editorui.Combox({editor:editor,items:items,title:title,initValue:title,className:'edui-for-customstyle',onselect:function onselect(t,index){editor.execCommand('customstyle',this.items[index].value);},onbuttonclick:function onbuttonclick(){this.showPopup();},indexByValue:function indexByValue(value){for(var i=0,ti;ti=this.items[i++];){if(ti.label==value){return i-1;}}return-1;}});editorui.buttons['customstyle']=ui;editor.addListener('selectionchange',function(type,causeByUi,uiReady){if(!uiReady){var state=editor.queryCommandState('customstyle');if(state==-1){ui.setDisabled(true);}else{ui.setDisabled(false);var value=editor.queryCommandValue('customstyle');var index=ui.indexByValue(value);if(index!=-1){ui.setValue(value);}else{ui.setValue(ui.initValue);}}}});return ui;};editorui.inserttable=function(editor,iframeUrl,title){title=editor.options.labelMap['inserttable']||editor.getLang("labelMap.inserttable")||'';var ui=new editorui.TableButton({editor:editor,title:title,className:'edui-for-inserttable',onpicktable:function onpicktable(t,numCols,numRows){editor.execCommand('InsertTable',{numRows:numRows,numCols:numCols,border:1});},onbuttonclick:function onbuttonclick(){this.showPopup();}});editorui.buttons['inserttable']=ui;editor.addListener('selectionchange',function(){ui.setDisabled(editor.queryCommandState('inserttable')==-1);});return ui;};editorui.lineheight=function(editor){var val=editor.options.lineheight||[];if(!val.length)return;for(var i=0,ci,items=[];ci=val[i++];){items.push({//todo:写死了
label:ci,value:ci,theme:editor.options.theme,onclick:function onclick(){editor.execCommand("lineheight",this.value);}});}var ui=new editorui.MenuButton({editor:editor,className:'edui-for-lineheight',title:editor.options.labelMap['lineheight']||editor.getLang("labelMap.lineheight")||'',items:items,onbuttonclick:function onbuttonclick(){var value=editor.queryCommandValue('LineHeight')||this.value;editor.execCommand("LineHeight",value);}});editorui.buttons['lineheight']=ui;editor.addListener('selectionchange',function(){var state=editor.queryCommandState('LineHeight');if(state==-1){ui.setDisabled(true);}else{ui.setDisabled(false);var value=editor.queryCommandValue('LineHeight');value&&ui.setValue((value+'').replace(/cm/,''));ui.setChecked(state);}});return ui;};var rowspacings=['top','bottom'];for(var r=0,ri;ri=rowspacings[r++];){(function(cmd){editorui['rowspacing'+cmd]=function(editor){var val=editor.options['rowspacing'+cmd]||[];if(!val.length)return null;for(var i=0,ci,items=[];ci=val[i++];){items.push({label:ci,value:ci,theme:editor.options.theme,onclick:function onclick(){editor.execCommand("rowspacing",this.value,cmd);}});}var ui=new editorui.MenuButton({editor:editor,className:'edui-for-rowspacing'+cmd,title:editor.options.labelMap['rowspacing'+cmd]||editor.getLang("labelMap.rowspacing"+cmd)||'',items:items,onbuttonclick:function onbuttonclick(){var value=editor.queryCommandValue('rowspacing',cmd)||this.value;editor.execCommand("rowspacing",value,cmd);}});editorui.buttons[cmd]=ui;editor.addListener('selectionchange',function(){var state=editor.queryCommandState('rowspacing',cmd);if(state==-1){ui.setDisabled(true);}else{ui.setDisabled(false);var value=editor.queryCommandValue('rowspacing',cmd);value&&ui.setValue((value+'').replace(/%/,''));ui.setChecked(state);}});return ui;};})(ri);}//有序，无序列表
var lists=['insertorderedlist','insertunorderedlist'];for(var l=0,cl;cl=lists[l++];){(function(cmd){editorui[cmd]=function(editor){var vals=editor.options[cmd],_onMenuClick=function _onMenuClick(){editor.execCommand(cmd,this.value);},items=[];for(var i in vals){items.push({label:vals[i]||editor.getLang()[cmd][i]||"",value:i,theme:editor.options.theme,onclick:_onMenuClick});}var ui=new editorui.MenuButton({editor:editor,className:'edui-for-'+cmd,title:editor.getLang("labelMap."+cmd)||'','items':items,onbuttonclick:function onbuttonclick(){var value=editor.queryCommandValue(cmd)||this.value;editor.execCommand(cmd,value);}});editorui.buttons[cmd]=ui;editor.addListener('selectionchange',function(){var state=editor.queryCommandState(cmd);if(state==-1){ui.setDisabled(true);}else{ui.setDisabled(false);var value=editor.queryCommandValue(cmd);ui.setValue(value);ui.setChecked(state);}});return ui;};})(cl);}editorui.fullscreen=function(editor,title){title=editor.options.labelMap['fullscreen']||editor.getLang("labelMap.fullscreen")||'';var ui=new editorui.Button({className:'edui-for-fullscreen',title:title,theme:editor.options.theme,onclick:function onclick(){if(editor.ui){editor.ui.setFullScreen(!editor.ui.isFullScreen());}this.setChecked(editor.ui.isFullScreen());}});editorui.buttons['fullscreen']=ui;editor.addListener('selectionchange',function(){var state=editor.queryCommandState('fullscreen');ui.setDisabled(state==-1);ui.setChecked(editor.ui.isFullScreen());});return ui;};// 表情
editorui["emotion"]=function(editor,iframeUrl){var cmd="emotion";var ui=new editorui.MultiMenuPop({title:editor.options.labelMap[cmd]||editor.getLang("labelMap."+cmd+"")||'',editor:editor,className:'edui-for-'+cmd,iframeUrl:editor.ui.mapUrl(iframeUrl||(editor.options.iframeUrlMap||{})[cmd]||iframeUrlMap[cmd])});editorui.buttons[cmd]=ui;editor.addListener('selectionchange',function(){ui.setDisabled(editor.queryCommandState(cmd)==-1);});return ui;};editorui.autotypeset=function(editor){var ui=new editorui.AutoTypeSetButton({editor:editor,title:editor.options.labelMap['autotypeset']||editor.getLang("labelMap.autotypeset")||'',className:'edui-for-autotypeset',onbuttonclick:function onbuttonclick(){editor.execCommand('autotypeset');}});editorui.buttons['autotypeset']=ui;editor.addListener('selectionchange',function(){ui.setDisabled(editor.queryCommandState('autotypeset')==-1);});return ui;};/* 简单上传插件 */editorui["simpleupload"]=function(editor){var name='simpleupload',ui=new editorui.Button({className:'edui-for-'+name,title:editor.options.labelMap[name]||editor.getLang("labelMap."+name)||'',onclick:function onclick(){},theme:editor.options.theme,showText:false});editorui.buttons[name]=ui;editor.addListener('ready',function(){var b=ui.getDom('body'),iconSpan=b.children[0];editor.fireEvent('simpleuploadbtnready',iconSpan);});editor.addListener('selectionchange',function(type,causeByUi,uiReady){var state=editor.queryCommandState(name);if(state==-1){ui.setDisabled(true);ui.setChecked(false);}else{if(!uiReady){ui.setDisabled(false);ui.setChecked(state);}}});return ui;};})();// adapter/editor.js
///import core
///commands 全屏
///commandsName FullScreen
///commandsTitle  全屏
(function(){var utils=baidu.editor.utils,uiUtils=baidu.editor.ui.uiUtils,UIBase=baidu.editor.ui.UIBase,domUtils=baidu.editor.dom.domUtils;var nodeStack=[];function EditorUI(options){this.initOptions(options);this.initEditorUI();}EditorUI.prototype={uiName:'editor',initEditorUI:function initEditorUI(){this.editor.ui=this;this._dialogs={};this.initUIBase();this._initToolbars();var editor=this.editor,me=this;editor.addListener('ready',function(){//提供getDialog方法
editor.getDialog=function(name){return editor.ui._dialogs[name+"Dialog"];};domUtils.on(editor.window,'scroll',function(evt){baidu.editor.ui.Popup.postHide(evt);});//提供编辑器实时宽高(全屏时宽高不变化)
editor.ui._actualFrameWidth=editor.options.initialFrameWidth;UE.browser.ie&&UE.browser.version===6&&editor.container.ownerDocument.execCommand("BackgroundImageCache",false,true);//display bottom-bar label based on config
if(editor.options.elementPathEnabled){editor.ui.getDom('elementpath').innerHTML='<div class="edui-editor-breadcrumb">'+editor.getLang("elementPathTip")+':</div>';}if(editor.options.wordCount){var countFn=function countFn(){setCount(editor,me);domUtils.un(editor.document,"click",arguments.callee);};domUtils.on(editor.document,"click",countFn);editor.ui.getDom('wordcount').innerHTML=editor.getLang("wordCountTip");}editor.ui._scale();if(editor.options.scaleEnabled){if(editor.autoHeightEnabled){editor.disableAutoHeight();}me.enableScale();}else{me.disableScale();}if(!editor.options.elementPathEnabled&&!editor.options.wordCount&&!editor.options.scaleEnabled){editor.ui.getDom('elementpath').style.display="none";editor.ui.getDom('wordcount').style.display="none";editor.ui.getDom('scale').style.display="none";}if(!editor.selection.isFocus())return;editor.fireEvent('selectionchange',false,true);});editor.addListener('mousedown',function(t,evt){var el=evt.target||evt.srcElement;baidu.editor.ui.Popup.postHide(evt,el);baidu.editor.ui.ShortCutMenu.postHide(evt);});editor.addListener("delcells",function(){if(UE.ui['edittip']){new UE.ui['edittip'](editor);}editor.getDialog('edittip').open();});var pastePop,isPaste=false,timer;editor.addListener("afterpaste",function(){if(editor.queryCommandState('pasteplain'))return;if(baidu.editor.ui.PastePicker){pastePop=new baidu.editor.ui.Popup({content:new baidu.editor.ui.PastePicker({editor:editor}),editor:editor,className:'edui-wordpastepop'});pastePop.render();}isPaste=true;});editor.addListener("afterinserthtml",function(){clearTimeout(timer);timer=setTimeout(function(){if(pastePop&&(isPaste||editor.ui._isTransfer)){if(pastePop.isHidden()){var span=domUtils.createElement(editor.document,'span',{'style':"line-height:0px;",'innerHTML':'\uFEFF'}),range=editor.selection.getRange();range.insertNode(span);var tmp=getDomNode(span,'firstChild','previousSibling');tmp&&pastePop.showAnchor(tmp.nodeType==3?tmp.parentNode:tmp);domUtils.remove(span);}else{pastePop.show();}delete editor.ui._isTransfer;isPaste=false;}},200);});editor.addListener('contextmenu',function(t,evt){baidu.editor.ui.Popup.postHide(evt);});editor.addListener('keydown',function(t,evt){if(pastePop)pastePop.dispose(evt);var keyCode=evt.keyCode||evt.which;if(evt.altKey&&keyCode==90){UE.ui.buttons['fullscreen'].onclick();}});editor.addListener('wordcount',function(type){setCount(this,me);});function setCount(editor,ui){editor.setOpt({wordCount:true,maximumWords:10000,wordCountMsg:editor.options.wordCountMsg||editor.getLang("wordCountMsg"),wordOverFlowMsg:editor.options.wordOverFlowMsg||editor.getLang("wordOverFlowMsg")});var opt=editor.options,max=opt.maximumWords,msg=opt.wordCountMsg,errMsg=opt.wordOverFlowMsg,countDom=ui.getDom('wordcount');if(!opt.wordCount){return;}var count=editor.getContentLength(true);if(count>max){countDom.innerHTML=errMsg;editor.fireEvent("wordcountoverflow");}else{countDom.innerHTML=msg.replace("{#leave}",max-count).replace("{#count}",count);}}editor.addListener('selectionchange',function(){if(editor.options.elementPathEnabled){me[(editor.queryCommandState('elementpath')==-1?'dis':'en')+'ableElementPath']();}if(editor.options.scaleEnabled){me[(editor.queryCommandState('scale')==-1?'dis':'en')+'ableScale']();}});var popup=new baidu.editor.ui.Popup({editor:editor,content:'',className:'edui-bubble',_onEditButtonClick:function _onEditButtonClick(){this.hide();editor.ui._dialogs.linkDialog.open();},_onImgEditButtonClick:function _onImgEditButtonClick(name){this.hide();editor.ui._dialogs[name]&&editor.ui._dialogs[name].open();},_onImgSetFloat:function _onImgSetFloat(value){this.hide();editor.execCommand("imagefloat",value);},_setIframeAlign:function _setIframeAlign(value){var frame=popup.anchorEl;var newFrame=frame.cloneNode(true);switch(value){case-2:newFrame.setAttribute("align","");break;case-1:newFrame.setAttribute("align","left");break;case 1:newFrame.setAttribute("align","right");break;}frame.parentNode.insertBefore(newFrame,frame);domUtils.remove(frame);popup.anchorEl=newFrame;popup.showAnchor(popup.anchorEl);},_updateIframe:function _updateIframe(){var frame=editor._iframe=popup.anchorEl;if(domUtils.hasClass(frame,'ueditor_baidumap')){editor.selection.getRange().selectNode(frame).select();editor.ui._dialogs.mapDialog.open();popup.hide();}else{editor.ui._dialogs.insertframeDialog.open();popup.hide();}},_onRemoveButtonClick:function _onRemoveButtonClick(cmdName){editor.execCommand(cmdName);this.hide();},queryAutoHide:function queryAutoHide(el){if(el&&el.ownerDocument==editor.document){if(el.tagName.toLowerCase()=='img'||domUtils.findParentByTagName(el,'a',true)){return el!==popup.anchorEl;}}return baidu.editor.ui.Popup.prototype.queryAutoHide.call(this,el);}});popup.render();if(editor.options.imagePopup){editor.addListener('mouseover',function(t,evt){evt=evt||window.event;var el=evt.target||evt.srcElement;if(editor.ui._dialogs.insertframeDialog&&/iframe/ig.test(el.tagName)){var html=popup.formatHtml('<nobr>'+editor.getLang("property")+': <span onclick=$$._setIframeAlign(-2) class="edui-clickable">'+editor.getLang("default")+'</span>&nbsp;&nbsp;<span onclick=$$._setIframeAlign(-1) class="edui-clickable">'+editor.getLang("justifyleft")+'</span>&nbsp;&nbsp;<span onclick=$$._setIframeAlign(1) class="edui-clickable">'+editor.getLang("justifyright")+'</span>&nbsp;&nbsp;'+' <span onclick="$$._updateIframe( this);" class="edui-clickable">'+editor.getLang("modify")+'</span></nobr>');if(html){popup.getDom('content').innerHTML=html;popup.anchorEl=el;popup.showAnchor(popup.anchorEl);}else{popup.hide();}}});editor.addListener('selectionchange',function(t,causeByUi){if(!causeByUi)return;var html='',str="",img=editor.selection.getRange().getClosedNode(),dialogs=editor.ui._dialogs;if(img&&img.tagName=='IMG'){var dialogName='insertimageDialog';if(img.className.indexOf("edui-faked-video")!=-1||img.className.indexOf("edui-upload-video")!=-1){dialogName="insertvideoDialog";}if(img.className.indexOf("edui-faked-webapp")!=-1){dialogName="webappDialog";}if(img.src.indexOf("http://api.map.baidu.com")!=-1){dialogName="mapDialog";}if(img.className.indexOf("edui-faked-music")!=-1){dialogName="musicDialog";}if(img.src.indexOf("http://maps.google.com/maps/api/staticmap")!=-1){dialogName="gmapDialog";}if(img.getAttribute("anchorname")){dialogName="anchorDialog";html=popup.formatHtml('<nobr>'+editor.getLang("property")+': <span onclick=$$._onImgEditButtonClick("anchorDialog") class="edui-clickable">'+editor.getLang("modify")+'</span>&nbsp;&nbsp;'+'<span onclick=$$._onRemoveButtonClick(\'anchor\') class="edui-clickable">'+editor.getLang("delete")+'</span></nobr>');}if(img.getAttribute("word_img")){//todo 放到dialog去做查询
editor.word_img=[img.getAttribute("word_img")];dialogName="wordimageDialog";}if(domUtils.hasClass(img,'loadingclass')||domUtils.hasClass(img,'loaderrorclass')){dialogName="";}if(!dialogs[dialogName]){return;}str='<nobr>'+editor.getLang("property")+': '+'<span onclick=$$._onImgSetFloat("none") class="edui-clickable">'+editor.getLang("default")+'</span>&nbsp;&nbsp;'+'<span onclick=$$._onImgSetFloat("left") class="edui-clickable">'+editor.getLang("justifyleft")+'</span>&nbsp;&nbsp;'+'<span onclick=$$._onImgSetFloat("right") class="edui-clickable">'+editor.getLang("justifyright")+'</span>&nbsp;&nbsp;'+'<span onclick=$$._onImgSetFloat("center") class="edui-clickable">'+editor.getLang("justifycenter")+'</span>&nbsp;&nbsp;'+'<span onclick="$$._onImgEditButtonClick(\''+dialogName+'\');" class="edui-clickable">'+editor.getLang("modify")+'</span></nobr>';!html&&(html=popup.formatHtml(str));}if(editor.ui._dialogs.linkDialog){var link=editor.queryCommandValue('link');var url;if(link&&(url=link.getAttribute('_href')||link.getAttribute('href',2))){var txt=url;if(url.length>30){txt=url.substring(0,20)+"...";}if(html){html+='<div style="height:5px;"></div>';}html+=popup.formatHtml('<nobr>'+editor.getLang("anthorMsg")+': <a target="_blank" href="'+url+'" title="'+url+'" >'+txt+'</a>'+' <span class="edui-clickable" onclick="$$._onEditButtonClick();">'+editor.getLang("modify")+'</span>'+' <span class="edui-clickable" onclick="$$._onRemoveButtonClick(\'unlink\');"> '+editor.getLang("clear")+'</span></nobr>');popup.showAnchor(link);}}if(html){popup.getDom('content').innerHTML=html;popup.anchorEl=img||link;popup.showAnchor(popup.anchorEl);}else{popup.hide();}});}},_initToolbars:function _initToolbars(){var editor=this.editor;var toolbars=this.toolbars||[];var toolbarUis=[];for(var i=0;i<toolbars.length;i++){var toolbar=toolbars[i];var toolbarUi=new baidu.editor.ui.Toolbar({theme:editor.options.theme});for(var j=0;j<toolbar.length;j++){var toolbarItem=toolbar[j];var toolbarItemUi=null;if(typeof toolbarItem=='string'){toolbarItem=toolbarItem.toLowerCase();if(toolbarItem=='|'){toolbarItem='Separator';}if(toolbarItem=='||'){toolbarItem='Breakline';}if(baidu.editor.ui[toolbarItem]){toolbarItemUi=new baidu.editor.ui[toolbarItem](editor);}//fullscreen这里单独处理一下，放到首行去
if(toolbarItem=='fullscreen'){if(toolbarUis&&toolbarUis[0]){toolbarUis[0].items.splice(0,0,toolbarItemUi);}else{toolbarItemUi&&toolbarUi.items.splice(0,0,toolbarItemUi);}continue;}}else{toolbarItemUi=toolbarItem;}if(toolbarItemUi&&toolbarItemUi.id){toolbarUi.add(toolbarItemUi);}}toolbarUis[i]=toolbarUi;}//接受外部定制的UI
utils.each(UE._customizeUI,function(obj,key){var itemUI,index;if(obj.id&&obj.id!=editor.key){return false;}itemUI=obj.execFn.call(editor,editor,key);if(itemUI){index=obj.index;if(index===undefined){index=toolbarUi.items.length;}toolbarUi.add(itemUI,index);}});this.toolbars=toolbarUis;},getHtmlTpl:function getHtmlTpl(){return'<div id="##" class="%%">'+'<div id="##_toolbarbox" class="%%-toolbarbox">'+(this.toolbars.length?'<div id="##_toolbarboxouter" class="%%-toolbarboxouter"><div class="%%-toolbarboxinner">'+this.renderToolbarBoxHtml()+'</div></div>':'')+'<div id="##_toolbarmsg" class="%%-toolbarmsg" style="display:none;">'+'<div id = "##_upload_dialog" class="%%-toolbarmsg-upload" onclick="$$.showWordImageDialog();">'+this.editor.getLang("clickToUpload")+'</div>'+'<div class="%%-toolbarmsg-close" onclick="$$.hideToolbarMsg();">x</div>'+'<div id="##_toolbarmsg_label" class="%%-toolbarmsg-label"></div>'+'<div style="height:0;overflow:hidden;clear:both;"></div>'+'</div>'+'<div id="##_message_holder" class="%%-messageholder"></div>'+'</div>'+'<div id="##_iframeholder" class="%%-iframeholder">'+'</div>'+//modify wdcount by matao
'<div id="##_bottombar" class="%%-bottomContainer"><table><tr>'+'<td id="##_elementpath" class="%%-bottombar"></td>'+'<td id="##_wordcount" class="%%-wordcount"></td>'+'<td id="##_scale" class="%%-scale"><div class="%%-icon"></div></td>'+'</tr></table></div>'+'<div id="##_scalelayer"></div>'+'</div>';},showWordImageDialog:function showWordImageDialog(){this._dialogs['wordimageDialog'].open();},renderToolbarBoxHtml:function renderToolbarBoxHtml(){var buff=[];for(var i=0;i<this.toolbars.length;i++){buff.push(this.toolbars[i].renderHtml());}return buff.join('');},setFullScreen:function setFullScreen(fullscreen){var editor=this.editor,container=editor.container.parentNode.parentNode;if(this._fullscreen!=fullscreen){this._fullscreen=fullscreen;this.editor.fireEvent('beforefullscreenchange',fullscreen);if(baidu.editor.browser.gecko){var bk=editor.selection.getRange().createBookmark();}if(fullscreen){while(container.tagName!="BODY"){var position=baidu.editor.dom.domUtils.getComputedStyle(container,"position");nodeStack.push(position);container.style.position="static";container=container.parentNode;}this._bakHtmlOverflow=document.documentElement.style.overflow;this._bakBodyOverflow=document.body.style.overflow;this._bakAutoHeight=this.editor.autoHeightEnabled;this._bakScrollTop=Math.max(document.documentElement.scrollTop,document.body.scrollTop);this._bakEditorContaninerWidth=editor.iframe.parentNode.offsetWidth;if(this._bakAutoHeight){//当全屏时不能执行自动长高
editor.autoHeightEnabled=false;this.editor.disableAutoHeight();}document.documentElement.style.overflow='hidden';//修复，滚动条不收起的问题
window.scrollTo(0,window.scrollY);this._bakCssText=this.getDom().style.cssText;this._bakCssText1=this.getDom('iframeholder').style.cssText;editor.iframe.parentNode.style.width='';this._updateFullScreen();}else{while(container.tagName!="BODY"){container.style.position=nodeStack.shift();container=container.parentNode;}this.getDom().style.cssText=this._bakCssText;this.getDom('iframeholder').style.cssText=this._bakCssText1;if(this._bakAutoHeight){editor.autoHeightEnabled=true;this.editor.enableAutoHeight();}document.documentElement.style.overflow=this._bakHtmlOverflow;document.body.style.overflow=this._bakBodyOverflow;editor.iframe.parentNode.style.width=this._bakEditorContaninerWidth+'px';window.scrollTo(0,this._bakScrollTop);}if(browser.gecko&&editor.body.contentEditable==='true'){var input=document.createElement('input');document.body.appendChild(input);editor.body.contentEditable=false;setTimeout(function(){input.focus();setTimeout(function(){editor.body.contentEditable=true;editor.fireEvent('fullscreenchanged',fullscreen);editor.selection.getRange().moveToBookmark(bk).select(true);baidu.editor.dom.domUtils.remove(input);fullscreen&&window.scroll(0,0);},0);},0);}if(editor.body.contentEditable==='true'){this.editor.fireEvent('fullscreenchanged',fullscreen);this.triggerLayout();}}},_updateFullScreen:function _updateFullScreen(){if(this._fullscreen){var vpRect=uiUtils.getViewportRect();this.getDom().style.cssText='border:0;position:absolute;left:0;top:'+(this.editor.options.topOffset||0)+'px;width:'+vpRect.width+'px;height:'+vpRect.height+'px;z-index:'+(this.getDom().style.zIndex*1+100);uiUtils.setViewportOffset(this.getDom(),{left:0,top:this.editor.options.topOffset||0});this.editor.setHeight(vpRect.height-this.getDom('toolbarbox').offsetHeight-this.getDom('bottombar').offsetHeight-(this.editor.options.topOffset||0),true);//不手动调一下，会导致全屏失效
if(browser.gecko){try{window.onresize();}catch(e){}}}},_updateElementPath:function _updateElementPath(){var bottom=this.getDom('elementpath'),list;if(this.elementPathEnabled&&(list=this.editor.queryCommandValue('elementpath'))){var buff=[];for(var i=0,ci;ci=list[i];i++){buff[i]=this.formatHtml('<span unselectable="on" onclick="$$.editor.execCommand(&quot;elementpath&quot;, &quot;'+i+'&quot;);">'+ci+'</span>');}bottom.innerHTML='<div class="edui-editor-breadcrumb" onmousedown="return false;">'+this.editor.getLang("elementPathTip")+': '+buff.join(' &gt; ')+'</div>';}else{bottom.style.display='none';}},disableElementPath:function disableElementPath(){var bottom=this.getDom('elementpath');bottom.innerHTML='';bottom.style.display='none';this.elementPathEnabled=false;},enableElementPath:function enableElementPath(){var bottom=this.getDom('elementpath');bottom.style.display='';this.elementPathEnabled=true;this._updateElementPath();},_scale:function _scale(){var doc=document,editor=this.editor,editorHolder=editor.container,editorDocument=editor.document,toolbarBox=this.getDom("toolbarbox"),bottombar=this.getDom("bottombar"),scale=this.getDom("scale"),scalelayer=this.getDom("scalelayer");var isMouseMove=false,position=null,minEditorHeight=0,minEditorWidth=editor.options.minFrameWidth,pageX=0,pageY=0,scaleWidth=0,scaleHeight=0;function down(){position=domUtils.getXY(editorHolder);if(!minEditorHeight){minEditorHeight=editor.options.minFrameHeight+toolbarBox.offsetHeight+bottombar.offsetHeight;}scalelayer.style.cssText="position:absolute;left:0;display:;top:0;background-color:#41ABFF;opacity:0.4;filter: Alpha(opacity=40);width:"+editorHolder.offsetWidth+"px;height:"+editorHolder.offsetHeight+"px;z-index:"+(editor.options.zIndex+1);domUtils.on(doc,"mousemove",move);domUtils.on(editorDocument,"mouseup",up);domUtils.on(doc,"mouseup",up);}var me=this;//by xuheng 全屏时关掉缩放
this.editor.addListener('fullscreenchanged',function(e,fullScreen){if(fullScreen){me.disableScale();}else{if(me.editor.options.scaleEnabled){me.enableScale();var tmpNode=me.editor.document.createElement('span');me.editor.body.appendChild(tmpNode);me.editor.body.style.height=Math.max(domUtils.getXY(tmpNode).y,me.editor.iframe.offsetHeight-20)+'px';domUtils.remove(tmpNode);}}});function move(event){clearSelection();var e=event||window.event;pageX=e.pageX||doc.documentElement.scrollLeft+e.clientX;pageY=e.pageY||doc.documentElement.scrollTop+e.clientY;scaleWidth=pageX-position.x;scaleHeight=pageY-position.y;if(scaleWidth>=minEditorWidth){isMouseMove=true;scalelayer.style.width=scaleWidth+'px';}if(scaleHeight>=minEditorHeight){isMouseMove=true;scalelayer.style.height=scaleHeight+"px";}}function up(){if(isMouseMove){isMouseMove=false;editor.ui._actualFrameWidth=scalelayer.offsetWidth-2;editorHolder.style.width=editor.ui._actualFrameWidth+'px';editor.setHeight(scalelayer.offsetHeight-bottombar.offsetHeight-toolbarBox.offsetHeight-2,true);}if(scalelayer){scalelayer.style.display="none";}clearSelection();domUtils.un(doc,"mousemove",move);domUtils.un(editorDocument,"mouseup",up);domUtils.un(doc,"mouseup",up);}function clearSelection(){if(browser.ie)doc.selection.clear();else window.getSelection().removeAllRanges();}this.enableScale=function(){//trace:2868
if(editor.queryCommandState("source")==1)return;scale.style.display="";this.scaleEnabled=true;domUtils.on(scale,"mousedown",down);};this.disableScale=function(){scale.style.display="none";this.scaleEnabled=false;domUtils.un(scale,"mousedown",down);};},isFullScreen:function isFullScreen(){return this._fullscreen;},postRender:function postRender(){UIBase.prototype.postRender.call(this);for(var i=0;i<this.toolbars.length;i++){this.toolbars[i].postRender();}var me=this;var timerId,domUtils=baidu.editor.dom.domUtils,updateFullScreenTime=function updateFullScreenTime(){clearTimeout(timerId);timerId=setTimeout(function(){me._updateFullScreen();});};domUtils.on(window,'resize',updateFullScreenTime);me.addListener('destroy',function(){domUtils.un(window,'resize',updateFullScreenTime);clearTimeout(timerId);});},showToolbarMsg:function showToolbarMsg(msg,flag){this.getDom('toolbarmsg_label').innerHTML=msg;this.getDom('toolbarmsg').style.display='';//
if(!flag){var w=this.getDom('upload_dialog');w.style.display='none';}},hideToolbarMsg:function hideToolbarMsg(){this.getDom('toolbarmsg').style.display='none';},mapUrl:function mapUrl(url){return url?url.replace('~/',this.editor.options.UEDITOR_HOME_URL||''):'';},triggerLayout:function triggerLayout(){var dom=this.getDom();if(dom.style.zoom=='1'){dom.style.zoom='100%';}else{dom.style.zoom='1';}}};utils.inherits(EditorUI,baidu.editor.ui.UIBase);var instances={};UE.ui.Editor=function(options){var editor=new UE.Editor(options);editor.options.editor=editor;utils.loadFile(document,{href:editor.options.themePath+editor.options.theme+"/css/ueditor.css",tag:"link",type:"text/css",rel:"stylesheet"});var oldRender=editor.render;editor.render=function(holder){if(holder.constructor===String){editor.key=holder;instances[holder]=editor;}utils.domReady(function(){editor.langIsReady?renderUI():editor.addListener("langReady",renderUI);function renderUI(){editor.setOpt({labelMap:editor.options.labelMap||editor.getLang('labelMap')});new EditorUI(editor.options);if(holder){if(holder.constructor===String){holder=document.getElementById(holder);}holder&&holder.getAttribute('name')&&(editor.options.textarea=holder.getAttribute('name'));if(holder&&/script|textarea/ig.test(holder.tagName)){var newDiv=document.createElement('div');holder.parentNode.insertBefore(newDiv,holder);var cont=holder.value||holder.innerHTML;editor.options.initialContent=/^[\t\r\n ]*$/.test(cont)?editor.options.initialContent:cont.replace(/>[\n\r\t]+([ ]{4})+/g,'>').replace(/[\n\r\t]+([ ]{4})+</g,'<').replace(/>[\n\r\t]+</g,'><');holder.className&&(newDiv.className=holder.className);holder.style.cssText&&(newDiv.style.cssText=holder.style.cssText);if(/textarea/i.test(holder.tagName)){editor.textarea=holder;editor.textarea.style.display='none';}else{holder.parentNode.removeChild(holder);}if(holder.id){newDiv.id=holder.id;domUtils.removeAttributes(holder,'id');}holder=newDiv;holder.innerHTML='';}}domUtils.addClass(holder,"edui-"+editor.options.theme);editor.ui.render(holder);var opt=editor.options;//给实例添加一个编辑器的容器引用
editor.container=editor.ui.getDom();var parents=domUtils.findParents(holder,true);var displays=[];for(var i=0,ci;ci=parents[i];i++){displays[i]=ci.style.display;ci.style.display='block';}if(opt.initialFrameWidth){opt.minFrameWidth=opt.initialFrameWidth;}else{opt.minFrameWidth=opt.initialFrameWidth=holder.offsetWidth;var styleWidth=holder.style.width;if(/%$/.test(styleWidth)){opt.initialFrameWidth=styleWidth;}}if(opt.initialFrameHeight){opt.minFrameHeight=opt.initialFrameHeight;}else{opt.initialFrameHeight=opt.minFrameHeight=holder.offsetHeight;}for(var i=0,ci;ci=parents[i];i++){ci.style.display=displays[i];}//编辑器最外容器设置了高度，会导致，编辑器不占位
//todo 先去掉，没有找到原因
if(holder.style.height){holder.style.height='';}editor.container.style.width=opt.initialFrameWidth+(/%$/.test(opt.initialFrameWidth)?'':'px');editor.container.style.zIndex=opt.zIndex;oldRender.call(editor,editor.ui.getDom('iframeholder'));editor.fireEvent("afteruiready");}});};return editor;};/**
     * @file
     * @name UE
     * @short UE
     * @desc UEditor的顶部命名空间
     *//**
     * @name getEditor
     * @since 1.2.4+
     * @grammar UE.getEditor(id,[opt])  =>  Editor实例
     * @desc 提供一个全局的方法得到编辑器实例
     *
     * * ''id''  放置编辑器的容器id, 如果容器下的编辑器已经存在，就直接返回
     * * ''opt'' 编辑器的可选参数
     * @example
     *  UE.getEditor('containerId',{onready:function(){//创建一个编辑器实例
     *      this.setContent('hello')
     *  }});
     *  UE.getEditor('containerId'); //返回刚创建的实例
     *
     */UE.getEditor=function(id,opt){var editor=instances[id];if(!editor){editor=instances[id]=new UE.ui.Editor(opt);editor.render(id);}return editor;};UE.delEditor=function(id){var editor;if(editor=instances[id]){editor.key&&editor.destroy();delete instances[id];}};UE.registerUI=function(uiName,fn,index,editorId){utils.each(uiName.split(/\s+/),function(name){UE._customizeUI[name]={id:editorId,execFn:fn,index:index};});};})();// adapter/message.js
UE.registerUI('message',function(editor){var editorui=baidu.editor.ui;var Message=editorui.Message;var holder;var _messageItems=[];var me=editor;me.addListener('ready',function(){holder=document.getElementById(me.ui.id+'_message_holder');updateHolderPos();setTimeout(function(){updateHolderPos();},500);});me.addListener('showmessage',function(type,opt){opt=utils.isString(opt)?{'content':opt}:opt;var message=new Message({'timeout':opt.timeout,'type':opt.type,'content':opt.content,'keepshow':opt.keepshow,'editor':me}),mid=opt.id||'msg_'+(+new Date()).toString(36);message.render(holder);_messageItems[mid]=message;message.reset(opt);updateHolderPos();return mid;});me.addListener('updatemessage',function(type,id,opt){opt=utils.isString(opt)?{'content':opt}:opt;var message=_messageItems[id];message.render(holder);message&&message.reset(opt);});me.addListener('hidemessage',function(type,id){var message=_messageItems[id];message&&message.hide();});function updateHolderPos(){var toolbarbox=me.ui.getDom('toolbarbox');if(toolbarbox){holder.style.top=toolbarbox.offsetHeight+3+'px';}holder.style.zIndex=Math.max(me.options.zIndex,me.iframe.style.zIndex)+1;}});// adapter/autosave.js
UE.registerUI('autosave',function(editor){var timer=null,uid=null;editor.on('afterautosave',function(){clearTimeout(timer);timer=setTimeout(function(){if(uid){editor.trigger('hidemessage',uid);}uid=editor.trigger('showmessage',{content:editor.getLang('autosave.success'),timeout:2000});},2000);});});})();

/***/ }),

/***/ 1264:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Created with JetBrains PhpStorm.
 * User: taoqili
 * Date: 12-6-12
 * Time: 下午5:02
 * To change this template use File | Settings | File Templates.
 */
UE.I18N['zh-cn'] = {
    'labelMap': {
        'anchor': '锚点', 'undo': '撤销', 'redo': '重做', 'bold': '加粗', 'indent': '首行缩进', 'snapscreen': '截图',
        'italic': '斜体', 'underline': '下划线', 'strikethrough': '删除线', 'subscript': '下标', 'fontborder': '字符边框',
        'superscript': '上标', 'formatmatch': '格式刷', 'source': '源代码', 'blockquote': '引用',
        'pasteplain': '纯文本粘贴模式', 'selectall': '全选', 'print': '打印', 'preview': '预览',
        'horizontal': '分隔线', 'removeformat': '清除格式', 'time': '时间', 'date': '日期',
        'unlink': '取消链接', 'insertrow': '前插入行', 'insertcol': '前插入列', 'mergeright': '右合并单元格', 'mergedown': '下合并单元格',
        'deleterow': '删除行', 'deletecol': '删除列', 'splittorows': '拆分成行',
        'splittocols': '拆分成列', 'splittocells': '完全拆分单元格', 'deletecaption': '删除表格标题', 'inserttitle': '插入标题',
        'mergecells': '合并多个单元格', 'deletetable': '删除表格', 'cleardoc': '清空文档', 'insertparagraphbeforetable': "表格前插入行", 'insertcode': '代码语言',
        'fontfamily': '字体', 'fontsize': '字号', 'paragraph': '段落格式', 'simpleupload': '单图上传', 'insertimage': '多图上传', 'edittable': '表格属性', 'edittd': '单元格属性', 'link': '超链接',
        'emotion': '表情', 'spechars': '特殊字符', 'searchreplace': '查询替换', 'map': 'Baidu地图', 'gmap': 'Google地图',
        'insertvideo': '视频', 'help': '帮助', 'justifyleft': '居左对齐', 'justifyright': '居右对齐', 'justifycenter': '居中对齐',
        'justifyjustify': '两端对齐', 'forecolor': '字体颜色', 'backcolor': '背景色', 'insertorderedlist': '有序列表',
        'insertunorderedlist': '无序列表', 'fullscreen': '全屏', 'directionalityltr': '从左向右输入', 'directionalityrtl': '从右向左输入',
        'rowspacingtop': '段前距', 'rowspacingbottom': '段后距', 'pagebreak': '分页', 'insertframe': '插入Iframe', 'imagenone': '默认',
        'imageleft': '左浮动', 'imageright': '右浮动', 'attachment': '附件', 'imagecenter': '居中', 'wordimage': '图片转存',
        'lineheight': '行间距', 'edittip': '编辑提示', 'customstyle': '自定义标题', 'autotypeset': '自动排版',
        'webapp': '百度应用', 'touppercase': '字母大写', 'tolowercase': '字母小写', 'background': '背景', 'template': '模板', 'scrawl': '涂鸦',
        'music': '音乐', 'inserttable': '插入表格', 'drafts': '从草稿箱加载', 'charts': '图表'
    },
    'insertorderedlist': {
        'num': '1,2,3...',
        'num1': '1),2),3)...',
        'num2': '(1),(2),(3)...',
        'cn': '一,二,三....',
        'cn1': '一),二),三)....',
        'cn2': '(一),(二),(三)....',
        'decimal': '1,2,3...',
        'lower-alpha': 'a,b,c...',
        'lower-roman': 'i,ii,iii...',
        'upper-alpha': 'A,B,C...',
        'upper-roman': 'I,II,III...'
    },
    'insertunorderedlist': {
        'circle': '○ 大圆圈',
        'disc': '● 小黑点',
        'square': '■ 小方块 ',
        'dash': '— 破折号',
        'dot': ' 。 小圆圈'
    },
    'paragraph': { 'p': '段落', 'h1': '标题 1', 'h2': '标题 2', 'h3': '标题 3', 'h4': '标题 4', 'h5': '标题 5', 'h6': '标题 6' },
    'fontfamily': {
        'songti': '宋体',
        'kaiti': '楷体',
        'heiti': '黑体',
        'lishu': '隶书',
        'yahei': '微软雅黑',
        'andaleMono': 'andale mono',
        'arial': 'arial',
        'arialBlack': 'arial black',
        'comicSansMs': 'comic sans ms',
        'impact': 'impact',
        'timesNewRoman': 'times new roman'
    },
    'customstyle': {
        'tc': '标题居中',
        'tl': '标题居左',
        'im': '强调',
        'hi': '明显强调'
    },
    'autoupload': {
        'exceedSizeError': '文件大小超出限制',
        'exceedTypeError': '文件格式不允许',
        'jsonEncodeError': '服务器返回格式错误',
        'loading': "正在上传...",
        'loadError': "上传错误",
        'errorLoadConfig': '后端配置项没有正常加载，上传插件不能正常使用！'
    },
    'simpleupload': {
        'exceedSizeError': '文件大小超出限制',
        'exceedTypeError': '文件格式不允许',
        'jsonEncodeError': '服务器返回格式错误',
        'loading': "正在上传...",
        'loadError': "上传错误",
        'errorLoadConfig': '后端配置项没有正常加载，上传插件不能正常使用！'
    },
    'elementPathTip': "元素路径",
    'wordCountTip': "字数统计",
    'wordCountMsg': '当前已输入{#count}个字符, 您还可以输入{#leave}个字符。 ',
    'wordOverFlowMsg': '<span style="color:red;">字数超出最大允许值，服务器可能拒绝保存！</span>',
    'ok': "确认",
    'cancel': "取消",
    'closeDialog': "关闭对话框",
    'tableDrag': "表格拖动必须引入uiUtils.js文件！",
    'autofloatMsg': "工具栏浮动依赖编辑器UI，您首先需要引入UI文件!",
    'loadconfigError': '获取后台配置项请求出错，上传功能将不能正常使用！',
    'loadconfigFormatError': '后台配置项返回格式出错，上传功能将不能正常使用！',
    'loadconfigHttpError': '请求后台配置项http错误，上传功能将不能正常使用！',
    'snapScreen_plugin': {
        'browserMsg': "仅支持IE浏览器！",
        'callBackErrorMsg': "服务器返回数据有误，请检查配置项之后重试。",
        'uploadErrorMsg': "截图上传失败，请检查服务器端环境! "
    },
    'insertcode': {
        'as3': 'ActionScript 3',
        'bash': 'Bash/Shell',
        'cpp': 'C/C++',
        'css': 'CSS',
        'cf': 'ColdFusion',
        'c#': 'C#',
        'delphi': 'Delphi',
        'diff': 'Diff',
        'erlang': 'Erlang',
        'groovy': 'Groovy',
        'html': 'HTML',
        'java': 'Java',
        'jfx': 'JavaFX',
        'js': 'JavaScript',
        'pl': 'Perl',
        'php': 'PHP',
        'plain': 'Plain Text',
        'ps': 'PowerShell',
        'python': 'Python',
        'ruby': 'Ruby',
        'scala': 'Scala',
        'sql': 'SQL',
        'vb': 'Visual Basic',
        'xml': 'XML'
    },
    'confirmClear': "确定清空当前文档么？",
    'contextMenu': {
        'delete': "删除",
        'selectall': "全选",
        'deletecode': "删除代码",
        'cleardoc': "清空文档",
        'confirmclear': "确定清空当前文档么？",
        'unlink': "删除超链接",
        'paragraph': "段落格式",
        'edittable': "表格属性",
        'aligntd': "单元格对齐方式",
        'aligntable': '表格对齐方式',
        'tableleft': '左浮动',
        'tablecenter': '居中显示',
        'tableright': '右浮动',
        'edittd': "单元格属性",
        'setbordervisible': '设置表格边线可见',
        'justifyleft': '左对齐',
        'justifyright': '右对齐',
        'justifycenter': '居中对齐',
        'justifyjustify': '两端对齐',
        'table': "表格",
        'inserttable': '插入表格',
        'deletetable': "删除表格",
        'insertparagraphbefore': "前插入段落",
        'insertparagraphafter': '后插入段落',
        'deleterow': "删除当前行",
        'deletecol': "删除当前列",
        'insertrow': "前插入行",
        'insertcol': "左插入列",
        'insertrownext': '后插入行',
        'insertcolnext': '右插入列',
        'insertcaption': '插入表格名称',
        'deletecaption': '删除表格名称',
        'inserttitle': '插入表格标题行',
        'deletetitle': '删除表格标题行',
        'inserttitlecol': '插入表格标题列',
        'deletetitlecol': '删除表格标题列',
        'averageDiseRow': '平均分布各行',
        'averageDisCol': '平均分布各列',
        'mergeright': "向右合并",
        'mergeleft': "向左合并",
        'mergedown': "向下合并",
        'mergecells': "合并单元格",
        'splittocells': "完全拆分单元格",
        'splittocols': "拆分成列",
        'splittorows': "拆分成行",
        'tablesort': '表格排序',
        'enablesort': '设置表格可排序',
        'disablesort': '取消表格可排序',
        'reversecurrent': '逆序当前',
        'orderbyasc': '按ASCII字符升序',
        'reversebyasc': '按ASCII字符降序',
        'orderbynum': '按数值大小升序',
        'reversebynum': '按数值大小降序',
        'borderbk': '边框底纹',
        'setcolor': '表格隔行变色',
        'unsetcolor': '取消表格隔行变色',
        'setbackground': '选区背景隔行',
        'unsetbackground': '取消选区背景',
        'redandblue': '红蓝相间',
        'threecolorgradient': '三色渐变',
        'copy': "复制(Ctrl + c)",
        'copymsg': "浏览器不支持,请使用 'Ctrl + c'",
        'paste': "粘贴(Ctrl + v)",
        'pastemsg': "浏览器不支持,请使用 'Ctrl + v'"
    },
    'copymsg': "浏览器不支持,请使用 'Ctrl + c'",
    'pastemsg': "浏览器不支持,请使用 'Ctrl + v'",
    'anthorMsg': "链接",
    'clearColor': '清空颜色',
    'standardColor': '标准颜色',
    'themeColor': '主题颜色',
    'property': '属性',
    'default': '默认',
    'modify': '修改',
    'justifyleft': '左对齐',
    'justifyright': '右对齐',
    'justifycenter': '居中',
    'justify': '默认',
    'clear': '清除',
    'anchorMsg': '锚点',
    'delete': '删除',
    'clickToUpload': "点击上传",
    'unset': '尚未设置语言文件',
    't_row': '行',
    't_col': '列',
    'more': '更多',
    'pasteOpt': '粘贴选项',
    'pasteSourceFormat': "保留源格式",
    'tagFormat': '只保留标签',
    'pasteTextFormat': '只保留文本',
    'autoTypeSet': {
        'mergeLine': "合并空行",
        'delLine': "清除空行",
        'removeFormat': "清除格式",
        'indent': "首行缩进",
        'alignment': "对齐方式",
        'imageFloat': "图片浮动",
        'removeFontsize': "清除字号",
        'removeFontFamily': "清除字体",
        'removeHtml': "清除冗余HTML代码",
        'pasteFilter': "粘贴过滤",
        'run': "执行",
        'symbol': '符号转换',
        'bdc2sb': '全角转半角',
        'tobdc': '半角转全角'
    },

    'background': {
        'static': {
            'lang_background_normal': '背景设置',
            'lang_background_local': '在线图片',
            'lang_background_set': '选项',
            'lang_background_none': '无背景色',
            'lang_background_colored': '有背景色',
            'lang_background_color': '颜色设置',
            'lang_background_netimg': '网络图片',
            'lang_background_align': '对齐方式',
            'lang_background_position': '精确定位',
            'repeatType': { 'options': ["居中", "横向重复", "纵向重复", "平铺", "自定义"] }

        },
        'noUploadImage': "当前未上传过任何图片！",
        'toggleSelect': "单击可切换选中状态\n原图尺寸: "
    },
    //===============dialog i18N=======================
    'insertimage': {
        'static': {
            'lang_tab_remote': "插入图片", //节点
            'lang_tab_upload': "本地上传",
            'lang_tab_online': "在线管理",
            'lang_tab_search': "图片搜索",
            'lang_input_url': "地 址：",
            'lang_input_size': "大 小：",
            'lang_input_width': "宽度",
            'lang_input_height': "高度",
            'lang_input_border': "边 框：",
            'lang_input_vhspace': "边 距：",
            'lang_input_title': "描 述：",
            'lang_input_align': '图片浮动方式：',
            'lang_imgLoading': "　图片加载中……",
            'lang_start_upload': "开始上传",
            'lock': { 'title': "锁定宽高比例" }, //属性
            'searchType': { 'title': "图片类型", 'options': ["新闻", "壁纸", "表情", "头像"] }, //select的option
            'searchTxt': { 'value': "请输入搜索关键词" },
            'searchBtn': { 'value': "百度一下" },
            'searchReset': { 'value': "清空搜索" },
            'noneAlign': { 'title': '无浮动' },
            'leftAlign': { 'title': '左浮动' },
            'rightAlign': { 'title': '右浮动' },
            'centerAlign': { 'title': '居中独占一行' }
        },
        'uploadSelectFile': '点击选择图片',
        'uploadAddFile': '继续添加',
        'uploadStart': '开始上传',
        'uploadPause': '暂停上传',
        'uploadContinue': '继续上传',
        'uploadRetry': '重试上传',
        'uploadDelete': '删除',
        'uploadTurnLeft': '向左旋转',
        'uploadTurnRight': '向右旋转',
        'uploadPreview': '预览中',
        'uploadNoPreview': '不能预览',
        'updateStatusReady': '选中_张图片，共_KB。',
        'updateStatusConfirm': '已成功上传_张照片，_张照片上传失败',
        'updateStatusFinish': '共_张（_KB），_张上传成功',
        'updateStatusError': '，_张上传失败。',
        'errorNotSupport': 'WebUploader 不支持您的浏览器！如果你使用的是IE浏览器，请尝试升级 flash 播放器。',
        'errorLoadConfig': '后端配置项没有正常加载，上传插件不能正常使用！',
        'errorExceedSize': '文件大小超出',
        'errorFileType': '文件格式不允许',
        'errorInterrupt': '文件传输中断',
        'errorUploadRetry': '上传失败，请重试',
        'errorHttp': 'http请求错误',
        'errorServerUpload': '服务器返回出错',
        'remoteLockError': "宽高不正确,不能所定比例",
        'numError': "请输入正确的长度或者宽度值！例如：123，400",
        'imageUrlError': "不允许的图片格式或者图片域！",
        'imageLoadError': "图片加载失败！请检查链接地址或网络状态！",
        'searchRemind': "请输入搜索关键词",
        'searchLoading': "图片加载中，请稍后……",
        'searchRetry': " :( ，抱歉，没有找到图片！请重试一次！"
    },
    'attachment': {
        'static': {
            'lang_tab_upload': '上传附件',
            'lang_tab_online': '在线附件',
            'lang_start_upload': "开始上传",
            'lang_drop_remind': "可以将文件拖到这里，单次最多可选100个文件"
        },
        'uploadSelectFile': '点击选择文件',
        'uploadAddFile': '继续添加',
        'uploadStart': '开始上传',
        'uploadPause': '暂停上传',
        'uploadContinue': '继续上传',
        'uploadRetry': '重试上传',
        'uploadDelete': '删除',
        'uploadTurnLeft': '向左旋转',
        'uploadTurnRight': '向右旋转',
        'uploadPreview': '预览中',
        'updateStatusReady': '选中_个文件，共_KB。',
        'updateStatusConfirm': '已成功上传_个文件，_个文件上传失败',
        'updateStatusFinish': '共_个（_KB），_个上传成功',
        'updateStatusError': '，_张上传失败。',
        'errorNotSupport': 'WebUploader 不支持您的浏览器！如果你使用的是IE浏览器，请尝试升级 flash 播放器。',
        'errorLoadConfig': '后端配置项没有正常加载，上传插件不能正常使用！',
        'errorExceedSize': '文件大小超出',
        'errorFileType': '文件格式不允许',
        'errorInterrupt': '文件传输中断',
        'errorUploadRetry': '上传失败，请重试',
        'errorHttp': 'http请求错误',
        'errorServerUpload': '服务器返回出错'
    },
    'insertvideo': {
        'static': {
            'lang_tab_insertV': "插入视频",
            'lang_tab_searchV': "搜索视频",
            'lang_tab_uploadV': "上传视频",
            'lang_video_url': "视频网址",
            'lang_video_size': "视频尺寸",
            'lang_videoW': "宽度",
            'lang_videoH': "高度",
            'lang_alignment': "对齐方式",
            'videoSearchTxt': { 'value': "请输入搜索关键字！" },
            'videoType': { 'options': ["全部", "热门", "娱乐", "搞笑", "体育", "科技", "综艺"] },
            'videoSearchBtn': { 'value': "百度一下" },
            'videoSearchReset': { 'value': "清空结果" },

            'lang_input_fileStatus': ' 当前未上传文件',
            'startUpload': { 'style': "background:url(upload.png) no-repeat;" },

            'lang_upload_size': "视频尺寸",
            'lang_upload_width': "宽度",
            'lang_upload_height': "高度",
            'lang_upload_alignment': "对齐方式",
            'lang_format_advice': "建议使用mp4格式."

        },
        'numError': "请输入正确的数值，如123,400",
        'floatLeft': "左浮动",
        'floatRight': "右浮动",
        '"default"': "默认",
        'block': "独占一行",
        'urlError': "输入的视频地址有误，请检查后再试！",
        'loading': " &nbsp;视频加载中，请等待……",
        'clickToSelect': "点击选中",
        'goToSource': '访问源视频',
        'noVideo': " &nbsp; &nbsp;抱歉，找不到对应的视频，请重试！",

        'browseFiles': '浏览文件',
        'uploadSuccess': '上传成功!',
        'delSuccessFile': '从成功队列中移除',
        'delFailSaveFile': '移除保存失败文件',
        'statusPrompt': ' 个文件已上传！ ',
        'flashVersionError': '当前Flash版本过低，请更新FlashPlayer后重试！',
        'flashLoadingError': 'Flash加载失败!请检查路径或网络状态',
        'fileUploadReady': '等待上传……',
        'delUploadQueue': '从上传队列中移除',
        'limitPrompt1': '单次不能选择超过',
        'limitPrompt2': '个文件！请重新选择！',
        'delFailFile': '移除失败文件',
        'fileSizeLimit': '文件大小超出限制！',
        'emptyFile': '空文件无法上传！',
        'fileTypeError': '文件类型不允许！',
        'unknownError': '未知错误！',
        'fileUploading': '上传中，请等待……',
        'cancelUpload': '取消上传',
        'netError': '网络错误',
        'failUpload': '上传失败!',
        'serverIOError': '服务器IO错误！',
        'noAuthority': '无权限！',
        'fileNumLimit': '上传个数限制',
        'failCheck': '验证失败，本次上传被跳过！',
        'fileCanceling': '取消中，请等待……',
        'stopUploading': '上传已停止……',

        'uploadSelectFile': '点击选择文件',
        'uploadAddFile': '继续添加',
        'uploadStart': '开始上传',
        'uploadPause': '暂停上传',
        'uploadContinue': '继续上传',
        'uploadRetry': '重试上传',
        'uploadDelete': '删除',
        'uploadTurnLeft': '向左旋转',
        'uploadTurnRight': '向右旋转',
        'uploadPreview': '预览中',
        'updateStatusReady': '选中_个文件，共_KB。',
        'updateStatusConfirm': '成功上传_个，_个失败',
        'updateStatusFinish': '共_个(_KB)，_个成功上传',
        'updateStatusError': '，_张上传失败。',
        'errorNotSupport': 'WebUploader 不支持您的浏览器！如果你使用的是IE浏览器，请尝试升级 flash 播放器。',
        'errorLoadConfig': '后端配置项没有正常加载，上传插件不能正常使用！',
        'errorExceedSize': '文件大小超出',
        'errorFileType': '文件格式不允许',
        'errorInterrupt': '文件传输中断',
        'errorUploadRetry': '上传失败，请重试',
        'errorHttp': 'http请求错误',
        'errorServerUpload': '服务器返回出错'
    },
    'webapp': {
        'tip1': "本功能由百度APP提供，如看到此页面，请各位站长首先申请百度APPKey!",
        'tip2': "申请完成之后请至ueditor.config.js中配置获得的appkey! ",
        'applyFor': "点此申请",
        'anthorApi': "百度API"
    },
    'template': {
        'static': {
            'lang_template_bkcolor': '背景颜色',
            'lang_template_clear': '保留原有内容',
            'lang_template_select': '选择模板'
        },
        'blank': "空白文档",
        'blog': "博客文章",
        'resume': "个人简历",
        'richText': "图文混排",
        'sciPapers': "科技论文"

    },
    'scrawl': {
        'static': {
            'lang_input_previousStep': "上一步",
            'lang_input_nextsStep': "下一步",
            'lang_input_clear': '清空',
            'lang_input_addPic': '添加背景',
            'lang_input_ScalePic': '缩放背景',
            'lang_input_removePic': '删除背景',
            'J_imgTxt': { title: '添加背景图片' }
        },
        'noScarwl': "尚未作画，白纸一张~",
        'scrawlUpLoading': "涂鸦上传中,别急哦~",
        'continueBtn': "继续",
        'imageError': "糟糕，图片读取失败了！",
        'backgroundUploading': '背景图片上传中,别急哦~'
    },
    'music': {
        'static': {
            'lang_input_tips': "输入歌手/歌曲/专辑，搜索您感兴趣的音乐！",
            'J_searchBtn': { value: '搜索歌曲' }
        },
        'emptyTxt': '未搜索到相关音乐结果，请换一个关键词试试。',
        'chapter': '歌曲',
        'singer': '歌手',
        'special': '专辑',
        'listenTest': '试听'
    },
    'anchor': {
        'static': {
            'lang_input_anchorName': '锚点名字：'
        }
    },
    'charts': {
        'static': {
            'lang_data_source': '数据源：',
            'lang_chart_format': '图表格式：',
            'lang_data_align': '数据对齐方式',
            'lang_chart_align_same': '数据源与图表X轴Y轴一致',
            'lang_chart_align_reverse': '数据源与图表X轴Y轴相反',
            'lang_chart_title': '图表标题',
            'lang_chart_main_title': '主标题：',
            'lang_chart_sub_title': '子标题：',
            'lang_chart_x_title': 'X轴标题：',
            'lang_chart_y_title': 'Y轴标题：',
            'lang_chart_tip': '提示文字',
            'lang_cahrt_tip_prefix': '提示文字前缀：',
            'lang_cahrt_tip_description': '仅饼图有效， 当鼠标移动到饼图中相应的块上时，提示框内的文字的前缀',
            'lang_chart_data_unit': '数据单位',
            'lang_chart_data_unit_title': '单位：',
            'lang_chart_data_unit_description': '显示在每个数据点上的数据的单位， 比如： 温度的单位 ℃',
            'lang_chart_type': '图表类型：',
            'lang_prev_btn': '上一个',
            'lang_next_btn': '下一个'
        }
    },
    'emotion': {
        'static': {
            'lang_input_choice': '精选',
            'lang_input_Tuzki': '兔斯基',
            'lang_input_BOBO': 'BOBO',
            'lang_input_lvdouwa': '绿豆蛙',
            'lang_input_babyCat': 'baby猫',
            'lang_input_bubble': '泡泡',
            'lang_input_youa': '有啊'
        }
    },
    'gmap': {
        'static': {
            'lang_input_address': '地址',
            'lang_input_search': '搜索',
            'address': { value: "北京" }
        },
        searchError: '无法定位到该地址!'
    },
    'help': {
        'static': {
            'lang_input_about': '关于UEditor',
            'lang_input_shortcuts': '快捷键',
            'lang_input_introduction': 'UEditor是由百度web前端研发部开发的所见即所得富文本web编辑器，具有轻量，可定制，注重用户体验等特点。开源基于BSD协议，允许自由使用和修改代码。',
            'lang_Txt_shortcuts': '快捷键',
            'lang_Txt_func': '功能',
            'lang_Txt_bold': '给选中字设置为加粗',
            'lang_Txt_copy': '复制选中内容',
            'lang_Txt_cut': '剪切选中内容',
            'lang_Txt_Paste': '粘贴',
            'lang_Txt_undo': '重新执行上次操作',
            'lang_Txt_redo': '撤销上一次操作',
            'lang_Txt_italic': '给选中字设置为斜体',
            'lang_Txt_underline': '给选中字加下划线',
            'lang_Txt_selectAll': '全部选中',
            'lang_Txt_visualEnter': '软回车',
            'lang_Txt_fullscreen': '全屏'
        }
    },
    'insertframe': {
        'static': {
            'lang_input_address': '地址：',
            'lang_input_width': '宽度：',
            'lang_input_height': '高度：',
            'lang_input_isScroll': '允许滚动条：',
            'lang_input_frameborder': '显示框架边框：',
            'lang_input_alignMode': '对齐方式：',
            'align': { title: "对齐方式", options: ["默认", "左对齐", "右对齐", "居中"] }
        },
        'enterAddress': '请输入地址!'
    },
    'link': {
        'static': {
            'lang_input_text': '文本内容：',
            'lang_input_url': '链接地址：',
            'lang_input_title': '标题：',
            'lang_input_target': '是否在新窗口打开：'
        },
        'validLink': '只支持选中一个链接时生效',
        'httpPrompt': '您输入的超链接中不包含http等协议名称，默认将为您添加http://前缀'
    },
    'map': {
        'static': {
            lang_city: "城市",
            lang_address: "地址",
            city: { value: "北京" },
            lang_search: "搜索",
            lang_dynamicmap: "插入动态地图"
        },
        cityMsg: "请选择城市",
        errorMsg: "抱歉，找不到该位置！"
    },
    'searchreplace': {
        'static': {
            lang_tab_search: "查找",
            lang_tab_replace: "替换",
            lang_search1: "查找",
            lang_search2: "查找",
            lang_replace: "替换",
            lang_searchReg: '支持正则表达式，添加前后斜杠标示为正则表达式，例如“/表达式/”',
            lang_searchReg1: '支持正则表达式，添加前后斜杠标示为正则表达式，例如“/表达式/”',
            lang_case_sensitive1: "区分大小写",
            lang_case_sensitive2: "区分大小写",
            nextFindBtn: { value: "下一个" },
            preFindBtn: { value: "上一个" },
            nextReplaceBtn: { value: "下一个" },
            preReplaceBtn: { value: "上一个" },
            repalceBtn: { value: "替换" },
            repalceAllBtn: { value: "全部替换" }
        },
        getEnd: "已经搜索到文章末尾！",
        getStart: "已经搜索到文章头部",
        countMsg: "总共替换了{#count}处！"
    },
    'snapscreen': {
        'static': {
            lang_showMsg: "截图功能需要首先安装UEditor截图插件！ ",
            lang_download: "点此下载",
            lang_step1: "第一步，下载UEditor截图插件并运行安装。",
            lang_step2: "第二步，插件安装完成后即可使用，如不生效，请重启浏览器后再试！"
        }
    },
    'spechars': {
        'static': {},
        tsfh: "特殊字符",
        lmsz: "罗马字符",
        szfh: "数学字符",
        rwfh: "日文字符",
        xlzm: "希腊字母",
        ewzm: "俄文字符",
        pyzm: "拼音字母",
        yyyb: "英语音标",
        zyzf: "其他"
    },
    'edittable': {
        'static': {
            'lang_tableStyle': '表格样式',
            'lang_insertCaption': '添加表格名称行',
            'lang_insertTitle': '添加表格标题行',
            'lang_insertTitleCol': '添加表格标题列',
            'lang_orderbycontent': "使表格内容可排序",
            'lang_tableSize': '自动调整表格尺寸',
            'lang_autoSizeContent': '按表格文字自适应',
            'lang_autoSizePage': '按页面宽度自适应',
            'lang_example': '示例',
            'lang_borderStyle': '表格边框',
            'lang_color': '颜色:'
        },
        captionName: '表格名称',
        titleName: '标题',
        cellsName: '内容',
        errorMsg: '有合并单元格，不可排序'
    },
    'edittip': {
        'static': {
            lang_delRow: '删除整行',
            lang_delCol: '删除整列'
        }
    },
    'edittd': {
        'static': {
            lang_tdBkColor: '背景颜色:'
        }
    },
    'formula': {
        'static': {}
    },
    'wordimage': {
        'static': {
            lang_resave: "转存步骤",
            uploadBtn: { src: "upload.png", alt: "上传" },
            clipboard: { style: "background: url(copy.png) -153px -1px no-repeat;" },
            lang_step: "1、点击顶部复制按钮，将地址复制到剪贴板；2、点击添加照片按钮，在弹出的对话框中使用Ctrl+V粘贴地址；3、点击打开后选择图片上传流程。"
        },
        'fileType': "图片",
        'flashError': "FLASH初始化失败，请检查FLASH插件是否正确安装！",
        'netError': "网络连接错误，请重试！",
        'copySuccess': "图片地址已经复制！",
        'flashI18n': {} //留空默认中文
    },
    'autosave': {
        'saving': '保存中...',
        'success': '本地保存成功'
    }
};

/***/ }),

/***/ 1265:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _stringify = __webpack_require__(188);

var _stringify2 = _interopRequireDefault(_stringify);

var _assign = __webpack_require__(439);

var _assign2 = _interopRequireDefault(_assign);

var _defineProperty2 = __webpack_require__(1248);

var _defineProperty3 = _interopRequireDefault(_defineProperty2);

var _Date = __webpack_require__(1260);

var _Date2 = _interopRequireDefault(_Date);

var _Query_Tree_Selected = __webpack_require__(1311);

var _Query_Tree_Selected2 = _interopRequireDefault(_Query_Tree_Selected);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

exports.default = {
  props: {
    hisToryData: { //当有表单数据时，表示是从任务哪儿发送过来的。
      required: false,
      default: null
    },
    rosterId: { //人员Id
      required: false,
      default: null
    },
    mathRandom: { // 适用于花名册，查看详情
      required: false,
      default: 0
    },
    afferentUserId: { //父组件传入的用户fId
      required: false,
      default: null
    }
  },
  components: {
    'date-select': _Date2.default,
    'tree-selected-last': _Query_Tree_Selected2.default
  },
  data: function data() {
    var _this = this,
        _form;

    var validatePass = function validatePass(rule, value, callback) {
      if (!value) {
        callback(new Error('请输入密码'));
      } else if (value.length < 6) {
        callback(new Error('密码长度必须是6位以上!'));
      } else {
        if (_this.resetPasswordForm.confirmPassword !== '') {
          _this.$refs.resetPasswordForm.validateField('confirmPassword');
        }
        callback();
      }
    };
    var validatePass2 = function validatePass2(rule, value, callback) {
      if (!value) {
        callback(new Error('请再次输入密码'));
      } else if (value !== _this.resetPasswordForm.newPassword) {
        callback(new Error('两次输入密码不一致!'));
      } else if (value.length < 6) {
        callback(new Error('密码长度必须是6位以上!'));
      } else {
        callback();
      }
    };
    return {
      mathRandomSelect: 0,
      selectItem: {
        requestUrl: "/party_orgs/top/single/tree",
        value: null,
        checkboxType: true
      },
      loading: true,
      basePath: basePath,
      userData: JSON.parse(sessionStorage.getItem('userData')),
      orgId: 1, //暂定为1，后期可能会取消
      resetPasswordForm: {
        confirmPassword: null,
        oldPassword: null,
        newPassword: null
      },
      resetPasswordFormRules: {
        oldPassword: [{ required: true, message: '请输入旧密码' }],
        newPassword: [{ required: true, message: '请输入新密码' }, { validator: validatePass, trigger: 'blur' }],
        confirmPassword: [{ required: true, message: '请再次输入密码' }, { validator: validatePass2, trigger: 'blur' }]
      },
      form: (_form = {
        "positions": [],
        "account": null,
        "address": null,
        "areaCodel": null,
        "borthday": { date: null, date_time: null, month: null, time: null, time_id: null, type: 3, year: null },
        "desc": null,
        "education": null,
        "englishLevel": null,
        "idNumber": null,
        "maritalStatus": null,
        "mobilNumber": null,
        "nativeName": null,
        "nativePlace": null,
        "outLook": null,
        "phoneNumber": null,
        "picture": null,
        "position": null,
        "tPost": null,
        "sex": null,
        "userId": 0,
        "name": null,
        "technicalJob": null,
        "administrationJob": null,
        "initialDegree": null, // 初始学位
        "initialSchool": null, //初始学位毕业院校
        "initialTime": { date: null, date_time: null, month: null, time: null, time_id: null, type: 1, year: null }, //初始学位毕业时间
        "highestDegree": null, //最高学位
        "highestSchool": null, //最高学位毕业院校
        "highestTime": { date: null, date_time: null, month: null, time: null, time_id: null, type: 1, year: null }, //最高学位毕业时间
        "politicalOutlookTime": { date: null, date_time: null, month: null, time: null, time_id: null, type: 1, year: null },
        "groupInfo": null, //团组织信息
        "guildInfo": null, //工会组织信息
        "techPostTime": { date: null, date_time: null, month: null, time: null, time_id: null, type: 1, year: null }, //技术职务获得时间
        "joinComplanyTime": { date: null, date_time: null, month: null, time: null, time_id: null, type: 1, year: null }, //加入公司时间
        "partyPosions": null }, (0, _defineProperty3.default)(_form, 'administrationJob', null), (0, _defineProperty3.default)(_form, 'technicalJob', null), (0, _defineProperty3.default)(_form, "technicalJobTime", { date: null, date_time: null, month: null, time: null, time_id: null, type: 1, year: null }), (0, _defineProperty3.default)(_form, "fgLanguage", null), (0, _defineProperty3.default)(_form, "partyJob", null), (0, _defineProperty3.default)(_form, "workBorth", { date: null, date_time: null, month: null, time: null, time_id: null, type: 1, year: null }), _form),
      sexOptions: [], //性别列表
      nationOptions: [], //民族列表
      educationOptions: [], //学历列表
      academicDegreeOptions: [], //学位列表
      practiceOptions: [], //执业资格证书
      englishLevelOptions: [], //外语等级列表
      marriageOptions: [], //婚姻状态列表
      outLookOptions: [], //政治面貌
      tPostOptions: [], //技术职务
      positionOptions: [], //岗位
      nativePlaceOptions: [], //籍贯
      relationshipOptions: [], //人际关系
      fgLanguageOptions: [], //外语语种
      groupInfoTable: [{ key1: { date_time: null, type: 1 }, key2: null, key3: null, key4: null, key5: null }], //团组织信息
      guildInfoTable: [{ key1: { date_time: null, type: 1 }, key2: null, key3: null, key4: null, key5: null }], //工会组织信息
      relationsData: { //用户的社会关系列表
        relationsData1: []
      },
      experienceData: { //用户的个人学历详情列表
        experienceData1: [],
        experienceData2: [],
        experienceData3: [],
        experienceData4: [],
        experienceData5: [],
        experienceData6: [],
        experienceData7: []
      },
      archivesesData: { //用户的个人荣誉列表
        archivesesData1: [],
        archivesesData2: [],
        archivesesData3: [],
        archivesesData4: [],
        archivesesData5: []
      },
      typeData: {
        relations: [1], //人际关系
        experience: [1, 2, 3, 4, 5, 6, 7], //工作经历，学习经历，培训经历，团组织职务经历，党政职务经历，工会组织职务经历，党组织内职务经历
        archiveses: [1, 2, 3, 4, 5] //个人荣誉，技术职务，学历，学位，执业资格证书
      },
      editTypeId: null, //当前被操作的类型Id
      orgChlidrensimple: [], //支部数据
      partyMemberForm: { //新增/编辑：党员基本信息
        "applicationDate": { date: null, date_time: null, month: null, time: null, time_id: null, type: 1, year: null },
        "introducer": null,
        "joinPartyDate": { date: null, date_time: null, month: null, time: null, time_id: null, type: 1, year: null },
        "lost": true,
        "lostTime": null,
        "mobile": true,
        "partyOrgsId": null,
        "qualificationTime": { date: null, date_time: null, month: null, time: null, time_id: null, type: 1, year: null },
        "userId": null
      }
    };
  },

  watch: {
    mathRandom: function mathRandom(data) {
      if (data) {
        // this.form = {
        // "account":        null,
        // "address":        null,
        // "areaCodel":      null,
        // "borthday":       null,
        // "desc":           null,
        // "education":      null,
        // "englishLevel":   null,
        // "idNumber":       null,
        // "maritalStatus":  null,
        // "mobilNumber":    null,
        // "nativeName":     null,
        // "nativePlace":    null,
        // "outLook":        null,
        // "phoneNumber":    null,
        // "picture":        null,
        // "position":       null,
        // "tPost":          null,
        // "sex":            null,
        // "userId":         0,
        // "name":           null
        // }; 
        // ----- 将用户Id赋值为父组件传入的用户Id 
        this.userData.userId = this.afferentUserId;
        this.getQueryContrast();
        this.initTableData();
        this.getQueryOrgList();
      }
    }
  },
  mounted: function mounted() {
    this.afferentUserId ? this.userData.userId = this.afferentUserId : '';
    this.getQueryContrast();
    this.initTableData();
    this.getQueryOrgList();
  },

  methods: {
    /*
     * 获取所有对照表分类及对照键值对
     */
    getQueryContrast: function getQueryContrast() {
      var self = this;
      self.$request.requestAxios('get', basePath + '/contrast/all_contrast_info', "", function (response) {
        //请求成功的回调...
        var responseData = response.data;
        self._getQueryContrast(responseData.data);
      }, function (error, status) {
        // 请求失败回调函数...
        status == 200 ? self.$message.error(error.data.meta.message) : self.$message.error('/contrast/all_contrast_info - 失败');
      });
    },
    _getQueryContrast: function _getQueryContrast(data) {
      var self = this;
      $.each(data, function (index, item) {
        switch (item.id) {
          case 1:
            self.sexOptions = item.list;
            break;
          case 2:
            self.nationOptions = item.list;
            break;
          case 3:
            self.educationOptions = item.list;
            break;
          case 4:
            self.marriageOptions = item.list;
            break;
          case 5:
            self.englishLevelOptions = item.list;
            break;
          case 6:
            self.outLookOptions = item.list;
            break;
          case 9:
            self.nativePlaceOptions = item.list;
            break;
          case 10:
            self.positionOptions = item.list;
            break;
          case 13:
            self.academicDegreeOptions = item.list;
            break;
          case 14:
            self.relationshipOptions = item.list;
            break;
          case 15:
            self.practiceOptions = item.list;
            break;
          case 17:
            self.tPostOptions = item.list;
            break;
          case 18:
            self.fgLanguageOptions = item.list;
            break;
          default:
            break;
        }
      });
    },

    /*
     * 查询用户信息
     */
    getQueryUserDetail: function getQueryUserDetail() {
      var self = this;
      var url = url = basePath + '/hr_users/info/' + (self.afferentUserId ? self.afferentUserId : self.userData.userId);
      self.$request.requestAxios('get', url, "", function (response) {
        //请求成功的回调...
        var responseData = response.data;
        //给两个组织赋值  
        if (responseData.data.groupInfo) {
          self.groupInfoTable = [responseData.data.groupInfo];
          self.groupInfoTable = (0, _assign2.default)({}, self.groupInfoTable, self.groupInfoTable);
        }
        if (responseData.data.guildInfo) {
          self.guildInfoTable = [responseData.data.guildInfo];
          self.guildInfoTable = (0, _assign2.default)({}, self.guildInfoTable, self.guildInfoTable);
        }
        self.form = self._formExtend(self.form, responseData.data);
        self.loading = false;
      }, function (error, status) {
        // 请求失败回调函数...
        status == 200 ? self.$message.error(error.data.meta.message) : self.$message.error('/hr_users/info/self - 失败');
        self.loading = false;
      });
    },

    /*
    * 修改个人信息
    */
    updatePersonalMesg: function updatePersonalMesg(formName) {
      var self = this;
      // self.form.nation = self.form.nativeName;
      // self.form.nationPlace = self.form.nativePlace;
      self.form.educationLevel = self.form.education;
      self.form.groupInfo = self.groupInfoTable[0];
      self.form.guildInfo = self.guildInfoTable[0];
      this.$refs[formName].validate(function (valid) {
        if (valid) {
          self.$request.requestAxios('put', basePath + '/hr_users/update/' + self.userData.userId + '/forUser', self.form, function (response) {
            //请求成功的回调...
            var responseData = response.data;
            self.getQueryUserDetail();
            self.$message(responseData.meta.message, 20);
          }, function (error, status) {
            // 请求失败回调函数...
            status == 200 ? self.$message.error(error.data.meta.message) : self.$message.error('/hr_users/update/' + self.userData.userId + '/forUser - 失败');
          });
        } else {
          console.log('error submit!!');
          return false;
        }
      });
    },

    /*
    * 查询用户人际关系
    */
    getQueryRelationship: function getQueryRelationship() {
      var _this2 = this;

      this.typeData.relations.forEach(function (typeId) {
        _this2._getQueryUserManage('/relations/forType/forUser/' + _this2.userData.userId, 'relationsData', typeId);
      });
    },

    /*
    * 添加一行用户的社会关系
    */
    addRelationRow: function addRelationRow() {
      this.relationsData['relationsData' + this.editTypeId].push({
        "otherName": null,
        "otherPosition": null,
        "owner": 1,
        "relationName": null,
        "status": 1,
        "typeId": this.editTypeId,
        'newAdd': 1, //有此键表示新建
        'isBool': 1 //默认第一次都为1，
      });
    },

    /*
    * 添加用户的社会关系
    * @params {string} type add为新增，update为编辑修改
    * @params {object} row 
    */
    saveRelationship: function saveRelationship(type, row) {
      var self = this;
      if (self._validate(row)) {
        self._add('/relations/create/forUser/' + this.userData.userId, row, function (res) {
          self.getQueryRelationship();
        });
      }
    },
    _addRelationshipParams: function _addRelationshipParams() {
      return {
        "otherName": "张三",
        "otherPosition": "开发",
        "owner": 1,
        "relationName": "父女",
        "status": 1,
        "typeId": this.editTypeId
      };
    },


    /*
    * 删除指定ID的一条人际关系
    * @params {number/string} id 不为undefined时，表示不是新增的数据
    * @params {object} rowData 当前行数据
    * @params {number} index 当前行的下标
    */
    delRelationship: function delRelationship(id, rowData, index) {
      var self = this;
      if (id) {
        self._del('/relations/delete/' + id + '/forUser/' + self.userData.userId, function () {
          self.getQueryRelationship();
        });
      } else {
        self.relationsData.splice(index, 1);
      }
    },

    /*
    * 添加一行用户相关经历      
    */
    addExperienceRow: function addExperienceRow() {
      this.experienceData['experienceData' + this.editTypeId].push({
        "address": null,
        "beginTime": 1, //默认为1，保存后将数据设置为真实的时间
        "endTime": 1, //默认为1，保存后将数据设置为真实的时间
        'experienceBETime': null,
        "timeFormat": 'yyyy-MM-dd',
        "owner": 1,
        "position": null,
        "status": 1,
        "typeId": this.editTypeId,
        'newAdd': 1, //有此键表示新建
        'isBool': 1 //默认第一次都为1，
      });
    },
    _addExperienceParams: function _addExperienceParams() {
      return {
        "address": "string",
        "beginTime": new Date('2018-08-09').getTime(),
        "endTime": new Date('2018-08-10').getTime(),
        "timeFormat": 'yyyy-MM-dd',
        "owner": 1,
        "position": "string",
        "status": 1,
        "typeId": this.editTypeId
      };
    },

    /*
    * 添加一行用户获得性结果档案      
    */
    addArchivesesRow: function addArchivesesRow() {
      this.archivesesData['archivesesData' + this.editTypeId].push({
        "address": null,
        "creater": 1,
        "name": null,
        "owner": 1,
        "status": 1,
        "time": null,
        "timeFormat": 'yyyy-MM-dd',
        "typeId": this.editTypeId,
        'newAdd': 1, //有此键表示新建
        'isBool': 1 //默认第一次都为1，
      });
    },
    _validate: function _validate(row) {
      var bool = true; //为true表示数据都不为null
      $.each(row, function (key, item) {
        if (!item) {
          bool = false;
          // -- 将文本框标红
          row.isBool = 2;
        }
      });
      return bool;
    },

    /*
    * 合并查询列表数据函数
    * @params { string } url 请求地址 
    * @params { string } receiveDataName 接收数据的变量
    * @params { string/number } typeId 类型Id
    */
    _getQueryUserManage: function _getQueryUserManage(url, receiveDataName, typeId) {
      var self = this;
      self.$request.requestAxios('get', basePath + url, { params: { typeId: typeId } }, function (response) {
        //请求成功的回调...
        var responseData = response.data;
        self[receiveDataName][receiveDataName + typeId] = responseData.data;
      }, function (error, status) {
        // 请求失败回调函数...
        status == 200 ? self.$message.error(error.data.meta.message) : self.$message.error(url + ' - 失败');
      });
    },

    /*
    * 合并添加函数
    * @params {string} url 请求地址
    * @params {object} params 请求参数
    * @params {object} success 回调函数
    */
    _add: function _add(url, params, success) {
      var self = this;
      self.$request.requestAxios('post', basePath + url, params, function (response) {
        //请求成功的回调...
        var responseData = response.data;
        self.$message.success(responseData.data);
        success(responseData);
      }, function (error, status) {
        // 请求失败回调函数...
        status == 200 ? self.$message.error(error.data.meta.message) : self.$message.error(url + ' - 失败');
      });
    },

    /*
    * 合并删除函数
    * @params {string} url 请求地址
    * @params {object} success 回调函数
    */
    _del: function _del(url, successs) {
      var self = this;
      self.$request.requestAxios('delete', basePath + url, "", function (response) {
        //请求成功的回调...
        var responseData = response.data;
        setTimeout(function () {
          self.$message.success(responseData.data);
          successs();
        }, 20);
      }, function (error, status) {
        // 请求失败回调函数...
        status == 200 ? self.$message.error(error.data.meta.message) : self.$message.error(url + ' - 失败');
      });
    },

    /*
    * 图片上传成功后
    */
    handleAvatarSuccess: function handleAvatarSuccess(res, file) {
      this.form.picture = res.path;
    },

    /*
    * 上传头像验证
    */
    beforeAvatarUpload: function beforeAvatarUpload(file) {
      var isJPG = file.type;
      var isLt2M = file.size / 1024 / 1024 < 100;

      if (isJPG != "image/png" && isJPG != "image/jpeg" && isJPG != "image/bmp" && isJPG != "image/jpg") {
        this.$message.error('上传头像格式.png, .jpeg, .bmp, jpg!');
      }
      if (!isLt2M) {
        this.$message.error('上传头像图片大小不能超过 2MB!');
      }
      return isJPG && isLt2M;
    },

    /*
     * 查询党员信息
     */
    getQueryPartyMemberDetail: function getQueryPartyMemberDetail() {
      var self = this;
      self.$request.requestAxios('get', basePath + '/party_member_infos/' + this.userData.memInfoId + '/detail', "", function (response) {
        //请求成功的回调... 
        // --------------- 初始表单跟数据库查询出来的表单合并值 ---------- 
        self.partyMemberForm = self._formExtend(self.partyMemberForm, response.data.data);
        self.selectItem.value = self.partyMemberForm.partyOrgsId;
      }, function (error, status) {
        // 请求失败回调函数...
        status == 200 ? self.$message.error(error.data.meta.message) : self.$message.error('/party_member_infos/' + this.userData.memInfoId + '/detail - 失败');
      });
    },

    /*
     * 初始表单跟数据库查询出来的表单合并值
     */
    _formExtend: function _formExtend(oldFormD, newFormD) {
      var oldForm = JSON.parse((0, _stringify2.default)(oldFormD)),
          newForm = JSON.parse((0, _stringify2.default)(newFormD));
      $.each(oldForm, function (oldKey, oldValue) {
        $.each(newForm, function (newKey, newValue) {
          if (oldKey == newKey) {
            // ---- 不用感叹号判断是避免有值为0的时候不赋值
            if (!newValue && newValue != 0) {
              // -------- 旧表单中的值赋值给新表单中的值
              newForm[newKey] = oldForm[oldKey];
            }
          }
        });
      });
      return newForm;
    },

    /*
     * 查询组织列表数据
     */
    getQueryOrgList: function getQueryOrgList() {
      var self = this;
      self.orgChlidrensimple = [];
      self.$request.requestAxios('get', basePath + '/party_orgs/top/single/tree/', { params: { id: self.userData.partyOrgId } }, function (response) {
        // -------- 给当前的组织树赋值 -----------
        self._getQueryOrgList(response.data.data);
      }, function (error, status) {
        status == 200 ? self.$message.error(error.data.meta.message) : self.$message.error('/party_orgs/' + self.userData.partyOrgId + '/partyorgtree - 失败');
      });
    },

    /*
     * 排除掉不要的数据
     */
    _getQueryOrgList: function _getQueryOrgList(data) {
      this.orgChlidrensimple.push(data);
      this._childrensSimple(data.childrens);
    },
    _childrensSimple: function _childrensSimple(child) {
      var _this3 = this;

      $.each(child, function (index, item) {
        _this3.orgChlidrensimple.push(item);
        if (item.childrens) _this3._childrensSimple(item.childrens);
      });
    },
    savePartyMemberForm: function savePartyMemberForm(formName) {
      var self = this;
      self.$refs[formName].validate(function (valid) {
        if (valid) {
          self.$request.requestAxios('put', basePath + ('/party_member_infos/info/update/' + self.partyMemberForm.id + '/'), self._saveParams(), function (response) {
            self.getQueryPartyMemberDetail();
            self.$message.success(response.data.meta.message);
          }, function (error, status) {
            status == 200 ? self.$message.error(error.data.meta.message) : self.$message.error('/party_member_infos/info/update/' + self.partyMemberForm.id + '/from_org/' + self.userData.orgCode + ' - \u5931\u8D25');
          });
        } else {
          return false;
        }
      });
    },
    _saveParams: function _saveParams() {
      this.partyMemberForm.lostTime = this.partyMemberForm.lostTime ? this.partyMemberForm.lostTime.getTime() : '';
      console.log('save', this.partyMemberForm);
      this.partyMemberForm.partyOrgsId = this.orgChlidrensimple.length == 0 ? this.userData.partyOrgId : this.partyMemberForm.partyOrgsId;
      return this.partyMemberForm;
    },

    /*
     * 初始化表格数据,当是从历史记录页面跳转过来的就显示历史数据；否则，直接根据接口查询
     */
    initTableData: function initTableData() {
      var hisTory = this.hisToryData;
      if (hisTory) {
        var formData = JSON.parse(hisTory.formData);
        switch (hisTory.fromType) {
          case '1':
            //基本信息
            this.form = JSON.parse(this.hisToryData.formData);
            break;
          case '7':
            //党员信息
            this.partyMemberForm = JSON.parse(this.hisToryData.formData);
            break;
          case '6':
            //关系
            this.relationsData['relationsData' + formData.typeId] = [formData];
            break;
          case '3':
            //经历
            this.experienceData['experienceData' + formData.typeId] = [formData];
            break;
          case '4':
            //获得性
            this.archivesesData['archivesesData' + formData.typeId] = [formData];
            break;
        }
        this.loading = false;
      } else {
        if (this.userData.memInfoId) {
          this.getQueryPartyMemberDetail();
        }
        this.getQueryUserDetail();
        this.getQueryRelationship();
        this.loading = false;
      }
    },
    resetPassword: function resetPassword(formName) {
      var _this4 = this;

      var self = this;
      self.$refs[formName].validate(function (valid) {
        if (valid) {
          self.$request.requestAxios('patch', basePath + '/hr_users/password/', _this4.resetPasswordForm, function (response) {
            self.$message.success(response.data.meta.message);
            self.$refs[formName].resetFields();
          }, function (error, status) {
            status == 200 ? self.$message.error(error.data.meta.message) : self.$message.error('hr_users/password/ - \u5931\u8D25');
          });
        } else {
          return false;
        }
      });
    },

    /*
     * 时间组件广播回来的时间值
     * @params {string} val 时间组件返回回来的值
     * @params {string} formDatTypeeKey 当前页面的字段 
     */
    dateEmitFun: function dateEmitFun(val, formDateKey) {
      formDateKey.date_time = val;
    },

    /*
     * 时间组件广播回来的时间类型
     * @params {string} val 时间组件返回回来的值
     * @params {string} formDateKey 当前页面的字段 
     */
    dateTypeEmitFun: function dateTypeEmitFun(val, formDateKey) {
      formDateKey.type = val;
    },

    /*
     * 获取树结构的值
     */
    treeValDataFun: function treeValDataFun(val) {
      this.partyMemberForm.partyOrgsId = val.id;
    }
  }
};

/***/ }),

/***/ 1266:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _Show_Tree_Selected_Last = __webpack_require__(1243);

var _Show_Tree_Selected_Last2 = _interopRequireDefault(_Show_Tree_Selected_Last);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
  props: {
    pageType: { // org为组织工作台，personal为个人工作台
      default: 'org'
    },
    paramsData: null, // 参数
    isEditPage: { //0为编辑状态，1为只显示，
      default: 0
    },
    mathRandom: { //随机数，用来查看详情使用,避免重复数据不能及时响应弹框显示
      default: 18
    },
    isCheckbox: { //0为多选，1为单选
      default: 0
    }
  },
  name: 'items',
  components: {
    'show-tree-selected-last': _Show_Tree_Selected_Last2.default
  },
  computed: {},
  watch: {},
  data: function data() {
    return {
      orgId: this.pageType == 'org' ? sessionStorage.getItem('orgId') : '',
      treeData: null,
      countLayer: 0, //为第一层，默认显示， 
      checkedValue: [], //被选中人员数组
      userData: JSON.parse(sessionStorage.getItem('userData'))
    };
  },
  created: function created() {
    this.getQueryData(this.paramsData);
  },

  methods: {
    /*
     * 查询数据
     */
    getQueryData: function getQueryData(paramsData) {
      var _this = this;

      // -------------- 箭头函数没有自己的this，它继承的是父执行上下文里面的this 105
      this.$request.requestAxios('get', basePath + '/' + paramsData.requestUrl, { params: { id: this.userData.partyOrgId } }, function (response) {
        _this.treeData = _this._convertData(response.data.data ? response.data.data : []);
        console.log(_this.treeData);
      }, function (error, status) {
        status == 200 ? _this.$message.error(error.data.meta.message) : _this.$message.error(basePath + '/party_member_infos/partyorgtree');
      });
    },
    _convertData: function _convertData(data) {
      var _this2 = this;

      // ------- 打他不是一个数组就将data转换为数组
      if (!Array.isArray(data)) data = [data];
      this.countLayer++;
      data.forEach(function (item) {
        item.isShow = false;
        if (item.id == _this2.paramsData.value) {
          _this2.checkedValue = item;
        }
        // this.countLayer == 1 ? item.isShow = false : item.isShow = false;
        if (item.childrens) _this2._convertData(item.childrens);
        if (item.partyMem) {
          item.partyMem.forEach(function (itemMem) {
            // ---- 为0表示是需要操作多选框，否则禁用
            _this2.isEditPage == 0 ? itemMem.disabled = false : itemMem.disabled = true;
          });
        }
      });
      return data;
    },
    handleCheckedValueChange: function handleCheckedValueChange(val) {
      // debugger
      this.$emit('treeValData', val);
      // if(this.isCheckbox == 0){  //多选
      //   // ---- 显示在页面上的用户名
      //   this.paramsData.value = [];
      //   // ---- 存储在数据库中的数据Id
      //   this.paramsData.valueIdList = []
      //   val.forEach( (item) => {
      //     this.paramsData.value.push(item.name);
      //     this.paramsData.valueIdList ? this.paramsData.valueIdList.push(item.id) : '';
      //   });
      // }else{
      //   // ---- 显示在页面上的用户名
      //   this.paramsData.value = val.name;
      //   // ---- 存储在数据库中的数据Id
      //   this.paramsData.valueId = val.id;
      // }
    }
  }
}; //
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

/***/ }),

/***/ 1267:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _Date = __webpack_require__(1260);

var _Date2 = _interopRequireDefault(_Date);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
  props: {
    hisToryData: { //当有表单数据时，表示是从任务哪儿发送过来的。
      required: false,
      default: null
    },
    rosterId: { //人员Id
      required: false,
      default: null
    },
    mathRandom: { // 适用于花名册，查看详情
      required: false,
      default: 0
    },
    afferentUserId: { //父组件传入的用户Id
      required: false,
      default: null
    }
  },
  components: {
    'date-select': _Date2.default
  },
  data: function data() {
    var _this = this;

    var validatePass = function validatePass(rule, value, callback) {
      if (!value) {
        callback(new Error('请输入密码'));
      } else if (value.length < 6) {
        callback(new Error('密码长度必须是6位以上!'));
      } else {
        if (_this.resetPasswordForm.confirmPassword !== '') {
          _this.$refs.resetPasswordForm.validateField('confirmPassword');
        }
        callback();
      }
    };
    var validatePass2 = function validatePass2(rule, value, callback) {
      if (!value) {
        callback(new Error('请再次输入密码'));
      } else if (value !== _this.resetPasswordForm.newPassword) {
        callback(new Error('两次输入密码不一致!'));
      } else if (value.length < 6) {
        callback(new Error('密码长度必须是6位以上!'));
      } else {
        callback();
      }
    };
    return {
      loading: true,
      basePath: basePath,
      userData: JSON.parse(sessionStorage.getItem('userData')),
      orgId: 1, //暂定为1，后期可能会取消
      resetPasswordForm: {
        confirmPassword: null,
        oldPassword: null,
        newPassword: null
      },
      resetPasswordFormRules: {
        oldPassword: [{ required: true, message: '请输入旧密码' }],
        newPassword: [{ required: true, message: '请输入新密码' }, { validator: validatePass, trigger: 'blur' }],
        confirmPassword: [{ required: true, message: '请再次输入密码' }, { validator: validatePass2, trigger: 'blur' }]
      },
      form: {
        "account": null,
        "address": null,
        "areaCodel": null,
        "borthday": null,
        "desc": null,
        "education": null,
        "englishLevel": null,
        "idNumber": null,
        "maritalStatus": null,
        "mobilNumber": null,
        "nativeName": null,
        "nativePlace": null,
        "outLook": null,
        "phoneNumber": null,
        "picture": null,
        "position": null,
        "tPost": null,
        "sex": null,
        "userId": 0,
        "name": null,
        "technicalJob": null,
        "administrationJob": null
      },
      sexOptions: [], //性别列表
      nationOptions: [], //民族列表
      educationOptions: [], //最高学历列表
      academicDegreeOptions: [], //学位列表
      practiceOptions: [], //执业资格证书
      englishLevelOptions: [], //外语等级列表
      marriageOptions: [], //婚姻状态列表
      outLookOptions: [], //政治面貌
      tPostOptions: [], //技术职务
      positionOptions: [], //岗位
      nativePlaceOptions: [], //籍贯
      relationshipOptions: [], //人际关系
      relationsData: { //用户的社会关系列表
        relationsData1: []
      },
      experienceData: { //用户的个人学历详情列表
        experienceData1: [],
        experienceData2: [],
        experienceData3: [],
        experienceData4: [],
        experienceData5: [],
        experienceData6: [],
        experienceData7: []
      },
      archivesesData: { //用户的个人荣誉列表
        archivesesData1: [],
        archivesesData2: [],
        archivesesData3: [],
        archivesesData4: [],
        archivesesData5: []
      },
      typeData: {
        relations: [1], //人际关系
        experience: [1, 2, 3, 4, 5, 6, 7], //工作经历，学习经历，培训经历，团组织职务经历，党政职务经历，工会组织职务经历，党组织内职务经历
        archiveses: [1, 2, 3, 4, 5] //个人荣誉，技术职务，学历，学位，执业资格证书
      },
      editTypeId: null, //当前被操作的类型Id
      orgChlidrensimple: [], //支部数据
      partyMemberForm: { //新增/编辑：党员基本信息
        "applicationDate": null,
        "introducer": null,
        "joinPartyDate": null,
        "lost": true,
        "lostTime": null,
        "mobile": true,
        "partyOrgsId": null,
        "qualificationTime": null,
        "userId": null
      },
      "applicationDateFormat": 'yyyy-MM',
      "joinPartyDateFormat": 'yyyy-MM',
      "qualificationTimeFormat": 'yyyy-MM',
      "lostTimeFormat": 'yyyy-MM'
    };
  },

  watch: {
    mathRandom: function mathRandom(data) {
      if (data) {
        this.form = {
          "account": null,
          "address": null,
          "areaCodel": null,
          "borthday": null,
          "desc": null,
          "education": null,
          "englishLevel": null,
          "idNumber": null,
          "maritalStatus": null,
          "mobilNumber": null,
          "nativeName": null,
          "nativePlace": null,
          "outLook": null,
          "phoneNumber": null,
          "picture": null,
          "position": null,
          "tPost": null,
          "sex": null,
          "userId": 0,
          "name": null
        };
        // ----- 将用户Id赋值为父组件传入的用户Id 
        this.userData.userId = this.afferentUserId;
        this.getQueryContrast();
        this.initTableData();
      }
    }
  },
  mounted: function mounted() {
    this.afferentUserId ? this.userData.userId = this.afferentUserId : '';
    this.getQueryContrast();
    this.initTableData();
  },

  methods: {
    /*
     * 获取所有对照表分类及对照键值对
     */
    getQueryContrast: function getQueryContrast() {
      var self = this;
      self.$request.requestAxios('get', basePath + '/contrast/all_contrast_info', "", function (response) {
        //请求成功的回调...
        var responseData = response.data;
        self._getQueryContrast(responseData.data);
      }, function (error, status) {
        // 请求失败回调函数...
        status == 200 ? self.$message.error(error.data.meta.message) : self.$message.error('/contrast/all_contrast_info - 失败');
      });
    },
    _getQueryContrast: function _getQueryContrast(data) {
      var self = this;
      $.each(data, function (index, item) {
        switch (item.id) {
          case 1:
            self.sexOptions = item.list;
            break;
          case 2:
            self.nationOptions = item.list;
            break;
          case 3:
            self.educationOptions = item.list;
            break;
          case 4:
            self.marriageOptions = item.list;
            break;
          case 5:
            self.englishLevelOptions = item.list;
            break;
          case 6:
            self.outLookOptions = item.list;
            break;
          case 9:
            self.nativePlaceOptions = item.list;
            break;
          case 10:
            self.positionOptions = item.list;
            break;
          case 13:
            self.academicDegreeOptions = item.list;
            break;
          case 14:
            self.relationshipOptions = item.list;
            break;
          case 15:
            self.practiceOptions = item.list;
            break;
          case 17:
            self.tPostOptions = item.list;
            break;

          default:
            break;
        }
      });
    },

    /*
     * 查询用户信息
     */
    getQueryUserDetail: function getQueryUserDetail() {
      var self = this;
      self.$request.requestAxios('get', basePath + '/hr_users/info/' + self.userData.userId + '/forUser', "", function (response) {
        //请求成功的回调...
        var responseData = response.data;
        self.form = responseData.data;
        self.loading = false;
      }, function (error, status) {
        // 请求失败回调函数...
        status == 200 ? self.$message.error(error.data.meta.message) : self.$message.error('/hr_users/info/' + currentUserId + '/forUser - 失败');
        self.loading = false;
      });
    },

    /*
    * 修改个人信息
    */
    updatePersonalMesg: function updatePersonalMesg(formName) {
      var self = this;

      self.form.nation = self.form.nativeName;
      self.form.nationPlace = self.form.nativePlace;
      self.form.educationLevel = self.form.education;

      this.$refs[formName].validate(function (valid) {
        if (valid) {
          self.$request.requestAxios('put', basePath + '/hr_users/update/' + self.userData.userId + '/forUser', self.form, function (response) {
            //请求成功的回调...
            var responseData = response.data;
            self.getQueryUserDetail();
            self.$message(responseData.meta.message, 20);
          }, function (error, status) {
            // 请求失败回调函数...
            status == 200 ? self.$message.error(error.data.meta.message) : self.$message.error('/hr_users/update/' + self.userData.userId + '/forUser - 失败');
          });
        } else {
          console.log('error submit!!');
          return false;
        }
      });
    },

    /*
    * 查询用户相关经历
    */
    getQueryExperience: function getQueryExperience() {
      var _this2 = this;

      this.typeData.experience.forEach(function (typeId) {
        _this2._getQueryUserManage('/experience//forUser/' + _this2.userData.userId, 'experienceData', typeId);
      });
    },

    /*
    * 添加一行用户的社会关系
    */
    addRelationRow: function addRelationRow() {
      this.relationsData['relationsData' + this.editTypeId].push({
        "otherName": null,
        "otherPosition": null,
        "owner": 1,
        "relationName": null,
        "status": 1,
        "typeId": this.editTypeId,
        'newAdd': 1, //有此键表示新建
        'isBool': 1 //默认第一次都为1，
      });
    },

    /*
    * 添加用户的社会关系
    * @params {string} type add为新增，update为编辑修改
    * @params {object} row 
    */
    saveRelationship: function saveRelationship(type, row) {
      var self = this;
      if (self._validate(row)) {
        // debugger
        self._add('/relations/create/forUser/' + this.userData.userId, row, function (res) {
          self.getQueryRelationship();
        });
      }
    },
    _addRelationshipParams: function _addRelationshipParams() {
      return {
        "otherName": "张三",
        "otherPosition": "开发",
        "owner": 1,
        "relationName": "父女",
        "status": 1,
        "typeId": this.editTypeId
      };
    },


    /*
    * 删除指定ID的一条人际关系
    * @params {number/string} id 不为undefined时，表示不是新增的数据
    * @params {object} rowData 当前行数据
    * @params {number} index 当前行的下标
    */
    delRelationship: function delRelationship(id, rowData, index) {
      var self = this;
      if (id) {
        self._del('/relations/delete/' + id + '/forUser/' + self.orgId + '_' + self.userData.userId, function () {
          self.getQueryRelationship();
        });
      } else {
        self.relationsData.splice(index, 1);
      }
    },

    /*
    * 添加一行用户相关经历      
    */
    addExperienceRow: function addExperienceRow() {
      this.experienceData['experienceData' + this.editTypeId].push({
        "address": null,
        "beginDatetime": new Date(), //默认为1，保存后将数据设置为真实的时间
        "endDatetime": new Date(), //默认为1，保存后将数据设置为真实的时间
        "beginTimeType": 1,
        "endTimeType": 1,
        "timeFormat": 'yyyy-MM-dd',
        "owner": 1,
        "position": null,
        "status": 1,
        "typeId": this.editTypeId,
        'newAdd': 1, //有此键表示新建
        'isBool': 1 //默认第一次都为1，
      });
    },

    /*
    * 添加用户相关经历
    * @params {string} type add为新增，update为编辑修改
    * @params {object} row 
    */
    saveExperience: function saveExperience(type, row) {
      var self = this;
      if (self._validate(row)) {
        // -------------------------- 给开始结束时间赋值 ----------------------------
        row.beginDatetime = row.beginDatetime.getTime();
        row.endDatetime = row.endDatetime.getTime();

        self._add('/experience/create/forUser/' + self.userData.userId, row, function () {
          self.getQueryExperience();
        });
      }
    },

    /*
    * 删除指定ID的一条经历
    * @params {string} arrayKey 指定的数组键
    * @params {number/string} id 不为undefined时，表示不是新增的数据
    * @params {object} rowData 当前行数据
    * @params {number} index 当前行的下标
    */
    delExperience: function delExperience(arrayKey, id, rowData, index) {
      var self = this;
      if (id) {
        self._del('/experience/delete/' + id + '/forUser/' + self.userData.userId, function () {
          self.getQueryExperience();
        });
      } else {
        self.experienceData[arrayKey].splice(index, 1);
      }
    },
    _validate: function _validate(row) {
      var bool = true; //为true表示数据都不为null
      $.each(row, function (key, item) {
        if (!item) {
          bool = false;
          // -- 将文本框标红
          row.isBool = 2;
        }
      });
      return bool;
    },

    /*
    * 合并查询列表数据函数
    * @params { string } url 请求地址 
    * @params { string } receiveDataName 接收数据的变量
    * @params { string/number } typeId 类型Id
    */
    _getQueryUserManage: function _getQueryUserManage(url, receiveDataName, typeId) {
      var self = this;
      self.$request.requestAxios('get', basePath + url, { params: { typeId: typeId } }, function (response) {
        //请求成功的回调...
        var responseData = response.data;
        self[receiveDataName][receiveDataName + typeId] = responseData.data;
      }, function (error, status) {
        // 请求失败回调函数...
        status == 200 ? self.$message.error(error.data.meta.message) : self.$message.error(url + ' - 失败');
      });
    },

    /*
    * 合并添加函数
    * @params {string} url 请求地址
    * @params {object} params 请求参数
    * @params {object} success 回调函数
    */
    _add: function _add(url, params, success) {
      var self = this;
      self.$request.requestAxios('post', basePath + url, params, function (response) {
        //请求成功的回调...
        var responseData = response.data;
        self.$message.success(responseData.data);
        success(responseData);
      }, function (error, status) {
        // 请求失败回调函数...
        status == 200 ? self.$message.error(error.data.meta.message) : self.$message.error(url + ' - 失败');
      });
    },

    /*
    * 合并删除函数
    * @params {string} url 请求地址
    * @params {object} success 回调函数
    */
    _del: function _del(url, successs) {
      var self = this;
      self.$request.requestAxios('delete', basePath + url, "", function (response) {
        //请求成功的回调...
        var responseData = response.data;
        setTimeout(function () {
          self.$message.success(responseData.data);
          successs();
        }, 20);
      }, function (error, status) {
        // 请求失败回调函数...
        status == 200 ? self.$message.error(error.data.meta.message) : self.$message.error(url + ' - 失败');
      });
    },

    /*
    * 时间转换
    */
    _convertDate: function _convertDate(date) {
      return new Date(date).getFullYear() + '年' + (new Date(date).getMonth() + 1) + '月';
    },

    /*
     * 查询党员信息
     */
    getQueryPartyMemberDetail: function getQueryPartyMemberDetail() {
      var self = this;
      self.$request.requestAxios('get', basePath + '/party_member_infos/' + this.userData.memInfoId + '/detail', "", function (response) {
        //请求成功的回调...
        self.partyMemberForm = response.data.data;
      }, function (error, status) {
        // 请求失败回调函数...
        status == 200 ? self.$message.error(error.data.meta.message) : self.$message.error('/party_member_infos/' + this.userData.memInfoId + '/detail - 失败');
      });
    },

    /*
     * 初始化表格数据,当时从历史记录页面跳转过来的就显示历史数据；否则，直接根据接口查询
     */
    initTableData: function initTableData() {
      var hisTory = this.hisToryData;
      if (hisTory) {
        var formData = JSON.parse(hisTory.formData);
        switch (hisTory.fromType) {
          case '1':
            //基本信息
            this.form = JSON.parse(this.hisToryData.formData);
            break;
          case '7':
            //党员信息
            this.partyMemberForm = JSON.parse(this.hisToryData.formData);
            break;
          case '6':
            //关系
            this.relationsData['relationsData' + formData.typeId] = [formData];
            break;
          case '3':
            //经历
            this.experienceData['experienceData' + formData.typeId] = [formData];
            break;
          case '4':
            //获得性
            this.archivesesData['archivesesData' + formData.typeId] = [formData];
            break;
        }
        this.loading = false;
      } else {
        if (this.userData.memInfoId) {
          this.getQueryPartyMemberDetail();
        }
        this.getQueryExperience();
        this.loading = false;
      }
    },

    /*
     * 时间组件广播回来的时间值
     * @params {string} val 时间组件返回回来的值
     * @params {string} formDatTypeeKey 当前页面的字段 
     */
    dateEmitFun: function dateEmitFun(val, formDateKey) {
      formDateKey.beginDatetime = val[0];
      formDateKey.endDatetime = val[1];
    },

    /*
     * 时间组件广播回来的时间类型
     * @params {string} val 时间组件返回回来的值
     * @params {string} formDateKey 当前页面的字段 
     */
    dateTypeEmitFun: function dateTypeEmitFun(val, formDateKey) {
      formDateKey.beginTimeType = val;
      formDateKey.endTimeType = val;
    }
  }
}; //
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

/***/ }),

/***/ 1268:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

exports.default = {
  props: {
    hisToryData: { //当有表单数据时，表示是从任务哪儿发送过来的。
      required: false,
      default: null
    },
    rosterId: { //人员Id
      required: false,
      default: null
    },
    mathRandom: { // 适用于花名册，查看详情
      required: false,
      default: 0
    },
    afferentUserId: { //父组件传入的用户Id
      required: false,
      default: null
    }
  },
  components: {},

  data: function data() {
    var _this = this;

    var validatePass = function validatePass(rule, value, callback) {
      if (!value) {
        callback(new Error('请输入密码'));
      } else if (value.length < 6) {
        callback(new Error('密码长度必须是6位以上!'));
      } else {
        if (_this.resetPasswordForm.confirmPassword !== '') {
          _this.$refs.resetPasswordForm.validateField('confirmPassword');
        }
        callback();
      }
    };
    var validatePass2 = function validatePass2(rule, value, callback) {
      if (!value) {
        callback(new Error('请再次输入密码'));
      } else if (value !== _this.resetPasswordForm.newPassword) {
        callback(new Error('两次输入密码不一致!'));
      } else if (value.length < 6) {
        callback(new Error('密码长度必须是6位以上!'));
      } else {
        callback();
      }
    };
    return {
      loading: true,
      basePath: basePath,
      userData: JSON.parse(sessionStorage.getItem('userData')),
      orgId: 1, //暂定为1，后期可能会取消
      resetPasswordForm: {
        confirmPassword: null,
        oldPassword: null,
        newPassword: null
      },
      resetPasswordFormRules: {
        oldPassword: [{ required: true, message: '请输入旧密码' }],
        newPassword: [{ required: true, message: '请输入新密码' }, { validator: validatePass, trigger: 'blur' }],
        confirmPassword: [{ required: true, message: '请再次输入密码' }, { validator: validatePass2, trigger: 'blur' }]
      },
      form: {
        "account": null,
        "address": null,
        "areaCodel": null,
        "borthday": null,
        "desc": null,
        "education": null,
        "englishLevel": null,
        "idNumber": null,
        "maritalStatus": null,
        "mobilNumber": null,
        "nativeName": null,
        "nativePlace": null,
        "outLook": null,
        "phoneNumber": null,
        "picture": null,
        "position": null,
        "tPost": null,
        "sex": null,
        "userId": 0,
        "name": null,
        "technicalJob": null,
        "administrationJob": null
      },
      sexOptions: [], //性别列表
      nationOptions: [], //民族列表
      educationOptions: [], //最高学历列表
      academicDegreeOptions: [], //学位列表
      practiceOptions: [], //执业资格证书
      englishLevelOptions: [], //外语等级列表
      marriageOptions: [], //婚姻状态列表
      outLookOptions: [], //政治面貌
      tPostOptions: [], //技术职务
      positionOptions: [], //岗位
      nativePlaceOptions: [], //籍贯
      relationshipOptions: [], //人际关系
      relationsData: { //用户的社会关系列表
        relationsData1: []
      },
      experienceData: { //用户的个人学历详情列表
        experienceData1: [],
        experienceData2: [],
        experienceData3: [],
        experienceData4: [],
        experienceData5: [],
        experienceData6: [],
        experienceData7: []
      },
      archivesesData: { //用户的个人荣誉列表
        archivesesData1: [],
        archivesesData2: [],
        archivesesData3: [],
        archivesesData4: [],
        archivesesData5: []
      },
      typeData: {
        relations: [1], //人际关系
        experience: [1, 2, 3, 4, 5, 6, 7], //工作经历，学习经历，培训经历，团组织职务经历，党政职务经历，工会组织职务经历，党组织内职务经历
        archiveses: [1, 2, 3, 4, 5] //个人荣誉，技术职务，学历，学位，执业资格证书
      },
      editTypeId: null, //当前被操作的类型Id
      orgChlidrensimple: [], //支部数据
      partyMemberForm: { //新增/编辑：党员基本信息
        "applicationDate": null,
        "introducer": null,
        "joinPartyDate": null,
        "lost": true,
        "lostTime": null,
        "mobile": true,
        "partyOrgsId": null,
        "qualificationTime": null,
        "userId": null
      },
      "applicationDateFormat": 'yyyy-MM-dd',
      "joinPartyDateFormat": 'yyyy-MM-dd',
      "qualificationTimeFormat": 'yyyy-MM-dd',
      "lostTimeFormat": 'yyyy-MM-dd'
    };
  },

  watch: {
    mathRandom: function mathRandom(data) {
      if (data) {
        this.form = {
          "account": null,
          "address": null,
          "areaCodel": null,
          "borthday": null,
          "desc": null,
          "education": null,
          "englishLevel": null,
          "idNumber": null,
          "maritalStatus": null,
          "mobilNumber": null,
          "nativeName": null,
          "nativePlace": null,
          "outLook": null,
          "phoneNumber": null,
          "picture": null,
          "position": null,
          "tPost": null,
          "sex": null,
          "userId": 0,
          "name": null
        };
        // ----- 将用户Id赋值为父组件传入的用户Id 
        this.userData.userId = this.afferentUserId;
        this.getQueryContrast();
        this.initTableData();
        // this.getQueryOrgList();
      }
    }
  },
  mounted: function mounted() {
    this.afferentUserId ? this.userData.userId = this.afferentUserId : '';
    this.getQueryContrast();
    this.initTableData();
    // this.getQueryOrgList();
  },

  methods: {
    /*
     * 获取所有对照表分类及对照键值对
     */
    getQueryContrast: function getQueryContrast() {
      var self = this;
      self.$request.requestAxios('get', basePath + '/contrast/all_contrast_info', "", function (response) {
        //请求成功的回调...
        var responseData = response.data;
        self._getQueryContrast(responseData.data);
      }, function (error, status) {
        // 请求失败回调函数...
        status == 200 ? self.$message.error(error.data.meta.message) : self.$message.error('/contrast/all_contrast_info - 失败');
      });
    },
    _getQueryContrast: function _getQueryContrast(data) {
      var self = this;
      $.each(data, function (index, item) {
        switch (item.id) {
          case 1:
            self.sexOptions = item.list;
            break;
          case 2:
            self.nationOptions = item.list;
            break;
          case 3:
            self.educationOptions = item.list;
            break;
          case 4:
            self.marriageOptions = item.list;
            break;
          case 5:
            self.englishLevelOptions = item.list;
            break;
          case 6:
            self.outLookOptions = item.list;
            break;
          case 9:
            self.nativePlaceOptions = item.list;
            break;
          case 10:
            self.positionOptions = item.list;
            break;
          case 13:
            self.academicDegreeOptions = item.list;
            break;
          case 14:
            self.relationshipOptions = item.list;
            break;
          case 15:
            self.practiceOptions = item.list;
            break;
          case 17:
            self.tPostOptions = item.list;
            break;

          default:
            break;
        }
      });
    },

    /*
    * 查询用户获得相关荣誉
    */
    getQueryArchiveses: function getQueryArchiveses() {
      var _this2 = this;

      this.typeData.archiveses.forEach(function (typeId) {
        _this2._getQueryUserManage('/archiveses/forUser/' + _this2.userData.userId, 'archivesesData', typeId);
      });
    },

    /*
    * 添加一行用户的社会关系
    */
    addRelationRow: function addRelationRow() {
      this.relationsData['relationsData' + this.editTypeId].push({
        "otherName": null,
        "otherPosition": null,
        "owner": 1,
        "relationName": null,
        "status": 1,
        "typeId": this.editTypeId,
        'newAdd': 1, //有此键表示新建
        'isBool': 1 //默认第一次都为1，
      });
    },

    /*
    * 添加一行用户获得性结果档案      
    */
    addArchivesesRow: function addArchivesesRow() {
      this.archivesesData['archivesesData' + this.editTypeId].push({
        "address": null,
        "creater": 1,
        "name": null,
        "owner": 1,
        "status": 1,
        "dateTime": null,
        "timeFormat": 'yyyy-MM-dd',
        "typeId": this.editTypeId,
        'newAdd': 1, //有此键表示新建
        'isBool': 1 //默认第一次都为1，
      });
    },

    /*
    * 添加用户的获得性结果档案
    * @params {string} type add为新增，update为编辑修改
    * @params {object} row 
    */
    saveArchiveses: function saveArchiveses(type, row) {
      var self = this;
      if (self._validate(row)) {
        self._add('/archiveses/create/forUser/' + self.userData.userId, row, function (res) {
          self.getQueryArchiveses();
        });
      }
    },
    _addArchivesesParams: function _addArchivesesParams() {
      return {
        "address": "string",
        "creater": 0,
        "name": "string",
        "owner": 1,
        "status": 1,
        "dateTime": new Date().getTime(),
        "timeFormat": 'yyyy-MM-dd',
        "typeId": this.editTypeId
      };
    },

    /*
    * 删除指定ID的一条荣誉
    * @params {string} arrayKey 指定的数组键
    * @params {number/string} id 不为undefined时，表示不是新增的数据
    * @params {object} rowData 当前行数据
    * @params {number} index 当前行的下标
    */
    delArchiveses: function delArchiveses(arrayKey, id, rowData, index) {
      var self = this;
      if (id) {
        self._del('/archiveses/delete/' + id + '/forUser/' + self.userData.userId, function () {
          self.getQueryArchiveses();
        });
      } else {
        self.archivesesData[arrayKey].splice(index, 1);
      }
    },
    _validate: function _validate(row) {
      var bool = true; //为true表示数据都不为null
      $.each(row, function (key, item) {
        if (!item) {
          bool = false;
          // -- 将文本框标红
          row.isBool = 2;
        }
      });
      return bool;
    },

    /*
    * 合并查询列表数据函数
    * @params { string } url 请求地址 
    * @params { string } receiveDataName 接收数据的变量
    * @params { string/number } typeId 类型Id
    */
    _getQueryUserManage: function _getQueryUserManage(url, receiveDataName, typeId) {
      var self = this;
      self.$request.requestAxios('get', basePath + url, { params: { typeId: typeId } }, function (response) {
        //请求成功的回调...
        var responseData = response.data;
        self[receiveDataName][receiveDataName + typeId] = responseData.data;
      }, function (error, status) {
        // 请求失败回调函数...
        status == 200 ? self.$message.error(error.data.meta.message) : self.$message.error(url + ' - 失败');
      });
    },

    /*
    * 合并添加函数
    * @params {string} url 请求地址
    * @params {object} params 请求参数
    * @params {object} success 回调函数
    */
    _add: function _add(url, params, success) {
      debugger;
      var self = this;
      self.$request.requestAxios('post', basePath + url, params, function (response) {
        //请求成功的回调...
        var responseData = response.data;
        self.$message.success(responseData.data);
        success(responseData);
      }, function (error, status) {
        // 请求失败回调函数...
        status == 200 ? self.$message.error(error.data.meta.message) : self.$message.error(url + ' - 失败');
      });
    },

    /*
    * 合并删除函数
    * @params {string} url 请求地址
    * @params {object} success 回调函数
    */
    _del: function _del(url, successs) {
      var self = this;
      self.$request.requestAxios('delete', basePath + url, "", function (response) {
        //请求成功的回调...
        var responseData = response.data;
        setTimeout(function () {
          self.$message.success(responseData.data);
          successs();
        }, 20);
      }, function (error, status) {
        // 请求失败回调函数...
        status == 200 ? self.$message.error(error.data.meta.message) : self.$message.error(url + ' - 失败');
      });
    },

    /*
    * 时间转换
    */
    _convertDate: function _convertDate(date) {
      return new Date(date).getFullYear() + '年' + (new Date(date).getMonth() + 1) + '月' + new Date(date).getDate() + '日';
    },

    /*
    * 图片上传成功后
    */
    handleAvatarSuccess: function handleAvatarSuccess(res, file) {
      this.form.picture = res.path;
    },

    /*
    * 上传头像验证
    */
    beforeAvatarUpload: function beforeAvatarUpload(file) {
      var isJPG = file.type;
      var isLt2M = file.size / 1024 / 1024 < 100;

      if (isJPG != "image/png" && isJPG != "image/jpeg" && isJPG != "image/bmp" && isJPG != "image/jpg") {
        this.$message.error('上传头像格式.png, .jpeg, .bmp, jpg!');
      }
      if (!isLt2M) {
        this.$message.error('上传头像图片大小不能超过 2MB!');
      }
      return isJPG && isLt2M;
    },

    /*
     * 查询党员信息
     */
    getQueryPartyMemberDetail: function getQueryPartyMemberDetail() {
      var self = this;
      self.$request.requestAxios('get', basePath + '/party_member_infos/' + this.userData.memInfoId + '/detail', "", function (response) {
        //请求成功的回调...
        self.partyMemberForm = response.data.data;
      }, function (error, status) {
        // 请求失败回调函数...
        status == 200 ? self.$message.error(error.data.meta.message) : self.$message.error('/party_member_infos/' + this.userData.memInfoId + '/detail - 失败');
      });
    },

    /*
     * 查询组织列表数据
     */
    getQueryOrgList: function getQueryOrgList() {
      var self = this;
      self.orgChlidrensimple = [];
      self.$request.requestAxios('get', basePath + '/party_orgs/' + self.userData.partyOrgId + '/partyorgtree', "", function (response) {
        // -------- 给当前的组织树赋值 -----------
        self._getQueryOrgList(response.data.data);
      }, function (error, status) {
        status == 200 ? self.$message.error(error.data.meta.message) : self.$message.error('/party_orgs/' + self.userData.partyOrgId + '/partyorgtree - 失败');
      });
    },

    /*
     * 排除掉不要的数据
     */
    _getQueryOrgList: function _getQueryOrgList(data) {
      var self = this;
      self.orgChlidrensimple.push(data);
      $.each(data.childrens, function (index, item) {
        self.orgChlidrensimple.push(item);
      });
    },

    /*
     * 初始化表格数据,当时从历史记录页面跳转过来的就显示历史数据；否则，直接根据接口查询
     */
    initTableData: function initTableData() {
      var hisTory = this.hisToryData;
      if (hisTory) {
        var formData = JSON.parse(hisTory.formData);
        switch (hisTory.fromType) {
          case '1':
            //基本信息
            this.form = JSON.parse(this.hisToryData.formData);
            break;
          case '7':
            //党员信息
            this.partyMemberForm = JSON.parse(this.hisToryData.formData);
            break;
          case '6':
            //关系
            this.relationsData['relationsData' + formData.typeId] = [formData];
            break;
          case '3':
            //经历
            this.experienceData['experienceData' + formData.typeId] = [formData];
            break;
          case '4':
            //获得性
            this.archivesesData['archivesesData' + formData.typeId] = [formData];
            break;
        }
        this.loading = false;
      } else {
        if (this.userData.memInfoId) {
          this.getQueryPartyMemberDetail();
        }
        this.getQueryArchiveses();
        this.loading = false;
      }
    },
    resetPassword: function resetPassword(formName) {
      var _this3 = this;

      var self = this;
      self.$refs[formName].validate(function (valid) {
        if (valid) {
          self.$request.requestAxios('patch', basePath + '/hr_users/password/', _this3.resetPasswordForm, function (response) {
            self.$message.success(response.data.meta.message);
            self.$refs[formName].resetFields();
          }, function (error, status) {
            status == 200 ? self.$message.error(error.data.meta.message) : self.$message.error('hr_users/password/ - \u5931\u8D25');
          });
        } else {
          return false;
        }
      });
    }
  }
};

/***/ }),

/***/ 1269:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", { staticClass: "my-tree" }, [
    _c(
      "ul",
      _vm._l(_vm.treeData, function(item, index) {
        return _c(
          "li",
          {
            key: index,
            class: {
              "last-li":
                !(item.childrens ? item.childrens.length : false) &&
                !item.partyMem
            }
          },
          [
            _c(
              "p",
              {
                on: {
                  click: function($event) {
                    return _vm.showChildren(item)
                  }
                }
              },
              [
                _c("span", {
                  staticClass: "arrow",
                  class: { "bottom-arrow": item.isShow }
                }),
                _vm._v(" "),
                _c(
                  "span",
                  {
                    directives: [
                      {
                        name: "show",
                        rawName: "v-show",
                        value: !_vm.paramsData.checkboxType,
                        expression: "!paramsData.checkboxType"
                      }
                    ]
                  },
                  [_vm._v(_vm._s(item.name))]
                )
              ]
            ),
            _vm._v(" "),
            _vm.isCheckbox == 0
              ? _c(
                  "el-checkbox",
                  {
                    directives: [
                      {
                        name: "show",
                        rawName: "v-show",
                        value: _vm.paramsData.checkboxType,
                        expression: "paramsData.checkboxType"
                      }
                    ],
                    attrs: { disabled: item.disabled, label: item }
                  },
                  [_vm._v(_vm._s(item.name))]
                )
              : _vm._e(),
            _vm._v(" "),
            _vm.isCheckbox == 1
              ? _c(
                  "el-radio",
                  {
                    directives: [
                      {
                        name: "show",
                        rawName: "v-show",
                        value: _vm.paramsData.checkboxType,
                        expression: "paramsData.checkboxType"
                      }
                    ],
                    attrs: { disabled: item.disabled, label: item }
                  },
                  [_vm._v(_vm._s(item.name))]
                )
              : _vm._e(),
            _vm._v(" "),
            _c("items", {
              directives: [
                {
                  name: "show",
                  rawName: "v-show",
                  value: item.childrens && item.isShow,
                  expression: "item.childrens && item.isShow"
                }
              ],
              attrs: {
                isCheckbox: _vm.isCheckbox,
                isEditPage: _vm.isEditPage,
                treeData: item.childrens,
                paramsData: _vm.paramsData
              }
            }),
            _vm._v(" "),
            _c(
              "ul",
              {
                directives: [
                  {
                    name: "show",
                    rawName: "v-show",
                    value: item.partyMem && item.isShow,
                    expression: "item.partyMem && item.isShow"
                  }
                ],
                staticClass: "my-tree"
              },
              _vm._l(item.partyMem, function(itempartyMem, indexpartyMem) {
                return _c(
                  "li",
                  { key: itempartyMem, staticClass: "last-li" },
                  [
                    _vm.isCheckbox == 0
                      ? _c(
                          "el-checkbox",
                          {
                            attrs: {
                              disabled: itempartyMem.disabled,
                              label: itempartyMem
                            }
                          },
                          [_vm._v(_vm._s(itempartyMem.name))]
                        )
                      : _vm._e(),
                    _vm._v(" "),
                    _vm.isCheckbox == 1
                      ? _c(
                          "el-radio",
                          {
                            attrs: {
                              disabled: itempartyMem.disabled,
                              label: itempartyMem
                            }
                          },
                          [_vm._v(_vm._s(itempartyMem.name))]
                        )
                      : _vm._e()
                  ],
                  1
                )
              }),
              0
            )
          ],
          1
        )
      }),
      0
    )
  ])
}
var staticRenderFns = []
render._withStripped = true
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ __webpack_exports__["a"] = (esExports);
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-loader/node_modules/vue-hot-reload-api")      .rerender("data-v-20f8a7dc", esExports)
  }
}

/***/ }),

/***/ 1273:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_Ueditor_vue__ = __webpack_require__(1245);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_Ueditor_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_Ueditor_vue__);
/* harmony namespace reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_Ueditor_vue__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_Ueditor_vue__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_13_7_3_vue_loader_lib_template_compiler_index_id_data_v_56648b6d_hasScoped_false_buble_transforms_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_template_index_0_Ueditor_vue__ = __webpack_require__(1276);
var disposed = false
function injectStyle (ssrContext) {
  if (disposed) return
  __webpack_require__(1274)
}
var normalizeComponent = __webpack_require__(42)
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_Ueditor_vue___default.a,
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_13_7_3_vue_loader_lib_template_compiler_index_id_data_v_56648b6d_hasScoped_false_buble_transforms_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_template_index_0_Ueditor_vue__["a" /* default */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "devPkg/components/common/Ueditor.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-loader/node_modules/vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-56648b6d", Component.options)
  } else {
    hotAPI.reload("data-v-56648b6d", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),

/***/ 1274:
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(1275);
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__(76)("c2131f36", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../node_modules/_css-loader@0.28.11@css-loader/index.js!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-56648b6d\",\"scoped\":false,\"hasInlineConfig\":false}!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=styles&index=0!./Ueditor.vue", function() {
     var newContent = require("!!../../../node_modules/_css-loader@0.28.11@css-loader/index.js!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-56648b6d\",\"scoped\":false,\"hasInlineConfig\":false}!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=styles&index=0!./Ueditor.vue");
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ 1275:
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(43)(false);
// imports


// module
exports.push([module.i, "\n.edui-editor.edui-default {\n  z-index: 99!important;\n}\n", ""]);

// exports


/***/ }),

/***/ 1276:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _vm._m(0)
}
var staticRenderFns = [
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", [
      _c("script", { attrs: { id: "editor", type: "text/plain" } })
    ])
  }
]
render._withStripped = true
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ __webpack_exports__["a"] = (esExports);
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-loader/node_modules/vue-hot-reload-api")      .rerender("data-v-56648b6d", esExports)
  }
}

/***/ }),

/***/ 1277:
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(1278), __esModule: true };

/***/ }),

/***/ 1278:
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(1279);
var $Object = __webpack_require__(44).Object;
module.exports = function defineProperty(it, key, desc) {
  return $Object.defineProperty(it, key, desc);
};


/***/ }),

/***/ 1279:
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__(104);
// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)
$export($export.S + $export.F * !__webpack_require__(66), 'Object', { defineProperty: __webpack_require__(77).f });


/***/ }),

/***/ 1304:
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(1305);
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__(76)("35d181fa", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../node_modules/_css-loader@0.28.11@css-loader/index.js!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-93ee3f4c\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../node_modules/_less-loader@4.1.0@less-loader/dist/cjs.js!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=styles&index=0!./Date.vue", function() {
     var newContent = require("!!../../../../node_modules/_css-loader@0.28.11@css-loader/index.js!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-93ee3f4c\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../node_modules/_less-loader@4.1.0@less-loader/dist/cjs.js!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=styles&index=0!./Date.vue");
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ 1305:
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(43)(false);
// imports


// module
exports.push([module.i, "\n.date-type-div {\n  position: relative;\n}\n.date-type-div .type {\n  position: absolute;\n  right: 0;\n  width: 100px;\n  top: 0;\n}\n", ""]);

// exports


/***/ }),

/***/ 1306:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    { staticClass: "date-type-div" },
    [
      _vm.isTimeRange
        ? _c(
            "div",
            [
              _c("el-date-picker", {
                staticStyle: { width: "40%" },
                attrs: {
                  disabled: _vm.isDisabled,
                  type: _vm.dateTypeCom,
                  placeholder: "选择日期"
                },
                on: {
                  change: function(val) {
                    return _vm.dataRangeChange(val, "bengin")
                  }
                },
                model: {
                  value: _vm.beginDatetime,
                  callback: function($$v) {
                    _vm.beginDatetime = $$v
                  },
                  expression: "beginDatetime"
                }
              }),
              _vm._v("\n    -\n    "),
              _c("el-date-picker", {
                staticStyle: { width: "50%" },
                attrs: {
                  disabled: _vm.isDisabled,
                  type: _vm.dateTypeCom,
                  placeholder: "选择日期",
                  "picker-options": _vm.minTime
                },
                on: {
                  change: function(val) {
                    return _vm.dataRangeChange(val, "end")
                  }
                },
                model: {
                  value: _vm.endDatetime,
                  callback: function($$v) {
                    _vm.endDatetime = $$v
                  },
                  expression: "endDatetime"
                }
              })
            ],
            1
          )
        : _vm._e(),
      _vm._v(" "),
      !_vm.isTimeRange
        ? _c(
            "el-date-picker",
            {
              staticStyle: { width: "100%" },
              attrs: {
                disabled: _vm.isDisabled,
                type: _vm.dateTypeCom,
                placeholder: "选择日期"
              },
              on: { change: _vm.dateChange },
              model: {
                value: _vm.value,
                callback: function($$v) {
                  _vm.value = $$v
                },
                expression: "value"
              }
            },
            [_vm._v("-\n  ")]
          )
        : _vm._e(),
      _vm._v(" "),
      _c(
        "el-select",
        {
          directives: [
            {
              name: "show",
              rawName: "v-show",
              value: !_vm.isDisabled,
              expression: "!isDisabled"
            }
          ],
          staticClass: "type",
          on: { change: _vm.selectChange },
          model: {
            value: _vm.dateType,
            callback: function($$v) {
              _vm.dateType = $$v
            },
            expression: "dateType"
          }
        },
        [
          _c("el-option", { attrs: { label: "年", value: "1" } }),
          _vm._v(" "),
          _c("el-option", { attrs: { label: "年-月", value: "2" } }),
          _vm._v(" "),
          _c("el-option", { attrs: { label: "年-月-日", value: "3" } }),
          _vm._v(" "),
          _c("el-option", { attrs: { label: "年-月-日 时:分:秒", value: "4" } })
        ],
        1
      )
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ __webpack_exports__["a"] = (esExports);
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-loader/node_modules/vue-hot-reload-api")      .rerender("data-v-93ee3f4c", esExports)
  }
}

/***/ }),

/***/ 1308:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_My_Message_vue__ = __webpack_require__(1265);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_My_Message_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_My_Message_vue__);
/* harmony namespace reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_My_Message_vue__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_My_Message_vue__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_13_7_3_vue_loader_lib_template_compiler_index_id_data_v_b82a2200_hasScoped_false_buble_transforms_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_template_index_0_My_Message_vue__ = __webpack_require__(1313);
var disposed = false
function injectStyle (ssrContext) {
  if (disposed) return
  __webpack_require__(1309)
}
var normalizeComponent = __webpack_require__(42)
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_My_Message_vue___default.a,
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_13_7_3_vue_loader_lib_template_compiler_index_id_data_v_b82a2200_hasScoped_false_buble_transforms_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_template_index_0_My_Message_vue__["a" /* default */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "devPkg/components/personal_manage/messageComponents/My_Message.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-loader/node_modules/vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-b82a2200", Component.options)
  } else {
    hotAPI.reload("data-v-b82a2200", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),

/***/ 1309:
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(1310);
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__(76)("948998de", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../node_modules/_css-loader@0.28.11@css-loader/index.js!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-b82a2200\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../node_modules/_less-loader@4.1.0@less-loader/dist/cjs.js!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=styles&index=0!./My_Message.vue", function() {
     var newContent = require("!!../../../../node_modules/_css-loader@0.28.11@css-loader/index.js!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-b82a2200\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../node_modules/_less-loader@4.1.0@less-loader/dist/cjs.js!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=styles&index=0!./My_Message.vue");
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ 1310:
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(43)(false);
// imports


// module
exports.push([module.i, "\n.date-type-div {\n  position: relative;\n}\n.date-type-div .type {\n  position: absolute;\n  right: 0;\n  width: 100px;\n  top: 0;\n}\n.tree-selected {\n  border: 1px solid #d2d2d2;\n  padding: 0 10px;\n  overflow: auto;\n  min-height: 200px;\n  max-height: 500px;\n}\n", ""]);

// exports


/***/ }),

/***/ 1311:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_Query_Tree_Selected_vue__ = __webpack_require__(1266);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_Query_Tree_Selected_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_Query_Tree_Selected_vue__);
/* harmony namespace reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_Query_Tree_Selected_vue__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_Query_Tree_Selected_vue__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_13_7_3_vue_loader_lib_template_compiler_index_id_data_v_0fc60b69_hasScoped_false_buble_transforms_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_template_index_0_Query_Tree_Selected_vue__ = __webpack_require__(1312);
var disposed = false
var normalizeComponent = __webpack_require__(42)
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_Query_Tree_Selected_vue___default.a,
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_13_7_3_vue_loader_lib_template_compiler_index_id_data_v_0fc60b69_hasScoped_false_buble_transforms_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_template_index_0_Query_Tree_Selected_vue__["a" /* default */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "devPkg/components/personal_manage/messageComponents/Query_Tree_Selected.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-loader/node_modules/vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-0fc60b69", Component.options)
  } else {
    hotAPI.reload("data-v-0fc60b69", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),

/***/ 1312:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    { staticStyle: { width: "100%", "margin-top": "-6px" } },
    [
      _vm.isCheckbox == 0
        ? _c(
            "el-checkbox-group",
            {
              staticClass: "my-tree-bar",
              staticStyle: { width: "100%" },
              on: { change: _vm.handleCheckedValueChange },
              model: {
                value: _vm.checkedValue,
                callback: function($$v) {
                  _vm.checkedValue = $$v
                },
                expression: "checkedValue"
              }
            },
            [
              _c("h3", { staticClass: "title" }, [
                _vm._v(_vm._s(_vm.paramsData.title))
              ]),
              _vm._v(" "),
              _c("show-tree-selected-last", {
                attrs: {
                  isCheckbox: _vm.isCheckbox,
                  isEditPage: _vm.isEditPage,
                  treeData: _vm.treeData,
                  layer: "1",
                  paramsData: _vm.paramsData
                }
              })
            ],
            1
          )
        : _vm._e(),
      _vm._v(" "),
      _vm.isCheckbox == 1
        ? _c(
            "el-radio-group",
            {
              staticClass: "my-tree-bar",
              staticStyle: { width: "100%" },
              on: { change: _vm.handleCheckedValueChange },
              model: {
                value: _vm.checkedValue,
                callback: function($$v) {
                  _vm.checkedValue = $$v
                },
                expression: "checkedValue"
              }
            },
            [
              _c("h3", { staticClass: "title" }, [
                _vm._v(_vm._s(_vm.paramsData.title))
              ]),
              _vm._v(" "),
              _c("show-tree-selected-last", {
                attrs: {
                  isCheckbox: _vm.isCheckbox,
                  isEditPage: _vm.isEditPage,
                  treeData: _vm.treeData,
                  layer: "1",
                  paramsData: _vm.paramsData
                }
              })
            ],
            1
          )
        : _vm._e()
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ __webpack_exports__["a"] = (esExports);
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-loader/node_modules/vue-hot-reload-api")      .rerender("data-v-0fc60b69", esExports)
  }
}

/***/ }),

/***/ 1313:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    [
      (_vm.hisToryData
      ? _vm.hisToryData.fromType == 1
      : true)
        ? _c(
            "div",
            {
              directives: [
                {
                  name: "loading",
                  rawName: "v-loading",
                  value: _vm.loading,
                  expression: "loading"
                }
              ],
              staticClass: "personal-wrapper"
            },
            [
              _c("h1", { staticClass: "title marb20" }, [
                _vm._v("|| 个人基本信息")
              ]),
              _vm._v(" "),
              _c(
                "el-form",
                {
                  directives: [
                    {
                      name: "show",
                      rawName: "v-show",
                      value: _vm.form,
                      expression: "form"
                    }
                  ],
                  ref: "form",
                  attrs: {
                    size: "small",
                    rules: _vm.rules,
                    model: _vm.form,
                    "label-width": "150px"
                  }
                },
                [
                  _c(
                    "el-row",
                    [
                      _c("el-col", { attrs: { span: 24 } }, [
                        _c(
                          "div",
                          {
                            staticClass:
                              "grid-content bg-purple-dark photo-message"
                          },
                          [
                            _c(
                              "div",
                              { staticClass: "photo" },
                              [
                                _c(
                                  "el-upload",
                                  {
                                    staticClass: "avatar-uploader",
                                    attrs: {
                                      action:
                                        _vm.basePath +
                                        "/sys/ueditor/exec?action=uploadimage",
                                      headers: {
                                        Authorization:
                                          "Bearer " + _vm.userData.token
                                      },
                                      "show-file-list": false,
                                      "on-success": _vm.handleAvatarSuccess,
                                      name: "upfile",
                                      "before-upload": _vm.beforeAvatarUpload
                                    }
                                  },
                                  [
                                    _vm.form.picture
                                      ? _c("img", {
                                          staticClass: "avatar",
                                          attrs: { src: _vm.form.picture }
                                        })
                                      : _c("i", {
                                          staticClass:
                                            "el-icon-plus avatar-uploader-icon"
                                        })
                                  ]
                                )
                              ],
                              1
                            ),
                            _vm._v(" "),
                            _c(
                              "div",
                              { staticClass: "other" },
                              [
                                _c("p", [
                                  _vm._v(
                                    "\n                工号：" +
                                      _vm._s(_vm.form.account) +
                                      "      \n                姓名：" +
                                      _vm._s(_vm.form.name) +
                                      "     \n                公司：" +
                                      _vm._s(_vm.form.orgName) +
                                      "      \n                党委：" +
                                      _vm._s(_vm.form.partyCommitteeName) +
                                      "      \n                支部：" +
                                      _vm._s(_vm.form.partyBranchName) +
                                      "      党小组：" +
                                      _vm._s(_vm.form.partyGroupName) +
                                      "\n              "
                                  )
                                ]),
                                _vm._v(" "),
                                _c("el-input", {
                                  attrs: {
                                    type: "textarea",
                                    disabled:
                                      _vm.hisToryData || _vm.afferentUserId
                                  },
                                  model: {
                                    value: _vm.form.desc,
                                    callback: function($$v) {
                                      _vm.$set(_vm.form, "desc", $$v)
                                    },
                                    expression: "form.desc"
                                  }
                                })
                              ],
                              1
                            )
                          ]
                        )
                      ])
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c(
                    "el-row",
                    [
                      _c("el-col", { attrs: { span: 8 } }, [
                        _c(
                          "div",
                          { staticClass: "grid-content bg-purple-dark" },
                          [
                            _c(
                              "el-form-item",
                              { attrs: { label: "性别:" } },
                              [
                                _c(
                                  "span",
                                  {
                                    directives: [
                                      {
                                        name: "show",
                                        rawName: "v-show",
                                        value:
                                          _vm.hisToryData || _vm.afferentUserId,
                                        expression:
                                          "hisToryData || afferentUserId"
                                      }
                                    ]
                                  },
                                  [
                                    _vm._v(
                                      _vm._s(
                                        _vm.$util.controlTable(_vm.form.sex)
                                      )
                                    )
                                  ]
                                ),
                                _vm._v(" "),
                                _c(
                                  "el-select",
                                  {
                                    directives: [
                                      {
                                        name: "show",
                                        rawName: "v-show",
                                        value: !(
                                          _vm.hisToryData || _vm.afferentUserId
                                        ),
                                        expression:
                                          "!(hisToryData || afferentUserId)"
                                      }
                                    ],
                                    staticStyle: { width: "100%" },
                                    attrs: { placeholder: "" },
                                    model: {
                                      value: _vm.form.sex,
                                      callback: function($$v) {
                                        _vm.$set(_vm.form, "sex", $$v)
                                      },
                                      expression: "form.sex"
                                    }
                                  },
                                  _vm._l(_vm.sexOptions, function(item) {
                                    return _c("el-option", {
                                      key: item.key,
                                      attrs: {
                                        label: item.value,
                                        value: item.key
                                      }
                                    })
                                  }),
                                  1
                                )
                              ],
                              1
                            )
                          ],
                          1
                        )
                      ]),
                      _vm._v(" "),
                      _c("el-col", { attrs: { span: 8 } }, [
                        _c(
                          "div",
                          { staticClass: "grid-content bg-purple-dark" },
                          [
                            _c(
                              "el-form-item",
                              { attrs: { label: "民族:" } },
                              [
                                _c(
                                  "span",
                                  {
                                    directives: [
                                      {
                                        name: "show",
                                        rawName: "v-show",
                                        value:
                                          _vm.hisToryData || _vm.afferentUserId,
                                        expression:
                                          "hisToryData || afferentUserId"
                                      }
                                    ]
                                  },
                                  [
                                    _vm._v(
                                      _vm._s(
                                        _vm.$util.controlTable(_vm.form.nation)
                                      )
                                    )
                                  ]
                                ),
                                _vm._v(" "),
                                _c(
                                  "el-select",
                                  {
                                    directives: [
                                      {
                                        name: "show",
                                        rawName: "v-show",
                                        value: !(
                                          _vm.hisToryData || _vm.afferentUserId
                                        ),
                                        expression:
                                          "!(hisToryData || afferentUserId)"
                                      }
                                    ],
                                    staticStyle: { width: "100%" },
                                    attrs: { filterable: "", placeholder: "" },
                                    model: {
                                      value: _vm.form.nation,
                                      callback: function($$v) {
                                        _vm.$set(_vm.form, "nation", $$v)
                                      },
                                      expression: "form.nation"
                                    }
                                  },
                                  _vm._l(_vm.nationOptions, function(item) {
                                    return _c("el-option", {
                                      key: item.key,
                                      attrs: {
                                        label: item.value,
                                        value: item.key
                                      }
                                    })
                                  }),
                                  1
                                )
                              ],
                              1
                            )
                          ],
                          1
                        )
                      ]),
                      _vm._v(" "),
                      _c("el-col", { attrs: { span: 8 } }, [
                        _c(
                          "div",
                          { staticClass: "grid-content bg-purple-dark" },
                          [
                            _c(
                              "el-form-item",
                              { attrs: { label: "出生日期:" } },
                              [
                                _c("date-select", {
                                  attrs: {
                                    dateType: _vm.form.borthday.type,
                                    isDisabled:
                                      _vm.hisToryData || _vm.afferentUserId
                                        ? true
                                        : false,
                                    value: _vm.form.borthday.date_time
                                  },
                                  on: {
                                    dateEmit: function(val) {
                                      return _vm.dateEmitFun(
                                        val,
                                        _vm.form.borthday
                                      )
                                    },
                                    dateTypeEmit: function(val) {
                                      return _vm.dateTypeEmitFun(
                                        val,
                                        _vm.form.borthday
                                      )
                                    }
                                  }
                                })
                              ],
                              1
                            )
                          ],
                          1
                        )
                      ]),
                      _vm._v(" "),
                      _c("el-col", { attrs: { span: 8 } }, [
                        _c(
                          "div",
                          { staticClass: "grid-content bg-purple-dark" },
                          [
                            _c(
                              "el-form-item",
                              {
                                attrs: {
                                  label: "身份证号:",
                                  prop: "idNumber",
                                  rules: [
                                    {
                                      pattern: /(^\d{15}$)|(^\d{18}$)|(^\d{17}(\d|X|x)$)/,
                                      message: "身份证号码格式错误",
                                      trigger: _vm.blur
                                    }
                                  ]
                                }
                              },
                              [
                                _c("el-input", {
                                  staticStyle: { width: "100%" },
                                  attrs: {
                                    disabled:
                                      _vm.hisToryData || _vm.afferentUserId
                                  },
                                  model: {
                                    value: _vm.form.idNumber,
                                    callback: function($$v) {
                                      _vm.$set(_vm.form, "idNumber", $$v)
                                    },
                                    expression: "form.idNumber"
                                  }
                                })
                              ],
                              1
                            )
                          ],
                          1
                        )
                      ]),
                      _vm._v(" "),
                      _c("el-col", { attrs: { span: 8 } }, [
                        _c(
                          "div",
                          { staticClass: "grid-content bg-purple-dark" },
                          [
                            _c(
                              "el-form-item",
                              { attrs: { label: "籍贯:" } },
                              [
                                _c(
                                  "span",
                                  {
                                    directives: [
                                      {
                                        name: "show",
                                        rawName: "v-show",
                                        value:
                                          _vm.hisToryData || _vm.afferentUserId,
                                        expression:
                                          "hisToryData || afferentUserId"
                                      }
                                    ]
                                  },
                                  [
                                    _vm._v(
                                      _vm._s(
                                        _vm.$util.controlTable(
                                          _vm.form.nationPlace
                                        )
                                      )
                                    )
                                  ]
                                ),
                                _vm._v(" "),
                                _c(
                                  "el-select",
                                  {
                                    directives: [
                                      {
                                        name: "show",
                                        rawName: "v-show",
                                        value: !(
                                          _vm.hisToryData || _vm.afferentUserId
                                        ),
                                        expression:
                                          "!(hisToryData || afferentUserId)"
                                      }
                                    ],
                                    staticStyle: { width: "100%" },
                                    attrs: { filterable: "", placeholder: "" },
                                    model: {
                                      value: _vm.form.nationPlace,
                                      callback: function($$v) {
                                        _vm.$set(_vm.form, "nationPlace", $$v)
                                      },
                                      expression: "form.nationPlace"
                                    }
                                  },
                                  _vm._l(_vm.nativePlaceOptions, function(
                                    item
                                  ) {
                                    return _c("el-option", {
                                      key: item.key,
                                      attrs: {
                                        label: item.value,
                                        value: item.key
                                      }
                                    })
                                  }),
                                  1
                                )
                              ],
                              1
                            )
                          ],
                          1
                        )
                      ]),
                      _vm._v(" "),
                      _c("el-col", { attrs: { span: 8 } }, [
                        _c(
                          "div",
                          { staticClass: "grid-content bg-purple-dark" },
                          [
                            _c(
                              "el-form-item",
                              { attrs: { label: "婚姻状况:" } },
                              [
                                _c(
                                  "el-select",
                                  {
                                    staticStyle: { width: "100%" },
                                    attrs: {
                                      disabled:
                                        _vm.hisToryData || _vm.afferentUserId,
                                      placeholder: ""
                                    },
                                    model: {
                                      value: _vm.form.maritalStatus,
                                      callback: function($$v) {
                                        _vm.$set(_vm.form, "maritalStatus", $$v)
                                      },
                                      expression: "form.maritalStatus"
                                    }
                                  },
                                  _vm._l(_vm.marriageOptions, function(item) {
                                    return _c("el-option", {
                                      key: item.key,
                                      attrs: {
                                        label: item.value,
                                        value: item.key
                                      }
                                    })
                                  }),
                                  1
                                )
                              ],
                              1
                            )
                          ],
                          1
                        )
                      ]),
                      _vm._v(" "),
                      _c("el-col", { attrs: { span: 8 } }, [
                        _c(
                          "div",
                          { staticClass: "grid-content bg-purple-dark" },
                          [
                            _c(
                              "el-form-item",
                              { attrs: { label: "政治面貌:" } },
                              [
                                _c(
                                  "span",
                                  {
                                    directives: [
                                      {
                                        name: "show",
                                        rawName: "v-show",
                                        value:
                                          _vm.hisToryData || _vm.afferentUserId,
                                        expression:
                                          "hisToryData || afferentUserId"
                                      }
                                    ]
                                  },
                                  [
                                    _vm._v(
                                      _vm._s(
                                        _vm.$util.controlTable(_vm.form.outLook)
                                      )
                                    )
                                  ]
                                ),
                                _vm._v(" "),
                                _c(
                                  "el-select",
                                  {
                                    directives: [
                                      {
                                        name: "show",
                                        rawName: "v-show",
                                        value: !(
                                          _vm.hisToryData || _vm.afferentUserId
                                        ),
                                        expression:
                                          "!(hisToryData || afferentUserId)"
                                      }
                                    ],
                                    staticStyle: { width: "100%" },
                                    attrs: { filterable: "", placeholder: "" },
                                    model: {
                                      value: _vm.form.outLook,
                                      callback: function($$v) {
                                        _vm.$set(_vm.form, "outLook", $$v)
                                      },
                                      expression: "form.outLook"
                                    }
                                  },
                                  _vm._l(_vm.outLookOptions, function(item) {
                                    return _c("el-option", {
                                      key: item.key,
                                      attrs: {
                                        label: item.value,
                                        value: item.key
                                      }
                                    })
                                  }),
                                  1
                                )
                              ],
                              1
                            )
                          ],
                          1
                        )
                      ]),
                      _vm._v(" "),
                      _c(
                        "el-col",
                        { attrs: { span: 8 } },
                        [
                          _c(
                            "el-form-item",
                            {
                              attrs: {
                                label: "进入中铁二局时间:",
                                prop: "workBorth"
                              }
                            },
                            [
                              _c("date-select", {
                                attrs: {
                                  dateType: _vm.form.workBorth.type,
                                  isDisabled:
                                    _vm.hisToryData || _vm.afferentUserId
                                      ? true
                                      : false,
                                  value: _vm.form.workBorth.date_time
                                },
                                on: {
                                  dateEmit: function(val) {
                                    return _vm.dateEmitFun(
                                      val,
                                      _vm.form.workBorth
                                    )
                                  },
                                  dateTypeEmit: function(val) {
                                    return _vm.dateTypeEmitFun(
                                      val,
                                      _vm.form.workBorth
                                    )
                                  }
                                }
                              })
                            ],
                            1
                          )
                        ],
                        1
                      ),
                      _vm._v(" "),
                      _c(
                        "el-col",
                        { attrs: { span: 8 } },
                        [
                          _c(
                            "el-form-item",
                            {
                              attrs: {
                                label: "进入本公司时间:",
                                prop: "joinComplanyTime"
                              }
                            },
                            [
                              _c("date-select", {
                                attrs: {
                                  dateType: _vm.form.joinComplanyTime.type,
                                  isDisabled:
                                    _vm.hisToryData || _vm.afferentUserId
                                      ? true
                                      : false,
                                  value: _vm.form.joinComplanyTime.date_time
                                },
                                on: {
                                  dateEmit: function(val) {
                                    return _vm.dateEmitFun(
                                      val,
                                      _vm.form.joinComplanyTime
                                    )
                                  },
                                  dateTypeEmit: function(val) {
                                    return _vm.dateTypeEmitFun(
                                      val,
                                      _vm.form.joinComplanyTime
                                    )
                                  }
                                }
                              })
                            ],
                            1
                          )
                        ],
                        1
                      ),
                      _vm._v(" "),
                      _c("el-col", { attrs: { span: 8 } }, [
                        _c(
                          "div",
                          { staticClass: "grid-content bg-purple-dark" },
                          [
                            _c(
                              "el-form-item",
                              { attrs: { label: "初始学历:" } },
                              [
                                _c(
                                  "span",
                                  {
                                    directives: [
                                      {
                                        name: "show",
                                        rawName: "v-show",
                                        value:
                                          _vm.hisToryData || _vm.afferentUserId,
                                        expression:
                                          "hisToryData || afferentUserId"
                                      }
                                    ]
                                  },
                                  [
                                    _vm._v(
                                      _vm._s(
                                        _vm.$util.controlTable(
                                          _vm.form.initialDegree
                                        )
                                      )
                                    )
                                  ]
                                ),
                                _vm._v(" "),
                                _c(
                                  "el-select",
                                  {
                                    directives: [
                                      {
                                        name: "show",
                                        rawName: "v-show",
                                        value: !(
                                          _vm.hisToryData || _vm.afferentUserId
                                        ),
                                        expression:
                                          "!(hisToryData || afferentUserId)"
                                      }
                                    ],
                                    staticStyle: { width: "100%" },
                                    attrs: { filterable: "", placeholder: "" },
                                    model: {
                                      value: _vm.form.initialDegree,
                                      callback: function($$v) {
                                        _vm.$set(_vm.form, "initialDegree", $$v)
                                      },
                                      expression: "form.initialDegree"
                                    }
                                  },
                                  _vm._l(_vm.educationOptions, function(item) {
                                    return _c("el-option", {
                                      key: item.key,
                                      attrs: {
                                        label: item.value,
                                        value: item.key
                                      }
                                    })
                                  }),
                                  1
                                )
                              ],
                              1
                            )
                          ],
                          1
                        )
                      ]),
                      _vm._v(" "),
                      _c(
                        "el-col",
                        { attrs: { span: 8 } },
                        [
                          _c(
                            "el-form-item",
                            {
                              staticClass: "no-border",
                              attrs: {
                                label: "初始学历毕业院校:",
                                prop: "initialSchool"
                              }
                            },
                            [
                              _c("el-input", {
                                attrs: {
                                  disabled:
                                    _vm.hisToryData || _vm.afferentUserId,
                                  placeholder: "请输入初始学位毕业院校"
                                },
                                model: {
                                  value: _vm.form.initialSchool,
                                  callback: function($$v) {
                                    _vm.$set(_vm.form, "initialSchool", $$v)
                                  },
                                  expression: "form.initialSchool"
                                }
                              })
                            ],
                            1
                          )
                        ],
                        1
                      ),
                      _vm._v(" "),
                      _c(
                        "el-col",
                        { attrs: { span: 8 } },
                        [
                          _c(
                            "el-form-item",
                            {
                              attrs: {
                                label: "初始学历毕业时间:",
                                prop: "initialTime"
                              }
                            },
                            [
                              _c("date-select", {
                                attrs: {
                                  dateType: _vm.form.initialTime.type,
                                  isDisabled:
                                    _vm.hisToryData || _vm.afferentUserId
                                      ? true
                                      : false,
                                  value: _vm.form.initialTime.date_time
                                },
                                on: {
                                  dateEmit: function(val) {
                                    return _vm.dateEmitFun(
                                      val,
                                      _vm.form.initialTime
                                    )
                                  },
                                  dateTypeEmit: function(val) {
                                    return _vm.dateTypeEmitFun(
                                      val,
                                      _vm.form.initialTime
                                    )
                                  }
                                }
                              })
                            ],
                            1
                          )
                        ],
                        1
                      ),
                      _vm._v(" "),
                      _c("el-col", { attrs: { span: 8 } }, [
                        _c(
                          "div",
                          { staticClass: "grid-content bg-purple-dark" },
                          [
                            _c(
                              "el-form-item",
                              { attrs: { label: "最高学历:" } },
                              [
                                _c(
                                  "span",
                                  {
                                    directives: [
                                      {
                                        name: "show",
                                        rawName: "v-show",
                                        value:
                                          _vm.hisToryData || _vm.afferentUserId,
                                        expression:
                                          "hisToryData || afferentUserId"
                                      }
                                    ]
                                  },
                                  [
                                    _vm._v(
                                      _vm._s(
                                        _vm.$util.controlTable(
                                          _vm.form.highestDegree
                                        )
                                      )
                                    )
                                  ]
                                ),
                                _vm._v(" "),
                                _c(
                                  "el-select",
                                  {
                                    directives: [
                                      {
                                        name: "show",
                                        rawName: "v-show",
                                        value: !(
                                          _vm.hisToryData || _vm.afferentUserId
                                        ),
                                        expression:
                                          "!(hisToryData || afferentUserId)"
                                      }
                                    ],
                                    staticStyle: { width: "100%" },
                                    attrs: { filterable: "", placeholder: "" },
                                    model: {
                                      value: _vm.form.highestDegree,
                                      callback: function($$v) {
                                        _vm.$set(_vm.form, "highestDegree", $$v)
                                      },
                                      expression: "form.highestDegree"
                                    }
                                  },
                                  _vm._l(_vm.educationOptions, function(item) {
                                    return _c("el-option", {
                                      key: item.key,
                                      attrs: {
                                        label: item.value,
                                        value: item.key
                                      }
                                    })
                                  }),
                                  1
                                )
                              ],
                              1
                            )
                          ],
                          1
                        )
                      ]),
                      _vm._v(" "),
                      _c(
                        "el-col",
                        { attrs: { span: 8 } },
                        [
                          _c(
                            "el-form-item",
                            {
                              staticClass: "no-border",
                              attrs: {
                                label: "最高学历毕业院校:",
                                prop: "highestSchool"
                              }
                            },
                            [
                              _c("el-input", {
                                attrs: {
                                  disabled:
                                    _vm.hisToryData || _vm.afferentUserId,
                                  placeholder: "请输入最高学位毕业院校"
                                },
                                model: {
                                  value: _vm.form.highestSchool,
                                  callback: function($$v) {
                                    _vm.$set(_vm.form, "highestSchool", $$v)
                                  },
                                  expression: "form.highestSchool"
                                }
                              })
                            ],
                            1
                          )
                        ],
                        1
                      ),
                      _vm._v(" "),
                      _c(
                        "el-col",
                        { attrs: { span: 8 } },
                        [
                          _c(
                            "el-form-item",
                            {
                              attrs: {
                                label: "最高学历毕业时间:",
                                prop: "highestTime"
                              }
                            },
                            [
                              _c("date-select", {
                                attrs: {
                                  dateType: _vm.form.highestTime.type,
                                  isDisabled:
                                    _vm.hisToryData || _vm.afferentUserId
                                      ? true
                                      : false,
                                  value: _vm.form.highestTime.date_time
                                },
                                on: {
                                  dateEmit: function(val) {
                                    return _vm.dateEmitFun(
                                      val,
                                      _vm.form.highestTime
                                    )
                                  },
                                  dateTypeEmit: function(val) {
                                    return _vm.dateTypeEmitFun(
                                      val,
                                      _vm.form.highestTime
                                    )
                                  }
                                }
                              })
                            ],
                            1
                          )
                        ],
                        1
                      ),
                      _vm._v(" "),
                      _c("el-col", { attrs: { span: 8 } }, [
                        _c(
                          "div",
                          { staticClass: "grid-content bg-purple-dark" },
                          [
                            _c(
                              "el-form-item",
                              { attrs: { label: "最高学位:" } },
                              [
                                _c(
                                  "span",
                                  {
                                    directives: [
                                      {
                                        name: "show",
                                        rawName: "v-show",
                                        value:
                                          _vm.hisToryData || _vm.afferentUserId,
                                        expression:
                                          "hisToryData || afferentUserId"
                                      }
                                    ]
                                  },
                                  [
                                    _vm._v(
                                      _vm._s(
                                        _vm.$util.controlTable(
                                          _vm.form.education
                                        )
                                      )
                                    )
                                  ]
                                ),
                                _vm._v(" "),
                                _c(
                                  "el-select",
                                  {
                                    directives: [
                                      {
                                        name: "show",
                                        rawName: "v-show",
                                        value: !(
                                          _vm.hisToryData || _vm.afferentUserId
                                        ),
                                        expression:
                                          "!(hisToryData || afferentUserId)"
                                      }
                                    ],
                                    staticStyle: { width: "100%" },
                                    attrs: { filterable: "", placeholder: "" },
                                    model: {
                                      value: _vm.form.education,
                                      callback: function($$v) {
                                        _vm.$set(_vm.form, "education", $$v)
                                      },
                                      expression: "form.education"
                                    }
                                  },
                                  _vm._l(_vm.academicDegreeOptions, function(
                                    item
                                  ) {
                                    return _c("el-option", {
                                      key: item.key,
                                      attrs: {
                                        label: item.value,
                                        value: item.key
                                      }
                                    })
                                  }),
                                  1
                                )
                              ],
                              1
                            )
                          ],
                          1
                        )
                      ]),
                      _vm._v(" "),
                      _c("el-col", { attrs: { span: 8 } }, [
                        _c(
                          "div",
                          { staticClass: "grid-content bg-purple-dark" },
                          [
                            _c(
                              "el-form-item",
                              { attrs: { label: "外语语种:" } },
                              [
                                _c(
                                  "span",
                                  {
                                    directives: [
                                      {
                                        name: "show",
                                        rawName: "v-show",
                                        value:
                                          _vm.hisToryData || _vm.afferentUserId,
                                        expression:
                                          "hisToryData || afferentUserId"
                                      }
                                    ]
                                  },
                                  [
                                    _vm._v(
                                      _vm._s(
                                        _vm.$util.controlTable(
                                          _vm.form.fgLanguage
                                        )
                                      )
                                    )
                                  ]
                                ),
                                _vm._v(" "),
                                _c(
                                  "el-select",
                                  {
                                    directives: [
                                      {
                                        name: "show",
                                        rawName: "v-show",
                                        value: !(
                                          _vm.hisToryData || _vm.afferentUserId
                                        ),
                                        expression:
                                          "!(hisToryData || afferentUserId)"
                                      }
                                    ],
                                    staticStyle: { width: "100%" },
                                    attrs: { placeholder: "" },
                                    model: {
                                      value: _vm.form.fgLanguage,
                                      callback: function($$v) {
                                        _vm.$set(_vm.form, "fgLanguage", $$v)
                                      },
                                      expression: "form.fgLanguage"
                                    }
                                  },
                                  _vm._l(_vm.fgLanguageOptions, function(item) {
                                    return _c("el-option", {
                                      key: item.key,
                                      attrs: {
                                        label: item.value,
                                        value: item.key
                                      }
                                    })
                                  }),
                                  1
                                )
                              ],
                              1
                            )
                          ],
                          1
                        )
                      ]),
                      _vm._v(" "),
                      _c("el-col", { attrs: { span: 8 } }, [
                        _c(
                          "div",
                          { staticClass: "grid-content bg-purple-dark" },
                          [
                            _c(
                              "el-form-item",
                              { attrs: { label: "外语等级:" } },
                              [
                                _c(
                                  "span",
                                  {
                                    directives: [
                                      {
                                        name: "show",
                                        rawName: "v-show",
                                        value:
                                          _vm.hisToryData || _vm.afferentUserId,
                                        expression:
                                          "hisToryData || afferentUserId"
                                      }
                                    ]
                                  },
                                  [
                                    _vm._v(
                                      _vm._s(
                                        _vm.$util.controlTable(
                                          _vm.form.englishLevel
                                        )
                                      )
                                    )
                                  ]
                                ),
                                _vm._v(" "),
                                _c(
                                  "el-select",
                                  {
                                    directives: [
                                      {
                                        name: "show",
                                        rawName: "v-show",
                                        value: !(
                                          _vm.hisToryData || _vm.afferentUserId
                                        ),
                                        expression:
                                          "!(hisToryData || afferentUserId)"
                                      }
                                    ],
                                    staticStyle: { width: "100%" },
                                    attrs: { placeholder: "" },
                                    model: {
                                      value: _vm.form.englishLevel,
                                      callback: function($$v) {
                                        _vm.$set(_vm.form, "englishLevel", $$v)
                                      },
                                      expression: "form.englishLevel"
                                    }
                                  },
                                  _vm._l(_vm.englishLevelOptions, function(
                                    item
                                  ) {
                                    return _c("el-option", {
                                      key: item.key,
                                      attrs: {
                                        label: item.value,
                                        value: item.key
                                      }
                                    })
                                  }),
                                  1
                                )
                              ],
                              1
                            )
                          ],
                          1
                        )
                      ]),
                      _vm._v(" "),
                      _c("el-col", { attrs: { span: 12 } }, [
                        _c(
                          "div",
                          { staticClass: "grid-content bg-purple-dark" },
                          [
                            _c(
                              "el-form-item",
                              { attrs: { label: "技术职称:" } },
                              [
                                _c(
                                  "span",
                                  {
                                    directives: [
                                      {
                                        name: "show",
                                        rawName: "v-show",
                                        value:
                                          _vm.hisToryData || _vm.afferentUserId,
                                        expression:
                                          "hisToryData || afferentUserId"
                                      }
                                    ]
                                  },
                                  [
                                    _vm._v(
                                      _vm._s(
                                        _vm.$util.controlTable(_vm.form.tPost)
                                      )
                                    )
                                  ]
                                ),
                                _vm._v(" "),
                                _c(
                                  "el-select",
                                  {
                                    directives: [
                                      {
                                        name: "show",
                                        rawName: "v-show",
                                        value: !(
                                          _vm.hisToryData || _vm.afferentUserId
                                        ),
                                        expression:
                                          "!(hisToryData || afferentUserId)"
                                      }
                                    ],
                                    staticStyle: { width: "100%" },
                                    attrs: { filterable: "", placeholder: "" },
                                    model: {
                                      value: _vm.form.tPost,
                                      callback: function($$v) {
                                        _vm.$set(_vm.form, "tPost", $$v)
                                      },
                                      expression: "form.tPost"
                                    }
                                  },
                                  _vm._l(_vm.tPostOptions, function(item) {
                                    return _c("el-option", {
                                      key: item.key,
                                      attrs: {
                                        label: item.value,
                                        value: item.key
                                      }
                                    })
                                  }),
                                  1
                                )
                              ],
                              1
                            )
                          ],
                          1
                        )
                      ]),
                      _vm._v(" "),
                      _c(
                        "el-col",
                        { attrs: { span: 12 } },
                        [
                          _c(
                            "el-form-item",
                            {
                              attrs: {
                                label: "技术职称获得时间:",
                                prop: "techPostTime"
                              }
                            },
                            [
                              _c("date-select", {
                                attrs: {
                                  dateType: _vm.form.techPostTime.type,
                                  isDisabled:
                                    _vm.hisToryData || _vm.afferentUserId
                                      ? true
                                      : false,
                                  value: _vm.form.techPostTime.date_time
                                },
                                on: {
                                  dateEmit: function(val) {
                                    return _vm.dateEmitFun(
                                      val,
                                      _vm.form.techPostTime
                                    )
                                  },
                                  dateTypeEmit: function(val) {
                                    return _vm.dateTypeEmitFun(
                                      val,
                                      _vm.form.techPostTime
                                    )
                                  }
                                }
                              })
                            ],
                            1
                          )
                        ],
                        1
                      ),
                      _vm._v(" "),
                      _c("el-col", { attrs: { span: 12 } }, [
                        _c(
                          "div",
                          { staticClass: "grid-content bg-purple-dark" },
                          [
                            _c(
                              "el-form-item",
                              { attrs: { label: "执业资格:" } },
                              [
                                _c("el-input", {
                                  attrs: {
                                    disabled:
                                      _vm.hisToryData || _vm.afferentUserId
                                  },
                                  model: {
                                    value: _vm.form.technicalJob,
                                    callback: function($$v) {
                                      _vm.$set(_vm.form, "technicalJob", $$v)
                                    },
                                    expression: "form.technicalJob"
                                  }
                                })
                              ],
                              1
                            )
                          ],
                          1
                        )
                      ]),
                      _vm._v(" "),
                      _c(
                        "el-col",
                        { attrs: { span: 12 } },
                        [
                          _c(
                            "el-form-item",
                            {
                              attrs: {
                                label: "执业资格获得时间:",
                                prop: "technicalJobTime"
                              }
                            },
                            [
                              _c("date-select", {
                                attrs: {
                                  dateType: _vm.form.technicalJobTime.type,
                                  isDisabled:
                                    _vm.hisToryData || _vm.afferentUserId
                                      ? true
                                      : false,
                                  value: _vm.form.technicalJobTime.date_time
                                },
                                on: {
                                  dateEmit: function(val) {
                                    return _vm.dateEmitFun(
                                      val,
                                      _vm.form.technicalJobTime
                                    )
                                  },
                                  dateTypeEmit: function(val) {
                                    return _vm.dateTypeEmitFun(
                                      val,
                                      _vm.form.technicalJobTime
                                    )
                                  }
                                }
                              })
                            ],
                            1
                          )
                        ],
                        1
                      ),
                      _vm._v(" "),
                      _c("el-col", { attrs: { span: 8 } }, [
                        _c(
                          "div",
                          { staticClass: "grid-content bg-purple-dark" },
                          [
                            _c(
                              "el-form-item",
                              { attrs: { label: "岗位性质:" } },
                              [
                                _c(
                                  "span",
                                  {
                                    directives: [
                                      {
                                        name: "show",
                                        rawName: "v-show",
                                        value:
                                          _vm.hisToryData || _vm.afferentUserId,
                                        expression:
                                          "hisToryData || afferentUserId"
                                      }
                                    ]
                                  },
                                  [
                                    _vm._v(
                                      _vm._s(
                                        _vm.$util.controlTable(
                                          _vm.form.position
                                        )
                                      )
                                    )
                                  ]
                                ),
                                _vm._v(" "),
                                _c(
                                  "el-select",
                                  {
                                    directives: [
                                      {
                                        name: "show",
                                        rawName: "v-show",
                                        value: !(
                                          _vm.hisToryData || _vm.afferentUserId
                                        ),
                                        expression:
                                          "!(hisToryData || afferentUserId)"
                                      }
                                    ],
                                    staticStyle: { width: "100%" },
                                    attrs: { filterable: "", placeholder: "" },
                                    model: {
                                      value: _vm.form.position,
                                      callback: function($$v) {
                                        _vm.$set(_vm.form, "position", $$v)
                                      },
                                      expression: "form.position"
                                    }
                                  },
                                  _vm._l(_vm.positionOptions, function(item) {
                                    return _c("el-option", {
                                      key: item.key,
                                      attrs: {
                                        label: item.value,
                                        value: item.key
                                      }
                                    })
                                  }),
                                  1
                                )
                              ],
                              1
                            )
                          ],
                          1
                        )
                      ]),
                      _vm._v(" "),
                      _c("el-col", { attrs: { span: 8 } }, [
                        _c(
                          "div",
                          { staticClass: "grid-content bg-purple-dark" },
                          [
                            _c(
                              "el-form-item",
                              { attrs: { label: "党内职务:" } },
                              [
                                _c("el-input", {
                                  attrs: {
                                    disabled:
                                      _vm.hisToryData || _vm.afferentUserId
                                  },
                                  model: {
                                    value: _vm.form.partyJob,
                                    callback: function($$v) {
                                      _vm.$set(_vm.form, "partyJob", $$v)
                                    },
                                    expression: "form.partyJob"
                                  }
                                })
                              ],
                              1
                            )
                          ],
                          1
                        )
                      ]),
                      _vm._v(" "),
                      _c("el-col", { attrs: { span: 8 } }, [
                        _c(
                          "div",
                          { staticClass: "grid-content bg-purple-dark" },
                          [
                            _c(
                              "el-form-item",
                              { attrs: { label: "行政职务:" } },
                              [
                                _c("el-input", {
                                  attrs: {
                                    disabled:
                                      _vm.hisToryData || _vm.afferentUserId
                                  },
                                  model: {
                                    value: _vm.form.administrationJob,
                                    callback: function($$v) {
                                      _vm.$set(
                                        _vm.form,
                                        "administrationJob",
                                        $$v
                                      )
                                    },
                                    expression: "form.administrationJob"
                                  }
                                })
                              ],
                              1
                            )
                          ],
                          1
                        )
                      ]),
                      _vm._v(" "),
                      _c("el-col", { attrs: { span: 8 } }, [
                        _c(
                          "div",
                          { staticClass: "grid-content bg-purple-dark" },
                          [
                            _c(
                              "el-form-item",
                              {
                                attrs: {
                                  label: "移动电话:",
                                  prop: "mobilNumber",
                                  rules: [
                                    {
                                      pattern: /^1[34578]\d{9}$/,
                                      message: "联系方式格式错误",
                                      trigger: _vm.blur
                                    }
                                  ]
                                }
                              },
                              [
                                _c("el-input", {
                                  staticStyle: { width: "100%" },
                                  attrs: {
                                    disabled:
                                      _vm.hisToryData || _vm.afferentUserId
                                  },
                                  model: {
                                    value: _vm.form.mobilNumber,
                                    callback: function($$v) {
                                      _vm.$set(_vm.form, "mobilNumber", $$v)
                                    },
                                    expression: "form.mobilNumber"
                                  }
                                })
                              ],
                              1
                            )
                          ],
                          1
                        )
                      ]),
                      _vm._v(" "),
                      _c("el-col", { attrs: { span: 16 } }, [
                        _c(
                          "div",
                          { staticClass: "grid-content bg-purple-dark" },
                          [
                            _c(
                              "el-form-item",
                              { attrs: { label: "固定电话(区号):" } },
                              [
                                _c(
                                  "el-row",
                                  [
                                    _c(
                                      "el-col",
                                      { attrs: { span: 9 } },
                                      [
                                        _c("el-input", {
                                          attrs: {
                                            disabled:
                                              _vm.hisToryData ||
                                              _vm.afferentUserId
                                          },
                                          model: {
                                            value: _vm.form.areaCodel,
                                            callback: function($$v) {
                                              _vm.$set(
                                                _vm.form,
                                                "areaCodel",
                                                $$v
                                              )
                                            },
                                            expression: "form.areaCodel"
                                          }
                                        })
                                      ],
                                      1
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "el-col",
                                      { attrs: { span: 15 } },
                                      [
                                        _c(
                                          "div",
                                          {
                                            staticStyle: {
                                              display: "inline-block",
                                              width: "68px"
                                            }
                                          },
                                          [
                                            _c("i", {
                                              staticClass: "marl5 el-icon-plus"
                                            }),
                                            _vm._v(" "),
                                            _c("span", [_vm._v("(电话)")])
                                          ]
                                        ),
                                        _vm._v(" "),
                                        _c("el-input", {
                                          staticStyle: {
                                            display: "inline-block",
                                            width: "calc(100% - 75px)"
                                          },
                                          attrs: {
                                            disabled:
                                              _vm.hisToryData ||
                                              _vm.afferentUserId
                                          },
                                          model: {
                                            value: _vm.form.phoneNumber,
                                            callback: function($$v) {
                                              _vm.$set(
                                                _vm.form,
                                                "phoneNumber",
                                                $$v
                                              )
                                            },
                                            expression: "form.phoneNumber"
                                          }
                                        })
                                      ],
                                      1
                                    )
                                  ],
                                  1
                                )
                              ],
                              1
                            )
                          ],
                          1
                        )
                      ]),
                      _vm._v(" "),
                      _c("el-col", { attrs: { span: 16 } }, [
                        _c(
                          "div",
                          { staticClass: "grid-content bg-purple-dark" },
                          [
                            _c(
                              "el-form-item",
                              { attrs: { label: "家庭地址:" } },
                              [
                                _c("el-input", {
                                  attrs: {
                                    disabled:
                                      _vm.hisToryData || _vm.afferentUserId
                                  },
                                  model: {
                                    value: _vm.form.address,
                                    callback: function($$v) {
                                      _vm.$set(_vm.form, "address", $$v)
                                    },
                                    expression: "form.address"
                                  }
                                }),
                                _vm._v(
                                  "\n              (请具体到门牌号)\n            "
                                )
                              ],
                              1
                            )
                          ],
                          1
                        )
                      ]),
                      _vm._v(" "),
                      _c("el-col", { attrs: { span: 8 } }, [
                        _c(
                          "div",
                          { staticClass: "grid-content bg-purple-dark" },
                          [
                            _c(
                              "el-form-item",
                              { attrs: { label: "邮政编码:" } },
                              [
                                _c("el-input", {
                                  attrs: {
                                    disabled:
                                      _vm.hisToryData || _vm.afferentUserId
                                  },
                                  model: {
                                    value: _vm.form.emailCode,
                                    callback: function($$v) {
                                      _vm.$set(_vm.form, "emailCode", $$v)
                                    },
                                    expression: "form.emailCode"
                                  }
                                })
                              ],
                              1
                            )
                          ],
                          1
                        )
                      ])
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c(
                    "el-row",
                    [
                      _c("el-col", { attrs: { span: 24 } }, [
                        _c(
                          "div",
                          { staticClass: "grid-content bg-purple-dark" },
                          [
                            _c(
                              "el-form-item",
                              { attrs: { label: "青年组织及职务:" } },
                              [
                                _c(
                                  "el-table",
                                  {
                                    staticStyle: { width: "100%" },
                                    attrs: {
                                      data: _vm.groupInfoTable,
                                      border: ""
                                    }
                                  },
                                  [
                                    _c("el-table-column", {
                                      attrs: {
                                        prop: "key1",
                                        label: "入团时间",
                                        align: "center"
                                      },
                                      scopedSlots: _vm._u(
                                        [
                                          {
                                            key: "default",
                                            fn: function(scope) {
                                              return [
                                                _c("date-select", {
                                                  attrs: {
                                                    dateType:
                                                      scope.row.key1.type,
                                                    isDisabled:
                                                      _vm.hisToryData ||
                                                      _vm.afferentUserId
                                                        ? true
                                                        : false,
                                                    value:
                                                      scope.row.key1.date_time
                                                  },
                                                  on: {
                                                    dateEmit: function(val) {
                                                      return _vm.dateEmitFun(
                                                        val,
                                                        scope.row.key1
                                                      )
                                                    },
                                                    dateTypeEmit: function(
                                                      val
                                                    ) {
                                                      return _vm.dateTypeEmitFun(
                                                        val,
                                                        scope.row.key1
                                                      )
                                                    }
                                                  }
                                                })
                                              ]
                                            }
                                          }
                                        ],
                                        null,
                                        false,
                                        3861834598
                                      )
                                    }),
                                    _vm._v(" "),
                                    _c("el-table-column", {
                                      attrs: {
                                        prop: "key2",
                                        label: "现在团委名称",
                                        align: "center"
                                      },
                                      scopedSlots: _vm._u(
                                        [
                                          {
                                            key: "default",
                                            fn: function(scope) {
                                              return [
                                                _c("el-input", {
                                                  attrs: {
                                                    disabled:
                                                      _vm.hisToryData ||
                                                      _vm.afferentUserId,
                                                    placeholder: ""
                                                  },
                                                  model: {
                                                    value: scope.row.key2,
                                                    callback: function($$v) {
                                                      _vm.$set(
                                                        scope.row,
                                                        "key2",
                                                        $$v
                                                      )
                                                    },
                                                    expression: "scope.row.key2"
                                                  }
                                                })
                                              ]
                                            }
                                          }
                                        ],
                                        null,
                                        false,
                                        703589252
                                      )
                                    }),
                                    _vm._v(" "),
                                    _c("el-table-column", {
                                      attrs: {
                                        prop: "key3",
                                        label: "现在团委职务",
                                        align: "center"
                                      },
                                      scopedSlots: _vm._u(
                                        [
                                          {
                                            key: "default",
                                            fn: function(scope) {
                                              return [
                                                _c("el-input", {
                                                  attrs: {
                                                    disabled:
                                                      _vm.hisToryData ||
                                                      _vm.afferentUserId,
                                                    placeholder: ""
                                                  },
                                                  model: {
                                                    value: scope.row.key3,
                                                    callback: function($$v) {
                                                      _vm.$set(
                                                        scope.row,
                                                        "key3",
                                                        $$v
                                                      )
                                                    },
                                                    expression: "scope.row.key3"
                                                  }
                                                })
                                              ]
                                            }
                                          }
                                        ],
                                        null,
                                        false,
                                        3098161445
                                      )
                                    }),
                                    _vm._v(" "),
                                    _c("el-table-column", {
                                      attrs: {
                                        prop: "key4",
                                        label: "现在团支部名称",
                                        align: "center"
                                      },
                                      scopedSlots: _vm._u(
                                        [
                                          {
                                            key: "default",
                                            fn: function(scope) {
                                              return [
                                                _c("el-input", {
                                                  attrs: {
                                                    disabled:
                                                      _vm.hisToryData ||
                                                      _vm.afferentUserId,
                                                    placeholder: ""
                                                  },
                                                  model: {
                                                    value: scope.row.key4,
                                                    callback: function($$v) {
                                                      _vm.$set(
                                                        scope.row,
                                                        "key4",
                                                        $$v
                                                      )
                                                    },
                                                    expression: "scope.row.key4"
                                                  }
                                                })
                                              ]
                                            }
                                          }
                                        ],
                                        null,
                                        false,
                                        3845601218
                                      )
                                    }),
                                    _vm._v(" "),
                                    _c("el-table-column", {
                                      attrs: {
                                        prop: "key5",
                                        label: "现在团支部职务",
                                        align: "center"
                                      },
                                      scopedSlots: _vm._u(
                                        [
                                          {
                                            key: "default",
                                            fn: function(scope) {
                                              return [
                                                _c("el-input", {
                                                  attrs: {
                                                    disabled:
                                                      _vm.hisToryData ||
                                                      _vm.afferentUserId,
                                                    placeholder: ""
                                                  },
                                                  model: {
                                                    value: scope.row.key5,
                                                    callback: function($$v) {
                                                      _vm.$set(
                                                        scope.row,
                                                        "key5",
                                                        $$v
                                                      )
                                                    },
                                                    expression: "scope.row.key5"
                                                  }
                                                })
                                              ]
                                            }
                                          }
                                        ],
                                        null,
                                        false,
                                        4026686563
                                      )
                                    })
                                  ],
                                  1
                                )
                              ],
                              1
                            )
                          ],
                          1
                        )
                      ])
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c(
                    "el-row",
                    [
                      _c("el-col", { attrs: { span: 24 } }, [
                        _c(
                          "div",
                          { staticClass: "grid-content bg-purple-dark" },
                          [
                            _c(
                              "el-form-item",
                              { attrs: { label: "工会组织及职务:" } },
                              [
                                _c(
                                  "el-table",
                                  {
                                    staticStyle: { width: "100%" },
                                    attrs: {
                                      align: _vm.center,
                                      data: _vm.guildInfoTable,
                                      border: ""
                                    }
                                  },
                                  [
                                    _c("el-table-column", {
                                      attrs: {
                                        prop: "key1",
                                        label: "入会时间",
                                        align: "center"
                                      },
                                      scopedSlots: _vm._u(
                                        [
                                          {
                                            key: "default",
                                            fn: function(scope) {
                                              return [
                                                _c("date-select", {
                                                  attrs: {
                                                    dateType:
                                                      scope.row.key1.type,
                                                    isDisabled:
                                                      _vm.hisToryData ||
                                                      _vm.afferentUserId
                                                        ? true
                                                        : false,
                                                    value:
                                                      scope.row.key1.date_time
                                                  },
                                                  on: {
                                                    dateEmit: function(val) {
                                                      return _vm.dateEmitFun(
                                                        val,
                                                        scope.row.key1
                                                      )
                                                    },
                                                    dateTypeEmit: function(
                                                      val
                                                    ) {
                                                      return _vm.dateTypeEmitFun(
                                                        val,
                                                        scope.row.key1
                                                      )
                                                    }
                                                  }
                                                })
                                              ]
                                            }
                                          }
                                        ],
                                        null,
                                        false,
                                        3861834598
                                      )
                                    }),
                                    _vm._v(" "),
                                    _c("el-table-column", {
                                      attrs: {
                                        prop: "key2",
                                        label: "现在工会（三级）名称",
                                        align: "center"
                                      },
                                      scopedSlots: _vm._u(
                                        [
                                          {
                                            key: "default",
                                            fn: function(scope) {
                                              return [
                                                _c("el-input", {
                                                  attrs: {
                                                    disabled:
                                                      _vm.hisToryData ||
                                                      _vm.afferentUserId,
                                                    placeholder: ""
                                                  },
                                                  model: {
                                                    value: scope.row.key2,
                                                    callback: function($$v) {
                                                      _vm.$set(
                                                        scope.row,
                                                        "key2",
                                                        $$v
                                                      )
                                                    },
                                                    expression: "scope.row.key2"
                                                  }
                                                })
                                              ]
                                            }
                                          }
                                        ],
                                        null,
                                        false,
                                        703589252
                                      )
                                    }),
                                    _vm._v(" "),
                                    _c("el-table-column", {
                                      attrs: {
                                        prop: "key3",
                                        label: "现在工会（三级）职务",
                                        align: "center"
                                      },
                                      scopedSlots: _vm._u(
                                        [
                                          {
                                            key: "default",
                                            fn: function(scope) {
                                              return [
                                                _c("el-input", {
                                                  attrs: {
                                                    disabled:
                                                      _vm.hisToryData ||
                                                      _vm.afferentUserId,
                                                    placeholder: ""
                                                  },
                                                  model: {
                                                    value: scope.row.key3,
                                                    callback: function($$v) {
                                                      _vm.$set(
                                                        scope.row,
                                                        "key3",
                                                        $$v
                                                      )
                                                    },
                                                    expression: "scope.row.key3"
                                                  }
                                                })
                                              ]
                                            }
                                          }
                                        ],
                                        null,
                                        false,
                                        3098161445
                                      )
                                    }),
                                    _vm._v(" "),
                                    _c("el-table-column", {
                                      attrs: {
                                        prop: "key4",
                                        label: "现在工会（四级）名称",
                                        align: "center"
                                      },
                                      scopedSlots: _vm._u(
                                        [
                                          {
                                            key: "default",
                                            fn: function(scope) {
                                              return [
                                                _c("el-input", {
                                                  attrs: {
                                                    disabled:
                                                      _vm.hisToryData ||
                                                      _vm.afferentUserId,
                                                    placeholder: ""
                                                  },
                                                  model: {
                                                    value: scope.row.key4,
                                                    callback: function($$v) {
                                                      _vm.$set(
                                                        scope.row,
                                                        "key4",
                                                        $$v
                                                      )
                                                    },
                                                    expression: "scope.row.key4"
                                                  }
                                                })
                                              ]
                                            }
                                          }
                                        ],
                                        null,
                                        false,
                                        3845601218
                                      )
                                    }),
                                    _vm._v(" "),
                                    _c("el-table-column", {
                                      attrs: {
                                        prop: "key5",
                                        label: "现在工会（四级）职务",
                                        align: "center"
                                      },
                                      scopedSlots: _vm._u(
                                        [
                                          {
                                            key: "default",
                                            fn: function(scope) {
                                              return [
                                                _c("el-input", {
                                                  attrs: {
                                                    disabled:
                                                      _vm.hisToryData ||
                                                      _vm.afferentUserId,
                                                    placeholder: ""
                                                  },
                                                  model: {
                                                    value: scope.row.key5,
                                                    callback: function($$v) {
                                                      _vm.$set(
                                                        scope.row,
                                                        "key5",
                                                        $$v
                                                      )
                                                    },
                                                    expression: "scope.row.key5"
                                                  }
                                                })
                                              ]
                                            }
                                          }
                                        ],
                                        null,
                                        false,
                                        4026686563
                                      )
                                    })
                                  ],
                                  1
                                )
                              ],
                              1
                            )
                          ],
                          1
                        )
                      ])
                    ],
                    1
                  ),
                  _vm._v(" "),
                  !_vm.hisToryData && !_vm.afferentUserId
                    ? _c(
                        "el-row",
                        [
                          _c(
                            "el-col",
                            { attrs: { span: 8 } },
                            [
                              _c(
                                "el-form-item",
                                [
                                  _c(
                                    "el-button",
                                    {
                                      attrs: { type: "primary" },
                                      on: {
                                        click: function($event) {
                                          return _vm.updatePersonalMesg("form")
                                        }
                                      }
                                    },
                                    [_vm._v("基本信息提交")]
                                  )
                                ],
                                1
                              )
                            ],
                            1
                          )
                        ],
                        1
                      )
                    : _vm._e()
                ],
                1
              )
            ],
            1
          )
        : _vm._e(),
      _vm._v(" "),
      (_vm.hisToryData ? _vm.hisToryData.fromType == "resetPassword" : true) &&
      !_vm.afferentUserId &&
      _vm.userData.memInfoId
        ? _c(
            "div",
            {
              directives: [
                {
                  name: "loading",
                  rawName: "v-loading",
                  value: _vm.loading,
                  expression: "loading"
                }
              ],
              staticClass: "personal-wrapper"
            },
            [
              _c("h1", { staticClass: "title marb20" }, [
                _vm._v("|| 重置密码")
              ]),
              _vm._v(" "),
              _c(
                "el-form",
                {
                  ref: "resetPasswordForm",
                  staticClass: "demo-ruleForm add-task-left",
                  attrs: {
                    rules: _vm.resetPasswordFormRules,
                    model: _vm.resetPasswordForm,
                    "label-width": "150px"
                  }
                },
                [
                  _c(
                    "el-row",
                    [
                      _c(
                        "el-col",
                        { attrs: { span: 8 } },
                        [
                          _c(
                            "el-form-item",
                            { attrs: { label: "旧密码", prop: "oldPassword" } },
                            [
                              _c("el-input", {
                                attrs: { type: "text" },
                                model: {
                                  value: _vm.resetPasswordForm.oldPassword,
                                  callback: function($$v) {
                                    _vm.$set(
                                      _vm.resetPasswordForm,
                                      "oldPassword",
                                      $$v
                                    )
                                  },
                                  expression: "resetPasswordForm.oldPassword"
                                }
                              })
                            ],
                            1
                          ),
                          _vm._v(" "),
                          _c(
                            "el-form-item",
                            { attrs: { label: "新密码", prop: "newPassword" } },
                            [
                              _c("el-input", {
                                attrs: {
                                  type: "password",
                                  autocomplete: "off"
                                },
                                model: {
                                  value: _vm.resetPasswordForm.newPassword,
                                  callback: function($$v) {
                                    _vm.$set(
                                      _vm.resetPasswordForm,
                                      "newPassword",
                                      $$v
                                    )
                                  },
                                  expression: "resetPasswordForm.newPassword"
                                }
                              })
                            ],
                            1
                          ),
                          _vm._v(" "),
                          _c(
                            "el-form-item",
                            {
                              attrs: {
                                label: "确认密码",
                                prop: "confirmPassword"
                              }
                            },
                            [
                              _c("el-input", {
                                attrs: {
                                  type: "password",
                                  autocomplete: "off"
                                },
                                model: {
                                  value: _vm.resetPasswordForm.confirmPassword,
                                  callback: function($$v) {
                                    _vm.$set(
                                      _vm.resetPasswordForm,
                                      "confirmPassword",
                                      $$v
                                    )
                                  },
                                  expression:
                                    "resetPasswordForm.confirmPassword"
                                }
                              })
                            ],
                            1
                          )
                        ],
                        1
                      )
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c(
                    "el-form-item",
                    { staticClass: "no-border marr20" },
                    [
                      _c(
                        "el-button",
                        {
                          attrs: { size: "small", type: "primary" },
                          on: {
                            click: function($event) {
                              return _vm.resetPassword("resetPasswordForm")
                            }
                          }
                        },
                        [_vm._v("确认提交密码")]
                      )
                    ],
                    1
                  )
                ],
                1
              )
            ],
            1
          )
        : _vm._e(),
      _vm._v(" "),
      (_vm.hisToryData ? _vm.hisToryData.fromType == 7 : true) &&
      !_vm.afferentUserId &&
      _vm.userData.memInfoId
        ? _c(
            "div",
            {
              directives: [
                {
                  name: "loading",
                  rawName: "v-loading",
                  value: _vm.loading,
                  expression: "loading"
                }
              ],
              staticClass: "personal-wrapper"
            },
            [
              _c("h1", { staticClass: "title marb20" }, [
                _vm._v("|| 党员信息")
              ]),
              _vm._v(" "),
              _c(
                "el-form",
                {
                  ref: "partyMemberForm",
                  staticClass: "demo-ruleForm add-task-left",
                  attrs: { model: _vm.partyMemberForm, "label-width": "150px" }
                },
                [
                  _c(
                    "el-row",
                    [
                      _c(
                        "el-col",
                        { attrs: { span: 8 } },
                        [
                          _vm.orgChlidrensimple.length != 0
                            ? _c(
                                "el-form-item",
                                {
                                  attrs: {
                                    "label-width": "80px",
                                    label: "所属支部:"
                                  }
                                },
                                [
                                  _c(
                                    "span",
                                    {
                                      directives: [
                                        {
                                          name: "show",
                                          rawName: "v-show",
                                          value:
                                            _vm.hisToryData ||
                                            _vm.afferentUserId,
                                          expression:
                                            "hisToryData || afferentUserId"
                                        }
                                      ]
                                    },
                                    [
                                      _vm._v(
                                        _vm._s(
                                          _vm.$util.controlTable(
                                            _vm.partyMemberForm.partyOrgsId
                                          )
                                        )
                                      )
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "div",
                                    { staticClass: "tree-selected" },
                                    [
                                      _c("tree-selected-last", {
                                        staticClass: "marb20",
                                        attrs: {
                                          pageType: "personal",
                                          paramsData: _vm.selectItem,
                                          isEditPage: "0",
                                          isCheckbox: "1",
                                          mathRandom: _vm.mathRandomSelect
                                        },
                                        on: { treeValData: _vm.treeValDataFun }
                                      })
                                    ],
                                    1
                                  )
                                ]
                              )
                            : _vm._e()
                        ],
                        1
                      ),
                      _vm._v(" "),
                      _c(
                        "el-col",
                        { attrs: { span: 8 } },
                        [
                          _c(
                            "el-form-item",
                            {
                              attrs: {
                                label: "申请时间:",
                                prop: "applicationDate"
                              }
                            },
                            [
                              _c("date-select", {
                                attrs: {
                                  dateType:
                                    _vm.partyMemberForm.applicationDate.type,
                                  isDisabled:
                                    _vm.hisToryData || _vm.afferentUserId
                                      ? true
                                      : false,
                                  value:
                                    _vm.partyMemberForm.applicationDate
                                      .date_time
                                },
                                on: {
                                  dateEmit: function(val) {
                                    return _vm.dateEmitFun(
                                      val,
                                      _vm.partyMemberForm.applicationDate
                                    )
                                  },
                                  dateTypeEmit: function(val) {
                                    return _vm.dateTypeEmitFun(
                                      val,
                                      _vm.partyMemberForm.applicationDate
                                    )
                                  }
                                }
                              })
                            ],
                            1
                          )
                        ],
                        1
                      ),
                      _vm._v(" "),
                      _c(
                        "el-col",
                        { attrs: { span: 8 } },
                        [
                          _c(
                            "el-form-item",
                            {
                              staticClass: "no-border",
                              attrs: { label: "介绍者:", prop: "introducer" }
                            },
                            [
                              _c("el-input", {
                                attrs: {
                                  disabled:
                                    _vm.hisToryData || _vm.afferentUserId,
                                  placeholder: "请输入介绍者"
                                },
                                model: {
                                  value: _vm.partyMemberForm.introducer,
                                  callback: function($$v) {
                                    _vm.$set(
                                      _vm.partyMemberForm,
                                      "introducer",
                                      $$v
                                    )
                                  },
                                  expression: "partyMemberForm.introducer"
                                }
                              })
                            ],
                            1
                          )
                        ],
                        1
                      ),
                      _vm._v(" "),
                      _c(
                        "el-col",
                        { attrs: { span: 8 } },
                        [
                          _c(
                            "el-form-item",
                            {
                              staticClass: "no-border",
                              attrs: {
                                label: "入党时间:",
                                prop: "joinPartyDate"
                              }
                            },
                            [
                              _c("date-select", {
                                attrs: {
                                  dateType:
                                    _vm.partyMemberForm.joinPartyDate.type,
                                  isDisabled:
                                    _vm.hisToryData || _vm.afferentUserId
                                      ? true
                                      : false,
                                  value:
                                    _vm.partyMemberForm.joinPartyDate.date_time
                                },
                                on: {
                                  dateEmit: function(val) {
                                    return _vm.dateEmitFun(
                                      val,
                                      _vm.partyMemberForm.joinPartyDate
                                    )
                                  },
                                  dateTypeEmit: function(val) {
                                    return _vm.dateTypeEmitFun(
                                      val,
                                      _vm.partyMemberForm.joinPartyDate
                                    )
                                  }
                                }
                              })
                            ],
                            1
                          )
                        ],
                        1
                      ),
                      _vm._v(" "),
                      _c(
                        "el-col",
                        { attrs: { span: 8 } },
                        [
                          _c(
                            "el-form-item",
                            {
                              staticClass: "no-border date-type-div",
                              attrs: {
                                label: "转正时间:",
                                prop: "qualificationTime"
                              }
                            },
                            [
                              _c("date-select", {
                                attrs: {
                                  dateType:
                                    _vm.partyMemberForm.qualificationTime.type,
                                  isDisabled:
                                    _vm.hisToryData || _vm.afferentUserId
                                      ? true
                                      : false,
                                  value:
                                    _vm.partyMemberForm.qualificationTime
                                      .date_time
                                },
                                on: {
                                  dateEmit: function(val) {
                                    return _vm.dateEmitFun(
                                      val,
                                      _vm.partyMemberForm.qualificationTime
                                    )
                                  },
                                  dateTypeEmit: function(val) {
                                    return _vm.dateTypeEmitFun(
                                      val,
                                      _vm.partyMemberForm.qualificationTime
                                    )
                                  }
                                }
                              })
                            ],
                            1
                          )
                        ],
                        1
                      ),
                      _vm._v(" "),
                      _c(
                        "el-col",
                        { attrs: { span: 8 } },
                        [
                          _c(
                            "el-form-item",
                            {
                              staticClass: "no-border",
                              attrs: { label: "是否是流动党员:" }
                            },
                            [
                              _c(
                                "el-radio-group",
                                {
                                  attrs: {
                                    disabled:
                                      _vm.hisToryData || _vm.afferentUserId
                                  },
                                  model: {
                                    value: _vm.partyMemberForm.mobile,
                                    callback: function($$v) {
                                      _vm.$set(
                                        _vm.partyMemberForm,
                                        "mobile",
                                        $$v
                                      )
                                    },
                                    expression: "partyMemberForm.mobile"
                                  }
                                },
                                [
                                  _c("el-radio", { attrs: { label: true } }, [
                                    _vm._v("是")
                                  ]),
                                  _vm._v(" "),
                                  _c("el-radio", { attrs: { label: false } }, [
                                    _vm._v("否")
                                  ])
                                ],
                                1
                              )
                            ],
                            1
                          )
                        ],
                        1
                      ),
                      _vm._v(" "),
                      _c(
                        "el-col",
                        { attrs: { span: 8 } },
                        [
                          _c(
                            "el-form-item",
                            {
                              staticClass: "no-border",
                              attrs: { label: "是否失联:" }
                            },
                            [
                              _c(
                                "el-radio-group",
                                {
                                  attrs: {
                                    disabled:
                                      _vm.hisToryData || _vm.afferentUserId
                                  },
                                  model: {
                                    value: _vm.partyMemberForm.lost,
                                    callback: function($$v) {
                                      _vm.$set(_vm.partyMemberForm, "lost", $$v)
                                    },
                                    expression: "partyMemberForm.lost"
                                  }
                                },
                                [
                                  _c("el-radio", { attrs: { label: true } }, [
                                    _vm._v("是")
                                  ]),
                                  _vm._v(" "),
                                  _c("el-radio", { attrs: { label: false } }, [
                                    _vm._v("否")
                                  ])
                                ],
                                1
                              )
                            ],
                            1
                          )
                        ],
                        1
                      ),
                      _vm._v(" "),
                      _c(
                        "el-col",
                        { attrs: { span: 8 } },
                        [
                          _vm.partyMemberForm.lost
                            ? _c(
                                "el-form-item",
                                {
                                  staticClass: "no-border",
                                  attrs: {
                                    label: "失联时间:",
                                    prop: "lostTime"
                                  }
                                },
                                [
                                  _c("el-date-picker", {
                                    attrs: {
                                      type: "date",
                                      placeholder: "选择日期"
                                    },
                                    model: {
                                      value: _vm.partyMemberForm.lostTime,
                                      callback: function($$v) {
                                        _vm.$set(
                                          _vm.partyMemberForm,
                                          "lostTime",
                                          $$v
                                        )
                                      },
                                      expression: "partyMemberForm.lostTime"
                                    }
                                  })
                                ],
                                1
                              )
                            : _vm._e()
                        ],
                        1
                      ),
                      _vm._v(" "),
                      _c(
                        "el-col",
                        { staticClass: "text-center", attrs: { span: 16 } },
                        [
                          _c(
                            "el-button",
                            {
                              attrs: { size: "small", type: "primary" },
                              on: {
                                click: function($event) {
                                  return _vm.savePartyMemberForm(
                                    "partyMemberForm"
                                  )
                                }
                              }
                            },
                            [_vm._v("党员信息提交")]
                          )
                        ],
                        1
                      )
                    ],
                    1
                  )
                ],
                1
              )
            ],
            1
          )
        : _vm._e(),
      _vm._v(" "),
      (_vm.hisToryData
      ? _vm.hisToryData.fromType == 6
      : true)
        ? _c(
            "el-card",
            {
              directives: [
                {
                  name: "loading",
                  rawName: "v-loading",
                  value: _vm.loading,
                  expression: "loading"
                }
              ],
              staticClass: "box-card marb20"
            },
            [
              _c(
                "div",
                {
                  staticClass: "clearfix",
                  staticStyle: { "font-size": "25px" },
                  attrs: { slot: "header" },
                  slot: "header"
                },
                [_c("span", [_vm._v("关系")])]
              ),
              _vm._v(" "),
              (_vm.hisToryData
              ? JSON.parse(_vm.hisToryData.formData).typeId == 1
              : true)
                ? _c(
                    "div",
                    { staticClass: "personal-wrapper" },
                    [
                      _c("h1", { staticClass: "title" }, [
                        _vm._v("|| 家庭成员 "),
                        !_vm.hisToryData && !_vm.afferentUserId
                          ? _c("i", {
                              staticClass: "el-icon-circle-plus",
                              on: {
                                click: function($event) {
                                  _vm.editTypeId = 1
                                  _vm.addRelationRow()
                                }
                              }
                            })
                          : _vm._e()
                      ]),
                      _vm._v(" "),
                      _c(
                        "el-table",
                        {
                          staticStyle: { width: "100%" },
                          attrs: {
                            stripe: true,
                            data: _vm.relationsData.relationsData1
                          }
                        },
                        [
                          _c("el-table-column", {
                            attrs: { align: "left", label: "姓名" },
                            scopedSlots: _vm._u(
                              [
                                {
                                  key: "default",
                                  fn: function(scope) {
                                    return [
                                      !scope.row.hasOwnProperty("newAdd")
                                        ? _c("span", [
                                            _vm._v(_vm._s(scope.row.otherName))
                                          ])
                                        : _c("el-input", {
                                            class: {
                                              "border-red":
                                                scope.row.hasOwnProperty(
                                                  "isBool"
                                                ) &&
                                                scope.row.isBool === 2 &&
                                                !scope.row.otherName
                                            },
                                            model: {
                                              value: scope.row.otherName,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  scope.row,
                                                  "otherName",
                                                  $$v
                                                )
                                              },
                                              expression: "scope.row.otherName"
                                            }
                                          })
                                    ]
                                  }
                                }
                              ],
                              null,
                              false,
                              58150197
                            )
                          }),
                          _vm._v(" "),
                          _c("el-table-column", {
                            attrs: { align: "left", label: "职业" },
                            scopedSlots: _vm._u(
                              [
                                {
                                  key: "default",
                                  fn: function(scope) {
                                    return [
                                      !scope.row.hasOwnProperty("newAdd")
                                        ? _c("span", [
                                            _vm._v(
                                              _vm._s(scope.row.otherPosition)
                                            )
                                          ])
                                        : _c("el-input", {
                                            class: {
                                              "border-red":
                                                scope.row.hasOwnProperty(
                                                  "isBool"
                                                ) &&
                                                scope.row.isBool === 2 &&
                                                !scope.row.otherPosition
                                            },
                                            model: {
                                              value: scope.row.otherPosition,
                                              callback: function($$v) {
                                                _vm.$set(
                                                  scope.row,
                                                  "otherPosition",
                                                  $$v
                                                )
                                              },
                                              expression:
                                                "scope.row.otherPosition"
                                            }
                                          })
                                    ]
                                  }
                                }
                              ],
                              null,
                              false,
                              3178362571
                            )
                          }),
                          _vm._v(" "),
                          _c("el-table-column", {
                            attrs: { align: "left", label: "关系" },
                            scopedSlots: _vm._u(
                              [
                                {
                                  key: "default",
                                  fn: function(scope) {
                                    return [
                                      !scope.row.hasOwnProperty("newAdd")
                                        ? _c("span", [
                                            _vm._v(
                                              _vm._s(
                                                _vm.$util.controlTable(
                                                  scope.row.relationName
                                                )
                                              )
                                            )
                                          ])
                                        : _c(
                                            "el-select",
                                            {
                                              class: {
                                                "border-red":
                                                  scope.row.hasOwnProperty(
                                                    "isBool"
                                                  ) &&
                                                  scope.row.isBool === 2 &&
                                                  !scope.row.relationName
                                              },
                                              attrs: { placeholder: "请选择" },
                                              model: {
                                                value: scope.row.relationName,
                                                callback: function($$v) {
                                                  _vm.$set(
                                                    scope.row,
                                                    "relationName",
                                                    $$v
                                                  )
                                                },
                                                expression:
                                                  "scope.row.relationName"
                                              }
                                            },
                                            _vm._l(
                                              _vm.relationshipOptions,
                                              function(item) {
                                                return _c("el-option", {
                                                  key: item.key,
                                                  attrs: {
                                                    label: item.value,
                                                    value: item.key
                                                  }
                                                })
                                              }
                                            ),
                                            1
                                          )
                                    ]
                                  }
                                }
                              ],
                              null,
                              false,
                              3313242621
                            )
                          }),
                          _vm._v(" "),
                          !_vm.hisToryData && !_vm.afferentUserId
                            ? _c("el-table-column", {
                                attrs: { width: "100px", label: "操作" },
                                scopedSlots: _vm._u(
                                  [
                                    {
                                      key: "default",
                                      fn: function(scope) {
                                        return [
                                          scope.row.hasOwnProperty("newAdd")
                                            ? _c("el-button", {
                                                attrs: {
                                                  type: "success",
                                                  icon: "el-icon-check",
                                                  circle: ""
                                                },
                                                on: {
                                                  click: function($event) {
                                                    _vm.saveRelationship(
                                                      "add",
                                                      scope.row
                                                    )
                                                    _vm.editTypeId = 1
                                                  }
                                                }
                                              })
                                            : _vm._e(),
                                          _vm._v(" "),
                                          _c("el-button", {
                                            attrs: {
                                              title: "删除",
                                              type: "danger",
                                              icon: "el-icon-delete",
                                              circle: ""
                                            },
                                            on: {
                                              click: function($event) {
                                                _vm.delRelationship(
                                                  scope.row.id,
                                                  scope.row,
                                                  scope.$index
                                                )
                                                _vm.editTypeId = 1
                                              }
                                            }
                                          })
                                        ]
                                      }
                                    }
                                  ],
                                  null,
                                  false,
                                  3781363647
                                )
                              })
                            : _vm._e()
                        ],
                        1
                      )
                    ],
                    1
                  )
                : _vm._e()
            ]
          )
        : _vm._e()
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ __webpack_exports__["a"] = (esExports);
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-loader/node_modules/vue-hot-reload-api")      .rerender("data-v-b82a2200", esExports)
  }
}

/***/ }),

/***/ 1314:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_Experience_vue__ = __webpack_require__(1267);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_Experience_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_Experience_vue__);
/* harmony namespace reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_Experience_vue__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_Experience_vue__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_13_7_3_vue_loader_lib_template_compiler_index_id_data_v_935c25d4_hasScoped_false_buble_transforms_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_template_index_0_Experience_vue__ = __webpack_require__(1317);
var disposed = false
function injectStyle (ssrContext) {
  if (disposed) return
  __webpack_require__(1315)
}
var normalizeComponent = __webpack_require__(42)
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_Experience_vue___default.a,
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_13_7_3_vue_loader_lib_template_compiler_index_id_data_v_935c25d4_hasScoped_false_buble_transforms_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_template_index_0_Experience_vue__["a" /* default */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "devPkg/components/personal_manage/messageComponents/Experience.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-loader/node_modules/vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-935c25d4", Component.options)
  } else {
    hotAPI.reload("data-v-935c25d4", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),

/***/ 1315:
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(1316);
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__(76)("c1931dca", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../node_modules/_css-loader@0.28.11@css-loader/index.js!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-935c25d4\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../node_modules/_less-loader@4.1.0@less-loader/dist/cjs.js!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=styles&index=0!./Experience.vue", function() {
     var newContent = require("!!../../../../node_modules/_css-loader@0.28.11@css-loader/index.js!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-935c25d4\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../node_modules/_less-loader@4.1.0@less-loader/dist/cjs.js!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=styles&index=0!./Experience.vue");
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ 1316:
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(43)(false);
// imports


// module
exports.push([module.i, "\n.date-type-div {\n  position: relative;\n}\n.date-type-div .type {\n  position: absolute;\n  right: 0;\n  width: 100px;\n  top: 0;\n}\n", ""]);

// exports


/***/ }),

/***/ 1317:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return (_vm.hisToryData
  ? _vm.hisToryData.fromType == 3
  : true)
    ? _c(
        "el-card",
        {
          directives: [
            {
              name: "loading",
              rawName: "v-loading",
              value: _vm.loading,
              expression: "loading"
            }
          ],
          staticClass: "box-card marb20"
        },
        [
          _c(
            "div",
            {
              staticClass: "clearfix",
              staticStyle: { "font-size": "25px" },
              attrs: { slot: "header" },
              slot: "header"
            },
            [_c("span", [_vm._v("经历性")])]
          ),
          _vm._v(" "),
          (_vm.hisToryData
          ? JSON.parse(_vm.hisToryData.formData).typeId == 1
          : true)
            ? _c(
                "div",
                { staticClass: "personal-wrapper" },
                [
                  _c("h1", { staticClass: "title" }, [
                    _vm._v("|| 工作经历 "),
                    !_vm.hisToryData && !_vm.afferentUserId
                      ? _c("i", {
                          staticClass: "el-icon-circle-plus",
                          on: {
                            click: function($event) {
                              _vm.editTypeId = 1
                              _vm.addExperienceRow()
                            }
                          }
                        })
                      : _vm._e()
                  ]),
                  _vm._v(" "),
                  _c(
                    "el-table",
                    {
                      staticStyle: { width: "100%" },
                      attrs: {
                        stripe: true,
                        data: _vm.experienceData.experienceData1
                      }
                    },
                    [
                      _c("el-table-column", {
                        attrs: {
                          align: "left",
                          width: "400px",
                          label: "工作开始-结束"
                        },
                        scopedSlots: _vm._u(
                          [
                            {
                              key: "default",
                              fn: function(scope) {
                                return [
                                  !scope.row.hasOwnProperty("newAdd")
                                    ? _c("span", [
                                        _vm._v(
                                          "\n            " +
                                            _vm._s(
                                              scope.row.beginDatetime != 1
                                                ? _vm._convertDate(
                                                    scope.row.beginDatetime
                                                  )
                                                : ""
                                            ) +
                                            " - " +
                                            _vm._s(
                                              scope.row.beginDatetime != 1
                                                ? _vm._convertDate(
                                                    scope.row.endDatetime
                                                  )
                                                : ""
                                            ) +
                                            "\n          "
                                        )
                                      ])
                                    : _c(
                                        "div",
                                        { staticClass: "date-type-div" },
                                        [
                                          _c("date-select", {
                                            class: {
                                              "border-red":
                                                scope.row.hasOwnProperty(
                                                  "isBool"
                                                ) &&
                                                scope.row.isBool === 2 &&
                                                !scope.row.beginDatetime &&
                                                !scope.row.endDatetime
                                            },
                                            attrs: {
                                              isTimeRange: "true",
                                              dateType: scope.row.beginTimeType,
                                              isDisabled: false,
                                              beginDatetime:
                                                scope.row.beginDatetime,
                                              endDatetime: scope.row.endDatetime
                                            },
                                            on: {
                                              dateEmit: function(val) {
                                                return _vm.dateEmitFun(
                                                  val,
                                                  scope.row
                                                )
                                              },
                                              dateTypeEmit: function(val) {
                                                return _vm.dateTypeEmitFun(
                                                  val,
                                                  scope.row
                                                )
                                              }
                                            }
                                          })
                                        ],
                                        1
                                      )
                                ]
                              }
                            }
                          ],
                          null,
                          false,
                          3046815948
                        )
                      }),
                      _vm._v(" "),
                      _c("el-table-column", {
                        attrs: { align: "left", label: "工作单位/地址" },
                        scopedSlots: _vm._u(
                          [
                            {
                              key: "default",
                              fn: function(scope) {
                                return [
                                  !scope.row.hasOwnProperty("newAdd")
                                    ? _c("span", [
                                        _vm._v(_vm._s(scope.row.address))
                                      ])
                                    : _c("el-input", {
                                        class: {
                                          "border-red":
                                            scope.row.hasOwnProperty(
                                              "isBool"
                                            ) &&
                                            scope.row.isBool === 2 &&
                                            !scope.row.address
                                        },
                                        model: {
                                          value: scope.row.address,
                                          callback: function($$v) {
                                            _vm.$set(scope.row, "address", $$v)
                                          },
                                          expression: "scope.row.address"
                                        }
                                      })
                                ]
                              }
                            }
                          ],
                          null,
                          false,
                          202749856
                        )
                      }),
                      _vm._v(" "),
                      _c("el-table-column", {
                        attrs: { align: "left", label: "工作经历" },
                        scopedSlots: _vm._u(
                          [
                            {
                              key: "default",
                              fn: function(scope) {
                                return [
                                  !scope.row.hasOwnProperty("newAdd")
                                    ? _c("span", [
                                        _vm._v(_vm._s(scope.row.position))
                                      ])
                                    : _c("el-input", {
                                        class: {
                                          "border-red":
                                            scope.row.hasOwnProperty(
                                              "isBool"
                                            ) &&
                                            scope.row.isBool === 2 &&
                                            !scope.row.position
                                        },
                                        model: {
                                          value: scope.row.position,
                                          callback: function($$v) {
                                            _vm.$set(scope.row, "position", $$v)
                                          },
                                          expression: "scope.row.position"
                                        }
                                      })
                                ]
                              }
                            }
                          ],
                          null,
                          false,
                          2832260527
                        )
                      }),
                      _vm._v(" "),
                      !_vm.hisToryData && !_vm.afferentUserId
                        ? _c("el-table-column", {
                            attrs: { width: "100px", label: "操作" },
                            scopedSlots: _vm._u(
                              [
                                {
                                  key: "default",
                                  fn: function(scope) {
                                    return [
                                      scope.row.hasOwnProperty("newAdd")
                                        ? _c("el-button", {
                                            attrs: {
                                              title: "保存",
                                              type: "success",
                                              icon: "el-icon-check",
                                              circle: ""
                                            },
                                            on: {
                                              click: function($event) {
                                                _vm.saveExperience(
                                                  "add",
                                                  scope.row
                                                )
                                                _vm.editTypeId = 1
                                              }
                                            }
                                          })
                                        : _vm._e(),
                                      _vm._v(" "),
                                      _c("el-button", {
                                        attrs: {
                                          title: "删除",
                                          type: "danger",
                                          icon: "el-icon-delete",
                                          circle: ""
                                        },
                                        on: {
                                          click: function($event) {
                                            _vm.delExperience(
                                              "experienceData1",
                                              scope.row.id,
                                              scope.row,
                                              scope.$index
                                            )
                                            _vm.editTypeId = 1
                                          }
                                        }
                                      })
                                    ]
                                  }
                                }
                              ],
                              null,
                              false,
                              4178178815
                            )
                          })
                        : _vm._e()
                    ],
                    1
                  )
                ],
                1
              )
            : _vm._e(),
          _vm._v(" "),
          (_vm.hisToryData
          ? JSON.parse(_vm.hisToryData.formData).typeId == 2
          : true)
            ? _c(
                "div",
                { staticClass: "personal-wrapper" },
                [
                  _c("h1", { staticClass: "title" }, [
                    _vm._v("|| 学习经历 "),
                    !_vm.hisToryData && !_vm.afferentUserId
                      ? _c("i", {
                          staticClass: "el-icon-circle-plus",
                          on: {
                            click: function($event) {
                              _vm.editTypeId = 2
                              _vm.addExperienceRow()
                            }
                          }
                        })
                      : _vm._e()
                  ]),
                  _vm._v(" "),
                  _c(
                    "el-table",
                    {
                      staticStyle: { width: "100%" },
                      attrs: {
                        stripe: true,
                        data: _vm.experienceData.experienceData2
                      }
                    },
                    [
                      _c("el-table-column", {
                        attrs: {
                          align: "left",
                          width: "400px",
                          label: "学习开始-结束"
                        },
                        scopedSlots: _vm._u(
                          [
                            {
                              key: "default",
                              fn: function(scope) {
                                return [
                                  !scope.row.hasOwnProperty("newAdd")
                                    ? _c("span", [
                                        _vm._v(
                                          "\n            " +
                                            _vm._s(
                                              scope.row.beginDatetime != 1
                                                ? _vm._convertDate(
                                                    scope.row.beginDatetime
                                                  )
                                                : ""
                                            ) +
                                            " - " +
                                            _vm._s(
                                              scope.row.beginDatetime != 1
                                                ? _vm._convertDate(
                                                    scope.row.endDatetime
                                                  )
                                                : ""
                                            ) +
                                            "\n          "
                                        )
                                      ])
                                    : _c(
                                        "div",
                                        { staticClass: "date-type-div" },
                                        [
                                          _c("date-select", {
                                            class: {
                                              "border-red":
                                                scope.row.hasOwnProperty(
                                                  "isBool"
                                                ) &&
                                                scope.row.isBool === 2 &&
                                                !scope.row.beginDatetime &&
                                                !scope.row.endDatetime
                                            },
                                            attrs: {
                                              isTimeRange: "true",
                                              dateType: scope.row.beginTimeType,
                                              isDisabled: false,
                                              beginDatetime:
                                                scope.row.beginDatetime,
                                              endDatetime: scope.row.endDatetime
                                            },
                                            on: {
                                              dateEmit: function(val) {
                                                return _vm.dateEmitFun(
                                                  val,
                                                  scope.row
                                                )
                                              },
                                              dateTypeEmit: function(val) {
                                                return _vm.dateTypeEmitFun(
                                                  val,
                                                  scope.row
                                                )
                                              }
                                            }
                                          })
                                        ],
                                        1
                                      )
                                ]
                              }
                            }
                          ],
                          null,
                          false,
                          3046815948
                        )
                      }),
                      _vm._v(" "),
                      _c("el-table-column", {
                        attrs: { align: "left", label: "学习单位/地点" },
                        scopedSlots: _vm._u(
                          [
                            {
                              key: "default",
                              fn: function(scope) {
                                return [
                                  !scope.row.hasOwnProperty("newAdd")
                                    ? _c("span", [
                                        _vm._v(_vm._s(scope.row.address))
                                      ])
                                    : _c("el-input", {
                                        class: {
                                          "border-red":
                                            scope.row.hasOwnProperty(
                                              "isBool"
                                            ) &&
                                            scope.row.isBool === 2 &&
                                            !scope.row.address
                                        },
                                        model: {
                                          value: scope.row.address,
                                          callback: function($$v) {
                                            _vm.$set(scope.row, "address", $$v)
                                          },
                                          expression: "scope.row.address"
                                        }
                                      })
                                ]
                              }
                            }
                          ],
                          null,
                          false,
                          202749856
                        )
                      }),
                      _vm._v(" "),
                      _c("el-table-column", {
                        attrs: { align: "left", label: "学习经历" },
                        scopedSlots: _vm._u(
                          [
                            {
                              key: "default",
                              fn: function(scope) {
                                return [
                                  !scope.row.hasOwnProperty("newAdd")
                                    ? _c("span", [
                                        _vm._v(_vm._s(scope.row.position))
                                      ])
                                    : _c("el-input", {
                                        class: {
                                          "border-red":
                                            scope.row.hasOwnProperty(
                                              "isBool"
                                            ) &&
                                            scope.row.isBool === 2 &&
                                            !scope.row.position
                                        },
                                        model: {
                                          value: scope.row.position,
                                          callback: function($$v) {
                                            _vm.$set(scope.row, "position", $$v)
                                          },
                                          expression: "scope.row.position"
                                        }
                                      })
                                ]
                              }
                            }
                          ],
                          null,
                          false,
                          2832260527
                        )
                      }),
                      _vm._v(" "),
                      !_vm.hisToryData && !_vm.afferentUserId
                        ? _c("el-table-column", {
                            attrs: { width: "100px", label: "操作" },
                            scopedSlots: _vm._u(
                              [
                                {
                                  key: "default",
                                  fn: function(scope) {
                                    return [
                                      scope.row.hasOwnProperty("newAdd")
                                        ? _c("el-button", {
                                            attrs: {
                                              title: "保存",
                                              type: "success",
                                              icon: "el-icon-check",
                                              circle: ""
                                            },
                                            on: {
                                              click: function($event) {
                                                _vm.saveExperience(
                                                  "add",
                                                  scope.row
                                                )
                                                _vm.editTypeId = 2
                                              }
                                            }
                                          })
                                        : _vm._e(),
                                      _vm._v(" "),
                                      _c("el-button", {
                                        attrs: {
                                          title: "删除",
                                          type: "danger",
                                          icon: "el-icon-delete",
                                          circle: ""
                                        },
                                        on: {
                                          click: function($event) {
                                            _vm.delExperience(
                                              "experienceData2",
                                              scope.row.id,
                                              scope.row,
                                              scope.$index
                                            )
                                            _vm.editTypeId = 2
                                          }
                                        }
                                      })
                                    ]
                                  }
                                }
                              ],
                              null,
                              false,
                              4217127324
                            )
                          })
                        : _vm._e()
                    ],
                    1
                  )
                ],
                1
              )
            : _vm._e(),
          _vm._v(" "),
          (_vm.hisToryData
          ? JSON.parse(_vm.hisToryData.formData).typeId == 3
          : true)
            ? _c(
                "div",
                { staticClass: "personal-wrapper" },
                [
                  _c("h1", { staticClass: "title" }, [
                    _vm._v("|| 培训经历 "),
                    !_vm.hisToryData && !_vm.afferentUserId
                      ? _c("i", {
                          staticClass: "el-icon-circle-plus",
                          on: {
                            click: function($event) {
                              _vm.editTypeId = 3
                              _vm.addExperienceRow()
                            }
                          }
                        })
                      : _vm._e()
                  ]),
                  _vm._v(" "),
                  _c(
                    "el-table",
                    {
                      staticStyle: { width: "100%" },
                      attrs: {
                        stripe: true,
                        data: _vm.experienceData.experienceData3
                      }
                    },
                    [
                      _c("el-table-column", {
                        attrs: {
                          align: "left",
                          width: "400px",
                          label: "培训开始-结束"
                        },
                        scopedSlots: _vm._u(
                          [
                            {
                              key: "default",
                              fn: function(scope) {
                                return [
                                  !scope.row.hasOwnProperty("newAdd")
                                    ? _c("span", [
                                        _vm._v(
                                          "\n            " +
                                            _vm._s(
                                              scope.row.beginDatetime != 1
                                                ? _vm._convertDate(
                                                    scope.row.beginDatetime
                                                  )
                                                : ""
                                            ) +
                                            " - " +
                                            _vm._s(
                                              scope.row.beginDatetime != 1
                                                ? _vm._convertDate(
                                                    scope.row.endDatetime
                                                  )
                                                : ""
                                            ) +
                                            "\n          "
                                        )
                                      ])
                                    : _c(
                                        "div",
                                        { staticClass: "date-type-div" },
                                        [
                                          _c("date-select", {
                                            class: {
                                              "border-red":
                                                scope.row.hasOwnProperty(
                                                  "isBool"
                                                ) &&
                                                scope.row.isBool === 2 &&
                                                !scope.row.beginDatetime &&
                                                !scope.row.endDatetime
                                            },
                                            attrs: {
                                              isTimeRange: "true",
                                              dateType: scope.row.beginTimeType,
                                              isDisabled: false,
                                              beginDatetime:
                                                scope.row.beginDatetime,
                                              endDatetime: scope.row.endDatetime
                                            },
                                            on: {
                                              dateEmit: function(val) {
                                                return _vm.dateEmitFun(
                                                  val,
                                                  scope.row
                                                )
                                              },
                                              dateTypeEmit: function(val) {
                                                return _vm.dateTypeEmitFun(
                                                  val,
                                                  scope.row
                                                )
                                              }
                                            }
                                          })
                                        ],
                                        1
                                      )
                                ]
                              }
                            }
                          ],
                          null,
                          false,
                          3046815948
                        )
                      }),
                      _vm._v(" "),
                      _c("el-table-column", {
                        attrs: { align: "left", label: "培训单位/地点" },
                        scopedSlots: _vm._u(
                          [
                            {
                              key: "default",
                              fn: function(scope) {
                                return [
                                  !scope.row.hasOwnProperty("newAdd")
                                    ? _c("span", [
                                        _vm._v(_vm._s(scope.row.address))
                                      ])
                                    : _c("el-input", {
                                        class: {
                                          "border-red":
                                            scope.row.hasOwnProperty(
                                              "isBool"
                                            ) &&
                                            scope.row.isBool === 2 &&
                                            !scope.row.address
                                        },
                                        model: {
                                          value: scope.row.address,
                                          callback: function($$v) {
                                            _vm.$set(scope.row, "address", $$v)
                                          },
                                          expression: "scope.row.address"
                                        }
                                      })
                                ]
                              }
                            }
                          ],
                          null,
                          false,
                          202749856
                        )
                      }),
                      _vm._v(" "),
                      _c("el-table-column", {
                        attrs: { align: "left", label: "培训经历" },
                        scopedSlots: _vm._u(
                          [
                            {
                              key: "default",
                              fn: function(scope) {
                                return [
                                  !scope.row.hasOwnProperty("newAdd")
                                    ? _c("span", [
                                        _vm._v(_vm._s(scope.row.position))
                                      ])
                                    : _c("el-input", {
                                        class: {
                                          "border-red":
                                            scope.row.hasOwnProperty(
                                              "isBool"
                                            ) &&
                                            scope.row.isBool === 2 &&
                                            !scope.row.position
                                        },
                                        model: {
                                          value: scope.row.position,
                                          callback: function($$v) {
                                            _vm.$set(scope.row, "position", $$v)
                                          },
                                          expression: "scope.row.position"
                                        }
                                      })
                                ]
                              }
                            }
                          ],
                          null,
                          false,
                          2832260527
                        )
                      }),
                      _vm._v(" "),
                      !_vm.hisToryData && !_vm.afferentUserId
                        ? _c("el-table-column", {
                            attrs: { width: "100px", label: "操作" },
                            scopedSlots: _vm._u(
                              [
                                {
                                  key: "default",
                                  fn: function(scope) {
                                    return [
                                      scope.row.hasOwnProperty("newAdd")
                                        ? _c("el-button", {
                                            attrs: {
                                              title: "保存",
                                              type: "success",
                                              icon: "el-icon-check",
                                              circle: ""
                                            },
                                            on: {
                                              click: function($event) {
                                                _vm.saveExperience(
                                                  "add",
                                                  scope.row
                                                )
                                                _vm.editTypeId = 3
                                              }
                                            }
                                          })
                                        : _vm._e(),
                                      _vm._v(" "),
                                      _c("el-button", {
                                        attrs: {
                                          title: "删除",
                                          type: "danger",
                                          icon: "el-icon-delete",
                                          circle: ""
                                        },
                                        on: {
                                          click: function($event) {
                                            _vm.delExperience(
                                              "experienceData3",
                                              scope.row.id,
                                              scope.row,
                                              scope.$index
                                            )
                                            _vm.editTypeId = 3
                                          }
                                        }
                                      })
                                    ]
                                  }
                                }
                              ],
                              null,
                              false,
                              2648660029
                            )
                          })
                        : _vm._e()
                    ],
                    1
                  )
                ],
                1
              )
            : _vm._e(),
          _vm._v(" "),
          (_vm.hisToryData
          ? JSON.parse(_vm.hisToryData.formData).typeId == 4
          : true)
            ? _c(
                "div",
                { staticClass: "personal-wrapper" },
                [
                  _c("h1", { staticClass: "title" }, [
                    _vm._v("|| 团组织职务经历 "),
                    !_vm.hisToryData && !_vm.afferentUserId
                      ? _c("i", {
                          staticClass: "el-icon-circle-plus",
                          on: {
                            click: function($event) {
                              _vm.editTypeId = 4
                              _vm.addExperienceRow()
                            }
                          }
                        })
                      : _vm._e()
                  ]),
                  _vm._v(" "),
                  _c(
                    "el-table",
                    {
                      staticStyle: { width: "100%" },
                      attrs: {
                        stripe: true,
                        data: _vm.experienceData.experienceData4
                      }
                    },
                    [
                      _c("el-table-column", {
                        attrs: {
                          align: "left",
                          width: "400px",
                          label: "团组织职务开始-结束"
                        },
                        scopedSlots: _vm._u(
                          [
                            {
                              key: "default",
                              fn: function(scope) {
                                return [
                                  !scope.row.hasOwnProperty("newAdd")
                                    ? _c("span", [
                                        _vm._v(
                                          "\n            " +
                                            _vm._s(
                                              scope.row.beginDatetime != 1
                                                ? _vm._convertDate(
                                                    scope.row.beginDatetime
                                                  )
                                                : ""
                                            ) +
                                            " - " +
                                            _vm._s(
                                              scope.row.beginDatetime != 1
                                                ? _vm._convertDate(
                                                    scope.row.endDatetime
                                                  )
                                                : ""
                                            ) +
                                            "\n          "
                                        )
                                      ])
                                    : _c(
                                        "div",
                                        [
                                          _c("date-select", {
                                            class: {
                                              "border-red":
                                                scope.row.hasOwnProperty(
                                                  "isBool"
                                                ) &&
                                                scope.row.isBool === 2 &&
                                                !scope.row.beginDatetime &&
                                                !scope.row.endDatetime
                                            },
                                            attrs: {
                                              isTimeRange: "true",
                                              dateType: scope.row.beginTimeType,
                                              isDisabled: false,
                                              beginDatetime:
                                                scope.row.beginDatetime,
                                              endDatetime: scope.row.endDatetime
                                            },
                                            on: {
                                              dateEmit: function(val) {
                                                return _vm.dateEmitFun(
                                                  val,
                                                  scope.row
                                                )
                                              },
                                              dateTypeEmit: function(val) {
                                                return _vm.dateTypeEmitFun(
                                                  val,
                                                  scope.row
                                                )
                                              }
                                            }
                                          })
                                        ],
                                        1
                                      )
                                ]
                              }
                            }
                          ],
                          null,
                          false,
                          2163768317
                        )
                      }),
                      _vm._v(" "),
                      _c("el-table-column", {
                        attrs: { align: "left", label: "团组织职务单位/地点" },
                        scopedSlots: _vm._u(
                          [
                            {
                              key: "default",
                              fn: function(scope) {
                                return [
                                  !scope.row.hasOwnProperty("newAdd")
                                    ? _c("span", [
                                        _vm._v(_vm._s(scope.row.address))
                                      ])
                                    : _c("el-input", {
                                        class: {
                                          "border-red":
                                            scope.row.hasOwnProperty(
                                              "isBool"
                                            ) &&
                                            scope.row.isBool === 2 &&
                                            !scope.row.address
                                        },
                                        model: {
                                          value: scope.row.address,
                                          callback: function($$v) {
                                            _vm.$set(scope.row, "address", $$v)
                                          },
                                          expression: "scope.row.address"
                                        }
                                      })
                                ]
                              }
                            }
                          ],
                          null,
                          false,
                          202749856
                        )
                      }),
                      _vm._v(" "),
                      _c("el-table-column", {
                        attrs: { align: "left", label: "团组织职务经历" },
                        scopedSlots: _vm._u(
                          [
                            {
                              key: "default",
                              fn: function(scope) {
                                return [
                                  !scope.row.hasOwnProperty("newAdd")
                                    ? _c("span", [
                                        _vm._v(_vm._s(scope.row.position))
                                      ])
                                    : _c("el-input", {
                                        class: {
                                          "border-red":
                                            scope.row.hasOwnProperty(
                                              "isBool"
                                            ) &&
                                            scope.row.isBool === 2 &&
                                            !scope.row.position
                                        },
                                        model: {
                                          value: scope.row.position,
                                          callback: function($$v) {
                                            _vm.$set(scope.row, "position", $$v)
                                          },
                                          expression: "scope.row.position"
                                        }
                                      })
                                ]
                              }
                            }
                          ],
                          null,
                          false,
                          2832260527
                        )
                      }),
                      _vm._v(" "),
                      !_vm.hisToryData && !_vm.afferentUserId
                        ? _c("el-table-column", {
                            attrs: { width: "100px", label: "操作" },
                            scopedSlots: _vm._u(
                              [
                                {
                                  key: "default",
                                  fn: function(scope) {
                                    return [
                                      scope.row.hasOwnProperty("newAdd")
                                        ? _c("el-button", {
                                            attrs: {
                                              title: "保存",
                                              type: "success",
                                              icon: "el-icon-check",
                                              circle: ""
                                            },
                                            on: {
                                              click: function($event) {
                                                _vm.saveExperience(
                                                  "add",
                                                  scope.row
                                                )
                                                _vm.editTypeId = 4
                                              }
                                            }
                                          })
                                        : _vm._e(),
                                      _vm._v(" "),
                                      _c("el-button", {
                                        attrs: {
                                          title: "删除",
                                          type: "danger",
                                          icon: "el-icon-delete",
                                          circle: ""
                                        },
                                        on: {
                                          click: function($event) {
                                            _vm.delExperience(
                                              "experienceData4",
                                              scope.row.id,
                                              scope.row,
                                              scope.$index
                                            )
                                            _vm.editTypeId = 4
                                          }
                                        }
                                      })
                                    ]
                                  }
                                }
                              ],
                              null,
                              false,
                              2895445978
                            )
                          })
                        : _vm._e()
                    ],
                    1
                  )
                ],
                1
              )
            : _vm._e(),
          _vm._v(" "),
          (_vm.hisToryData
          ? JSON.parse(_vm.hisToryData.formData).typeId == 5
          : true)
            ? _c(
                "div",
                { staticClass: "personal-wrapper" },
                [
                  _c("h1", { staticClass: "title" }, [
                    _vm._v("|| 党政职务经历 "),
                    !_vm.hisToryData && !_vm.afferentUserId
                      ? _c("i", {
                          staticClass: "el-icon-circle-plus",
                          on: {
                            click: function($event) {
                              _vm.editTypeId = 5
                              _vm.addExperienceRow()
                            }
                          }
                        })
                      : _vm._e()
                  ]),
                  _vm._v(" "),
                  _c(
                    "el-table",
                    {
                      staticStyle: { width: "100%" },
                      attrs: {
                        stripe: true,
                        data: _vm.experienceData.experienceData5
                      }
                    },
                    [
                      _c("el-table-column", {
                        attrs: {
                          align: "left",
                          width: "400px",
                          label: "党政职务开始-结束"
                        },
                        scopedSlots: _vm._u(
                          [
                            {
                              key: "default",
                              fn: function(scope) {
                                return [
                                  !scope.row.hasOwnProperty("newAdd")
                                    ? _c("span", [
                                        _vm._v(
                                          "\n            " +
                                            _vm._s(
                                              scope.row.beginDatetime != 1
                                                ? _vm._convertDate(
                                                    scope.row.beginDatetime
                                                  )
                                                : ""
                                            ) +
                                            " - " +
                                            _vm._s(
                                              scope.row.beginDatetime != 1
                                                ? _vm._convertDate(
                                                    scope.row.endDatetime
                                                  )
                                                : ""
                                            ) +
                                            "\n          "
                                        )
                                      ])
                                    : _c(
                                        "div",
                                        [
                                          _c("date-select", {
                                            class: {
                                              "border-red":
                                                scope.row.hasOwnProperty(
                                                  "isBool"
                                                ) &&
                                                scope.row.isBool === 2 &&
                                                !scope.row.beginDatetime &&
                                                !scope.row.endDatetime
                                            },
                                            attrs: {
                                              isTimeRange: "true",
                                              dateType: scope.row.beginTimeType,
                                              isDisabled: false,
                                              beginDatetime:
                                                scope.row.beginDatetime,
                                              endDatetime: scope.row.endDatetime
                                            },
                                            on: {
                                              dateEmit: function(val) {
                                                return _vm.dateEmitFun(
                                                  val,
                                                  scope.row
                                                )
                                              },
                                              dateTypeEmit: function(val) {
                                                return _vm.dateTypeEmitFun(
                                                  val,
                                                  scope.row
                                                )
                                              }
                                            }
                                          })
                                        ],
                                        1
                                      )
                                ]
                              }
                            }
                          ],
                          null,
                          false,
                          2163768317
                        )
                      }),
                      _vm._v(" "),
                      _c("el-table-column", {
                        attrs: { align: "left", label: "党政职务单位/地点" },
                        scopedSlots: _vm._u(
                          [
                            {
                              key: "default",
                              fn: function(scope) {
                                return [
                                  !scope.row.hasOwnProperty("newAdd")
                                    ? _c("span", [
                                        _vm._v(_vm._s(scope.row.address))
                                      ])
                                    : _c("el-input", {
                                        class: {
                                          "border-red":
                                            scope.row.hasOwnProperty(
                                              "isBool"
                                            ) &&
                                            scope.row.isBool === 2 &&
                                            !scope.row.address
                                        },
                                        model: {
                                          value: scope.row.address,
                                          callback: function($$v) {
                                            _vm.$set(scope.row, "address", $$v)
                                          },
                                          expression: "scope.row.address"
                                        }
                                      })
                                ]
                              }
                            }
                          ],
                          null,
                          false,
                          202749856
                        )
                      }),
                      _vm._v(" "),
                      _c("el-table-column", {
                        attrs: { align: "left", label: "党政职务经历" },
                        scopedSlots: _vm._u(
                          [
                            {
                              key: "default",
                              fn: function(scope) {
                                return [
                                  !scope.row.hasOwnProperty("newAdd")
                                    ? _c("span", [
                                        _vm._v(_vm._s(scope.row.position))
                                      ])
                                    : _c("el-input", {
                                        class: {
                                          "border-red":
                                            scope.row.hasOwnProperty(
                                              "isBool"
                                            ) &&
                                            scope.row.isBool === 2 &&
                                            !scope.row.position
                                        },
                                        model: {
                                          value: scope.row.position,
                                          callback: function($$v) {
                                            _vm.$set(scope.row, "position", $$v)
                                          },
                                          expression: "scope.row.position"
                                        }
                                      })
                                ]
                              }
                            }
                          ],
                          null,
                          false,
                          2832260527
                        )
                      }),
                      _vm._v(" "),
                      !_vm.hisToryData && !_vm.afferentUserId
                        ? _c("el-table-column", {
                            attrs: { width: "100px", label: "操作" },
                            scopedSlots: _vm._u(
                              [
                                {
                                  key: "default",
                                  fn: function(scope) {
                                    return [
                                      scope.row.hasOwnProperty("newAdd")
                                        ? _c("el-button", {
                                            attrs: {
                                              title: "保存",
                                              type: "success",
                                              icon: "el-icon-check",
                                              circle: ""
                                            },
                                            on: {
                                              click: function($event) {
                                                _vm.saveExperience(
                                                  "add",
                                                  scope.row
                                                )
                                                _vm.editTypeId = 5
                                              }
                                            }
                                          })
                                        : _vm._e(),
                                      _vm._v(" "),
                                      _c("el-button", {
                                        attrs: {
                                          title: "删除",
                                          type: "danger",
                                          icon: "el-icon-delete",
                                          circle: ""
                                        },
                                        on: {
                                          click: function($event) {
                                            _vm.delExperience(
                                              "experienceData5",
                                              scope.row.id,
                                              scope.row,
                                              scope.$index
                                            )
                                            _vm.editTypeId = 5
                                          }
                                        }
                                      })
                                    ]
                                  }
                                }
                              ],
                              null,
                              false,
                              270826619
                            )
                          })
                        : _vm._e()
                    ],
                    1
                  )
                ],
                1
              )
            : _vm._e(),
          _vm._v(" "),
          (_vm.hisToryData
          ? JSON.parse(_vm.hisToryData.formData).typeId == 6
          : true)
            ? _c(
                "div",
                { staticClass: "personal-wrapper" },
                [
                  _c("h1", { staticClass: "title" }, [
                    _vm._v("|| 工会组织职务经历 "),
                    !_vm.hisToryData && !_vm.afferentUserId
                      ? _c("i", {
                          staticClass: "el-icon-circle-plus",
                          on: {
                            click: function($event) {
                              _vm.editTypeId = 6
                              _vm.addExperienceRow()
                            }
                          }
                        })
                      : _vm._e()
                  ]),
                  _vm._v(" "),
                  _c(
                    "el-table",
                    {
                      staticStyle: { width: "100%" },
                      attrs: {
                        stripe: true,
                        data: _vm.experienceData.experienceData6
                      }
                    },
                    [
                      _c("el-table-column", {
                        attrs: {
                          align: "left",
                          width: "400px",
                          label: "工会组织职务开始-结束"
                        },
                        scopedSlots: _vm._u(
                          [
                            {
                              key: "default",
                              fn: function(scope) {
                                return [
                                  !scope.row.hasOwnProperty("newAdd")
                                    ? _c("span", [
                                        _vm._v(
                                          "\n            " +
                                            _vm._s(
                                              scope.row.beginDatetime != 1
                                                ? _vm._convertDate(
                                                    scope.row.beginDatetime
                                                  )
                                                : ""
                                            ) +
                                            " - " +
                                            _vm._s(
                                              scope.row.beginDatetime != 1
                                                ? _vm._convertDate(
                                                    scope.row.endDatetime
                                                  )
                                                : ""
                                            ) +
                                            "\n          "
                                        )
                                      ])
                                    : _c(
                                        "div",
                                        [
                                          _c("date-select", {
                                            class: {
                                              "border-red":
                                                scope.row.hasOwnProperty(
                                                  "isBool"
                                                ) &&
                                                scope.row.isBool === 2 &&
                                                !scope.row.beginDatetime &&
                                                !scope.row.endDatetime
                                            },
                                            attrs: {
                                              isTimeRange: "true",
                                              dateType: scope.row.beginTimeType,
                                              isDisabled: false,
                                              beginDatetime:
                                                scope.row.beginDatetime,
                                              endDatetime: scope.row.endDatetime
                                            },
                                            on: {
                                              dateEmit: function(val) {
                                                return _vm.dateEmitFun(
                                                  val,
                                                  scope.row
                                                )
                                              },
                                              dateTypeEmit: function(val) {
                                                return _vm.dateTypeEmitFun(
                                                  val,
                                                  scope.row
                                                )
                                              }
                                            }
                                          })
                                        ],
                                        1
                                      )
                                ]
                              }
                            }
                          ],
                          null,
                          false,
                          2163768317
                        )
                      }),
                      _vm._v(" "),
                      _c("el-table-column", {
                        attrs: {
                          align: "left",
                          label: "工会组织职务单位/地点"
                        },
                        scopedSlots: _vm._u(
                          [
                            {
                              key: "default",
                              fn: function(scope) {
                                return [
                                  !scope.row.hasOwnProperty("newAdd")
                                    ? _c("span", [
                                        _vm._v(_vm._s(scope.row.address))
                                      ])
                                    : _c("el-input", {
                                        class: {
                                          "border-red":
                                            scope.row.hasOwnProperty(
                                              "isBool"
                                            ) &&
                                            scope.row.isBool === 2 &&
                                            !scope.row.address
                                        },
                                        model: {
                                          value: scope.row.address,
                                          callback: function($$v) {
                                            _vm.$set(scope.row, "address", $$v)
                                          },
                                          expression: "scope.row.address"
                                        }
                                      })
                                ]
                              }
                            }
                          ],
                          null,
                          false,
                          202749856
                        )
                      }),
                      _vm._v(" "),
                      _c("el-table-column", {
                        attrs: { align: "left", label: "工会组织职务经历" },
                        scopedSlots: _vm._u(
                          [
                            {
                              key: "default",
                              fn: function(scope) {
                                return [
                                  !scope.row.hasOwnProperty("newAdd")
                                    ? _c("span", [
                                        _vm._v(_vm._s(scope.row.position))
                                      ])
                                    : _c("el-input", {
                                        class: {
                                          "border-red":
                                            scope.row.hasOwnProperty(
                                              "isBool"
                                            ) &&
                                            scope.row.isBool === 2 &&
                                            !scope.row.position
                                        },
                                        model: {
                                          value: scope.row.position,
                                          callback: function($$v) {
                                            _vm.$set(scope.row, "position", $$v)
                                          },
                                          expression: "scope.row.position"
                                        }
                                      })
                                ]
                              }
                            }
                          ],
                          null,
                          false,
                          2832260527
                        )
                      }),
                      _vm._v(" "),
                      !_vm.hisToryData && !_vm.afferentUserId
                        ? _c("el-table-column", {
                            attrs: { width: "100px", label: "操作" },
                            scopedSlots: _vm._u(
                              [
                                {
                                  key: "default",
                                  fn: function(scope) {
                                    return [
                                      scope.row.hasOwnProperty("newAdd")
                                        ? _c("el-button", {
                                            attrs: {
                                              title: "保存",
                                              type: "success",
                                              icon: "el-icon-check",
                                              circle: ""
                                            },
                                            on: {
                                              click: function($event) {
                                                _vm.saveExperience(
                                                  "add",
                                                  scope.row
                                                )
                                                _vm.editTypeId = 6
                                              }
                                            }
                                          })
                                        : _vm._e(),
                                      _vm._v(" "),
                                      _c("el-button", {
                                        attrs: {
                                          title: "删除",
                                          type: "danger",
                                          icon: "el-icon-delete",
                                          circle: ""
                                        },
                                        on: {
                                          click: function($event) {
                                            _vm.delExperience(
                                              "experienceData6",
                                              scope.row.id,
                                              scope.row,
                                              scope.$index
                                            )
                                            _vm.editTypeId = 6
                                          }
                                        }
                                      })
                                    ]
                                  }
                                }
                              ],
                              null,
                              false,
                              3939799832
                            )
                          })
                        : _vm._e()
                    ],
                    1
                  )
                ],
                1
              )
            : _vm._e(),
          _vm._v(" "),
          (_vm.hisToryData
          ? JSON.parse(_vm.hisToryData.formData).typeId == 7
          : true)
            ? _c(
                "div",
                { staticClass: "personal-wrapper" },
                [
                  _c("h1", { staticClass: "title" }, [
                    _vm._v("|| 党组织内职务经历 "),
                    !_vm.hisToryData && !_vm.afferentUserId
                      ? _c("i", {
                          staticClass: "el-icon-circle-plus",
                          on: {
                            click: function($event) {
                              _vm.editTypeId = 7
                              _vm.addExperienceRow()
                            }
                          }
                        })
                      : _vm._e()
                  ]),
                  _vm._v(" "),
                  _c(
                    "el-table",
                    {
                      staticStyle: { width: "100%" },
                      attrs: {
                        stripe: true,
                        data: _vm.experienceData.experienceData7
                      }
                    },
                    [
                      _c("el-table-column", {
                        attrs: {
                          align: "left",
                          width: "400px",
                          label: "党组织内职务开始-结束"
                        },
                        scopedSlots: _vm._u(
                          [
                            {
                              key: "default",
                              fn: function(scope) {
                                return [
                                  !scope.row.hasOwnProperty("newAdd")
                                    ? _c("span", [
                                        _vm._v(
                                          "\n            " +
                                            _vm._s(
                                              scope.row.beginDatetime != 1
                                                ? _vm._convertDate(
                                                    scope.row.beginDatetime
                                                  )
                                                : ""
                                            ) +
                                            " - " +
                                            _vm._s(
                                              scope.row.beginDatetime != 1
                                                ? _vm._convertDate(
                                                    scope.row.endDatetime
                                                  )
                                                : ""
                                            ) +
                                            "\n          "
                                        )
                                      ])
                                    : _c(
                                        "div",
                                        [
                                          _c("date-select", {
                                            class: {
                                              "border-red":
                                                scope.row.hasOwnProperty(
                                                  "isBool"
                                                ) &&
                                                scope.row.isBool === 2 &&
                                                !scope.row.beginDatetime &&
                                                !scope.row.endDatetime
                                            },
                                            attrs: {
                                              isTimeRange: "true",
                                              dateType: scope.row.beginTimeType,
                                              isDisabled: false,
                                              beginDatetime:
                                                scope.row.beginDatetime,
                                              endDatetime: scope.row.endDatetime
                                            },
                                            on: {
                                              dateEmit: function(val) {
                                                return _vm.dateEmitFun(
                                                  val,
                                                  scope.row
                                                )
                                              },
                                              dateTypeEmit: function(val) {
                                                return _vm.dateTypeEmitFun(
                                                  val,
                                                  scope.row
                                                )
                                              }
                                            }
                                          })
                                        ],
                                        1
                                      )
                                ]
                              }
                            }
                          ],
                          null,
                          false,
                          2163768317
                        )
                      }),
                      _vm._v(" "),
                      _c("el-table-column", {
                        attrs: {
                          align: "left",
                          label: "党组织内职务单位/地点"
                        },
                        scopedSlots: _vm._u(
                          [
                            {
                              key: "default",
                              fn: function(scope) {
                                return [
                                  !scope.row.hasOwnProperty("newAdd")
                                    ? _c("span", [
                                        _vm._v(_vm._s(scope.row.address))
                                      ])
                                    : _c("el-input", {
                                        class: {
                                          "border-red":
                                            scope.row.hasOwnProperty(
                                              "isBool"
                                            ) &&
                                            scope.row.isBool === 2 &&
                                            !scope.row.address
                                        },
                                        model: {
                                          value: scope.row.address,
                                          callback: function($$v) {
                                            _vm.$set(scope.row, "address", $$v)
                                          },
                                          expression: "scope.row.address"
                                        }
                                      })
                                ]
                              }
                            }
                          ],
                          null,
                          false,
                          202749856
                        )
                      }),
                      _vm._v(" "),
                      _c("el-table-column", {
                        attrs: { align: "left", label: "党组织内职务经历" },
                        scopedSlots: _vm._u(
                          [
                            {
                              key: "default",
                              fn: function(scope) {
                                return [
                                  !scope.row.hasOwnProperty("newAdd")
                                    ? _c("span", [
                                        _vm._v(_vm._s(scope.row.position))
                                      ])
                                    : _c("el-input", {
                                        class: {
                                          "border-red":
                                            scope.row.hasOwnProperty(
                                              "isBool"
                                            ) &&
                                            scope.row.isBool === 2 &&
                                            !scope.row.position
                                        },
                                        model: {
                                          value: scope.row.position,
                                          callback: function($$v) {
                                            _vm.$set(scope.row, "position", $$v)
                                          },
                                          expression: "scope.row.position"
                                        }
                                      })
                                ]
                              }
                            }
                          ],
                          null,
                          false,
                          2832260527
                        )
                      }),
                      _vm._v(" "),
                      !_vm.hisToryData && !_vm.afferentUserId
                        ? _c("el-table-column", {
                            attrs: { width: "100px", label: "操作" },
                            scopedSlots: _vm._u(
                              [
                                {
                                  key: "default",
                                  fn: function(scope) {
                                    return [
                                      scope.row.hasOwnProperty("newAdd")
                                        ? _c("el-button", {
                                            attrs: {
                                              title: "保存",
                                              type: "success",
                                              icon: "el-icon-check",
                                              circle: ""
                                            },
                                            on: {
                                              click: function($event) {
                                                _vm.saveExperience(
                                                  "add",
                                                  scope.row
                                                )
                                                _vm.editTypeId = 7
                                              }
                                            }
                                          })
                                        : _vm._e(),
                                      _vm._v(" "),
                                      _c("el-button", {
                                        attrs: {
                                          title: "删除",
                                          type: "danger",
                                          icon: "el-icon-delete",
                                          circle: ""
                                        },
                                        on: {
                                          click: function($event) {
                                            _vm.delExperience(
                                              "experienceData7",
                                              scope.row.id,
                                              scope.row,
                                              scope.$index
                                            )
                                            _vm.editTypeId = 7
                                          }
                                        }
                                      })
                                    ]
                                  }
                                }
                              ],
                              null,
                              false,
                              741772217
                            )
                          })
                        : _vm._e()
                    ],
                    1
                  )
                ],
                1
              )
            : _vm._e()
        ]
      )
    : _vm._e()
}
var staticRenderFns = []
render._withStripped = true
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ __webpack_exports__["a"] = (esExports);
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-loader/node_modules/vue-hot-reload-api")      .rerender("data-v-935c25d4", esExports)
  }
}

/***/ }),

/***/ 1318:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_Archiveses_vue__ = __webpack_require__(1268);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_Archiveses_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_Archiveses_vue__);
/* harmony namespace reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_Archiveses_vue__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_Archiveses_vue__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_13_7_3_vue_loader_lib_template_compiler_index_id_data_v_1ff7c4ea_hasScoped_false_buble_transforms_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_template_index_0_Archiveses_vue__ = __webpack_require__(1321);
var disposed = false
function injectStyle (ssrContext) {
  if (disposed) return
  __webpack_require__(1319)
}
var normalizeComponent = __webpack_require__(42)
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_Archiveses_vue___default.a,
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_13_7_3_vue_loader_lib_template_compiler_index_id_data_v_1ff7c4ea_hasScoped_false_buble_transforms_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_template_index_0_Archiveses_vue__["a" /* default */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "devPkg/components/personal_manage/messageComponents/Archiveses.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-loader/node_modules/vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-1ff7c4ea", Component.options)
  } else {
    hotAPI.reload("data-v-1ff7c4ea", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),

/***/ 1319:
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(1320);
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__(76)("48f6207a", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../node_modules/_css-loader@0.28.11@css-loader/index.js!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-1ff7c4ea\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../node_modules/_less-loader@4.1.0@less-loader/dist/cjs.js!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=styles&index=0!./Archiveses.vue", function() {
     var newContent = require("!!../../../../node_modules/_css-loader@0.28.11@css-loader/index.js!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-1ff7c4ea\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../node_modules/_less-loader@4.1.0@less-loader/dist/cjs.js!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=styles&index=0!./Archiveses.vue");
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ 1320:
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(43)(false);
// imports


// module
exports.push([module.i, "\n.date-type-div {\n  position: relative;\n}\n.date-type-div .type {\n  position: absolute;\n  right: 0;\n  width: 100px;\n  top: 0;\n}\n", ""]);

// exports


/***/ }),

/***/ 1321:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return (_vm.hisToryData
  ? _vm.hisToryData.fromType == 4
  : true)
    ? _c(
        "el-card",
        {
          directives: [
            {
              name: "loading",
              rawName: "v-loading",
              value: _vm.loading,
              expression: "loading"
            }
          ],
          staticClass: "box-card marb20"
        },
        [
          _c(
            "div",
            {
              staticClass: "clearfix",
              staticStyle: { "font-size": "25px" },
              attrs: { slot: "header" },
              slot: "header"
            },
            [_c("span", [_vm._v("获得性")])]
          ),
          _vm._v(" "),
          (_vm.hisToryData
          ? JSON.parse(_vm.hisToryData.formData).typeId == 1
          : true)
            ? _c(
                "div",
                { staticClass: "personal-wrapper" },
                [
                  _c("h1", { staticClass: "title" }, [
                    _vm._v("|| 个人荣誉 "),
                    !_vm.hisToryData && !_vm.afferentUserId
                      ? _c("i", {
                          staticClass: "el-icon-circle-plus",
                          on: {
                            click: function($event) {
                              _vm.editTypeId = 1
                              _vm.addArchivesesRow()
                            }
                          }
                        })
                      : _vm._e()
                  ]),
                  _vm._v(" "),
                  _c(
                    "el-table",
                    {
                      staticStyle: { width: "100%" },
                      attrs: {
                        stripe: true,
                        data: _vm.archivesesData.archivesesData1
                      }
                    },
                    [
                      _c("el-table-column", {
                        attrs: {
                          align: "left",
                          width: "250px",
                          label: "获得荣誉日期"
                        },
                        scopedSlots: _vm._u(
                          [
                            {
                              key: "default",
                              fn: function(scope) {
                                return [
                                  !scope.row.hasOwnProperty("newAdd")
                                    ? _c("span", [
                                        _vm._v(
                                          "\n            " +
                                            _vm._s(
                                              scope.row.dateTime != 1
                                                ? _vm._convertDate(
                                                    scope.row.dateTime
                                                  )
                                                : ""
                                            ) +
                                            "\n          "
                                        )
                                      ])
                                    : _c("el-date-picker", {
                                        class: {
                                          "border-red":
                                            scope.row.hasOwnProperty(
                                              "isBool"
                                            ) &&
                                            scope.row.isBool === 2 &&
                                            !scope.row.dateTime
                                        },
                                        attrs: { type: "date" },
                                        model: {
                                          value: scope.row.dateTime,
                                          callback: function($$v) {
                                            _vm.$set(scope.row, "dateTime", $$v)
                                          },
                                          expression: "scope.row.dateTime"
                                        }
                                      })
                                ]
                              }
                            }
                          ],
                          null,
                          false,
                          3927665036
                        )
                      }),
                      _vm._v(" "),
                      _c("el-table-column", {
                        attrs: { align: "left", label: "获得地址" },
                        scopedSlots: _vm._u(
                          [
                            {
                              key: "default",
                              fn: function(scope) {
                                return [
                                  !scope.row.hasOwnProperty("newAdd")
                                    ? _c("span", [
                                        _vm._v(_vm._s(scope.row.address))
                                      ])
                                    : _c("el-input", {
                                        class: {
                                          "border-red":
                                            scope.row.hasOwnProperty(
                                              "isBool"
                                            ) &&
                                            scope.row.isBool === 2 &&
                                            !scope.row.address
                                        },
                                        model: {
                                          value: scope.row.address,
                                          callback: function($$v) {
                                            _vm.$set(scope.row, "address", $$v)
                                          },
                                          expression: "scope.row.address"
                                        }
                                      })
                                ]
                              }
                            }
                          ],
                          null,
                          false,
                          202749856
                        )
                      }),
                      _vm._v(" "),
                      _c("el-table-column", {
                        attrs: { align: "left", label: "荣誉名称" },
                        scopedSlots: _vm._u(
                          [
                            {
                              key: "default",
                              fn: function(scope) {
                                return [
                                  !scope.row.hasOwnProperty("newAdd")
                                    ? _c("span", [
                                        _vm._v(_vm._s(scope.row.name))
                                      ])
                                    : _c("el-input", {
                                        class: {
                                          "border-red":
                                            scope.row.hasOwnProperty(
                                              "isBool"
                                            ) &&
                                            scope.row.isBool === 2 &&
                                            !scope.row.name
                                        },
                                        model: {
                                          value: scope.row.name,
                                          callback: function($$v) {
                                            _vm.$set(scope.row, "name", $$v)
                                          },
                                          expression: "scope.row.name"
                                        }
                                      })
                                ]
                              }
                            }
                          ],
                          null,
                          false,
                          2451335633
                        )
                      }),
                      _vm._v(" "),
                      !_vm.hisToryData && !_vm.afferentUserId
                        ? _c("el-table-column", {
                            attrs: { width: "100px", label: "操作" },
                            scopedSlots: _vm._u(
                              [
                                {
                                  key: "default",
                                  fn: function(scope) {
                                    return [
                                      scope.row.hasOwnProperty("newAdd")
                                        ? _c("el-button", {
                                            attrs: {
                                              title: "保存",
                                              type: "success",
                                              icon: "el-icon-check",
                                              circle: ""
                                            },
                                            on: {
                                              click: function($event) {
                                                _vm.saveArchiveses(
                                                  "add",
                                                  scope.row
                                                )
                                                _vm.editTypeId = 1
                                              }
                                            }
                                          })
                                        : _vm._e(),
                                      _vm._v(" "),
                                      _c("el-button", {
                                        attrs: {
                                          title: "删除",
                                          type: "danger",
                                          icon: "el-icon-delete",
                                          circle: ""
                                        },
                                        on: {
                                          click: function($event) {
                                            _vm.delArchiveses(
                                              "archivesesData1",
                                              scope.row.id,
                                              scope.row,
                                              scope.$index
                                            )
                                            _vm.editTypeId = 1
                                          }
                                        }
                                      })
                                    ]
                                  }
                                }
                              ],
                              null,
                              false,
                              4115012390
                            )
                          })
                        : _vm._e()
                    ],
                    1
                  )
                ],
                1
              )
            : _vm._e(),
          _vm._v(" "),
          (_vm.hisToryData
          ? JSON.parse(_vm.hisToryData.formData).typeId == 2
          : true)
            ? _c(
                "div",
                { staticClass: "personal-wrapper" },
                [
                  _c("h1", { staticClass: "title" }, [
                    _vm._v("|| 技术职称 "),
                    !_vm.hisToryData && !_vm.afferentUserId
                      ? _c("i", {
                          staticClass: "el-icon-circle-plus",
                          on: {
                            click: function($event) {
                              _vm.editTypeId = 2
                              _vm.addArchivesesRow()
                            }
                          }
                        })
                      : _vm._e()
                  ]),
                  _vm._v(" "),
                  _c(
                    "el-table",
                    {
                      staticStyle: { width: "100%" },
                      attrs: {
                        stripe: true,
                        data: _vm.archivesesData.archivesesData2
                      }
                    },
                    [
                      _c("el-table-column", {
                        attrs: {
                          align: "left",
                          width: "250px",
                          label: "获得职称日期"
                        },
                        scopedSlots: _vm._u(
                          [
                            {
                              key: "default",
                              fn: function(scope) {
                                return [
                                  !scope.row.hasOwnProperty("newAdd")
                                    ? _c("span", [
                                        _vm._v(
                                          "\n            " +
                                            _vm._s(
                                              scope.row.dateTime != 1
                                                ? _vm._convertDate(
                                                    scope.row.dateTime
                                                  )
                                                : ""
                                            ) +
                                            "\n          "
                                        )
                                      ])
                                    : _c("el-date-picker", {
                                        class: {
                                          "border-red":
                                            scope.row.hasOwnProperty(
                                              "isBool"
                                            ) &&
                                            scope.row.isBool === 2 &&
                                            !scope.row.dateTime
                                        },
                                        attrs: { type: "date" },
                                        model: {
                                          value: scope.row.dateTime,
                                          callback: function($$v) {
                                            _vm.$set(scope.row, "dateTime", $$v)
                                          },
                                          expression: "scope.row.dateTime"
                                        }
                                      })
                                ]
                              }
                            }
                          ],
                          null,
                          false,
                          3927665036
                        )
                      }),
                      _vm._v(" "),
                      _c("el-table-column", {
                        attrs: { align: "left", label: "获得地址" },
                        scopedSlots: _vm._u(
                          [
                            {
                              key: "default",
                              fn: function(scope) {
                                return [
                                  !scope.row.hasOwnProperty("newAdd")
                                    ? _c("span", [
                                        _vm._v(_vm._s(scope.row.address))
                                      ])
                                    : _c("el-input", {
                                        class: {
                                          "border-red":
                                            scope.row.hasOwnProperty(
                                              "isBool"
                                            ) &&
                                            scope.row.isBool === 2 &&
                                            !scope.row.address
                                        },
                                        model: {
                                          value: scope.row.address,
                                          callback: function($$v) {
                                            _vm.$set(scope.row, "address", $$v)
                                          },
                                          expression: "scope.row.address"
                                        }
                                      })
                                ]
                              }
                            }
                          ],
                          null,
                          false,
                          202749856
                        )
                      }),
                      _vm._v(" "),
                      _c("el-table-column", {
                        attrs: { align: "left", label: "技术职称" },
                        scopedSlots: _vm._u(
                          [
                            {
                              key: "default",
                              fn: function(scope) {
                                return [
                                  _c(
                                    "span",
                                    {
                                      directives: [
                                        {
                                          name: "show",
                                          rawName: "v-show",
                                          value:
                                            _vm.hisToryData ||
                                            _vm.afferentUserId,
                                          expression:
                                            "hisToryData || afferentUserId"
                                        }
                                      ]
                                    },
                                    [
                                      _vm._v(
                                        _vm._s(
                                          _vm.$util.controlTable(scope.row.name)
                                        )
                                      )
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "el-select",
                                    {
                                      directives: [
                                        {
                                          name: "show",
                                          rawName: "v-show",
                                          value: !(
                                            _vm.hisToryData ||
                                            _vm.afferentUserId
                                          ),
                                          expression:
                                            "!(hisToryData || afferentUserId)"
                                        }
                                      ],
                                      class: {
                                        "border-red":
                                          scope.row.hasOwnProperty("isBool") &&
                                          scope.row.isBool === 2 &&
                                          !scope.row.name
                                      },
                                      attrs: { placeholder: "请选择" },
                                      model: {
                                        value: scope.row.name,
                                        callback: function($$v) {
                                          _vm.$set(scope.row, "name", $$v)
                                        },
                                        expression: "scope.row.name"
                                      }
                                    },
                                    _vm._l(_vm.tPostOptions, function(item) {
                                      return _c("el-option", {
                                        key: item.key,
                                        attrs: {
                                          label: item.value,
                                          value: item.key
                                        }
                                      })
                                    }),
                                    1
                                  )
                                ]
                              }
                            }
                          ],
                          null,
                          false,
                          1568048367
                        )
                      }),
                      _vm._v(" "),
                      !_vm.hisToryData && !_vm.afferentUserId
                        ? _c("el-table-column", {
                            attrs: { width: "100px", label: "操作" },
                            scopedSlots: _vm._u(
                              [
                                {
                                  key: "default",
                                  fn: function(scope) {
                                    return [
                                      scope.row.hasOwnProperty("newAdd")
                                        ? _c("el-button", {
                                            attrs: {
                                              title: "保存",
                                              type: "success",
                                              icon: "el-icon-check",
                                              circle: ""
                                            },
                                            on: {
                                              click: function($event) {
                                                _vm.saveArchiveses(
                                                  "add",
                                                  scope.row
                                                )
                                                _vm.editTypeId = 2
                                              }
                                            }
                                          })
                                        : _vm._e(),
                                      _vm._v(" "),
                                      _c("el-button", {
                                        attrs: {
                                          title: "删除",
                                          type: "danger",
                                          icon: "el-icon-delete",
                                          circle: ""
                                        },
                                        on: {
                                          click: function($event) {
                                            _vm.delArchiveses(
                                              "archivesesData2",
                                              scope.row.id,
                                              scope.row,
                                              scope.$index
                                            )
                                            _vm.editTypeId = 2
                                          }
                                        }
                                      })
                                    ]
                                  }
                                }
                              ],
                              null,
                              false,
                              2127237957
                            )
                          })
                        : _vm._e()
                    ],
                    1
                  )
                ],
                1
              )
            : _vm._e(),
          _vm._v(" "),
          (_vm.hisToryData
          ? JSON.parse(_vm.hisToryData.formData).typeId == 3
          : true)
            ? _c(
                "div",
                { staticClass: "personal-wrapper" },
                [
                  _c("h1", { staticClass: "title" }, [
                    _vm._v("|| 学历 "),
                    !_vm.hisToryData && !_vm.afferentUserId
                      ? _c("i", {
                          staticClass: "el-icon-circle-plus",
                          on: {
                            click: function($event) {
                              _vm.editTypeId = 3
                              _vm.addArchivesesRow()
                            }
                          }
                        })
                      : _vm._e()
                  ]),
                  _vm._v(" "),
                  _c(
                    "el-table",
                    {
                      staticStyle: { width: "100%" },
                      attrs: {
                        stripe: true,
                        data: _vm.archivesesData.archivesesData3
                      }
                    },
                    [
                      _c("el-table-column", {
                        attrs: {
                          align: "left",
                          width: "250px",
                          label: "获得学历日期"
                        },
                        scopedSlots: _vm._u(
                          [
                            {
                              key: "default",
                              fn: function(scope) {
                                return [
                                  !scope.row.hasOwnProperty("newAdd")
                                    ? _c("span", [
                                        _vm._v(
                                          "\n            " +
                                            _vm._s(
                                              scope.row.dateTime != 1
                                                ? _vm._convertDate(
                                                    scope.row.dateTime
                                                  )
                                                : ""
                                            ) +
                                            "\n          "
                                        )
                                      ])
                                    : _c("el-date-picker", {
                                        class: {
                                          "border-red":
                                            scope.row.hasOwnProperty(
                                              "isBool"
                                            ) &&
                                            scope.row.isBool === 2 &&
                                            !scope.row.dateTime
                                        },
                                        attrs: { type: "date" },
                                        model: {
                                          value: scope.row.dateTime,
                                          callback: function($$v) {
                                            _vm.$set(scope.row, "dateTime", $$v)
                                          },
                                          expression: "scope.row.dateTime"
                                        }
                                      })
                                ]
                              }
                            }
                          ],
                          null,
                          false,
                          3927665036
                        )
                      }),
                      _vm._v(" "),
                      _c("el-table-column", {
                        attrs: { align: "left", label: "获得地址" },
                        scopedSlots: _vm._u(
                          [
                            {
                              key: "default",
                              fn: function(scope) {
                                return [
                                  !scope.row.hasOwnProperty("newAdd")
                                    ? _c("span", [
                                        _vm._v(_vm._s(scope.row.address))
                                      ])
                                    : _c("el-input", {
                                        class: {
                                          "border-red":
                                            scope.row.hasOwnProperty(
                                              "isBool"
                                            ) &&
                                            scope.row.isBool === 2 &&
                                            !scope.row.address
                                        },
                                        model: {
                                          value: scope.row.address,
                                          callback: function($$v) {
                                            _vm.$set(scope.row, "address", $$v)
                                          },
                                          expression: "scope.row.address"
                                        }
                                      })
                                ]
                              }
                            }
                          ],
                          null,
                          false,
                          202749856
                        )
                      }),
                      _vm._v(" "),
                      _c("el-table-column", {
                        attrs: { align: "left", label: "学历名称" },
                        scopedSlots: _vm._u(
                          [
                            {
                              key: "default",
                              fn: function(scope) {
                                return [
                                  _c(
                                    "span",
                                    {
                                      directives: [
                                        {
                                          name: "show",
                                          rawName: "v-show",
                                          value:
                                            _vm.hisToryData ||
                                            _vm.afferentUserId,
                                          expression:
                                            "hisToryData || afferentUserId"
                                        }
                                      ]
                                    },
                                    [
                                      _vm._v(
                                        _vm._s(
                                          _vm.$util.controlTable(scope.row.name)
                                        )
                                      )
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "el-select",
                                    {
                                      directives: [
                                        {
                                          name: "show",
                                          rawName: "v-show",
                                          value: !(
                                            _vm.hisToryData ||
                                            _vm.afferentUserId
                                          ),
                                          expression:
                                            "!(hisToryData || afferentUserId)"
                                        }
                                      ],
                                      class: {
                                        "border-red":
                                          scope.row.hasOwnProperty("isBool") &&
                                          scope.row.isBool === 2 &&
                                          !scope.row.name
                                      },
                                      attrs: { placeholder: "请选择" },
                                      model: {
                                        value: scope.row.name,
                                        callback: function($$v) {
                                          _vm.$set(scope.row, "name", $$v)
                                        },
                                        expression: "scope.row.name"
                                      }
                                    },
                                    _vm._l(_vm.educationOptions, function(
                                      item
                                    ) {
                                      return _c("el-option", {
                                        key: item.key,
                                        attrs: {
                                          label: item.value,
                                          value: item.key
                                        }
                                      })
                                    }),
                                    1
                                  )
                                ]
                              }
                            }
                          ],
                          null,
                          false,
                          1208876521
                        )
                      }),
                      _vm._v(" "),
                      !_vm.hisToryData && !_vm.afferentUserId
                        ? _c("el-table-column", {
                            attrs: { width: "100px", label: "操作" },
                            scopedSlots: _vm._u(
                              [
                                {
                                  key: "default",
                                  fn: function(scope) {
                                    return [
                                      scope.row.hasOwnProperty("newAdd")
                                        ? _c("el-button", {
                                            attrs: {
                                              title: "保存",
                                              type: "success",
                                              icon: "el-icon-check",
                                              circle: ""
                                            },
                                            on: {
                                              click: function($event) {
                                                _vm.saveArchiveses(
                                                  "add",
                                                  scope.row
                                                )
                                                _vm.editTypeId = 3
                                              }
                                            }
                                          })
                                        : _vm._e(),
                                      _vm._v(" "),
                                      _c("el-button", {
                                        attrs: {
                                          title: "删除",
                                          type: "danger",
                                          icon: "el-icon-delete",
                                          circle: ""
                                        },
                                        on: {
                                          click: function($event) {
                                            _vm.delArchiveses(
                                              "archivesesData3",
                                              scope.row.id,
                                              scope.row,
                                              scope.$index
                                            )
                                            _vm.editTypeId = 3
                                          }
                                        }
                                      })
                                    ]
                                  }
                                }
                              ],
                              null,
                              false,
                              3357987556
                            )
                          })
                        : _vm._e()
                    ],
                    1
                  )
                ],
                1
              )
            : _vm._e(),
          _vm._v(" "),
          (_vm.hisToryData
          ? JSON.parse(_vm.hisToryData.formData).typeId == 4
          : true)
            ? _c(
                "div",
                { staticClass: "personal-wrapper" },
                [
                  _c("h1", { staticClass: "title" }, [
                    _vm._v("|| 学位 "),
                    !_vm.hisToryData && !_vm.afferentUserId
                      ? _c("i", {
                          staticClass: "el-icon-circle-plus",
                          on: {
                            click: function($event) {
                              _vm.editTypeId = 4
                              _vm.addArchivesesRow()
                            }
                          }
                        })
                      : _vm._e()
                  ]),
                  _vm._v(" "),
                  _c(
                    "el-table",
                    {
                      staticStyle: { width: "100%" },
                      attrs: {
                        stripe: true,
                        data: _vm.archivesesData.archivesesData4
                      }
                    },
                    [
                      _c("el-table-column", {
                        attrs: {
                          align: "left",
                          width: "250px",
                          label: "获得学位日期"
                        },
                        scopedSlots: _vm._u(
                          [
                            {
                              key: "default",
                              fn: function(scope) {
                                return [
                                  !scope.row.hasOwnProperty("newAdd")
                                    ? _c("span", [
                                        _vm._v(
                                          "\n            " +
                                            _vm._s(
                                              scope.row.dateTime != 1
                                                ? _vm._convertDate(
                                                    scope.row.dateTime
                                                  )
                                                : ""
                                            ) +
                                            "\n          "
                                        )
                                      ])
                                    : _c("el-date-picker", {
                                        class: {
                                          "border-red":
                                            scope.row.hasOwnProperty(
                                              "isBool"
                                            ) &&
                                            scope.row.isBool === 2 &&
                                            !scope.row.dateTime
                                        },
                                        attrs: { type: "date" },
                                        model: {
                                          value: scope.row.dateTime,
                                          callback: function($$v) {
                                            _vm.$set(scope.row, "dateTime", $$v)
                                          },
                                          expression: "scope.row.dateTime"
                                        }
                                      })
                                ]
                              }
                            }
                          ],
                          null,
                          false,
                          3927665036
                        )
                      }),
                      _vm._v(" "),
                      _c("el-table-column", {
                        attrs: { align: "left", label: "获得地址" },
                        scopedSlots: _vm._u(
                          [
                            {
                              key: "default",
                              fn: function(scope) {
                                return [
                                  !scope.row.hasOwnProperty("newAdd")
                                    ? _c("span", [
                                        _vm._v(_vm._s(scope.row.address))
                                      ])
                                    : _c("el-input", {
                                        class: {
                                          "border-red":
                                            scope.row.hasOwnProperty(
                                              "isBool"
                                            ) &&
                                            scope.row.isBool === 2 &&
                                            !scope.row.address
                                        },
                                        model: {
                                          value: scope.row.address,
                                          callback: function($$v) {
                                            _vm.$set(scope.row, "address", $$v)
                                          },
                                          expression: "scope.row.address"
                                        }
                                      })
                                ]
                              }
                            }
                          ],
                          null,
                          false,
                          202749856
                        )
                      }),
                      _vm._v(" "),
                      _c("el-table-column", {
                        attrs: { align: "left", label: "学位名称" },
                        scopedSlots: _vm._u(
                          [
                            {
                              key: "default",
                              fn: function(scope) {
                                return [
                                  _c(
                                    "span",
                                    {
                                      directives: [
                                        {
                                          name: "show",
                                          rawName: "v-show",
                                          value:
                                            _vm.hisToryData ||
                                            _vm.afferentUserId,
                                          expression:
                                            "hisToryData || afferentUserId"
                                        }
                                      ]
                                    },
                                    [
                                      _vm._v(
                                        _vm._s(
                                          _vm.$util.controlTable(scope.row.name)
                                        )
                                      )
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "el-select",
                                    {
                                      directives: [
                                        {
                                          name: "show",
                                          rawName: "v-show",
                                          value: !(
                                            _vm.hisToryData ||
                                            _vm.afferentUserId
                                          ),
                                          expression:
                                            "!(hisToryData || afferentUserId)"
                                        }
                                      ],
                                      class: {
                                        "border-red":
                                          scope.row.hasOwnProperty("isBool") &&
                                          scope.row.isBool === 2 &&
                                          !scope.row.name
                                      },
                                      attrs: { placeholder: "请选择" },
                                      model: {
                                        value: scope.row.name,
                                        callback: function($$v) {
                                          _vm.$set(scope.row, "name", $$v)
                                        },
                                        expression: "scope.row.name"
                                      }
                                    },
                                    _vm._l(_vm.academicDegreeOptions, function(
                                      item
                                    ) {
                                      return _c("el-option", {
                                        key: item.key,
                                        attrs: {
                                          label: item.value,
                                          value: item.key
                                        }
                                      })
                                    }),
                                    1
                                  )
                                ]
                              }
                            }
                          ],
                          null,
                          false,
                          605048338
                        )
                      }),
                      _vm._v(" "),
                      !_vm.hisToryData && !_vm.afferentUserId
                        ? _c("el-table-column", {
                            attrs: { width: "100px", label: "操作" },
                            scopedSlots: _vm._u(
                              [
                                {
                                  key: "default",
                                  fn: function(scope) {
                                    return [
                                      scope.row.hasOwnProperty("newAdd")
                                        ? _c("el-button", {
                                            attrs: {
                                              title: "保存",
                                              type: "success",
                                              icon: "el-icon-check",
                                              circle: ""
                                            },
                                            on: {
                                              click: function($event) {
                                                _vm.saveArchiveses(
                                                  "add",
                                                  scope.row
                                                )
                                                _vm.editTypeId = 4
                                              }
                                            }
                                          })
                                        : _vm._e(),
                                      _vm._v(" "),
                                      _c("el-button", {
                                        attrs: {
                                          title: "删除",
                                          type: "danger",
                                          icon: "el-icon-delete",
                                          circle: ""
                                        },
                                        on: {
                                          click: function($event) {
                                            _vm.delArchiveses(
                                              "archivesesData4",
                                              scope.row.id,
                                              scope.row,
                                              scope.$index
                                            )
                                            _vm.editTypeId = 4
                                          }
                                        }
                                      })
                                    ]
                                  }
                                }
                              ],
                              null,
                              false,
                              4020142595
                            )
                          })
                        : _vm._e()
                    ],
                    1
                  )
                ],
                1
              )
            : _vm._e(),
          _vm._v(" "),
          (_vm.hisToryData
          ? JSON.parse(_vm.hisToryData.formData).typeId == 5
          : true)
            ? _c(
                "div",
                { staticClass: "personal-wrapper" },
                [
                  _c("h1", { staticClass: "title" }, [
                    _vm._v("|| 执业资格证书 "),
                    !_vm.hisToryData && !_vm.afferentUserId
                      ? _c("i", {
                          staticClass: "el-icon-circle-plus",
                          on: {
                            click: function($event) {
                              _vm.editTypeId = 5
                              _vm.addArchivesesRow()
                            }
                          }
                        })
                      : _vm._e()
                  ]),
                  _vm._v(" "),
                  _c(
                    "el-table",
                    {
                      staticStyle: { width: "100%" },
                      attrs: {
                        stripe: true,
                        data: _vm.archivesesData.archivesesData5
                      }
                    },
                    [
                      _c("el-table-column", {
                        attrs: {
                          align: "left",
                          width: "250px",
                          label: "获得执业资格证书日期"
                        },
                        scopedSlots: _vm._u(
                          [
                            {
                              key: "default",
                              fn: function(scope) {
                                return [
                                  !scope.row.hasOwnProperty("newAdd")
                                    ? _c("span", [
                                        _vm._v(
                                          "\n            " +
                                            _vm._s(
                                              scope.row.dateTime != 1
                                                ? _vm._convertDate(
                                                    scope.row.dateTime
                                                  )
                                                : ""
                                            ) +
                                            "\n          "
                                        )
                                      ])
                                    : _c("el-date-picker", {
                                        class: {
                                          "border-red":
                                            scope.row.hasOwnProperty(
                                              "isBool"
                                            ) &&
                                            scope.row.isBool === 2 &&
                                            !scope.row.dateTime
                                        },
                                        attrs: { type: "date" },
                                        model: {
                                          value: scope.row.dateTime,
                                          callback: function($$v) {
                                            _vm.$set(scope.row, "dateTime", $$v)
                                          },
                                          expression: "scope.row.dateTime"
                                        }
                                      })
                                ]
                              }
                            }
                          ],
                          null,
                          false,
                          3927665036
                        )
                      }),
                      _vm._v(" "),
                      _c("el-table-column", {
                        attrs: { align: "left", label: "获得地址" },
                        scopedSlots: _vm._u(
                          [
                            {
                              key: "default",
                              fn: function(scope) {
                                return [
                                  !scope.row.hasOwnProperty("newAdd")
                                    ? _c("span", [
                                        _vm._v(_vm._s(scope.row.address))
                                      ])
                                    : _c("el-input", {
                                        class: {
                                          "border-red":
                                            scope.row.hasOwnProperty(
                                              "isBool"
                                            ) &&
                                            scope.row.isBool === 2 &&
                                            !scope.row.address
                                        },
                                        model: {
                                          value: scope.row.address,
                                          callback: function($$v) {
                                            _vm.$set(scope.row, "address", $$v)
                                          },
                                          expression: "scope.row.address"
                                        }
                                      })
                                ]
                              }
                            }
                          ],
                          null,
                          false,
                          202749856
                        )
                      }),
                      _vm._v(" "),
                      _c("el-table-column", {
                        attrs: { align: "left", label: "执业资格证书名称" },
                        scopedSlots: _vm._u(
                          [
                            {
                              key: "default",
                              fn: function(scope) {
                                return [
                                  _c(
                                    "span",
                                    {
                                      directives: [
                                        {
                                          name: "show",
                                          rawName: "v-show",
                                          value:
                                            _vm.hisToryData ||
                                            _vm.afferentUserId,
                                          expression:
                                            "hisToryData || afferentUserId"
                                        }
                                      ]
                                    },
                                    [
                                      _vm._v(
                                        _vm._s(
                                          _vm.$util.controlTable(scope.row.name)
                                        )
                                      )
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "el-select",
                                    {
                                      directives: [
                                        {
                                          name: "show",
                                          rawName: "v-show",
                                          value: !(
                                            _vm.hisToryData ||
                                            _vm.afferentUserId
                                          ),
                                          expression:
                                            "!(hisToryData || afferentUserId)"
                                        }
                                      ],
                                      class: {
                                        "border-red":
                                          scope.row.hasOwnProperty("isBool") &&
                                          scope.row.isBool === 2 &&
                                          !scope.row.name
                                      },
                                      attrs: { placeholder: "请选择" },
                                      model: {
                                        value: scope.row.name,
                                        callback: function($$v) {
                                          _vm.$set(scope.row, "name", $$v)
                                        },
                                        expression: "scope.row.name"
                                      }
                                    },
                                    _vm._l(_vm.practiceOptions, function(item) {
                                      return _c("el-option", {
                                        key: item.key,
                                        attrs: {
                                          label: item.value,
                                          value: item.key
                                        }
                                      })
                                    }),
                                    1
                                  )
                                ]
                              }
                            }
                          ],
                          null,
                          false,
                          1367970744
                        )
                      }),
                      _vm._v(" "),
                      !_vm.hisToryData && !_vm.afferentUserId
                        ? _c("el-table-column", {
                            attrs: { width: "100px", label: "操作" },
                            scopedSlots: _vm._u(
                              [
                                {
                                  key: "default",
                                  fn: function(scope) {
                                    return [
                                      scope.row.hasOwnProperty("newAdd")
                                        ? _c("el-button", {
                                            attrs: {
                                              title: "保存",
                                              type: "success",
                                              icon: "el-icon-check",
                                              circle: ""
                                            },
                                            on: {
                                              click: function($event) {
                                                _vm.saveArchiveses(
                                                  "add",
                                                  scope.row
                                                )
                                                _vm.editTypeId = 5
                                              }
                                            }
                                          })
                                        : _vm._e(),
                                      _vm._v(" "),
                                      _c("el-button", {
                                        attrs: {
                                          title: "删除",
                                          type: "danger",
                                          icon: "el-icon-delete",
                                          circle: ""
                                        },
                                        on: {
                                          click: function($event) {
                                            _vm.delArchiveses(
                                              "archivesesData5",
                                              scope.row.id,
                                              scope.row,
                                              scope.$index
                                            )
                                            _vm.editTypeId = 5
                                          }
                                        }
                                      })
                                    ]
                                  }
                                }
                              ],
                              null,
                              false,
                              4066184354
                            )
                          })
                        : _vm._e()
                    ],
                    1
                  )
                ],
                1
              )
            : _vm._e()
        ]
      )
    : _vm._e()
}
var staticRenderFns = []
render._withStripped = true
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ __webpack_exports__["a"] = (esExports);
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-loader/node_modules/vue-hot-reload-api")      .rerender("data-v-1ff7c4ea", esExports)
  }
}

/***/ }),

/***/ 1339:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var has = Object.prototype.hasOwnProperty;
var isArray = Array.isArray;

var hexTable = (function () {
    var array = [];
    for (var i = 0; i < 256; ++i) {
        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());
    }

    return array;
}());

var compactQueue = function compactQueue(queue) {
    while (queue.length > 1) {
        var item = queue.pop();
        var obj = item.obj[item.prop];

        if (isArray(obj)) {
            var compacted = [];

            for (var j = 0; j < obj.length; ++j) {
                if (typeof obj[j] !== 'undefined') {
                    compacted.push(obj[j]);
                }
            }

            item.obj[item.prop] = compacted;
        }
    }
};

var arrayToObject = function arrayToObject(source, options) {
    var obj = options && options.plainObjects ? Object.create(null) : {};
    for (var i = 0; i < source.length; ++i) {
        if (typeof source[i] !== 'undefined') {
            obj[i] = source[i];
        }
    }

    return obj;
};

var merge = function merge(target, source, options) {
    if (!source) {
        return target;
    }

    if (typeof source !== 'object') {
        if (isArray(target)) {
            target.push(source);
        } else if (target && typeof target === 'object') {
            if ((options && (options.plainObjects || options.allowPrototypes)) || !has.call(Object.prototype, source)) {
                target[source] = true;
            }
        } else {
            return [target, source];
        }

        return target;
    }

    if (!target || typeof target !== 'object') {
        return [target].concat(source);
    }

    var mergeTarget = target;
    if (isArray(target) && !isArray(source)) {
        mergeTarget = arrayToObject(target, options);
    }

    if (isArray(target) && isArray(source)) {
        source.forEach(function (item, i) {
            if (has.call(target, i)) {
                var targetItem = target[i];
                if (targetItem && typeof targetItem === 'object' && item && typeof item === 'object') {
                    target[i] = merge(targetItem, item, options);
                } else {
                    target.push(item);
                }
            } else {
                target[i] = item;
            }
        });
        return target;
    }

    return Object.keys(source).reduce(function (acc, key) {
        var value = source[key];

        if (has.call(acc, key)) {
            acc[key] = merge(acc[key], value, options);
        } else {
            acc[key] = value;
        }
        return acc;
    }, mergeTarget);
};

var assign = function assignSingleSource(target, source) {
    return Object.keys(source).reduce(function (acc, key) {
        acc[key] = source[key];
        return acc;
    }, target);
};

var decode = function (str, decoder, charset) {
    var strWithoutPlus = str.replace(/\+/g, ' ');
    if (charset === 'iso-8859-1') {
        // unescape never throws, no try...catch needed:
        return strWithoutPlus.replace(/%[0-9a-f]{2}/gi, unescape);
    }
    // utf-8
    try {
        return decodeURIComponent(strWithoutPlus);
    } catch (e) {
        return strWithoutPlus;
    }
};

var encode = function encode(str, defaultEncoder, charset) {
    // This code was originally written by Brian White (mscdex) for the io.js core querystring library.
    // It has been adapted here for stricter adherence to RFC 3986
    if (str.length === 0) {
        return str;
    }

    var string = typeof str === 'string' ? str : String(str);

    if (charset === 'iso-8859-1') {
        return escape(string).replace(/%u[0-9a-f]{4}/gi, function ($0) {
            return '%26%23' + parseInt($0.slice(2), 16) + '%3B';
        });
    }

    var out = '';
    for (var i = 0; i < string.length; ++i) {
        var c = string.charCodeAt(i);

        if (
            c === 0x2D // -
            || c === 0x2E // .
            || c === 0x5F // _
            || c === 0x7E // ~
            || (c >= 0x30 && c <= 0x39) // 0-9
            || (c >= 0x41 && c <= 0x5A) // a-z
            || (c >= 0x61 && c <= 0x7A) // A-Z
        ) {
            out += string.charAt(i);
            continue;
        }

        if (c < 0x80) {
            out = out + hexTable[c];
            continue;
        }

        if (c < 0x800) {
            out = out + (hexTable[0xC0 | (c >> 6)] + hexTable[0x80 | (c & 0x3F)]);
            continue;
        }

        if (c < 0xD800 || c >= 0xE000) {
            out = out + (hexTable[0xE0 | (c >> 12)] + hexTable[0x80 | ((c >> 6) & 0x3F)] + hexTable[0x80 | (c & 0x3F)]);
            continue;
        }

        i += 1;
        c = 0x10000 + (((c & 0x3FF) << 10) | (string.charCodeAt(i) & 0x3FF));
        out += hexTable[0xF0 | (c >> 18)]
            + hexTable[0x80 | ((c >> 12) & 0x3F)]
            + hexTable[0x80 | ((c >> 6) & 0x3F)]
            + hexTable[0x80 | (c & 0x3F)];
    }

    return out;
};

var compact = function compact(value) {
    var queue = [{ obj: { o: value }, prop: 'o' }];
    var refs = [];

    for (var i = 0; i < queue.length; ++i) {
        var item = queue[i];
        var obj = item.obj[item.prop];

        var keys = Object.keys(obj);
        for (var j = 0; j < keys.length; ++j) {
            var key = keys[j];
            var val = obj[key];
            if (typeof val === 'object' && val !== null && refs.indexOf(val) === -1) {
                queue.push({ obj: obj, prop: key });
                refs.push(val);
            }
        }
    }

    compactQueue(queue);

    return value;
};

var isRegExp = function isRegExp(obj) {
    return Object.prototype.toString.call(obj) === '[object RegExp]';
};

var isBuffer = function isBuffer(obj) {
    if (!obj || typeof obj !== 'object') {
        return false;
    }

    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));
};

var combine = function combine(a, b) {
    return [].concat(a, b);
};

module.exports = {
    arrayToObject: arrayToObject,
    assign: assign,
    combine: combine,
    compact: compact,
    decode: decode,
    encode: encode,
    isBuffer: isBuffer,
    isRegExp: isRegExp,
    merge: merge
};


/***/ }),

/***/ 1340:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var replace = String.prototype.replace;
var percentTwenties = /%20/g;

module.exports = {
    'default': 'RFC3986',
    formatters: {
        RFC1738: function (value) {
            return replace.call(value, percentTwenties, '+');
        },
        RFC3986: function (value) {
            return value;
        }
    },
    RFC1738: 'RFC1738',
    RFC3986: 'RFC3986'
};


/***/ }),

/***/ 1347:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var stringify = __webpack_require__(1353);
var parse = __webpack_require__(1354);
var formats = __webpack_require__(1340);

module.exports = {
    formats: formats,
    parse: parse,
    stringify: stringify
};


/***/ }),

/***/ 1353:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(1339);
var formats = __webpack_require__(1340);
var has = Object.prototype.hasOwnProperty;

var arrayPrefixGenerators = {
    brackets: function brackets(prefix) { // eslint-disable-line func-name-matching
        return prefix + '[]';
    },
    comma: 'comma',
    indices: function indices(prefix, key) { // eslint-disable-line func-name-matching
        return prefix + '[' + key + ']';
    },
    repeat: function repeat(prefix) { // eslint-disable-line func-name-matching
        return prefix;
    }
};

var isArray = Array.isArray;
var push = Array.prototype.push;
var pushToArray = function (arr, valueOrArray) {
    push.apply(arr, isArray(valueOrArray) ? valueOrArray : [valueOrArray]);
};

var toISO = Date.prototype.toISOString;

var defaults = {
    addQueryPrefix: false,
    allowDots: false,
    charset: 'utf-8',
    charsetSentinel: false,
    delimiter: '&',
    encode: true,
    encoder: utils.encode,
    encodeValuesOnly: false,
    formatter: formats.formatters[formats['default']],
    // deprecated
    indices: false,
    serializeDate: function serializeDate(date) { // eslint-disable-line func-name-matching
        return toISO.call(date);
    },
    skipNulls: false,
    strictNullHandling: false
};

var stringify = function stringify( // eslint-disable-line func-name-matching
    object,
    prefix,
    generateArrayPrefix,
    strictNullHandling,
    skipNulls,
    encoder,
    filter,
    sort,
    allowDots,
    serializeDate,
    formatter,
    encodeValuesOnly,
    charset
) {
    var obj = object;
    if (typeof filter === 'function') {
        obj = filter(prefix, obj);
    } else if (obj instanceof Date) {
        obj = serializeDate(obj);
    } else if (generateArrayPrefix === 'comma' && isArray(obj)) {
        obj = obj.join(',');
    }

    if (obj === null) {
        if (strictNullHandling) {
            return encoder && !encodeValuesOnly ? encoder(prefix, defaults.encoder, charset) : prefix;
        }

        obj = '';
    }

    if (typeof obj === 'string' || typeof obj === 'number' || typeof obj === 'boolean' || utils.isBuffer(obj)) {
        if (encoder) {
            var keyValue = encodeValuesOnly ? prefix : encoder(prefix, defaults.encoder, charset);
            return [formatter(keyValue) + '=' + formatter(encoder(obj, defaults.encoder, charset))];
        }
        return [formatter(prefix) + '=' + formatter(String(obj))];
    }

    var values = [];

    if (typeof obj === 'undefined') {
        return values;
    }

    var objKeys;
    if (isArray(filter)) {
        objKeys = filter;
    } else {
        var keys = Object.keys(obj);
        objKeys = sort ? keys.sort(sort) : keys;
    }

    for (var i = 0; i < objKeys.length; ++i) {
        var key = objKeys[i];

        if (skipNulls && obj[key] === null) {
            continue;
        }

        if (isArray(obj)) {
            pushToArray(values, stringify(
                obj[key],
                typeof generateArrayPrefix === 'function' ? generateArrayPrefix(prefix, key) : prefix,
                generateArrayPrefix,
                strictNullHandling,
                skipNulls,
                encoder,
                filter,
                sort,
                allowDots,
                serializeDate,
                formatter,
                encodeValuesOnly,
                charset
            ));
        } else {
            pushToArray(values, stringify(
                obj[key],
                prefix + (allowDots ? '.' + key : '[' + key + ']'),
                generateArrayPrefix,
                strictNullHandling,
                skipNulls,
                encoder,
                filter,
                sort,
                allowDots,
                serializeDate,
                formatter,
                encodeValuesOnly,
                charset
            ));
        }
    }

    return values;
};

var normalizeStringifyOptions = function normalizeStringifyOptions(opts) {
    if (!opts) {
        return defaults;
    }

    if (opts.encoder !== null && opts.encoder !== undefined && typeof opts.encoder !== 'function') {
        throw new TypeError('Encoder has to be a function.');
    }

    var charset = opts.charset || defaults.charset;
    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {
        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');
    }

    var format = formats['default'];
    if (typeof opts.format !== 'undefined') {
        if (!has.call(formats.formatters, opts.format)) {
            throw new TypeError('Unknown format option provided.');
        }
        format = opts.format;
    }
    var formatter = formats.formatters[format];

    var filter = defaults.filter;
    if (typeof opts.filter === 'function' || isArray(opts.filter)) {
        filter = opts.filter;
    }

    return {
        addQueryPrefix: typeof opts.addQueryPrefix === 'boolean' ? opts.addQueryPrefix : defaults.addQueryPrefix,
        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,
        charset: charset,
        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,
        delimiter: typeof opts.delimiter === 'undefined' ? defaults.delimiter : opts.delimiter,
        encode: typeof opts.encode === 'boolean' ? opts.encode : defaults.encode,
        encoder: typeof opts.encoder === 'function' ? opts.encoder : defaults.encoder,
        encodeValuesOnly: typeof opts.encodeValuesOnly === 'boolean' ? opts.encodeValuesOnly : defaults.encodeValuesOnly,
        filter: filter,
        formatter: formatter,
        serializeDate: typeof opts.serializeDate === 'function' ? opts.serializeDate : defaults.serializeDate,
        skipNulls: typeof opts.skipNulls === 'boolean' ? opts.skipNulls : defaults.skipNulls,
        sort: typeof opts.sort === 'function' ? opts.sort : null,
        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling
    };
};

module.exports = function (object, opts) {
    var obj = object;
    var options = normalizeStringifyOptions(opts);

    var objKeys;
    var filter;

    if (typeof options.filter === 'function') {
        filter = options.filter;
        obj = filter('', obj);
    } else if (isArray(options.filter)) {
        filter = options.filter;
        objKeys = filter;
    }

    var keys = [];

    if (typeof obj !== 'object' || obj === null) {
        return '';
    }

    var arrayFormat;
    if (opts && opts.arrayFormat in arrayPrefixGenerators) {
        arrayFormat = opts.arrayFormat;
    } else if (opts && 'indices' in opts) {
        arrayFormat = opts.indices ? 'indices' : 'repeat';
    } else {
        arrayFormat = 'indices';
    }

    var generateArrayPrefix = arrayPrefixGenerators[arrayFormat];

    if (!objKeys) {
        objKeys = Object.keys(obj);
    }

    if (options.sort) {
        objKeys.sort(options.sort);
    }

    for (var i = 0; i < objKeys.length; ++i) {
        var key = objKeys[i];

        if (options.skipNulls && obj[key] === null) {
            continue;
        }
        pushToArray(keys, stringify(
            obj[key],
            key,
            generateArrayPrefix,
            options.strictNullHandling,
            options.skipNulls,
            options.encode ? options.encoder : null,
            options.filter,
            options.sort,
            options.allowDots,
            options.serializeDate,
            options.formatter,
            options.encodeValuesOnly,
            options.charset
        ));
    }

    var joined = keys.join(options.delimiter);
    var prefix = options.addQueryPrefix === true ? '?' : '';

    if (options.charsetSentinel) {
        if (options.charset === 'iso-8859-1') {
            // encodeURIComponent('&#10003;'), the "numeric entity" representation of a checkmark
            prefix += 'utf8=%26%2310003%3B&';
        } else {
            // encodeURIComponent('✓')
            prefix += 'utf8=%E2%9C%93&';
        }
    }

    return joined.length > 0 ? prefix + joined : '';
};


/***/ }),

/***/ 1354:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(1339);

var has = Object.prototype.hasOwnProperty;

var defaults = {
    allowDots: false,
    allowPrototypes: false,
    arrayLimit: 20,
    charset: 'utf-8',
    charsetSentinel: false,
    comma: false,
    decoder: utils.decode,
    delimiter: '&',
    depth: 5,
    ignoreQueryPrefix: false,
    interpretNumericEntities: false,
    parameterLimit: 1000,
    parseArrays: true,
    plainObjects: false,
    strictNullHandling: false
};

var interpretNumericEntities = function (str) {
    return str.replace(/&#(\d+);/g, function ($0, numberStr) {
        return String.fromCharCode(parseInt(numberStr, 10));
    });
};

// This is what browsers will submit when the ✓ character occurs in an
// application/x-www-form-urlencoded body and the encoding of the page containing
// the form is iso-8859-1, or when the submitted form has an accept-charset
// attribute of iso-8859-1. Presumably also with other charsets that do not contain
// the ✓ character, such as us-ascii.
var isoSentinel = 'utf8=%26%2310003%3B'; // encodeURIComponent('&#10003;')

// These are the percent-encoded utf-8 octets representing a checkmark, indicating that the request actually is utf-8 encoded.
var charsetSentinel = 'utf8=%E2%9C%93'; // encodeURIComponent('✓')

var parseValues = function parseQueryStringValues(str, options) {
    var obj = {};
    var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\?/, '') : str;
    var limit = options.parameterLimit === Infinity ? undefined : options.parameterLimit;
    var parts = cleanStr.split(options.delimiter, limit);
    var skipIndex = -1; // Keep track of where the utf8 sentinel was found
    var i;

    var charset = options.charset;
    if (options.charsetSentinel) {
        for (i = 0; i < parts.length; ++i) {
            if (parts[i].indexOf('utf8=') === 0) {
                if (parts[i] === charsetSentinel) {
                    charset = 'utf-8';
                } else if (parts[i] === isoSentinel) {
                    charset = 'iso-8859-1';
                }
                skipIndex = i;
                i = parts.length; // The eslint settings do not allow break;
            }
        }
    }

    for (i = 0; i < parts.length; ++i) {
        if (i === skipIndex) {
            continue;
        }
        var part = parts[i];

        var bracketEqualsPos = part.indexOf(']=');
        var pos = bracketEqualsPos === -1 ? part.indexOf('=') : bracketEqualsPos + 1;

        var key, val;
        if (pos === -1) {
            key = options.decoder(part, defaults.decoder, charset);
            val = options.strictNullHandling ? null : '';
        } else {
            key = options.decoder(part.slice(0, pos), defaults.decoder, charset);
            val = options.decoder(part.slice(pos + 1), defaults.decoder, charset);
        }

        if (val && options.interpretNumericEntities && charset === 'iso-8859-1') {
            val = interpretNumericEntities(val);
        }

        if (val && options.comma && val.indexOf(',') > -1) {
            val = val.split(',');
        }

        if (has.call(obj, key)) {
            obj[key] = utils.combine(obj[key], val);
        } else {
            obj[key] = val;
        }
    }

    return obj;
};

var parseObject = function (chain, val, options) {
    var leaf = val;

    for (var i = chain.length - 1; i >= 0; --i) {
        var obj;
        var root = chain[i];

        if (root === '[]' && options.parseArrays) {
            obj = [].concat(leaf);
        } else {
            obj = options.plainObjects ? Object.create(null) : {};
            var cleanRoot = root.charAt(0) === '[' && root.charAt(root.length - 1) === ']' ? root.slice(1, -1) : root;
            var index = parseInt(cleanRoot, 10);
            if (!options.parseArrays && cleanRoot === '') {
                obj = { 0: leaf };
            } else if (
                !isNaN(index)
                && root !== cleanRoot
                && String(index) === cleanRoot
                && index >= 0
                && (options.parseArrays && index <= options.arrayLimit)
            ) {
                obj = [];
                obj[index] = leaf;
            } else {
                obj[cleanRoot] = leaf;
            }
        }

        leaf = obj;
    }

    return leaf;
};

var parseKeys = function parseQueryStringKeys(givenKey, val, options) {
    if (!givenKey) {
        return;
    }

    // Transform dot notation to bracket notation
    var key = options.allowDots ? givenKey.replace(/\.([^.[]+)/g, '[$1]') : givenKey;

    // The regex chunks

    var brackets = /(\[[^[\]]*])/;
    var child = /(\[[^[\]]*])/g;

    // Get the parent

    var segment = brackets.exec(key);
    var parent = segment ? key.slice(0, segment.index) : key;

    // Stash the parent if it exists

    var keys = [];
    if (parent) {
        // If we aren't using plain objects, optionally prefix keys that would overwrite object prototype properties
        if (!options.plainObjects && has.call(Object.prototype, parent)) {
            if (!options.allowPrototypes) {
                return;
            }
        }

        keys.push(parent);
    }

    // Loop through children appending to the array until we hit depth

    var i = 0;
    while ((segment = child.exec(key)) !== null && i < options.depth) {
        i += 1;
        if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {
            if (!options.allowPrototypes) {
                return;
            }
        }
        keys.push(segment[1]);
    }

    // If there's a remainder, just add whatever is left

    if (segment) {
        keys.push('[' + key.slice(segment.index) + ']');
    }

    return parseObject(keys, val, options);
};

var normalizeParseOptions = function normalizeParseOptions(opts) {
    if (!opts) {
        return defaults;
    }

    if (opts.decoder !== null && opts.decoder !== undefined && typeof opts.decoder !== 'function') {
        throw new TypeError('Decoder has to be a function.');
    }

    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {
        throw new Error('The charset option must be either utf-8, iso-8859-1, or undefined');
    }
    var charset = typeof opts.charset === 'undefined' ? defaults.charset : opts.charset;

    return {
        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,
        allowPrototypes: typeof opts.allowPrototypes === 'boolean' ? opts.allowPrototypes : defaults.allowPrototypes,
        arrayLimit: typeof opts.arrayLimit === 'number' ? opts.arrayLimit : defaults.arrayLimit,
        charset: charset,
        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,
        comma: typeof opts.comma === 'boolean' ? opts.comma : defaults.comma,
        decoder: typeof opts.decoder === 'function' ? opts.decoder : defaults.decoder,
        delimiter: typeof opts.delimiter === 'string' || utils.isRegExp(opts.delimiter) ? opts.delimiter : defaults.delimiter,
        depth: typeof opts.depth === 'number' ? opts.depth : defaults.depth,
        ignoreQueryPrefix: opts.ignoreQueryPrefix === true,
        interpretNumericEntities: typeof opts.interpretNumericEntities === 'boolean' ? opts.interpretNumericEntities : defaults.interpretNumericEntities,
        parameterLimit: typeof opts.parameterLimit === 'number' ? opts.parameterLimit : defaults.parameterLimit,
        parseArrays: opts.parseArrays !== false,
        plainObjects: typeof opts.plainObjects === 'boolean' ? opts.plainObjects : defaults.plainObjects,
        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling
    };
};

module.exports = function (str, opts) {
    var options = normalizeParseOptions(opts);

    if (str === '' || str === null || typeof str === 'undefined') {
        return options.plainObjects ? Object.create(null) : {};
    }

    var tempObj = typeof str === 'string' ? parseValues(str, options) : str;
    var obj = options.plainObjects ? Object.create(null) : {};

    // Iterate over the keys and setup the new object

    var keys = Object.keys(tempObj);
    for (var i = 0; i < keys.length; ++i) {
        var key = keys[i];
        var newObj = parseKeys(key, tempObj[key], options);
        obj = utils.merge(obj, newObj, options);
    }

    return utils.compact(obj);
};


/***/ }),

/***/ 1358:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

exports.default = {
  data: function data() {
    return {
      loading: false,
      fileServer: basePath + "/userimport/import",
      token: { "Authorization": "Bearer " + JSON.parse(window.sessionStorage.getItem("userData")).token },
      fileList: [], //文件上传列表
      uploadSuccess: false,
      companyHeader: ["姓名", "政治面貌", "手机号码", "邮箱", "技术职务", "性别", "民族", "籍贯", "文化程度", "身份证号", "婚姻状况", "外语水平", "入党时间", "申请入党时间", "转积极分子时间", "转预备党员时间", "详细住址", "出生年月", "入职时间", "所在公司的名称", "入党介绍人"],
      partyHeader: ["姓名", "身份证号", "入党时间", "申请入党时间", "转积极分子时间", "转预备党员时间", "入党介绍人", "是否失联", "失联时间", "是否流动", "外出流向", "党籍状态", "人员类别"],
      headerData: [], //上传完成后返回的表头option数组
      rowsData: [], //当前selec对应的数据(array)
      rowsColList: [], //当前select选中值的col值对应的数组, 用于检测是否重复
      rowsServiceData: {}, //需要提交后台的数据(object)
      rowsDataDefault: [{ '1': 0 }], //默认数据，
      submitDisabled: true, // 禁用提交按钮
      preventBeforeDelete: false // 阻止文件提交的BeforeDelete事件
      // partyListData:   [], //组织树
      // defaultProps: {
      //   children: 'childrens',   //树的配置
      //   label: 'name'
      // },
      //companyId:   0, //当前对应的组织代码 默认为顶级 则Id == 0
    };
  },

  props: {
    importType: {
      required: true,
      type: String
    },
    orgId: {
      type: Number,
      default: null
    },
    partyId: {
      type: Number,
      default: null
    }
  },
  created: function created() {
    this.getPartyorgstree();
  },
  mounted: function mounted() {},

  watch: {
    rowsData: function rowsData(newV, oldV) {
      //rowsData变化时, 根据点击不同的内容和类型(党组织/公司), 将index对应的表头对象字段写入
      var self = this;
      self.submitDisabled = true;
      self.rowsColList = [];
      if (self.importType == "company") {
        newV.forEach(function (item, index) {
          self.rowsColList.push(item.col);
          switch (index) {
            case 0:
              self.rowsServiceData.userName = item;
              break;
            case 1:
              self.rowsServiceData.outLook = item;
              break;
            case 2:
              self.rowsServiceData.phoneNum = item;
              break;
            case 3:
              self.rowsServiceData.email = item;
              break;
            case 4:
              self.rowsServiceData.technicalPosition = item;
              break;
            case 5:
              self.rowsServiceData.gender = item;
              break;
            case 6:
              self.rowsServiceData.nation = item;
              break;
            case 7:
              self.rowsServiceData.nativePlace = item;
              break;
            case 8:
              self.rowsServiceData.educationDegree = item;
              break;
            case 9:
              self.rowsServiceData.idNumber = item;
              break;
            case 10:
              self.rowsServiceData.marital = item;
              break;
            case 11:
              self.rowsServiceData.languageLevel = item;
              break;
            case 12:
              self.rowsServiceData.joinPartyTime = item;
              break;
            case 13:
              self.rowsServiceData.applicationPartyTime = item;
              break;
            case 14:
              self.rowsServiceData.activistTime = item;
              break;
            case 15:
              self.rowsServiceData.reserveTime = item;
              break;
            case 16:
              self.rowsServiceData.address = item;
              break;
            case 17:
              self.rowsServiceData.birthday = item;
              break;
            case 18:
              self.rowsServiceData.hiredate = item;
              break;
            case 19:
              self.rowsServiceData.copanyName = item;
              break;
            case 20:
              self.rowsServiceData.introducer = item;
          }
        });
      } else {
        newV.forEach(function (item, index) {
          self.rowsColList.push(item.col);
          switch (index) {
            case 0:
              self.rowsServiceData.userName = item;
              break;
            case 1:
              self.rowsServiceData.idNumber = item;
              break;
            case 2:
              self.rowsServiceData.joinPartyTime = item;
              break;
            case 3:
              self.rowsServiceData.applicationPartyTime = item;
              break;
            case 4:
              self.rowsServiceData.activistTime = item;
              break;
            case 5:
              self.rowsServiceData.reserveTime = item;
              break;
            case 6:
              self.rowsServiceData.introducer = item;
              break;
            case 7:
              self.rowsServiceData.lost = item;
              break;
            case 8:
              self.rowsServiceData.lostTime = item;
              break;
            case 9:
              self.rowsServiceData.mobile = item;
              break;
            case 10:
              self.rowsServiceData.mobilePlace = item;
              break;
            case 11:
              self.rowsServiceData.partyMemStatus = item;
              break;
            case 12:
              self.rowsServiceData.status = item;
              break;
          }
        });
      }

      if (self.rowsData[0]) {
        self.submitDisabled = false;
      }
    }
  },
  methods: {
    beforeAvatarUpload: function beforeAvatarUpload(file) {
      var testmsg = file.name.substring(file.name.lastIndexOf('.') + 1);
      var extension = testmsg === 'xls';
      var extension2 = testmsg === 'xlsx';
      var isLt2M = file.size / 1024 / 1024 < 10;
      if (!extension && !extension2) {
        this.preventBeforeDelete = true;
        this.$message({
          message: '上传文件只能是 xls、xlsx格式!',
          type: 'warning'
        });
      }
      if (!isLt2M) {
        this.preventBeforeDelete = true;
        this.$message({
          message: '上传文件大小不能超过 10MB!',
          type: 'warning'
        });
      }
      return extension || extension2 && isLt2M;
    },
    submitUpload: function submitUpload() {
      this.$refs.upload.submit();
    },

    /**
     * 上传文件成功的回调
     * @param  {object} response 响应
     * @param  {object} file     当前文件的信息
     * @param  {array}  fileList 文件列表
     * @return none
     */
    handleSuccess: function handleSuccess(response, file, fileList) {
      if (response.meta && response.meta.code == 0) {
        this.uploadSuccess = true;
        this.rowsServiceData.filePathId = response.data.fileId;
        this.headerData = response.data.header;
      } else {
        this.$message.error("失败");
        this.fileList = [];
      }
    },

    /**
     * 点击删除, 提示确认
     * @param  {object} file     当前文件的信息
     * @param  {array} fileList 文件列表
     * @return none
     */
    beforeRemove: function beforeRemove(file, fileList) {
      if (!this.preventBeforeDelete) {
        return this.$confirm("\u79FB\u9664 " + file.name + " \u540E, \u8868\u683C\u5C06\u5237\u65B0", "确认删除?");
      }
    },

    /**
     * 确认删除, 还原上传状态, 清空数据
     * @param  {object} file     当前文件的信息
     * @param  {array}  fileList 文件列表
     * @return none
     */
    handleRemove: function handleRemove(file, fileList) {
      this.uploadSuccess = false;
      this.headerData = [];
      this.rowsData = [];
      this.rowsServiceData = {};
    },

    /**
     * 文件数量溢出的钩子
     * @param  {object} file     当前文件的信息
     * @param  {array}  fileList 文件列表
     * @return none
     */
    handleExceed: function handleExceed(files, fileList) {
      this.$message.warning("\u5F53\u524D\u9650\u5236\u9009\u62E9 1 \u4E2A\u6587\u4EF6\uFF0C\u672C\u6B21\u9009\u62E9\u4E86 " + files.length + " \u4E2A\u6587\u4EF6\uFF0C\u5171\u9009\u62E9\u4E86 " + (files.length + fileList.length) + " \u4E2A\u6587\u4EF6");
    },

    /**
     * 上传出错的钩子
     * @param  {object} file     当前文件的信息
     * @param  {array}  fileList 文件列表
     * @return none
     */
    handleError: function handleError(errorMsg, file, fileList) {
      this.$message.error("上传失败");
      this.fileList = [];
    },
    changeHeader: function changeHeader(item) {
      this.rowsServiceData;
    },

    /**
     * 点击导入数据
     * @return none
     */
    importExcel: function importExcel() {
      var self = this;
      self.loading = true;

      //去除由select产生的""值的key, 用于后台保存
      for (var key in self.rowsServiceData) {
        if (!self.rowsServiceData[key]) {
          delete self.rowsServiceData[key];
        }
      }

      if (self.importType == 'company') {
        self.rowsServiceData.companyId = self.orgId ? self.orgId : JSON.parse(sessionStorage.getItem('userData')).orgId;
      } else {
        self.rowsServiceData.partyOrgId = self.partyId ? self.partyId : JSON.parse(sessionStorage.getItem('userData')).partyOrgId;
      }

      var config = {
        url: self.importType == 'company' ? basePath + "/userimport/add" : basePath + "/userimport/party/add",
        method: 'post',
        data: self.rowsServiceData
      };

      self.$request.requestAxios(config.method, config.url, config.data, function (response) {
        if (response.data.data) {
          self.$message.success("导入成功, 正在下载错误数据信息表...");
          self.$util.downloadFile(response.data.data);
        } else {
          self.$message.success("导入成功");
        }
        self.$emit("uploadSuccess");
        self.loading = false;
      }, function (error) {
        self.loading = false;
        self.$message.error(error.data.meta.message);
      });
    },

    /**
     * 数组去重
     * @param  {array} arr 需要去重的数组
     * @return {array}       去重后的数组(不影响原数组)
     */
    unique: function unique(arr) {
      var res = [];
      for (var i = 0; i < arr.length; i++) {
        if (res.indexOf(arr[i]) == -1) {
          res.push(arr[i]);
        }
      }
      return res;
    },

    /**
     * 获取树形数据
     * @param  {string}  url    请求地址
     * @param  {string}  target 需要保存的数据目标名称
     * @param  {boolean} multi  查询树组还是单个树
     * @return none
     */
    getPartyorgstree: function getPartyorgstree() {
      var _this = this;

      var config = {
        url: basePath + "/party_orgs/partyorgstree",
        method: 'get'
      };
      this.$request.requestAxios(config.method, config.url, null, function (response) {
        _this.companyId = response.data.data[0].id;
        _this.partyListData = response.data.data;
      }, function (error) {
        _this.$message.error('查询组织失败！');
      });
    },

    /**
     * 点击树节点, 查询组织下对应的数据
     * @param  {object} data 节点数据
     * @return none
     */
    clickPartyTree: function clickPartyTree(data) {
      this.companyId = data.id;
    },

    /*
     * 自定义公司表头
     */
    companyRenderHeader: function companyRenderHeader(h, _ref) {
      var column = _ref.column,
          $index = _ref.$index;

      var index = $index - 1;
      if (index == 0 || index == 1 || index == 2 || index == 5 || index == 6 || index == 7 || index == 8 || index == 9 || index == 17 || index == 18) {
        // return(column.label)


        return h("span", [h("span", { "class": { "red-star": true } }, "*"), h("span", column.label)]);
      } else {
        return h("span", [h("span", column.label)]);
      }
    },

    /*
     * 自定义党组织表头
     */
    partyRenderHeader: function partyRenderHeader(h, _ref2) {
      var column = _ref2.column,
          $index = _ref2.$index;

      var index = $index - 1;
      if (index == 0 || index == 1 || index == 2 || index == 6 || index == 7 || index == 8 || index == 9 || index == 10 || index == 11) {
        // return(column.label)


        return h("span", [h("span", { "class": { "red-star": true } }, "*"), h("span", column.label)]);
      } else {
        return h("span", [h("span", column.label)]);
      }
    }
  }
};

/***/ }),

/***/ 1359:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _My_Message = __webpack_require__(1308);

var _My_Message2 = _interopRequireDefault(_My_Message);

var _Experience = __webpack_require__(1314);

var _Experience2 = _interopRequireDefault(_Experience);

var _Archiveses = __webpack_require__(1318);

var _Archiveses2 = _interopRequireDefault(_Archiveses);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
  props: {
    hisToryData: { //当有表单数据时，表示是从任务哪儿发送过来的。
      required: false,
      default: null
    },
    rosterId: { //人员Id
      required: false,
      default: null
    },
    mathRandom: { // 适用于花名册，查看详情
      required: false,
      default: 0
    },
    afferentUserId: { //父组件传入的用户Id
      required: false,
      default: null
    }
  },
  components: {
    'my-message': _My_Message2.default, //个人基本信息
    'my-experience': _Experience2.default, //经历性
    'my-archiveses': _Archiveses2.default //获得性
  },
  data: function data() {
    return {};
  },
  mounted: function mounted() {
    console.log(this.rosterId);
  },

  methods: {}
}; //
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

/***/ }),

/***/ 1364:
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
 * jQuery JavaScript Library v3.4.1
 * https://jquery.com/
 *
 * Includes Sizzle.js
 * https://sizzlejs.com/
 *
 * Copyright JS Foundation and other contributors
 * Released under the MIT license
 * https://jquery.org/license
 *
 * Date: 2019-05-01T21:04Z
 */
( function( global, factory ) {

	"use strict";

	if ( typeof module === "object" && typeof module.exports === "object" ) {

		// For CommonJS and CommonJS-like environments where a proper `window`
		// is present, execute the factory and get jQuery.
		// For environments that do not have a `window` with a `document`
		// (such as Node.js), expose a factory as module.exports.
		// This accentuates the need for the creation of a real `window`.
		// e.g. var jQuery = require("jquery")(window);
		// See ticket #14549 for more info.
		module.exports = global.document ?
			factory( global, true ) :
			function( w ) {
				if ( !w.document ) {
					throw new Error( "jQuery requires a window with a document" );
				}
				return factory( w );
			};
	} else {
		factory( global );
	}

// Pass this if window is not defined yet
} )( typeof window !== "undefined" ? window : this, function( window, noGlobal ) {

// Edge <= 12 - 13+, Firefox <=18 - 45+, IE 10 - 11, Safari 5.1 - 9+, iOS 6 - 9.1
// throw exceptions when non-strict code (e.g., ASP.NET 4.5) accesses strict mode
// arguments.callee.caller (trac-13335). But as of jQuery 3.0 (2016), strict mode should be common
// enough that all such attempts are guarded in a try block.
"use strict";

var arr = [];

var document = window.document;

var getProto = Object.getPrototypeOf;

var slice = arr.slice;

var concat = arr.concat;

var push = arr.push;

var indexOf = arr.indexOf;

var class2type = {};

var toString = class2type.toString;

var hasOwn = class2type.hasOwnProperty;

var fnToString = hasOwn.toString;

var ObjectFunctionString = fnToString.call( Object );

var support = {};

var isFunction = function isFunction( obj ) {

      // Support: Chrome <=57, Firefox <=52
      // In some browsers, typeof returns "function" for HTML <object> elements
      // (i.e., `typeof document.createElement( "object" ) === "function"`).
      // We don't want to classify *any* DOM node as a function.
      return typeof obj === "function" && typeof obj.nodeType !== "number";
  };


var isWindow = function isWindow( obj ) {
		return obj != null && obj === obj.window;
	};




	var preservedScriptAttributes = {
		type: true,
		src: true,
		nonce: true,
		noModule: true
	};

	function DOMEval( code, node, doc ) {
		doc = doc || document;

		var i, val,
			script = doc.createElement( "script" );

		script.text = code;
		if ( node ) {
			for ( i in preservedScriptAttributes ) {

				// Support: Firefox 64+, Edge 18+
				// Some browsers don't support the "nonce" property on scripts.
				// On the other hand, just using `getAttribute` is not enough as
				// the `nonce` attribute is reset to an empty string whenever it
				// becomes browsing-context connected.
				// See https://github.com/whatwg/html/issues/2369
				// See https://html.spec.whatwg.org/#nonce-attributes
				// The `node.getAttribute` check was added for the sake of
				// `jQuery.globalEval` so that it can fake a nonce-containing node
				// via an object.
				val = node[ i ] || node.getAttribute && node.getAttribute( i );
				if ( val ) {
					script.setAttribute( i, val );
				}
			}
		}
		doc.head.appendChild( script ).parentNode.removeChild( script );
	}


function toType( obj ) {
	if ( obj == null ) {
		return obj + "";
	}

	// Support: Android <=2.3 only (functionish RegExp)
	return typeof obj === "object" || typeof obj === "function" ?
		class2type[ toString.call( obj ) ] || "object" :
		typeof obj;
}
/* global Symbol */
// Defining this global in .eslintrc.json would create a danger of using the global
// unguarded in another place, it seems safer to define global only for this module



var
	version = "3.4.1",

	// Define a local copy of jQuery
	jQuery = function( selector, context ) {

		// The jQuery object is actually just the init constructor 'enhanced'
		// Need init if jQuery is called (just allow error to be thrown if not included)
		return new jQuery.fn.init( selector, context );
	},

	// Support: Android <=4.0 only
	// Make sure we trim BOM and NBSP
	rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;

jQuery.fn = jQuery.prototype = {

	// The current version of jQuery being used
	jquery: version,

	constructor: jQuery,

	// The default length of a jQuery object is 0
	length: 0,

	toArray: function() {
		return slice.call( this );
	},

	// Get the Nth element in the matched element set OR
	// Get the whole matched element set as a clean array
	get: function( num ) {

		// Return all the elements in a clean array
		if ( num == null ) {
			return slice.call( this );
		}

		// Return just the one element from the set
		return num < 0 ? this[ num + this.length ] : this[ num ];
	},

	// Take an array of elements and push it onto the stack
	// (returning the new matched element set)
	pushStack: function( elems ) {

		// Build a new jQuery matched element set
		var ret = jQuery.merge( this.constructor(), elems );

		// Add the old object onto the stack (as a reference)
		ret.prevObject = this;

		// Return the newly-formed element set
		return ret;
	},

	// Execute a callback for every element in the matched set.
	each: function( callback ) {
		return jQuery.each( this, callback );
	},

	map: function( callback ) {
		return this.pushStack( jQuery.map( this, function( elem, i ) {
			return callback.call( elem, i, elem );
		} ) );
	},

	slice: function() {
		return this.pushStack( slice.apply( this, arguments ) );
	},

	first: function() {
		return this.eq( 0 );
	},

	last: function() {
		return this.eq( -1 );
	},

	eq: function( i ) {
		var len = this.length,
			j = +i + ( i < 0 ? len : 0 );
		return this.pushStack( j >= 0 && j < len ? [ this[ j ] ] : [] );
	},

	end: function() {
		return this.prevObject || this.constructor();
	},

	// For internal use only.
	// Behaves like an Array's method, not like a jQuery method.
	push: push,
	sort: arr.sort,
	splice: arr.splice
};

jQuery.extend = jQuery.fn.extend = function() {
	var options, name, src, copy, copyIsArray, clone,
		target = arguments[ 0 ] || {},
		i = 1,
		length = arguments.length,
		deep = false;

	// Handle a deep copy situation
	if ( typeof target === "boolean" ) {
		deep = target;

		// Skip the boolean and the target
		target = arguments[ i ] || {};
		i++;
	}

	// Handle case when target is a string or something (possible in deep copy)
	if ( typeof target !== "object" && !isFunction( target ) ) {
		target = {};
	}

	// Extend jQuery itself if only one argument is passed
	if ( i === length ) {
		target = this;
		i--;
	}

	for ( ; i < length; i++ ) {

		// Only deal with non-null/undefined values
		if ( ( options = arguments[ i ] ) != null ) {

			// Extend the base object
			for ( name in options ) {
				copy = options[ name ];

				// Prevent Object.prototype pollution
				// Prevent never-ending loop
				if ( name === "__proto__" || target === copy ) {
					continue;
				}

				// Recurse if we're merging plain objects or arrays
				if ( deep && copy && ( jQuery.isPlainObject( copy ) ||
					( copyIsArray = Array.isArray( copy ) ) ) ) {
					src = target[ name ];

					// Ensure proper type for the source value
					if ( copyIsArray && !Array.isArray( src ) ) {
						clone = [];
					} else if ( !copyIsArray && !jQuery.isPlainObject( src ) ) {
						clone = {};
					} else {
						clone = src;
					}
					copyIsArray = false;

					// Never move original objects, clone them
					target[ name ] = jQuery.extend( deep, clone, copy );

				// Don't bring in undefined values
				} else if ( copy !== undefined ) {
					target[ name ] = copy;
				}
			}
		}
	}

	// Return the modified object
	return target;
};

jQuery.extend( {

	// Unique for each copy of jQuery on the page
	expando: "jQuery" + ( version + Math.random() ).replace( /\D/g, "" ),

	// Assume jQuery is ready without the ready module
	isReady: true,

	error: function( msg ) {
		throw new Error( msg );
	},

	noop: function() {},

	isPlainObject: function( obj ) {
		var proto, Ctor;

		// Detect obvious negatives
		// Use toString instead of jQuery.type to catch host objects
		if ( !obj || toString.call( obj ) !== "[object Object]" ) {
			return false;
		}

		proto = getProto( obj );

		// Objects with no prototype (e.g., `Object.create( null )`) are plain
		if ( !proto ) {
			return true;
		}

		// Objects with prototype are plain iff they were constructed by a global Object function
		Ctor = hasOwn.call( proto, "constructor" ) && proto.constructor;
		return typeof Ctor === "function" && fnToString.call( Ctor ) === ObjectFunctionString;
	},

	isEmptyObject: function( obj ) {
		var name;

		for ( name in obj ) {
			return false;
		}
		return true;
	},

	// Evaluates a script in a global context
	globalEval: function( code, options ) {
		DOMEval( code, { nonce: options && options.nonce } );
	},

	each: function( obj, callback ) {
		var length, i = 0;

		if ( isArrayLike( obj ) ) {
			length = obj.length;
			for ( ; i < length; i++ ) {
				if ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {
					break;
				}
			}
		} else {
			for ( i in obj ) {
				if ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {
					break;
				}
			}
		}

		return obj;
	},

	// Support: Android <=4.0 only
	trim: function( text ) {
		return text == null ?
			"" :
			( text + "" ).replace( rtrim, "" );
	},

	// results is for internal usage only
	makeArray: function( arr, results ) {
		var ret = results || [];

		if ( arr != null ) {
			if ( isArrayLike( Object( arr ) ) ) {
				jQuery.merge( ret,
					typeof arr === "string" ?
					[ arr ] : arr
				);
			} else {
				push.call( ret, arr );
			}
		}

		return ret;
	},

	inArray: function( elem, arr, i ) {
		return arr == null ? -1 : indexOf.call( arr, elem, i );
	},

	// Support: Android <=4.0 only, PhantomJS 1 only
	// push.apply(_, arraylike) throws on ancient WebKit
	merge: function( first, second ) {
		var len = +second.length,
			j = 0,
			i = first.length;

		for ( ; j < len; j++ ) {
			first[ i++ ] = second[ j ];
		}

		first.length = i;

		return first;
	},

	grep: function( elems, callback, invert ) {
		var callbackInverse,
			matches = [],
			i = 0,
			length = elems.length,
			callbackExpect = !invert;

		// Go through the array, only saving the items
		// that pass the validator function
		for ( ; i < length; i++ ) {
			callbackInverse = !callback( elems[ i ], i );
			if ( callbackInverse !== callbackExpect ) {
				matches.push( elems[ i ] );
			}
		}

		return matches;
	},

	// arg is for internal usage only
	map: function( elems, callback, arg ) {
		var length, value,
			i = 0,
			ret = [];

		// Go through the array, translating each of the items to their new values
		if ( isArrayLike( elems ) ) {
			length = elems.length;
			for ( ; i < length; i++ ) {
				value = callback( elems[ i ], i, arg );

				if ( value != null ) {
					ret.push( value );
				}
			}

		// Go through every key on the object,
		} else {
			for ( i in elems ) {
				value = callback( elems[ i ], i, arg );

				if ( value != null ) {
					ret.push( value );
				}
			}
		}

		// Flatten any nested arrays
		return concat.apply( [], ret );
	},

	// A global GUID counter for objects
	guid: 1,

	// jQuery.support is not used in Core but other projects attach their
	// properties to it so it needs to exist.
	support: support
} );

if ( typeof Symbol === "function" ) {
	jQuery.fn[ Symbol.iterator ] = arr[ Symbol.iterator ];
}

// Populate the class2type map
jQuery.each( "Boolean Number String Function Array Date RegExp Object Error Symbol".split( " " ),
function( i, name ) {
	class2type[ "[object " + name + "]" ] = name.toLowerCase();
} );

function isArrayLike( obj ) {

	// Support: real iOS 8.2 only (not reproducible in simulator)
	// `in` check used to prevent JIT error (gh-2145)
	// hasOwn isn't used here due to false negatives
	// regarding Nodelist length in IE
	var length = !!obj && "length" in obj && obj.length,
		type = toType( obj );

	if ( isFunction( obj ) || isWindow( obj ) ) {
		return false;
	}

	return type === "array" || length === 0 ||
		typeof length === "number" && length > 0 && ( length - 1 ) in obj;
}
var Sizzle =
/*!
 * Sizzle CSS Selector Engine v2.3.4
 * https://sizzlejs.com/
 *
 * Copyright JS Foundation and other contributors
 * Released under the MIT license
 * https://js.foundation/
 *
 * Date: 2019-04-08
 */
(function( window ) {

var i,
	support,
	Expr,
	getText,
	isXML,
	tokenize,
	compile,
	select,
	outermostContext,
	sortInput,
	hasDuplicate,

	// Local document vars
	setDocument,
	document,
	docElem,
	documentIsHTML,
	rbuggyQSA,
	rbuggyMatches,
	matches,
	contains,

	// Instance-specific data
	expando = "sizzle" + 1 * new Date(),
	preferredDoc = window.document,
	dirruns = 0,
	done = 0,
	classCache = createCache(),
	tokenCache = createCache(),
	compilerCache = createCache(),
	nonnativeSelectorCache = createCache(),
	sortOrder = function( a, b ) {
		if ( a === b ) {
			hasDuplicate = true;
		}
		return 0;
	},

	// Instance methods
	hasOwn = ({}).hasOwnProperty,
	arr = [],
	pop = arr.pop,
	push_native = arr.push,
	push = arr.push,
	slice = arr.slice,
	// Use a stripped-down indexOf as it's faster than native
	// https://jsperf.com/thor-indexof-vs-for/5
	indexOf = function( list, elem ) {
		var i = 0,
			len = list.length;
		for ( ; i < len; i++ ) {
			if ( list[i] === elem ) {
				return i;
			}
		}
		return -1;
	},

	booleans = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",

	// Regular expressions

	// http://www.w3.org/TR/css3-selectors/#whitespace
	whitespace = "[\\x20\\t\\r\\n\\f]",

	// http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier
	identifier = "(?:\\\\.|[\\w-]|[^\0-\\xa0])+",

	// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors
	attributes = "\\[" + whitespace + "*(" + identifier + ")(?:" + whitespace +
		// Operator (capture 2)
		"*([*^$|!~]?=)" + whitespace +
		// "Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]"
		"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + identifier + "))|)" + whitespace +
		"*\\]",

	pseudos = ":(" + identifier + ")(?:\\((" +
		// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:
		// 1. quoted (capture 3; capture 4 or capture 5)
		"('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|" +
		// 2. simple (capture 6)
		"((?:\\\\.|[^\\\\()[\\]]|" + attributes + ")*)|" +
		// 3. anything else (capture 2)
		".*" +
		")\\)|)",

	// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter
	rwhitespace = new RegExp( whitespace + "+", "g" ),
	rtrim = new RegExp( "^" + whitespace + "+|((?:^|[^\\\\])(?:\\\\.)*)" + whitespace + "+$", "g" ),

	rcomma = new RegExp( "^" + whitespace + "*," + whitespace + "*" ),
	rcombinators = new RegExp( "^" + whitespace + "*([>+~]|" + whitespace + ")" + whitespace + "*" ),
	rdescend = new RegExp( whitespace + "|>" ),

	rpseudo = new RegExp( pseudos ),
	ridentifier = new RegExp( "^" + identifier + "$" ),

	matchExpr = {
		"ID": new RegExp( "^#(" + identifier + ")" ),
		"CLASS": new RegExp( "^\\.(" + identifier + ")" ),
		"TAG": new RegExp( "^(" + identifier + "|[*])" ),
		"ATTR": new RegExp( "^" + attributes ),
		"PSEUDO": new RegExp( "^" + pseudos ),
		"CHILD": new RegExp( "^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + whitespace +
			"*(even|odd|(([+-]|)(\\d*)n|)" + whitespace + "*(?:([+-]|)" + whitespace +
			"*(\\d+)|))" + whitespace + "*\\)|)", "i" ),
		"bool": new RegExp( "^(?:" + booleans + ")$", "i" ),
		// For use in libraries implementing .is()
		// We use this for POS matching in `select`
		"needsContext": new RegExp( "^" + whitespace + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" +
			whitespace + "*((?:-\\d)?\\d*)" + whitespace + "*\\)|)(?=[^-]|$)", "i" )
	},

	rhtml = /HTML$/i,
	rinputs = /^(?:input|select|textarea|button)$/i,
	rheader = /^h\d$/i,

	rnative = /^[^{]+\{\s*\[native \w/,

	// Easily-parseable/retrievable ID or TAG or CLASS selectors
	rquickExpr = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,

	rsibling = /[+~]/,

	// CSS escapes
	// http://www.w3.org/TR/CSS21/syndata.html#escaped-characters
	runescape = new RegExp( "\\\\([\\da-f]{1,6}" + whitespace + "?|(" + whitespace + ")|.)", "ig" ),
	funescape = function( _, escaped, escapedWhitespace ) {
		var high = "0x" + escaped - 0x10000;
		// NaN means non-codepoint
		// Support: Firefox<24
		// Workaround erroneous numeric interpretation of +"0x"
		return high !== high || escapedWhitespace ?
			escaped :
			high < 0 ?
				// BMP codepoint
				String.fromCharCode( high + 0x10000 ) :
				// Supplemental Plane codepoint (surrogate pair)
				String.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );
	},

	// CSS string/identifier serialization
	// https://drafts.csswg.org/cssom/#common-serializing-idioms
	rcssescape = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,
	fcssescape = function( ch, asCodePoint ) {
		if ( asCodePoint ) {

			// U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER
			if ( ch === "\0" ) {
				return "\uFFFD";
			}

			// Control characters and (dependent upon position) numbers get escaped as code points
			return ch.slice( 0, -1 ) + "\\" + ch.charCodeAt( ch.length - 1 ).toString( 16 ) + " ";
		}

		// Other potentially-special ASCII characters get backslash-escaped
		return "\\" + ch;
	},

	// Used for iframes
	// See setDocument()
	// Removing the function wrapper causes a "Permission Denied"
	// error in IE
	unloadHandler = function() {
		setDocument();
	},

	inDisabledFieldset = addCombinator(
		function( elem ) {
			return elem.disabled === true && elem.nodeName.toLowerCase() === "fieldset";
		},
		{ dir: "parentNode", next: "legend" }
	);

// Optimize for push.apply( _, NodeList )
try {
	push.apply(
		(arr = slice.call( preferredDoc.childNodes )),
		preferredDoc.childNodes
	);
	// Support: Android<4.0
	// Detect silently failing push.apply
	arr[ preferredDoc.childNodes.length ].nodeType;
} catch ( e ) {
	push = { apply: arr.length ?

		// Leverage slice if possible
		function( target, els ) {
			push_native.apply( target, slice.call(els) );
		} :

		// Support: IE<9
		// Otherwise append directly
		function( target, els ) {
			var j = target.length,
				i = 0;
			// Can't trust NodeList.length
			while ( (target[j++] = els[i++]) ) {}
			target.length = j - 1;
		}
	};
}

function Sizzle( selector, context, results, seed ) {
	var m, i, elem, nid, match, groups, newSelector,
		newContext = context && context.ownerDocument,

		// nodeType defaults to 9, since context defaults to document
		nodeType = context ? context.nodeType : 9;

	results = results || [];

	// Return early from calls with invalid selector or context
	if ( typeof selector !== "string" || !selector ||
		nodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {

		return results;
	}

	// Try to shortcut find operations (as opposed to filters) in HTML documents
	if ( !seed ) {

		if ( ( context ? context.ownerDocument || context : preferredDoc ) !== document ) {
			setDocument( context );
		}
		context = context || document;

		if ( documentIsHTML ) {

			// If the selector is sufficiently simple, try using a "get*By*" DOM method
			// (excepting DocumentFragment context, where the methods don't exist)
			if ( nodeType !== 11 && (match = rquickExpr.exec( selector )) ) {

				// ID selector
				if ( (m = match[1]) ) {

					// Document context
					if ( nodeType === 9 ) {
						if ( (elem = context.getElementById( m )) ) {

							// Support: IE, Opera, Webkit
							// TODO: identify versions
							// getElementById can match elements by name instead of ID
							if ( elem.id === m ) {
								results.push( elem );
								return results;
							}
						} else {
							return results;
						}

					// Element context
					} else {

						// Support: IE, Opera, Webkit
						// TODO: identify versions
						// getElementById can match elements by name instead of ID
						if ( newContext && (elem = newContext.getElementById( m )) &&
							contains( context, elem ) &&
							elem.id === m ) {

							results.push( elem );
							return results;
						}
					}

				// Type selector
				} else if ( match[2] ) {
					push.apply( results, context.getElementsByTagName( selector ) );
					return results;

				// Class selector
				} else if ( (m = match[3]) && support.getElementsByClassName &&
					context.getElementsByClassName ) {

					push.apply( results, context.getElementsByClassName( m ) );
					return results;
				}
			}

			// Take advantage of querySelectorAll
			if ( support.qsa &&
				!nonnativeSelectorCache[ selector + " " ] &&
				(!rbuggyQSA || !rbuggyQSA.test( selector )) &&

				// Support: IE 8 only
				// Exclude object elements
				(nodeType !== 1 || context.nodeName.toLowerCase() !== "object") ) {

				newSelector = selector;
				newContext = context;

				// qSA considers elements outside a scoping root when evaluating child or
				// descendant combinators, which is not what we want.
				// In such cases, we work around the behavior by prefixing every selector in the
				// list with an ID selector referencing the scope context.
				// Thanks to Andrew Dupont for this technique.
				if ( nodeType === 1 && rdescend.test( selector ) ) {

					// Capture the context ID, setting it first if necessary
					if ( (nid = context.getAttribute( "id" )) ) {
						nid = nid.replace( rcssescape, fcssescape );
					} else {
						context.setAttribute( "id", (nid = expando) );
					}

					// Prefix every selector in the list
					groups = tokenize( selector );
					i = groups.length;
					while ( i-- ) {
						groups[i] = "#" + nid + " " + toSelector( groups[i] );
					}
					newSelector = groups.join( "," );

					// Expand context for sibling selectors
					newContext = rsibling.test( selector ) && testContext( context.parentNode ) ||
						context;
				}

				try {
					push.apply( results,
						newContext.querySelectorAll( newSelector )
					);
					return results;
				} catch ( qsaError ) {
					nonnativeSelectorCache( selector, true );
				} finally {
					if ( nid === expando ) {
						context.removeAttribute( "id" );
					}
				}
			}
		}
	}

	// All others
	return select( selector.replace( rtrim, "$1" ), context, results, seed );
}

/**
 * Create key-value caches of limited size
 * @returns {function(string, object)} Returns the Object data after storing it on itself with
 *	property name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)
 *	deleting the oldest entry
 */
function createCache() {
	var keys = [];

	function cache( key, value ) {
		// Use (key + " ") to avoid collision with native prototype properties (see Issue #157)
		if ( keys.push( key + " " ) > Expr.cacheLength ) {
			// Only keep the most recent entries
			delete cache[ keys.shift() ];
		}
		return (cache[ key + " " ] = value);
	}
	return cache;
}

/**
 * Mark a function for special use by Sizzle
 * @param {Function} fn The function to mark
 */
function markFunction( fn ) {
	fn[ expando ] = true;
	return fn;
}

/**
 * Support testing using an element
 * @param {Function} fn Passed the created element and returns a boolean result
 */
function assert( fn ) {
	var el = document.createElement("fieldset");

	try {
		return !!fn( el );
	} catch (e) {
		return false;
	} finally {
		// Remove from its parent by default
		if ( el.parentNode ) {
			el.parentNode.removeChild( el );
		}
		// release memory in IE
		el = null;
	}
}

/**
 * Adds the same handler for all of the specified attrs
 * @param {String} attrs Pipe-separated list of attributes
 * @param {Function} handler The method that will be applied
 */
function addHandle( attrs, handler ) {
	var arr = attrs.split("|"),
		i = arr.length;

	while ( i-- ) {
		Expr.attrHandle[ arr[i] ] = handler;
	}
}

/**
 * Checks document order of two siblings
 * @param {Element} a
 * @param {Element} b
 * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b
 */
function siblingCheck( a, b ) {
	var cur = b && a,
		diff = cur && a.nodeType === 1 && b.nodeType === 1 &&
			a.sourceIndex - b.sourceIndex;

	// Use IE sourceIndex if available on both nodes
	if ( diff ) {
		return diff;
	}

	// Check if b follows a
	if ( cur ) {
		while ( (cur = cur.nextSibling) ) {
			if ( cur === b ) {
				return -1;
			}
		}
	}

	return a ? 1 : -1;
}

/**
 * Returns a function to use in pseudos for input types
 * @param {String} type
 */
function createInputPseudo( type ) {
	return function( elem ) {
		var name = elem.nodeName.toLowerCase();
		return name === "input" && elem.type === type;
	};
}

/**
 * Returns a function to use in pseudos for buttons
 * @param {String} type
 */
function createButtonPseudo( type ) {
	return function( elem ) {
		var name = elem.nodeName.toLowerCase();
		return (name === "input" || name === "button") && elem.type === type;
	};
}

/**
 * Returns a function to use in pseudos for :enabled/:disabled
 * @param {Boolean} disabled true for :disabled; false for :enabled
 */
function createDisabledPseudo( disabled ) {

	// Known :disabled false positives: fieldset[disabled] > legend:nth-of-type(n+2) :can-disable
	return function( elem ) {

		// Only certain elements can match :enabled or :disabled
		// https://html.spec.whatwg.org/multipage/scripting.html#selector-enabled
		// https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled
		if ( "form" in elem ) {

			// Check for inherited disabledness on relevant non-disabled elements:
			// * listed form-associated elements in a disabled fieldset
			//   https://html.spec.whatwg.org/multipage/forms.html#category-listed
			//   https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled
			// * option elements in a disabled optgroup
			//   https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled
			// All such elements have a "form" property.
			if ( elem.parentNode && elem.disabled === false ) {

				// Option elements defer to a parent optgroup if present
				if ( "label" in elem ) {
					if ( "label" in elem.parentNode ) {
						return elem.parentNode.disabled === disabled;
					} else {
						return elem.disabled === disabled;
					}
				}

				// Support: IE 6 - 11
				// Use the isDisabled shortcut property to check for disabled fieldset ancestors
				return elem.isDisabled === disabled ||

					// Where there is no isDisabled, check manually
					/* jshint -W018 */
					elem.isDisabled !== !disabled &&
						inDisabledFieldset( elem ) === disabled;
			}

			return elem.disabled === disabled;

		// Try to winnow out elements that can't be disabled before trusting the disabled property.
		// Some victims get caught in our net (label, legend, menu, track), but it shouldn't
		// even exist on them, let alone have a boolean value.
		} else if ( "label" in elem ) {
			return elem.disabled === disabled;
		}

		// Remaining elements are neither :enabled nor :disabled
		return false;
	};
}

/**
 * Returns a function to use in pseudos for positionals
 * @param {Function} fn
 */
function createPositionalPseudo( fn ) {
	return markFunction(function( argument ) {
		argument = +argument;
		return markFunction(function( seed, matches ) {
			var j,
				matchIndexes = fn( [], seed.length, argument ),
				i = matchIndexes.length;

			// Match elements found at the specified indexes
			while ( i-- ) {
				if ( seed[ (j = matchIndexes[i]) ] ) {
					seed[j] = !(matches[j] = seed[j]);
				}
			}
		});
	});
}

/**
 * Checks a node for validity as a Sizzle context
 * @param {Element|Object=} context
 * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value
 */
function testContext( context ) {
	return context && typeof context.getElementsByTagName !== "undefined" && context;
}

// Expose support vars for convenience
support = Sizzle.support = {};

/**
 * Detects XML nodes
 * @param {Element|Object} elem An element or a document
 * @returns {Boolean} True iff elem is a non-HTML XML node
 */
isXML = Sizzle.isXML = function( elem ) {
	var namespace = elem.namespaceURI,
		docElem = (elem.ownerDocument || elem).documentElement;

	// Support: IE <=8
	// Assume HTML when documentElement doesn't yet exist, such as inside loading iframes
	// https://bugs.jquery.com/ticket/4833
	return !rhtml.test( namespace || docElem && docElem.nodeName || "HTML" );
};

/**
 * Sets document-related variables once based on the current document
 * @param {Element|Object} [doc] An element or document object to use to set the document
 * @returns {Object} Returns the current document
 */
setDocument = Sizzle.setDocument = function( node ) {
	var hasCompare, subWindow,
		doc = node ? node.ownerDocument || node : preferredDoc;

	// Return early if doc is invalid or already selected
	if ( doc === document || doc.nodeType !== 9 || !doc.documentElement ) {
		return document;
	}

	// Update global variables
	document = doc;
	docElem = document.documentElement;
	documentIsHTML = !isXML( document );

	// Support: IE 9-11, Edge
	// Accessing iframe documents after unload throws "permission denied" errors (jQuery #13936)
	if ( preferredDoc !== document &&
		(subWindow = document.defaultView) && subWindow.top !== subWindow ) {

		// Support: IE 11, Edge
		if ( subWindow.addEventListener ) {
			subWindow.addEventListener( "unload", unloadHandler, false );

		// Support: IE 9 - 10 only
		} else if ( subWindow.attachEvent ) {
			subWindow.attachEvent( "onunload", unloadHandler );
		}
	}

	/* Attributes
	---------------------------------------------------------------------- */

	// Support: IE<8
	// Verify that getAttribute really returns attributes and not properties
	// (excepting IE8 booleans)
	support.attributes = assert(function( el ) {
		el.className = "i";
		return !el.getAttribute("className");
	});

	/* getElement(s)By*
	---------------------------------------------------------------------- */

	// Check if getElementsByTagName("*") returns only elements
	support.getElementsByTagName = assert(function( el ) {
		el.appendChild( document.createComment("") );
		return !el.getElementsByTagName("*").length;
	});

	// Support: IE<9
	support.getElementsByClassName = rnative.test( document.getElementsByClassName );

	// Support: IE<10
	// Check if getElementById returns elements by name
	// The broken getElementById methods don't pick up programmatically-set names,
	// so use a roundabout getElementsByName test
	support.getById = assert(function( el ) {
		docElem.appendChild( el ).id = expando;
		return !document.getElementsByName || !document.getElementsByName( expando ).length;
	});

	// ID filter and find
	if ( support.getById ) {
		Expr.filter["ID"] = function( id ) {
			var attrId = id.replace( runescape, funescape );
			return function( elem ) {
				return elem.getAttribute("id") === attrId;
			};
		};
		Expr.find["ID"] = function( id, context ) {
			if ( typeof context.getElementById !== "undefined" && documentIsHTML ) {
				var elem = context.getElementById( id );
				return elem ? [ elem ] : [];
			}
		};
	} else {
		Expr.filter["ID"] =  function( id ) {
			var attrId = id.replace( runescape, funescape );
			return function( elem ) {
				var node = typeof elem.getAttributeNode !== "undefined" &&
					elem.getAttributeNode("id");
				return node && node.value === attrId;
			};
		};

		// Support: IE 6 - 7 only
		// getElementById is not reliable as a find shortcut
		Expr.find["ID"] = function( id, context ) {
			if ( typeof context.getElementById !== "undefined" && documentIsHTML ) {
				var node, i, elems,
					elem = context.getElementById( id );

				if ( elem ) {

					// Verify the id attribute
					node = elem.getAttributeNode("id");
					if ( node && node.value === id ) {
						return [ elem ];
					}

					// Fall back on getElementsByName
					elems = context.getElementsByName( id );
					i = 0;
					while ( (elem = elems[i++]) ) {
						node = elem.getAttributeNode("id");
						if ( node && node.value === id ) {
							return [ elem ];
						}
					}
				}

				return [];
			}
		};
	}

	// Tag
	Expr.find["TAG"] = support.getElementsByTagName ?
		function( tag, context ) {
			if ( typeof context.getElementsByTagName !== "undefined" ) {
				return context.getElementsByTagName( tag );

			// DocumentFragment nodes don't have gEBTN
			} else if ( support.qsa ) {
				return context.querySelectorAll( tag );
			}
		} :

		function( tag, context ) {
			var elem,
				tmp = [],
				i = 0,
				// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too
				results = context.getElementsByTagName( tag );

			// Filter out possible comments
			if ( tag === "*" ) {
				while ( (elem = results[i++]) ) {
					if ( elem.nodeType === 1 ) {
						tmp.push( elem );
					}
				}

				return tmp;
			}
			return results;
		};

	// Class
	Expr.find["CLASS"] = support.getElementsByClassName && function( className, context ) {
		if ( typeof context.getElementsByClassName !== "undefined" && documentIsHTML ) {
			return context.getElementsByClassName( className );
		}
	};

	/* QSA/matchesSelector
	---------------------------------------------------------------------- */

	// QSA and matchesSelector support

	// matchesSelector(:active) reports false when true (IE9/Opera 11.5)
	rbuggyMatches = [];

	// qSa(:focus) reports false when true (Chrome 21)
	// We allow this because of a bug in IE8/9 that throws an error
	// whenever `document.activeElement` is accessed on an iframe
	// So, we allow :focus to pass through QSA all the time to avoid the IE error
	// See https://bugs.jquery.com/ticket/13378
	rbuggyQSA = [];

	if ( (support.qsa = rnative.test( document.querySelectorAll )) ) {
		// Build QSA regex
		// Regex strategy adopted from Diego Perini
		assert(function( el ) {
			// Select is set to empty string on purpose
			// This is to test IE's treatment of not explicitly
			// setting a boolean content attribute,
			// since its presence should be enough
			// https://bugs.jquery.com/ticket/12359
			docElem.appendChild( el ).innerHTML = "<a id='" + expando + "'></a>" +
				"<select id='" + expando + "-\r\\' msallowcapture=''>" +
				"<option selected=''></option></select>";

			// Support: IE8, Opera 11-12.16
			// Nothing should be selected when empty strings follow ^= or $= or *=
			// The test attribute must be unknown in Opera but "safe" for WinRT
			// https://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section
			if ( el.querySelectorAll("[msallowcapture^='']").length ) {
				rbuggyQSA.push( "[*^$]=" + whitespace + "*(?:''|\"\")" );
			}

			// Support: IE8
			// Boolean attributes and "value" are not treated correctly
			if ( !el.querySelectorAll("[selected]").length ) {
				rbuggyQSA.push( "\\[" + whitespace + "*(?:value|" + booleans + ")" );
			}

			// Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+
			if ( !el.querySelectorAll( "[id~=" + expando + "-]" ).length ) {
				rbuggyQSA.push("~=");
			}

			// Webkit/Opera - :checked should return selected option elements
			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
			// IE8 throws error here and will not see later tests
			if ( !el.querySelectorAll(":checked").length ) {
				rbuggyQSA.push(":checked");
			}

			// Support: Safari 8+, iOS 8+
			// https://bugs.webkit.org/show_bug.cgi?id=136851
			// In-page `selector#id sibling-combinator selector` fails
			if ( !el.querySelectorAll( "a#" + expando + "+*" ).length ) {
				rbuggyQSA.push(".#.+[+~]");
			}
		});

		assert(function( el ) {
			el.innerHTML = "<a href='' disabled='disabled'></a>" +
				"<select disabled='disabled'><option/></select>";

			// Support: Windows 8 Native Apps
			// The type and name attributes are restricted during .innerHTML assignment
			var input = document.createElement("input");
			input.setAttribute( "type", "hidden" );
			el.appendChild( input ).setAttribute( "name", "D" );

			// Support: IE8
			// Enforce case-sensitivity of name attribute
			if ( el.querySelectorAll("[name=d]").length ) {
				rbuggyQSA.push( "name" + whitespace + "*[*^$|!~]?=" );
			}

			// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)
			// IE8 throws error here and will not see later tests
			if ( el.querySelectorAll(":enabled").length !== 2 ) {
				rbuggyQSA.push( ":enabled", ":disabled" );
			}

			// Support: IE9-11+
			// IE's :disabled selector does not pick up the children of disabled fieldsets
			docElem.appendChild( el ).disabled = true;
			if ( el.querySelectorAll(":disabled").length !== 2 ) {
				rbuggyQSA.push( ":enabled", ":disabled" );
			}

			// Opera 10-11 does not throw on post-comma invalid pseudos
			el.querySelectorAll("*,:x");
			rbuggyQSA.push(",.*:");
		});
	}

	if ( (support.matchesSelector = rnative.test( (matches = docElem.matches ||
		docElem.webkitMatchesSelector ||
		docElem.mozMatchesSelector ||
		docElem.oMatchesSelector ||
		docElem.msMatchesSelector) )) ) {

		assert(function( el ) {
			// Check to see if it's possible to do matchesSelector
			// on a disconnected node (IE 9)
			support.disconnectedMatch = matches.call( el, "*" );

			// This should fail with an exception
			// Gecko does not error, returns false instead
			matches.call( el, "[s!='']:x" );
			rbuggyMatches.push( "!=", pseudos );
		});
	}

	rbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join("|") );
	rbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join("|") );

	/* Contains
	---------------------------------------------------------------------- */
	hasCompare = rnative.test( docElem.compareDocumentPosition );

	// Element contains another
	// Purposefully self-exclusive
	// As in, an element does not contain itself
	contains = hasCompare || rnative.test( docElem.contains ) ?
		function( a, b ) {
			var adown = a.nodeType === 9 ? a.documentElement : a,
				bup = b && b.parentNode;
			return a === bup || !!( bup && bup.nodeType === 1 && (
				adown.contains ?
					adown.contains( bup ) :
					a.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16
			));
		} :
		function( a, b ) {
			if ( b ) {
				while ( (b = b.parentNode) ) {
					if ( b === a ) {
						return true;
					}
				}
			}
			return false;
		};

	/* Sorting
	---------------------------------------------------------------------- */

	// Document order sorting
	sortOrder = hasCompare ?
	function( a, b ) {

		// Flag for duplicate removal
		if ( a === b ) {
			hasDuplicate = true;
			return 0;
		}

		// Sort on method existence if only one input has compareDocumentPosition
		var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;
		if ( compare ) {
			return compare;
		}

		// Calculate position if both inputs belong to the same document
		compare = ( a.ownerDocument || a ) === ( b.ownerDocument || b ) ?
			a.compareDocumentPosition( b ) :

			// Otherwise we know they are disconnected
			1;

		// Disconnected nodes
		if ( compare & 1 ||
			(!support.sortDetached && b.compareDocumentPosition( a ) === compare) ) {

			// Choose the first element that is related to our preferred document
			if ( a === document || a.ownerDocument === preferredDoc && contains(preferredDoc, a) ) {
				return -1;
			}
			if ( b === document || b.ownerDocument === preferredDoc && contains(preferredDoc, b) ) {
				return 1;
			}

			// Maintain original order
			return sortInput ?
				( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
				0;
		}

		return compare & 4 ? -1 : 1;
	} :
	function( a, b ) {
		// Exit early if the nodes are identical
		if ( a === b ) {
			hasDuplicate = true;
			return 0;
		}

		var cur,
			i = 0,
			aup = a.parentNode,
			bup = b.parentNode,
			ap = [ a ],
			bp = [ b ];

		// Parentless nodes are either documents or disconnected
		if ( !aup || !bup ) {
			return a === document ? -1 :
				b === document ? 1 :
				aup ? -1 :
				bup ? 1 :
				sortInput ?
				( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
				0;

		// If the nodes are siblings, we can do a quick check
		} else if ( aup === bup ) {
			return siblingCheck( a, b );
		}

		// Otherwise we need full lists of their ancestors for comparison
		cur = a;
		while ( (cur = cur.parentNode) ) {
			ap.unshift( cur );
		}
		cur = b;
		while ( (cur = cur.parentNode) ) {
			bp.unshift( cur );
		}

		// Walk down the tree looking for a discrepancy
		while ( ap[i] === bp[i] ) {
			i++;
		}

		return i ?
			// Do a sibling check if the nodes have a common ancestor
			siblingCheck( ap[i], bp[i] ) :

			// Otherwise nodes in our document sort first
			ap[i] === preferredDoc ? -1 :
			bp[i] === preferredDoc ? 1 :
			0;
	};

	return document;
};

Sizzle.matches = function( expr, elements ) {
	return Sizzle( expr, null, null, elements );
};

Sizzle.matchesSelector = function( elem, expr ) {
	// Set document vars if needed
	if ( ( elem.ownerDocument || elem ) !== document ) {
		setDocument( elem );
	}

	if ( support.matchesSelector && documentIsHTML &&
		!nonnativeSelectorCache[ expr + " " ] &&
		( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&
		( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {

		try {
			var ret = matches.call( elem, expr );

			// IE 9's matchesSelector returns false on disconnected nodes
			if ( ret || support.disconnectedMatch ||
					// As well, disconnected nodes are said to be in a document
					// fragment in IE 9
					elem.document && elem.document.nodeType !== 11 ) {
				return ret;
			}
		} catch (e) {
			nonnativeSelectorCache( expr, true );
		}
	}

	return Sizzle( expr, document, null, [ elem ] ).length > 0;
};

Sizzle.contains = function( context, elem ) {
	// Set document vars if needed
	if ( ( context.ownerDocument || context ) !== document ) {
		setDocument( context );
	}
	return contains( context, elem );
};

Sizzle.attr = function( elem, name ) {
	// Set document vars if needed
	if ( ( elem.ownerDocument || elem ) !== document ) {
		setDocument( elem );
	}

	var fn = Expr.attrHandle[ name.toLowerCase() ],
		// Don't get fooled by Object.prototype properties (jQuery #13807)
		val = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?
			fn( elem, name, !documentIsHTML ) :
			undefined;

	return val !== undefined ?
		val :
		support.attributes || !documentIsHTML ?
			elem.getAttribute( name ) :
			(val = elem.getAttributeNode(name)) && val.specified ?
				val.value :
				null;
};

Sizzle.escape = function( sel ) {
	return (sel + "").replace( rcssescape, fcssescape );
};

Sizzle.error = function( msg ) {
	throw new Error( "Syntax error, unrecognized expression: " + msg );
};

/**
 * Document sorting and removing duplicates
 * @param {ArrayLike} results
 */
Sizzle.uniqueSort = function( results ) {
	var elem,
		duplicates = [],
		j = 0,
		i = 0;

	// Unless we *know* we can detect duplicates, assume their presence
	hasDuplicate = !support.detectDuplicates;
	sortInput = !support.sortStable && results.slice( 0 );
	results.sort( sortOrder );

	if ( hasDuplicate ) {
		while ( (elem = results[i++]) ) {
			if ( elem === results[ i ] ) {
				j = duplicates.push( i );
			}
		}
		while ( j-- ) {
			results.splice( duplicates[ j ], 1 );
		}
	}

	// Clear input after sorting to release objects
	// See https://github.com/jquery/sizzle/pull/225
	sortInput = null;

	return results;
};

/**
 * Utility function for retrieving the text value of an array of DOM nodes
 * @param {Array|Element} elem
 */
getText = Sizzle.getText = function( elem ) {
	var node,
		ret = "",
		i = 0,
		nodeType = elem.nodeType;

	if ( !nodeType ) {
		// If no nodeType, this is expected to be an array
		while ( (node = elem[i++]) ) {
			// Do not traverse comment nodes
			ret += getText( node );
		}
	} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {
		// Use textContent for elements
		// innerText usage removed for consistency of new lines (jQuery #11153)
		if ( typeof elem.textContent === "string" ) {
			return elem.textContent;
		} else {
			// Traverse its children
			for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
				ret += getText( elem );
			}
		}
	} else if ( nodeType === 3 || nodeType === 4 ) {
		return elem.nodeValue;
	}
	// Do not include comment or processing instruction nodes

	return ret;
};

Expr = Sizzle.selectors = {

	// Can be adjusted by the user
	cacheLength: 50,

	createPseudo: markFunction,

	match: matchExpr,

	attrHandle: {},

	find: {},

	relative: {
		">": { dir: "parentNode", first: true },
		" ": { dir: "parentNode" },
		"+": { dir: "previousSibling", first: true },
		"~": { dir: "previousSibling" }
	},

	preFilter: {
		"ATTR": function( match ) {
			match[1] = match[1].replace( runescape, funescape );

			// Move the given value to match[3] whether quoted or unquoted
			match[3] = ( match[3] || match[4] || match[5] || "" ).replace( runescape, funescape );

			if ( match[2] === "~=" ) {
				match[3] = " " + match[3] + " ";
			}

			return match.slice( 0, 4 );
		},

		"CHILD": function( match ) {
			/* matches from matchExpr["CHILD"]
				1 type (only|nth|...)
				2 what (child|of-type)
				3 argument (even|odd|\d*|\d*n([+-]\d+)?|...)
				4 xn-component of xn+y argument ([+-]?\d*n|)
				5 sign of xn-component
				6 x of xn-component
				7 sign of y-component
				8 y of y-component
			*/
			match[1] = match[1].toLowerCase();

			if ( match[1].slice( 0, 3 ) === "nth" ) {
				// nth-* requires argument
				if ( !match[3] ) {
					Sizzle.error( match[0] );
				}

				// numeric x and y parameters for Expr.filter.CHILD
				// remember that false/true cast respectively to 0/1
				match[4] = +( match[4] ? match[5] + (match[6] || 1) : 2 * ( match[3] === "even" || match[3] === "odd" ) );
				match[5] = +( ( match[7] + match[8] ) || match[3] === "odd" );

			// other types prohibit arguments
			} else if ( match[3] ) {
				Sizzle.error( match[0] );
			}

			return match;
		},

		"PSEUDO": function( match ) {
			var excess,
				unquoted = !match[6] && match[2];

			if ( matchExpr["CHILD"].test( match[0] ) ) {
				return null;
			}

			// Accept quoted arguments as-is
			if ( match[3] ) {
				match[2] = match[4] || match[5] || "";

			// Strip excess characters from unquoted arguments
			} else if ( unquoted && rpseudo.test( unquoted ) &&
				// Get excess from tokenize (recursively)
				(excess = tokenize( unquoted, true )) &&
				// advance to the next closing parenthesis
				(excess = unquoted.indexOf( ")", unquoted.length - excess ) - unquoted.length) ) {

				// excess is a negative index
				match[0] = match[0].slice( 0, excess );
				match[2] = unquoted.slice( 0, excess );
			}

			// Return only captures needed by the pseudo filter method (type and argument)
			return match.slice( 0, 3 );
		}
	},

	filter: {

		"TAG": function( nodeNameSelector ) {
			var nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();
			return nodeNameSelector === "*" ?
				function() { return true; } :
				function( elem ) {
					return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;
				};
		},

		"CLASS": function( className ) {
			var pattern = classCache[ className + " " ];

			return pattern ||
				(pattern = new RegExp( "(^|" + whitespace + ")" + className + "(" + whitespace + "|$)" )) &&
				classCache( className, function( elem ) {
					return pattern.test( typeof elem.className === "string" && elem.className || typeof elem.getAttribute !== "undefined" && elem.getAttribute("class") || "" );
				});
		},

		"ATTR": function( name, operator, check ) {
			return function( elem ) {
				var result = Sizzle.attr( elem, name );

				if ( result == null ) {
					return operator === "!=";
				}
				if ( !operator ) {
					return true;
				}

				result += "";

				return operator === "=" ? result === check :
					operator === "!=" ? result !== check :
					operator === "^=" ? check && result.indexOf( check ) === 0 :
					operator === "*=" ? check && result.indexOf( check ) > -1 :
					operator === "$=" ? check && result.slice( -check.length ) === check :
					operator === "~=" ? ( " " + result.replace( rwhitespace, " " ) + " " ).indexOf( check ) > -1 :
					operator === "|=" ? result === check || result.slice( 0, check.length + 1 ) === check + "-" :
					false;
			};
		},

		"CHILD": function( type, what, argument, first, last ) {
			var simple = type.slice( 0, 3 ) !== "nth",
				forward = type.slice( -4 ) !== "last",
				ofType = what === "of-type";

			return first === 1 && last === 0 ?

				// Shortcut for :nth-*(n)
				function( elem ) {
					return !!elem.parentNode;
				} :

				function( elem, context, xml ) {
					var cache, uniqueCache, outerCache, node, nodeIndex, start,
						dir = simple !== forward ? "nextSibling" : "previousSibling",
						parent = elem.parentNode,
						name = ofType && elem.nodeName.toLowerCase(),
						useCache = !xml && !ofType,
						diff = false;

					if ( parent ) {

						// :(first|last|only)-(child|of-type)
						if ( simple ) {
							while ( dir ) {
								node = elem;
								while ( (node = node[ dir ]) ) {
									if ( ofType ?
										node.nodeName.toLowerCase() === name :
										node.nodeType === 1 ) {

										return false;
									}
								}
								// Reverse direction for :only-* (if we haven't yet done so)
								start = dir = type === "only" && !start && "nextSibling";
							}
							return true;
						}

						start = [ forward ? parent.firstChild : parent.lastChild ];

						// non-xml :nth-child(...) stores cache data on `parent`
						if ( forward && useCache ) {

							// Seek `elem` from a previously-cached index

							// ...in a gzip-friendly way
							node = parent;
							outerCache = node[ expando ] || (node[ expando ] = {});

							// Support: IE <9 only
							// Defend against cloned attroperties (jQuery gh-1709)
							uniqueCache = outerCache[ node.uniqueID ] ||
								(outerCache[ node.uniqueID ] = {});

							cache = uniqueCache[ type ] || [];
							nodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];
							diff = nodeIndex && cache[ 2 ];
							node = nodeIndex && parent.childNodes[ nodeIndex ];

							while ( (node = ++nodeIndex && node && node[ dir ] ||

								// Fallback to seeking `elem` from the start
								(diff = nodeIndex = 0) || start.pop()) ) {

								// When found, cache indexes on `parent` and break
								if ( node.nodeType === 1 && ++diff && node === elem ) {
									uniqueCache[ type ] = [ dirruns, nodeIndex, diff ];
									break;
								}
							}

						} else {
							// Use previously-cached element index if available
							if ( useCache ) {
								// ...in a gzip-friendly way
								node = elem;
								outerCache = node[ expando ] || (node[ expando ] = {});

								// Support: IE <9 only
								// Defend against cloned attroperties (jQuery gh-1709)
								uniqueCache = outerCache[ node.uniqueID ] ||
									(outerCache[ node.uniqueID ] = {});

								cache = uniqueCache[ type ] || [];
								nodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];
								diff = nodeIndex;
							}

							// xml :nth-child(...)
							// or :nth-last-child(...) or :nth(-last)?-of-type(...)
							if ( diff === false ) {
								// Use the same loop as above to seek `elem` from the start
								while ( (node = ++nodeIndex && node && node[ dir ] ||
									(diff = nodeIndex = 0) || start.pop()) ) {

									if ( ( ofType ?
										node.nodeName.toLowerCase() === name :
										node.nodeType === 1 ) &&
										++diff ) {

										// Cache the index of each encountered element
										if ( useCache ) {
											outerCache = node[ expando ] || (node[ expando ] = {});

											// Support: IE <9 only
											// Defend against cloned attroperties (jQuery gh-1709)
											uniqueCache = outerCache[ node.uniqueID ] ||
												(outerCache[ node.uniqueID ] = {});

											uniqueCache[ type ] = [ dirruns, diff ];
										}

										if ( node === elem ) {
											break;
										}
									}
								}
							}
						}

						// Incorporate the offset, then check against cycle size
						diff -= last;
						return diff === first || ( diff % first === 0 && diff / first >= 0 );
					}
				};
		},

		"PSEUDO": function( pseudo, argument ) {
			// pseudo-class names are case-insensitive
			// http://www.w3.org/TR/selectors/#pseudo-classes
			// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters
			// Remember that setFilters inherits from pseudos
			var args,
				fn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||
					Sizzle.error( "unsupported pseudo: " + pseudo );

			// The user may use createPseudo to indicate that
			// arguments are needed to create the filter function
			// just as Sizzle does
			if ( fn[ expando ] ) {
				return fn( argument );
			}

			// But maintain support for old signatures
			if ( fn.length > 1 ) {
				args = [ pseudo, pseudo, "", argument ];
				return Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?
					markFunction(function( seed, matches ) {
						var idx,
							matched = fn( seed, argument ),
							i = matched.length;
						while ( i-- ) {
							idx = indexOf( seed, matched[i] );
							seed[ idx ] = !( matches[ idx ] = matched[i] );
						}
					}) :
					function( elem ) {
						return fn( elem, 0, args );
					};
			}

			return fn;
		}
	},

	pseudos: {
		// Potentially complex pseudos
		"not": markFunction(function( selector ) {
			// Trim the selector passed to compile
			// to avoid treating leading and trailing
			// spaces as combinators
			var input = [],
				results = [],
				matcher = compile( selector.replace( rtrim, "$1" ) );

			return matcher[ expando ] ?
				markFunction(function( seed, matches, context, xml ) {
					var elem,
						unmatched = matcher( seed, null, xml, [] ),
						i = seed.length;

					// Match elements unmatched by `matcher`
					while ( i-- ) {
						if ( (elem = unmatched[i]) ) {
							seed[i] = !(matches[i] = elem);
						}
					}
				}) :
				function( elem, context, xml ) {
					input[0] = elem;
					matcher( input, null, xml, results );
					// Don't keep the element (issue #299)
					input[0] = null;
					return !results.pop();
				};
		}),

		"has": markFunction(function( selector ) {
			return function( elem ) {
				return Sizzle( selector, elem ).length > 0;
			};
		}),

		"contains": markFunction(function( text ) {
			text = text.replace( runescape, funescape );
			return function( elem ) {
				return ( elem.textContent || getText( elem ) ).indexOf( text ) > -1;
			};
		}),

		// "Whether an element is represented by a :lang() selector
		// is based solely on the element's language value
		// being equal to the identifier C,
		// or beginning with the identifier C immediately followed by "-".
		// The matching of C against the element's language value is performed case-insensitively.
		// The identifier C does not have to be a valid language name."
		// http://www.w3.org/TR/selectors/#lang-pseudo
		"lang": markFunction( function( lang ) {
			// lang value must be a valid identifier
			if ( !ridentifier.test(lang || "") ) {
				Sizzle.error( "unsupported lang: " + lang );
			}
			lang = lang.replace( runescape, funescape ).toLowerCase();
			return function( elem ) {
				var elemLang;
				do {
					if ( (elemLang = documentIsHTML ?
						elem.lang :
						elem.getAttribute("xml:lang") || elem.getAttribute("lang")) ) {

						elemLang = elemLang.toLowerCase();
						return elemLang === lang || elemLang.indexOf( lang + "-" ) === 0;
					}
				} while ( (elem = elem.parentNode) && elem.nodeType === 1 );
				return false;
			};
		}),

		// Miscellaneous
		"target": function( elem ) {
			var hash = window.location && window.location.hash;
			return hash && hash.slice( 1 ) === elem.id;
		},

		"root": function( elem ) {
			return elem === docElem;
		},

		"focus": function( elem ) {
			return elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);
		},

		// Boolean properties
		"enabled": createDisabledPseudo( false ),
		"disabled": createDisabledPseudo( true ),

		"checked": function( elem ) {
			// In CSS3, :checked should return both checked and selected elements
			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
			var nodeName = elem.nodeName.toLowerCase();
			return (nodeName === "input" && !!elem.checked) || (nodeName === "option" && !!elem.selected);
		},

		"selected": function( elem ) {
			// Accessing this property makes selected-by-default
			// options in Safari work properly
			if ( elem.parentNode ) {
				elem.parentNode.selectedIndex;
			}

			return elem.selected === true;
		},

		// Contents
		"empty": function( elem ) {
			// http://www.w3.org/TR/selectors/#empty-pseudo
			// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),
			//   but not by others (comment: 8; processing instruction: 7; etc.)
			// nodeType < 6 works because attributes (2) do not appear as children
			for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
				if ( elem.nodeType < 6 ) {
					return false;
				}
			}
			return true;
		},

		"parent": function( elem ) {
			return !Expr.pseudos["empty"]( elem );
		},

		// Element/input types
		"header": function( elem ) {
			return rheader.test( elem.nodeName );
		},

		"input": function( elem ) {
			return rinputs.test( elem.nodeName );
		},

		"button": function( elem ) {
			var name = elem.nodeName.toLowerCase();
			return name === "input" && elem.type === "button" || name === "button";
		},

		"text": function( elem ) {
			var attr;
			return elem.nodeName.toLowerCase() === "input" &&
				elem.type === "text" &&

				// Support: IE<8
				// New HTML5 attribute values (e.g., "search") appear with elem.type === "text"
				( (attr = elem.getAttribute("type")) == null || attr.toLowerCase() === "text" );
		},

		// Position-in-collection
		"first": createPositionalPseudo(function() {
			return [ 0 ];
		}),

		"last": createPositionalPseudo(function( matchIndexes, length ) {
			return [ length - 1 ];
		}),

		"eq": createPositionalPseudo(function( matchIndexes, length, argument ) {
			return [ argument < 0 ? argument + length : argument ];
		}),

		"even": createPositionalPseudo(function( matchIndexes, length ) {
			var i = 0;
			for ( ; i < length; i += 2 ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		}),

		"odd": createPositionalPseudo(function( matchIndexes, length ) {
			var i = 1;
			for ( ; i < length; i += 2 ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		}),

		"lt": createPositionalPseudo(function( matchIndexes, length, argument ) {
			var i = argument < 0 ?
				argument + length :
				argument > length ?
					length :
					argument;
			for ( ; --i >= 0; ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		}),

		"gt": createPositionalPseudo(function( matchIndexes, length, argument ) {
			var i = argument < 0 ? argument + length : argument;
			for ( ; ++i < length; ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		})
	}
};

Expr.pseudos["nth"] = Expr.pseudos["eq"];

// Add button/input type pseudos
for ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {
	Expr.pseudos[ i ] = createInputPseudo( i );
}
for ( i in { submit: true, reset: true } ) {
	Expr.pseudos[ i ] = createButtonPseudo( i );
}

// Easy API for creating new setFilters
function setFilters() {}
setFilters.prototype = Expr.filters = Expr.pseudos;
Expr.setFilters = new setFilters();

tokenize = Sizzle.tokenize = function( selector, parseOnly ) {
	var matched, match, tokens, type,
		soFar, groups, preFilters,
		cached = tokenCache[ selector + " " ];

	if ( cached ) {
		return parseOnly ? 0 : cached.slice( 0 );
	}

	soFar = selector;
	groups = [];
	preFilters = Expr.preFilter;

	while ( soFar ) {

		// Comma and first run
		if ( !matched || (match = rcomma.exec( soFar )) ) {
			if ( match ) {
				// Don't consume trailing commas as valid
				soFar = soFar.slice( match[0].length ) || soFar;
			}
			groups.push( (tokens = []) );
		}

		matched = false;

		// Combinators
		if ( (match = rcombinators.exec( soFar )) ) {
			matched = match.shift();
			tokens.push({
				value: matched,
				// Cast descendant combinators to space
				type: match[0].replace( rtrim, " " )
			});
			soFar = soFar.slice( matched.length );
		}

		// Filters
		for ( type in Expr.filter ) {
			if ( (match = matchExpr[ type ].exec( soFar )) && (!preFilters[ type ] ||
				(match = preFilters[ type ]( match ))) ) {
				matched = match.shift();
				tokens.push({
					value: matched,
					type: type,
					matches: match
				});
				soFar = soFar.slice( matched.length );
			}
		}

		if ( !matched ) {
			break;
		}
	}

	// Return the length of the invalid excess
	// if we're just parsing
	// Otherwise, throw an error or return tokens
	return parseOnly ?
		soFar.length :
		soFar ?
			Sizzle.error( selector ) :
			// Cache the tokens
			tokenCache( selector, groups ).slice( 0 );
};

function toSelector( tokens ) {
	var i = 0,
		len = tokens.length,
		selector = "";
	for ( ; i < len; i++ ) {
		selector += tokens[i].value;
	}
	return selector;
}

function addCombinator( matcher, combinator, base ) {
	var dir = combinator.dir,
		skip = combinator.next,
		key = skip || dir,
		checkNonElements = base && key === "parentNode",
		doneName = done++;

	return combinator.first ?
		// Check against closest ancestor/preceding element
		function( elem, context, xml ) {
			while ( (elem = elem[ dir ]) ) {
				if ( elem.nodeType === 1 || checkNonElements ) {
					return matcher( elem, context, xml );
				}
			}
			return false;
		} :

		// Check against all ancestor/preceding elements
		function( elem, context, xml ) {
			var oldCache, uniqueCache, outerCache,
				newCache = [ dirruns, doneName ];

			// We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching
			if ( xml ) {
				while ( (elem = elem[ dir ]) ) {
					if ( elem.nodeType === 1 || checkNonElements ) {
						if ( matcher( elem, context, xml ) ) {
							return true;
						}
					}
				}
			} else {
				while ( (elem = elem[ dir ]) ) {
					if ( elem.nodeType === 1 || checkNonElements ) {
						outerCache = elem[ expando ] || (elem[ expando ] = {});

						// Support: IE <9 only
						// Defend against cloned attroperties (jQuery gh-1709)
						uniqueCache = outerCache[ elem.uniqueID ] || (outerCache[ elem.uniqueID ] = {});

						if ( skip && skip === elem.nodeName.toLowerCase() ) {
							elem = elem[ dir ] || elem;
						} else if ( (oldCache = uniqueCache[ key ]) &&
							oldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {

							// Assign to newCache so results back-propagate to previous elements
							return (newCache[ 2 ] = oldCache[ 2 ]);
						} else {
							// Reuse newcache so results back-propagate to previous elements
							uniqueCache[ key ] = newCache;

							// A match means we're done; a fail means we have to keep checking
							if ( (newCache[ 2 ] = matcher( elem, context, xml )) ) {
								return true;
							}
						}
					}
				}
			}
			return false;
		};
}

function elementMatcher( matchers ) {
	return matchers.length > 1 ?
		function( elem, context, xml ) {
			var i = matchers.length;
			while ( i-- ) {
				if ( !matchers[i]( elem, context, xml ) ) {
					return false;
				}
			}
			return true;
		} :
		matchers[0];
}

function multipleContexts( selector, contexts, results ) {
	var i = 0,
		len = contexts.length;
	for ( ; i < len; i++ ) {
		Sizzle( selector, contexts[i], results );
	}
	return results;
}

function condense( unmatched, map, filter, context, xml ) {
	var elem,
		newUnmatched = [],
		i = 0,
		len = unmatched.length,
		mapped = map != null;

	for ( ; i < len; i++ ) {
		if ( (elem = unmatched[i]) ) {
			if ( !filter || filter( elem, context, xml ) ) {
				newUnmatched.push( elem );
				if ( mapped ) {
					map.push( i );
				}
			}
		}
	}

	return newUnmatched;
}

function setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {
	if ( postFilter && !postFilter[ expando ] ) {
		postFilter = setMatcher( postFilter );
	}
	if ( postFinder && !postFinder[ expando ] ) {
		postFinder = setMatcher( postFinder, postSelector );
	}
	return markFunction(function( seed, results, context, xml ) {
		var temp, i, elem,
			preMap = [],
			postMap = [],
			preexisting = results.length,

			// Get initial elements from seed or context
			elems = seed || multipleContexts( selector || "*", context.nodeType ? [ context ] : context, [] ),

			// Prefilter to get matcher input, preserving a map for seed-results synchronization
			matcherIn = preFilter && ( seed || !selector ) ?
				condense( elems, preMap, preFilter, context, xml ) :
				elems,

			matcherOut = matcher ?
				// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,
				postFinder || ( seed ? preFilter : preexisting || postFilter ) ?

					// ...intermediate processing is necessary
					[] :

					// ...otherwise use results directly
					results :
				matcherIn;

		// Find primary matches
		if ( matcher ) {
			matcher( matcherIn, matcherOut, context, xml );
		}

		// Apply postFilter
		if ( postFilter ) {
			temp = condense( matcherOut, postMap );
			postFilter( temp, [], context, xml );

			// Un-match failing elements by moving them back to matcherIn
			i = temp.length;
			while ( i-- ) {
				if ( (elem = temp[i]) ) {
					matcherOut[ postMap[i] ] = !(matcherIn[ postMap[i] ] = elem);
				}
			}
		}

		if ( seed ) {
			if ( postFinder || preFilter ) {
				if ( postFinder ) {
					// Get the final matcherOut by condensing this intermediate into postFinder contexts
					temp = [];
					i = matcherOut.length;
					while ( i-- ) {
						if ( (elem = matcherOut[i]) ) {
							// Restore matcherIn since elem is not yet a final match
							temp.push( (matcherIn[i] = elem) );
						}
					}
					postFinder( null, (matcherOut = []), temp, xml );
				}

				// Move matched elements from seed to results to keep them synchronized
				i = matcherOut.length;
				while ( i-- ) {
					if ( (elem = matcherOut[i]) &&
						(temp = postFinder ? indexOf( seed, elem ) : preMap[i]) > -1 ) {

						seed[temp] = !(results[temp] = elem);
					}
				}
			}

		// Add elements to results, through postFinder if defined
		} else {
			matcherOut = condense(
				matcherOut === results ?
					matcherOut.splice( preexisting, matcherOut.length ) :
					matcherOut
			);
			if ( postFinder ) {
				postFinder( null, results, matcherOut, xml );
			} else {
				push.apply( results, matcherOut );
			}
		}
	});
}

function matcherFromTokens( tokens ) {
	var checkContext, matcher, j,
		len = tokens.length,
		leadingRelative = Expr.relative[ tokens[0].type ],
		implicitRelative = leadingRelative || Expr.relative[" "],
		i = leadingRelative ? 1 : 0,

		// The foundational matcher ensures that elements are reachable from top-level context(s)
		matchContext = addCombinator( function( elem ) {
			return elem === checkContext;
		}, implicitRelative, true ),
		matchAnyContext = addCombinator( function( elem ) {
			return indexOf( checkContext, elem ) > -1;
		}, implicitRelative, true ),
		matchers = [ function( elem, context, xml ) {
			var ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (
				(checkContext = context).nodeType ?
					matchContext( elem, context, xml ) :
					matchAnyContext( elem, context, xml ) );
			// Avoid hanging onto element (issue #299)
			checkContext = null;
			return ret;
		} ];

	for ( ; i < len; i++ ) {
		if ( (matcher = Expr.relative[ tokens[i].type ]) ) {
			matchers = [ addCombinator(elementMatcher( matchers ), matcher) ];
		} else {
			matcher = Expr.filter[ tokens[i].type ].apply( null, tokens[i].matches );

			// Return special upon seeing a positional matcher
			if ( matcher[ expando ] ) {
				// Find the next relative operator (if any) for proper handling
				j = ++i;
				for ( ; j < len; j++ ) {
					if ( Expr.relative[ tokens[j].type ] ) {
						break;
					}
				}
				return setMatcher(
					i > 1 && elementMatcher( matchers ),
					i > 1 && toSelector(
						// If the preceding token was a descendant combinator, insert an implicit any-element `*`
						tokens.slice( 0, i - 1 ).concat({ value: tokens[ i - 2 ].type === " " ? "*" : "" })
					).replace( rtrim, "$1" ),
					matcher,
					i < j && matcherFromTokens( tokens.slice( i, j ) ),
					j < len && matcherFromTokens( (tokens = tokens.slice( j )) ),
					j < len && toSelector( tokens )
				);
			}
			matchers.push( matcher );
		}
	}

	return elementMatcher( matchers );
}

function matcherFromGroupMatchers( elementMatchers, setMatchers ) {
	var bySet = setMatchers.length > 0,
		byElement = elementMatchers.length > 0,
		superMatcher = function( seed, context, xml, results, outermost ) {
			var elem, j, matcher,
				matchedCount = 0,
				i = "0",
				unmatched = seed && [],
				setMatched = [],
				contextBackup = outermostContext,
				// We must always have either seed elements or outermost context
				elems = seed || byElement && Expr.find["TAG"]( "*", outermost ),
				// Use integer dirruns iff this is the outermost matcher
				dirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1),
				len = elems.length;

			if ( outermost ) {
				outermostContext = context === document || context || outermost;
			}

			// Add elements passing elementMatchers directly to results
			// Support: IE<9, Safari
			// Tolerate NodeList properties (IE: "length"; Safari: <number>) matching elements by id
			for ( ; i !== len && (elem = elems[i]) != null; i++ ) {
				if ( byElement && elem ) {
					j = 0;
					if ( !context && elem.ownerDocument !== document ) {
						setDocument( elem );
						xml = !documentIsHTML;
					}
					while ( (matcher = elementMatchers[j++]) ) {
						if ( matcher( elem, context || document, xml) ) {
							results.push( elem );
							break;
						}
					}
					if ( outermost ) {
						dirruns = dirrunsUnique;
					}
				}

				// Track unmatched elements for set filters
				if ( bySet ) {
					// They will have gone through all possible matchers
					if ( (elem = !matcher && elem) ) {
						matchedCount--;
					}

					// Lengthen the array for every element, matched or not
					if ( seed ) {
						unmatched.push( elem );
					}
				}
			}

			// `i` is now the count of elements visited above, and adding it to `matchedCount`
			// makes the latter nonnegative.
			matchedCount += i;

			// Apply set filters to unmatched elements
			// NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`
			// equals `i`), unless we didn't visit _any_ elements in the above loop because we have
			// no element matchers and no seed.
			// Incrementing an initially-string "0" `i` allows `i` to remain a string only in that
			// case, which will result in a "00" `matchedCount` that differs from `i` but is also
			// numerically zero.
			if ( bySet && i !== matchedCount ) {
				j = 0;
				while ( (matcher = setMatchers[j++]) ) {
					matcher( unmatched, setMatched, context, xml );
				}

				if ( seed ) {
					// Reintegrate element matches to eliminate the need for sorting
					if ( matchedCount > 0 ) {
						while ( i-- ) {
							if ( !(unmatched[i] || setMatched[i]) ) {
								setMatched[i] = pop.call( results );
							}
						}
					}

					// Discard index placeholder values to get only actual matches
					setMatched = condense( setMatched );
				}

				// Add matches to results
				push.apply( results, setMatched );

				// Seedless set matches succeeding multiple successful matchers stipulate sorting
				if ( outermost && !seed && setMatched.length > 0 &&
					( matchedCount + setMatchers.length ) > 1 ) {

					Sizzle.uniqueSort( results );
				}
			}

			// Override manipulation of globals by nested matchers
			if ( outermost ) {
				dirruns = dirrunsUnique;
				outermostContext = contextBackup;
			}

			return unmatched;
		};

	return bySet ?
		markFunction( superMatcher ) :
		superMatcher;
}

compile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {
	var i,
		setMatchers = [],
		elementMatchers = [],
		cached = compilerCache[ selector + " " ];

	if ( !cached ) {
		// Generate a function of recursive functions that can be used to check each element
		if ( !match ) {
			match = tokenize( selector );
		}
		i = match.length;
		while ( i-- ) {
			cached = matcherFromTokens( match[i] );
			if ( cached[ expando ] ) {
				setMatchers.push( cached );
			} else {
				elementMatchers.push( cached );
			}
		}

		// Cache the compiled function
		cached = compilerCache( selector, matcherFromGroupMatchers( elementMatchers, setMatchers ) );

		// Save selector and tokenization
		cached.selector = selector;
	}
	return cached;
};

/**
 * A low-level selection function that works with Sizzle's compiled
 *  selector functions
 * @param {String|Function} selector A selector or a pre-compiled
 *  selector function built with Sizzle.compile
 * @param {Element} context
 * @param {Array} [results]
 * @param {Array} [seed] A set of elements to match against
 */
select = Sizzle.select = function( selector, context, results, seed ) {
	var i, tokens, token, type, find,
		compiled = typeof selector === "function" && selector,
		match = !seed && tokenize( (selector = compiled.selector || selector) );

	results = results || [];

	// Try to minimize operations if there is only one selector in the list and no seed
	// (the latter of which guarantees us context)
	if ( match.length === 1 ) {

		// Reduce context if the leading compound selector is an ID
		tokens = match[0] = match[0].slice( 0 );
		if ( tokens.length > 2 && (token = tokens[0]).type === "ID" &&
				context.nodeType === 9 && documentIsHTML && Expr.relative[ tokens[1].type ] ) {

			context = ( Expr.find["ID"]( token.matches[0].replace(runescape, funescape), context ) || [] )[0];
			if ( !context ) {
				return results;

			// Precompiled matchers will still verify ancestry, so step up a level
			} else if ( compiled ) {
				context = context.parentNode;
			}

			selector = selector.slice( tokens.shift().value.length );
		}

		// Fetch a seed set for right-to-left matching
		i = matchExpr["needsContext"].test( selector ) ? 0 : tokens.length;
		while ( i-- ) {
			token = tokens[i];

			// Abort if we hit a combinator
			if ( Expr.relative[ (type = token.type) ] ) {
				break;
			}
			if ( (find = Expr.find[ type ]) ) {
				// Search, expanding context for leading sibling combinators
				if ( (seed = find(
					token.matches[0].replace( runescape, funescape ),
					rsibling.test( tokens[0].type ) && testContext( context.parentNode ) || context
				)) ) {

					// If seed is empty or no tokens remain, we can return early
					tokens.splice( i, 1 );
					selector = seed.length && toSelector( tokens );
					if ( !selector ) {
						push.apply( results, seed );
						return results;
					}

					break;
				}
			}
		}
	}

	// Compile and execute a filtering function if one is not provided
	// Provide `match` to avoid retokenization if we modified the selector above
	( compiled || compile( selector, match ) )(
		seed,
		context,
		!documentIsHTML,
		results,
		!context || rsibling.test( selector ) && testContext( context.parentNode ) || context
	);
	return results;
};

// One-time assignments

// Sort stability
support.sortStable = expando.split("").sort( sortOrder ).join("") === expando;

// Support: Chrome 14-35+
// Always assume duplicates if they aren't passed to the comparison function
support.detectDuplicates = !!hasDuplicate;

// Initialize against the default document
setDocument();

// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)
// Detached nodes confoundingly follow *each other*
support.sortDetached = assert(function( el ) {
	// Should return 1, but returns 4 (following)
	return el.compareDocumentPosition( document.createElement("fieldset") ) & 1;
});

// Support: IE<8
// Prevent attribute/property "interpolation"
// https://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx
if ( !assert(function( el ) {
	el.innerHTML = "<a href='#'></a>";
	return el.firstChild.getAttribute("href") === "#" ;
}) ) {
	addHandle( "type|href|height|width", function( elem, name, isXML ) {
		if ( !isXML ) {
			return elem.getAttribute( name, name.toLowerCase() === "type" ? 1 : 2 );
		}
	});
}

// Support: IE<9
// Use defaultValue in place of getAttribute("value")
if ( !support.attributes || !assert(function( el ) {
	el.innerHTML = "<input/>";
	el.firstChild.setAttribute( "value", "" );
	return el.firstChild.getAttribute( "value" ) === "";
}) ) {
	addHandle( "value", function( elem, name, isXML ) {
		if ( !isXML && elem.nodeName.toLowerCase() === "input" ) {
			return elem.defaultValue;
		}
	});
}

// Support: IE<9
// Use getAttributeNode to fetch booleans when getAttribute lies
if ( !assert(function( el ) {
	return el.getAttribute("disabled") == null;
}) ) {
	addHandle( booleans, function( elem, name, isXML ) {
		var val;
		if ( !isXML ) {
			return elem[ name ] === true ? name.toLowerCase() :
					(val = elem.getAttributeNode( name )) && val.specified ?
					val.value :
				null;
		}
	});
}

return Sizzle;

})( window );



jQuery.find = Sizzle;
jQuery.expr = Sizzle.selectors;

// Deprecated
jQuery.expr[ ":" ] = jQuery.expr.pseudos;
jQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;
jQuery.text = Sizzle.getText;
jQuery.isXMLDoc = Sizzle.isXML;
jQuery.contains = Sizzle.contains;
jQuery.escapeSelector = Sizzle.escape;




var dir = function( elem, dir, until ) {
	var matched = [],
		truncate = until !== undefined;

	while ( ( elem = elem[ dir ] ) && elem.nodeType !== 9 ) {
		if ( elem.nodeType === 1 ) {
			if ( truncate && jQuery( elem ).is( until ) ) {
				break;
			}
			matched.push( elem );
		}
	}
	return matched;
};


var siblings = function( n, elem ) {
	var matched = [];

	for ( ; n; n = n.nextSibling ) {
		if ( n.nodeType === 1 && n !== elem ) {
			matched.push( n );
		}
	}

	return matched;
};


var rneedsContext = jQuery.expr.match.needsContext;



function nodeName( elem, name ) {

  return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();

};
var rsingleTag = ( /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i );



// Implement the identical functionality for filter and not
function winnow( elements, qualifier, not ) {
	if ( isFunction( qualifier ) ) {
		return jQuery.grep( elements, function( elem, i ) {
			return !!qualifier.call( elem, i, elem ) !== not;
		} );
	}

	// Single element
	if ( qualifier.nodeType ) {
		return jQuery.grep( elements, function( elem ) {
			return ( elem === qualifier ) !== not;
		} );
	}

	// Arraylike of elements (jQuery, arguments, Array)
	if ( typeof qualifier !== "string" ) {
		return jQuery.grep( elements, function( elem ) {
			return ( indexOf.call( qualifier, elem ) > -1 ) !== not;
		} );
	}

	// Filtered directly for both simple and complex selectors
	return jQuery.filter( qualifier, elements, not );
}

jQuery.filter = function( expr, elems, not ) {
	var elem = elems[ 0 ];

	if ( not ) {
		expr = ":not(" + expr + ")";
	}

	if ( elems.length === 1 && elem.nodeType === 1 ) {
		return jQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [];
	}

	return jQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {
		return elem.nodeType === 1;
	} ) );
};

jQuery.fn.extend( {
	find: function( selector ) {
		var i, ret,
			len = this.length,
			self = this;

		if ( typeof selector !== "string" ) {
			return this.pushStack( jQuery( selector ).filter( function() {
				for ( i = 0; i < len; i++ ) {
					if ( jQuery.contains( self[ i ], this ) ) {
						return true;
					}
				}
			} ) );
		}

		ret = this.pushStack( [] );

		for ( i = 0; i < len; i++ ) {
			jQuery.find( selector, self[ i ], ret );
		}

		return len > 1 ? jQuery.uniqueSort( ret ) : ret;
	},
	filter: function( selector ) {
		return this.pushStack( winnow( this, selector || [], false ) );
	},
	not: function( selector ) {
		return this.pushStack( winnow( this, selector || [], true ) );
	},
	is: function( selector ) {
		return !!winnow(
			this,

			// If this is a positional/relative selector, check membership in the returned set
			// so $("p:first").is("p:last") won't return true for a doc with two "p".
			typeof selector === "string" && rneedsContext.test( selector ) ?
				jQuery( selector ) :
				selector || [],
			false
		).length;
	}
} );


// Initialize a jQuery object


// A central reference to the root jQuery(document)
var rootjQuery,

	// A simple way to check for HTML strings
	// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)
	// Strict HTML recognition (#11290: must start with <)
	// Shortcut simple #id case for speed
	rquickExpr = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/,

	init = jQuery.fn.init = function( selector, context, root ) {
		var match, elem;

		// HANDLE: $(""), $(null), $(undefined), $(false)
		if ( !selector ) {
			return this;
		}

		// Method init() accepts an alternate rootjQuery
		// so migrate can support jQuery.sub (gh-2101)
		root = root || rootjQuery;

		// Handle HTML strings
		if ( typeof selector === "string" ) {
			if ( selector[ 0 ] === "<" &&
				selector[ selector.length - 1 ] === ">" &&
				selector.length >= 3 ) {

				// Assume that strings that start and end with <> are HTML and skip the regex check
				match = [ null, selector, null ];

			} else {
				match = rquickExpr.exec( selector );
			}

			// Match html or make sure no context is specified for #id
			if ( match && ( match[ 1 ] || !context ) ) {

				// HANDLE: $(html) -> $(array)
				if ( match[ 1 ] ) {
					context = context instanceof jQuery ? context[ 0 ] : context;

					// Option to run scripts is true for back-compat
					// Intentionally let the error be thrown if parseHTML is not present
					jQuery.merge( this, jQuery.parseHTML(
						match[ 1 ],
						context && context.nodeType ? context.ownerDocument || context : document,
						true
					) );

					// HANDLE: $(html, props)
					if ( rsingleTag.test( match[ 1 ] ) && jQuery.isPlainObject( context ) ) {
						for ( match in context ) {

							// Properties of context are called as methods if possible
							if ( isFunction( this[ match ] ) ) {
								this[ match ]( context[ match ] );

							// ...and otherwise set as attributes
							} else {
								this.attr( match, context[ match ] );
							}
						}
					}

					return this;

				// HANDLE: $(#id)
				} else {
					elem = document.getElementById( match[ 2 ] );

					if ( elem ) {

						// Inject the element directly into the jQuery object
						this[ 0 ] = elem;
						this.length = 1;
					}
					return this;
				}

			// HANDLE: $(expr, $(...))
			} else if ( !context || context.jquery ) {
				return ( context || root ).find( selector );

			// HANDLE: $(expr, context)
			// (which is just equivalent to: $(context).find(expr)
			} else {
				return this.constructor( context ).find( selector );
			}

		// HANDLE: $(DOMElement)
		} else if ( selector.nodeType ) {
			this[ 0 ] = selector;
			this.length = 1;
			return this;

		// HANDLE: $(function)
		// Shortcut for document ready
		} else if ( isFunction( selector ) ) {
			return root.ready !== undefined ?
				root.ready( selector ) :

				// Execute immediately if ready is not present
				selector( jQuery );
		}

		return jQuery.makeArray( selector, this );
	};

// Give the init function the jQuery prototype for later instantiation
init.prototype = jQuery.fn;

// Initialize central reference
rootjQuery = jQuery( document );


var rparentsprev = /^(?:parents|prev(?:Until|All))/,

	// Methods guaranteed to produce a unique set when starting from a unique set
	guaranteedUnique = {
		children: true,
		contents: true,
		next: true,
		prev: true
	};

jQuery.fn.extend( {
	has: function( target ) {
		var targets = jQuery( target, this ),
			l = targets.length;

		return this.filter( function() {
			var i = 0;
			for ( ; i < l; i++ ) {
				if ( jQuery.contains( this, targets[ i ] ) ) {
					return true;
				}
			}
		} );
	},

	closest: function( selectors, context ) {
		var cur,
			i = 0,
			l = this.length,
			matched = [],
			targets = typeof selectors !== "string" && jQuery( selectors );

		// Positional selectors never match, since there's no _selection_ context
		if ( !rneedsContext.test( selectors ) ) {
			for ( ; i < l; i++ ) {
				for ( cur = this[ i ]; cur && cur !== context; cur = cur.parentNode ) {

					// Always skip document fragments
					if ( cur.nodeType < 11 && ( targets ?
						targets.index( cur ) > -1 :

						// Don't pass non-elements to Sizzle
						cur.nodeType === 1 &&
							jQuery.find.matchesSelector( cur, selectors ) ) ) {

						matched.push( cur );
						break;
					}
				}
			}
		}

		return this.pushStack( matched.length > 1 ? jQuery.uniqueSort( matched ) : matched );
	},

	// Determine the position of an element within the set
	index: function( elem ) {

		// No argument, return index in parent
		if ( !elem ) {
			return ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;
		}

		// Index in selector
		if ( typeof elem === "string" ) {
			return indexOf.call( jQuery( elem ), this[ 0 ] );
		}

		// Locate the position of the desired element
		return indexOf.call( this,

			// If it receives a jQuery object, the first element is used
			elem.jquery ? elem[ 0 ] : elem
		);
	},

	add: function( selector, context ) {
		return this.pushStack(
			jQuery.uniqueSort(
				jQuery.merge( this.get(), jQuery( selector, context ) )
			)
		);
	},

	addBack: function( selector ) {
		return this.add( selector == null ?
			this.prevObject : this.prevObject.filter( selector )
		);
	}
} );

function sibling( cur, dir ) {
	while ( ( cur = cur[ dir ] ) && cur.nodeType !== 1 ) {}
	return cur;
}

jQuery.each( {
	parent: function( elem ) {
		var parent = elem.parentNode;
		return parent && parent.nodeType !== 11 ? parent : null;
	},
	parents: function( elem ) {
		return dir( elem, "parentNode" );
	},
	parentsUntil: function( elem, i, until ) {
		return dir( elem, "parentNode", until );
	},
	next: function( elem ) {
		return sibling( elem, "nextSibling" );
	},
	prev: function( elem ) {
		return sibling( elem, "previousSibling" );
	},
	nextAll: function( elem ) {
		return dir( elem, "nextSibling" );
	},
	prevAll: function( elem ) {
		return dir( elem, "previousSibling" );
	},
	nextUntil: function( elem, i, until ) {
		return dir( elem, "nextSibling", until );
	},
	prevUntil: function( elem, i, until ) {
		return dir( elem, "previousSibling", until );
	},
	siblings: function( elem ) {
		return siblings( ( elem.parentNode || {} ).firstChild, elem );
	},
	children: function( elem ) {
		return siblings( elem.firstChild );
	},
	contents: function( elem ) {
		if ( typeof elem.contentDocument !== "undefined" ) {
			return elem.contentDocument;
		}

		// Support: IE 9 - 11 only, iOS 7 only, Android Browser <=4.3 only
		// Treat the template element as a regular one in browsers that
		// don't support it.
		if ( nodeName( elem, "template" ) ) {
			elem = elem.content || elem;
		}

		return jQuery.merge( [], elem.childNodes );
	}
}, function( name, fn ) {
	jQuery.fn[ name ] = function( until, selector ) {
		var matched = jQuery.map( this, fn, until );

		if ( name.slice( -5 ) !== "Until" ) {
			selector = until;
		}

		if ( selector && typeof selector === "string" ) {
			matched = jQuery.filter( selector, matched );
		}

		if ( this.length > 1 ) {

			// Remove duplicates
			if ( !guaranteedUnique[ name ] ) {
				jQuery.uniqueSort( matched );
			}

			// Reverse order for parents* and prev-derivatives
			if ( rparentsprev.test( name ) ) {
				matched.reverse();
			}
		}

		return this.pushStack( matched );
	};
} );
var rnothtmlwhite = ( /[^\x20\t\r\n\f]+/g );



// Convert String-formatted options into Object-formatted ones
function createOptions( options ) {
	var object = {};
	jQuery.each( options.match( rnothtmlwhite ) || [], function( _, flag ) {
		object[ flag ] = true;
	} );
	return object;
}

/*
 * Create a callback list using the following parameters:
 *
 *	options: an optional list of space-separated options that will change how
 *			the callback list behaves or a more traditional option object
 *
 * By default a callback list will act like an event callback list and can be
 * "fired" multiple times.
 *
 * Possible options:
 *
 *	once:			will ensure the callback list can only be fired once (like a Deferred)
 *
 *	memory:			will keep track of previous values and will call any callback added
 *					after the list has been fired right away with the latest "memorized"
 *					values (like a Deferred)
 *
 *	unique:			will ensure a callback can only be added once (no duplicate in the list)
 *
 *	stopOnFalse:	interrupt callings when a callback returns false
 *
 */
jQuery.Callbacks = function( options ) {

	// Convert options from String-formatted to Object-formatted if needed
	// (we check in cache first)
	options = typeof options === "string" ?
		createOptions( options ) :
		jQuery.extend( {}, options );

	var // Flag to know if list is currently firing
		firing,

		// Last fire value for non-forgettable lists
		memory,

		// Flag to know if list was already fired
		fired,

		// Flag to prevent firing
		locked,

		// Actual callback list
		list = [],

		// Queue of execution data for repeatable lists
		queue = [],

		// Index of currently firing callback (modified by add/remove as needed)
		firingIndex = -1,

		// Fire callbacks
		fire = function() {

			// Enforce single-firing
			locked = locked || options.once;

			// Execute callbacks for all pending executions,
			// respecting firingIndex overrides and runtime changes
			fired = firing = true;
			for ( ; queue.length; firingIndex = -1 ) {
				memory = queue.shift();
				while ( ++firingIndex < list.length ) {

					// Run callback and check for early termination
					if ( list[ firingIndex ].apply( memory[ 0 ], memory[ 1 ] ) === false &&
						options.stopOnFalse ) {

						// Jump to end and forget the data so .add doesn't re-fire
						firingIndex = list.length;
						memory = false;
					}
				}
			}

			// Forget the data if we're done with it
			if ( !options.memory ) {
				memory = false;
			}

			firing = false;

			// Clean up if we're done firing for good
			if ( locked ) {

				// Keep an empty list if we have data for future add calls
				if ( memory ) {
					list = [];

				// Otherwise, this object is spent
				} else {
					list = "";
				}
			}
		},

		// Actual Callbacks object
		self = {

			// Add a callback or a collection of callbacks to the list
			add: function() {
				if ( list ) {

					// If we have memory from a past run, we should fire after adding
					if ( memory && !firing ) {
						firingIndex = list.length - 1;
						queue.push( memory );
					}

					( function add( args ) {
						jQuery.each( args, function( _, arg ) {
							if ( isFunction( arg ) ) {
								if ( !options.unique || !self.has( arg ) ) {
									list.push( arg );
								}
							} else if ( arg && arg.length && toType( arg ) !== "string" ) {

								// Inspect recursively
								add( arg );
							}
						} );
					} )( arguments );

					if ( memory && !firing ) {
						fire();
					}
				}
				return this;
			},

			// Remove a callback from the list
			remove: function() {
				jQuery.each( arguments, function( _, arg ) {
					var index;
					while ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {
						list.splice( index, 1 );

						// Handle firing indexes
						if ( index <= firingIndex ) {
							firingIndex--;
						}
					}
				} );
				return this;
			},

			// Check if a given callback is in the list.
			// If no argument is given, return whether or not list has callbacks attached.
			has: function( fn ) {
				return fn ?
					jQuery.inArray( fn, list ) > -1 :
					list.length > 0;
			},

			// Remove all callbacks from the list
			empty: function() {
				if ( list ) {
					list = [];
				}
				return this;
			},

			// Disable .fire and .add
			// Abort any current/pending executions
			// Clear all callbacks and values
			disable: function() {
				locked = queue = [];
				list = memory = "";
				return this;
			},
			disabled: function() {
				return !list;
			},

			// Disable .fire
			// Also disable .add unless we have memory (since it would have no effect)
			// Abort any pending executions
			lock: function() {
				locked = queue = [];
				if ( !memory && !firing ) {
					list = memory = "";
				}
				return this;
			},
			locked: function() {
				return !!locked;
			},

			// Call all callbacks with the given context and arguments
			fireWith: function( context, args ) {
				if ( !locked ) {
					args = args || [];
					args = [ context, args.slice ? args.slice() : args ];
					queue.push( args );
					if ( !firing ) {
						fire();
					}
				}
				return this;
			},

			// Call all the callbacks with the given arguments
			fire: function() {
				self.fireWith( this, arguments );
				return this;
			},

			// To know if the callbacks have already been called at least once
			fired: function() {
				return !!fired;
			}
		};

	return self;
};


function Identity( v ) {
	return v;
}
function Thrower( ex ) {
	throw ex;
}

function adoptValue( value, resolve, reject, noValue ) {
	var method;

	try {

		// Check for promise aspect first to privilege synchronous behavior
		if ( value && isFunction( ( method = value.promise ) ) ) {
			method.call( value ).done( resolve ).fail( reject );

		// Other thenables
		} else if ( value && isFunction( ( method = value.then ) ) ) {
			method.call( value, resolve, reject );

		// Other non-thenables
		} else {

			// Control `resolve` arguments by letting Array#slice cast boolean `noValue` to integer:
			// * false: [ value ].slice( 0 ) => resolve( value )
			// * true: [ value ].slice( 1 ) => resolve()
			resolve.apply( undefined, [ value ].slice( noValue ) );
		}

	// For Promises/A+, convert exceptions into rejections
	// Since jQuery.when doesn't unwrap thenables, we can skip the extra checks appearing in
	// Deferred#then to conditionally suppress rejection.
	} catch ( value ) {

		// Support: Android 4.0 only
		// Strict mode functions invoked without .call/.apply get global-object context
		reject.apply( undefined, [ value ] );
	}
}

jQuery.extend( {

	Deferred: function( func ) {
		var tuples = [

				// action, add listener, callbacks,
				// ... .then handlers, argument index, [final state]
				[ "notify", "progress", jQuery.Callbacks( "memory" ),
					jQuery.Callbacks( "memory" ), 2 ],
				[ "resolve", "done", jQuery.Callbacks( "once memory" ),
					jQuery.Callbacks( "once memory" ), 0, "resolved" ],
				[ "reject", "fail", jQuery.Callbacks( "once memory" ),
					jQuery.Callbacks( "once memory" ), 1, "rejected" ]
			],
			state = "pending",
			promise = {
				state: function() {
					return state;
				},
				always: function() {
					deferred.done( arguments ).fail( arguments );
					return this;
				},
				"catch": function( fn ) {
					return promise.then( null, fn );
				},

				// Keep pipe for back-compat
				pipe: function( /* fnDone, fnFail, fnProgress */ ) {
					var fns = arguments;

					return jQuery.Deferred( function( newDefer ) {
						jQuery.each( tuples, function( i, tuple ) {

							// Map tuples (progress, done, fail) to arguments (done, fail, progress)
							var fn = isFunction( fns[ tuple[ 4 ] ] ) && fns[ tuple[ 4 ] ];

							// deferred.progress(function() { bind to newDefer or newDefer.notify })
							// deferred.done(function() { bind to newDefer or newDefer.resolve })
							// deferred.fail(function() { bind to newDefer or newDefer.reject })
							deferred[ tuple[ 1 ] ]( function() {
								var returned = fn && fn.apply( this, arguments );
								if ( returned && isFunction( returned.promise ) ) {
									returned.promise()
										.progress( newDefer.notify )
										.done( newDefer.resolve )
										.fail( newDefer.reject );
								} else {
									newDefer[ tuple[ 0 ] + "With" ](
										this,
										fn ? [ returned ] : arguments
									);
								}
							} );
						} );
						fns = null;
					} ).promise();
				},
				then: function( onFulfilled, onRejected, onProgress ) {
					var maxDepth = 0;
					function resolve( depth, deferred, handler, special ) {
						return function() {
							var that = this,
								args = arguments,
								mightThrow = function() {
									var returned, then;

									// Support: Promises/A+ section 2.3.3.3.3
									// https://promisesaplus.com/#point-59
									// Ignore double-resolution attempts
									if ( depth < maxDepth ) {
										return;
									}

									returned = handler.apply( that, args );

									// Support: Promises/A+ section 2.3.1
									// https://promisesaplus.com/#point-48
									if ( returned === deferred.promise() ) {
										throw new TypeError( "Thenable self-resolution" );
									}

									// Support: Promises/A+ sections 2.3.3.1, 3.5
									// https://promisesaplus.com/#point-54
									// https://promisesaplus.com/#point-75
									// Retrieve `then` only once
									then = returned &&

										// Support: Promises/A+ section 2.3.4
										// https://promisesaplus.com/#point-64
										// Only check objects and functions for thenability
										( typeof returned === "object" ||
											typeof returned === "function" ) &&
										returned.then;

									// Handle a returned thenable
									if ( isFunction( then ) ) {

										// Special processors (notify) just wait for resolution
										if ( special ) {
											then.call(
												returned,
												resolve( maxDepth, deferred, Identity, special ),
												resolve( maxDepth, deferred, Thrower, special )
											);

										// Normal processors (resolve) also hook into progress
										} else {

											// ...and disregard older resolution values
											maxDepth++;

											then.call(
												returned,
												resolve( maxDepth, deferred, Identity, special ),
												resolve( maxDepth, deferred, Thrower, special ),
												resolve( maxDepth, deferred, Identity,
													deferred.notifyWith )
											);
										}

									// Handle all other returned values
									} else {

										// Only substitute handlers pass on context
										// and multiple values (non-spec behavior)
										if ( handler !== Identity ) {
											that = undefined;
											args = [ returned ];
										}

										// Process the value(s)
										// Default process is resolve
										( special || deferred.resolveWith )( that, args );
									}
								},

								// Only normal processors (resolve) catch and reject exceptions
								process = special ?
									mightThrow :
									function() {
										try {
											mightThrow();
										} catch ( e ) {

											if ( jQuery.Deferred.exceptionHook ) {
												jQuery.Deferred.exceptionHook( e,
													process.stackTrace );
											}

											// Support: Promises/A+ section 2.3.3.3.4.1
											// https://promisesaplus.com/#point-61
											// Ignore post-resolution exceptions
											if ( depth + 1 >= maxDepth ) {

												// Only substitute handlers pass on context
												// and multiple values (non-spec behavior)
												if ( handler !== Thrower ) {
													that = undefined;
													args = [ e ];
												}

												deferred.rejectWith( that, args );
											}
										}
									};

							// Support: Promises/A+ section 2.3.3.3.1
							// https://promisesaplus.com/#point-57
							// Re-resolve promises immediately to dodge false rejection from
							// subsequent errors
							if ( depth ) {
								process();
							} else {

								// Call an optional hook to record the stack, in case of exception
								// since it's otherwise lost when execution goes async
								if ( jQuery.Deferred.getStackHook ) {
									process.stackTrace = jQuery.Deferred.getStackHook();
								}
								window.setTimeout( process );
							}
						};
					}

					return jQuery.Deferred( function( newDefer ) {

						// progress_handlers.add( ... )
						tuples[ 0 ][ 3 ].add(
							resolve(
								0,
								newDefer,
								isFunction( onProgress ) ?
									onProgress :
									Identity,
								newDefer.notifyWith
							)
						);

						// fulfilled_handlers.add( ... )
						tuples[ 1 ][ 3 ].add(
							resolve(
								0,
								newDefer,
								isFunction( onFulfilled ) ?
									onFulfilled :
									Identity
							)
						);

						// rejected_handlers.add( ... )
						tuples[ 2 ][ 3 ].add(
							resolve(
								0,
								newDefer,
								isFunction( onRejected ) ?
									onRejected :
									Thrower
							)
						);
					} ).promise();
				},

				// Get a promise for this deferred
				// If obj is provided, the promise aspect is added to the object
				promise: function( obj ) {
					return obj != null ? jQuery.extend( obj, promise ) : promise;
				}
			},
			deferred = {};

		// Add list-specific methods
		jQuery.each( tuples, function( i, tuple ) {
			var list = tuple[ 2 ],
				stateString = tuple[ 5 ];

			// promise.progress = list.add
			// promise.done = list.add
			// promise.fail = list.add
			promise[ tuple[ 1 ] ] = list.add;

			// Handle state
			if ( stateString ) {
				list.add(
					function() {

						// state = "resolved" (i.e., fulfilled)
						// state = "rejected"
						state = stateString;
					},

					// rejected_callbacks.disable
					// fulfilled_callbacks.disable
					tuples[ 3 - i ][ 2 ].disable,

					// rejected_handlers.disable
					// fulfilled_handlers.disable
					tuples[ 3 - i ][ 3 ].disable,

					// progress_callbacks.lock
					tuples[ 0 ][ 2 ].lock,

					// progress_handlers.lock
					tuples[ 0 ][ 3 ].lock
				);
			}

			// progress_handlers.fire
			// fulfilled_handlers.fire
			// rejected_handlers.fire
			list.add( tuple[ 3 ].fire );

			// deferred.notify = function() { deferred.notifyWith(...) }
			// deferred.resolve = function() { deferred.resolveWith(...) }
			// deferred.reject = function() { deferred.rejectWith(...) }
			deferred[ tuple[ 0 ] ] = function() {
				deferred[ tuple[ 0 ] + "With" ]( this === deferred ? undefined : this, arguments );
				return this;
			};

			// deferred.notifyWith = list.fireWith
			// deferred.resolveWith = list.fireWith
			// deferred.rejectWith = list.fireWith
			deferred[ tuple[ 0 ] + "With" ] = list.fireWith;
		} );

		// Make the deferred a promise
		promise.promise( deferred );

		// Call given func if any
		if ( func ) {
			func.call( deferred, deferred );
		}

		// All done!
		return deferred;
	},

	// Deferred helper
	when: function( singleValue ) {
		var

			// count of uncompleted subordinates
			remaining = arguments.length,

			// count of unprocessed arguments
			i = remaining,

			// subordinate fulfillment data
			resolveContexts = Array( i ),
			resolveValues = slice.call( arguments ),

			// the master Deferred
			master = jQuery.Deferred(),

			// subordinate callback factory
			updateFunc = function( i ) {
				return function( value ) {
					resolveContexts[ i ] = this;
					resolveValues[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;
					if ( !( --remaining ) ) {
						master.resolveWith( resolveContexts, resolveValues );
					}
				};
			};

		// Single- and empty arguments are adopted like Promise.resolve
		if ( remaining <= 1 ) {
			adoptValue( singleValue, master.done( updateFunc( i ) ).resolve, master.reject,
				!remaining );

			// Use .then() to unwrap secondary thenables (cf. gh-3000)
			if ( master.state() === "pending" ||
				isFunction( resolveValues[ i ] && resolveValues[ i ].then ) ) {

				return master.then();
			}
		}

		// Multiple arguments are aggregated like Promise.all array elements
		while ( i-- ) {
			adoptValue( resolveValues[ i ], updateFunc( i ), master.reject );
		}

		return master.promise();
	}
} );


// These usually indicate a programmer mistake during development,
// warn about them ASAP rather than swallowing them by default.
var rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;

jQuery.Deferred.exceptionHook = function( error, stack ) {

	// Support: IE 8 - 9 only
	// Console exists when dev tools are open, which can happen at any time
	if ( window.console && window.console.warn && error && rerrorNames.test( error.name ) ) {
		window.console.warn( "jQuery.Deferred exception: " + error.message, error.stack, stack );
	}
};




jQuery.readyException = function( error ) {
	window.setTimeout( function() {
		throw error;
	} );
};




// The deferred used on DOM ready
var readyList = jQuery.Deferred();

jQuery.fn.ready = function( fn ) {

	readyList
		.then( fn )

		// Wrap jQuery.readyException in a function so that the lookup
		// happens at the time of error handling instead of callback
		// registration.
		.catch( function( error ) {
			jQuery.readyException( error );
		} );

	return this;
};

jQuery.extend( {

	// Is the DOM ready to be used? Set to true once it occurs.
	isReady: false,

	// A counter to track how many items to wait for before
	// the ready event fires. See #6781
	readyWait: 1,

	// Handle when the DOM is ready
	ready: function( wait ) {

		// Abort if there are pending holds or we're already ready
		if ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {
			return;
		}

		// Remember that the DOM is ready
		jQuery.isReady = true;

		// If a normal DOM Ready event fired, decrement, and wait if need be
		if ( wait !== true && --jQuery.readyWait > 0 ) {
			return;
		}

		// If there are functions bound, to execute
		readyList.resolveWith( document, [ jQuery ] );
	}
} );

jQuery.ready.then = readyList.then;

// The ready event handler and self cleanup method
function completed() {
	document.removeEventListener( "DOMContentLoaded", completed );
	window.removeEventListener( "load", completed );
	jQuery.ready();
}

// Catch cases where $(document).ready() is called
// after the browser event has already occurred.
// Support: IE <=9 - 10 only
// Older IE sometimes signals "interactive" too soon
if ( document.readyState === "complete" ||
	( document.readyState !== "loading" && !document.documentElement.doScroll ) ) {

	// Handle it asynchronously to allow scripts the opportunity to delay ready
	window.setTimeout( jQuery.ready );

} else {

	// Use the handy event callback
	document.addEventListener( "DOMContentLoaded", completed );

	// A fallback to window.onload, that will always work
	window.addEventListener( "load", completed );
}




// Multifunctional method to get and set values of a collection
// The value/s can optionally be executed if it's a function
var access = function( elems, fn, key, value, chainable, emptyGet, raw ) {
	var i = 0,
		len = elems.length,
		bulk = key == null;

	// Sets many values
	if ( toType( key ) === "object" ) {
		chainable = true;
		for ( i in key ) {
			access( elems, fn, i, key[ i ], true, emptyGet, raw );
		}

	// Sets one value
	} else if ( value !== undefined ) {
		chainable = true;

		if ( !isFunction( value ) ) {
			raw = true;
		}

		if ( bulk ) {

			// Bulk operations run against the entire set
			if ( raw ) {
				fn.call( elems, value );
				fn = null;

			// ...except when executing function values
			} else {
				bulk = fn;
				fn = function( elem, key, value ) {
					return bulk.call( jQuery( elem ), value );
				};
			}
		}

		if ( fn ) {
			for ( ; i < len; i++ ) {
				fn(
					elems[ i ], key, raw ?
					value :
					value.call( elems[ i ], i, fn( elems[ i ], key ) )
				);
			}
		}
	}

	if ( chainable ) {
		return elems;
	}

	// Gets
	if ( bulk ) {
		return fn.call( elems );
	}

	return len ? fn( elems[ 0 ], key ) : emptyGet;
};


// Matches dashed string for camelizing
var rmsPrefix = /^-ms-/,
	rdashAlpha = /-([a-z])/g;

// Used by camelCase as callback to replace()
function fcamelCase( all, letter ) {
	return letter.toUpperCase();
}

// Convert dashed to camelCase; used by the css and data modules
// Support: IE <=9 - 11, Edge 12 - 15
// Microsoft forgot to hump their vendor prefix (#9572)
function camelCase( string ) {
	return string.replace( rmsPrefix, "ms-" ).replace( rdashAlpha, fcamelCase );
}
var acceptData = function( owner ) {

	// Accepts only:
	//  - Node
	//    - Node.ELEMENT_NODE
	//    - Node.DOCUMENT_NODE
	//  - Object
	//    - Any
	return owner.nodeType === 1 || owner.nodeType === 9 || !( +owner.nodeType );
};




function Data() {
	this.expando = jQuery.expando + Data.uid++;
}

Data.uid = 1;

Data.prototype = {

	cache: function( owner ) {

		// Check if the owner object already has a cache
		var value = owner[ this.expando ];

		// If not, create one
		if ( !value ) {
			value = {};

			// We can accept data for non-element nodes in modern browsers,
			// but we should not, see #8335.
			// Always return an empty object.
			if ( acceptData( owner ) ) {

				// If it is a node unlikely to be stringify-ed or looped over
				// use plain assignment
				if ( owner.nodeType ) {
					owner[ this.expando ] = value;

				// Otherwise secure it in a non-enumerable property
				// configurable must be true to allow the property to be
				// deleted when data is removed
				} else {
					Object.defineProperty( owner, this.expando, {
						value: value,
						configurable: true
					} );
				}
			}
		}

		return value;
	},
	set: function( owner, data, value ) {
		var prop,
			cache = this.cache( owner );

		// Handle: [ owner, key, value ] args
		// Always use camelCase key (gh-2257)
		if ( typeof data === "string" ) {
			cache[ camelCase( data ) ] = value;

		// Handle: [ owner, { properties } ] args
		} else {

			// Copy the properties one-by-one to the cache object
			for ( prop in data ) {
				cache[ camelCase( prop ) ] = data[ prop ];
			}
		}
		return cache;
	},
	get: function( owner, key ) {
		return key === undefined ?
			this.cache( owner ) :

			// Always use camelCase key (gh-2257)
			owner[ this.expando ] && owner[ this.expando ][ camelCase( key ) ];
	},
	access: function( owner, key, value ) {

		// In cases where either:
		//
		//   1. No key was specified
		//   2. A string key was specified, but no value provided
		//
		// Take the "read" path and allow the get method to determine
		// which value to return, respectively either:
		//
		//   1. The entire cache object
		//   2. The data stored at the key
		//
		if ( key === undefined ||
				( ( key && typeof key === "string" ) && value === undefined ) ) {

			return this.get( owner, key );
		}

		// When the key is not a string, or both a key and value
		// are specified, set or extend (existing objects) with either:
		//
		//   1. An object of properties
		//   2. A key and value
		//
		this.set( owner, key, value );

		// Since the "set" path can have two possible entry points
		// return the expected data based on which path was taken[*]
		return value !== undefined ? value : key;
	},
	remove: function( owner, key ) {
		var i,
			cache = owner[ this.expando ];

		if ( cache === undefined ) {
			return;
		}

		if ( key !== undefined ) {

			// Support array or space separated string of keys
			if ( Array.isArray( key ) ) {

				// If key is an array of keys...
				// We always set camelCase keys, so remove that.
				key = key.map( camelCase );
			} else {
				key = camelCase( key );

				// If a key with the spaces exists, use it.
				// Otherwise, create an array by matching non-whitespace
				key = key in cache ?
					[ key ] :
					( key.match( rnothtmlwhite ) || [] );
			}

			i = key.length;

			while ( i-- ) {
				delete cache[ key[ i ] ];
			}
		}

		// Remove the expando if there's no more data
		if ( key === undefined || jQuery.isEmptyObject( cache ) ) {

			// Support: Chrome <=35 - 45
			// Webkit & Blink performance suffers when deleting properties
			// from DOM nodes, so set to undefined instead
			// https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted)
			if ( owner.nodeType ) {
				owner[ this.expando ] = undefined;
			} else {
				delete owner[ this.expando ];
			}
		}
	},
	hasData: function( owner ) {
		var cache = owner[ this.expando ];
		return cache !== undefined && !jQuery.isEmptyObject( cache );
	}
};
var dataPriv = new Data();

var dataUser = new Data();



//	Implementation Summary
//
//	1. Enforce API surface and semantic compatibility with 1.9.x branch
//	2. Improve the module's maintainability by reducing the storage
//		paths to a single mechanism.
//	3. Use the same single mechanism to support "private" and "user" data.
//	4. _Never_ expose "private" data to user code (TODO: Drop _data, _removeData)
//	5. Avoid exposing implementation details on user objects (eg. expando properties)
//	6. Provide a clear path for implementation upgrade to WeakMap in 2014

var rbrace = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
	rmultiDash = /[A-Z]/g;

function getData( data ) {
	if ( data === "true" ) {
		return true;
	}

	if ( data === "false" ) {
		return false;
	}

	if ( data === "null" ) {
		return null;
	}

	// Only convert to a number if it doesn't change the string
	if ( data === +data + "" ) {
		return +data;
	}

	if ( rbrace.test( data ) ) {
		return JSON.parse( data );
	}

	return data;
}

function dataAttr( elem, key, data ) {
	var name;

	// If nothing was found internally, try to fetch any
	// data from the HTML5 data-* attribute
	if ( data === undefined && elem.nodeType === 1 ) {
		name = "data-" + key.replace( rmultiDash, "-$&" ).toLowerCase();
		data = elem.getAttribute( name );

		if ( typeof data === "string" ) {
			try {
				data = getData( data );
			} catch ( e ) {}

			// Make sure we set the data so it isn't changed later
			dataUser.set( elem, key, data );
		} else {
			data = undefined;
		}
	}
	return data;
}

jQuery.extend( {
	hasData: function( elem ) {
		return dataUser.hasData( elem ) || dataPriv.hasData( elem );
	},

	data: function( elem, name, data ) {
		return dataUser.access( elem, name, data );
	},

	removeData: function( elem, name ) {
		dataUser.remove( elem, name );
	},

	// TODO: Now that all calls to _data and _removeData have been replaced
	// with direct calls to dataPriv methods, these can be deprecated.
	_data: function( elem, name, data ) {
		return dataPriv.access( elem, name, data );
	},

	_removeData: function( elem, name ) {
		dataPriv.remove( elem, name );
	}
} );

jQuery.fn.extend( {
	data: function( key, value ) {
		var i, name, data,
			elem = this[ 0 ],
			attrs = elem && elem.attributes;

		// Gets all values
		if ( key === undefined ) {
			if ( this.length ) {
				data = dataUser.get( elem );

				if ( elem.nodeType === 1 && !dataPriv.get( elem, "hasDataAttrs" ) ) {
					i = attrs.length;
					while ( i-- ) {

						// Support: IE 11 only
						// The attrs elements can be null (#14894)
						if ( attrs[ i ] ) {
							name = attrs[ i ].name;
							if ( name.indexOf( "data-" ) === 0 ) {
								name = camelCase( name.slice( 5 ) );
								dataAttr( elem, name, data[ name ] );
							}
						}
					}
					dataPriv.set( elem, "hasDataAttrs", true );
				}
			}

			return data;
		}

		// Sets multiple values
		if ( typeof key === "object" ) {
			return this.each( function() {
				dataUser.set( this, key );
			} );
		}

		return access( this, function( value ) {
			var data;

			// The calling jQuery object (element matches) is not empty
			// (and therefore has an element appears at this[ 0 ]) and the
			// `value` parameter was not undefined. An empty jQuery object
			// will result in `undefined` for elem = this[ 0 ] which will
			// throw an exception if an attempt to read a data cache is made.
			if ( elem && value === undefined ) {

				// Attempt to get data from the cache
				// The key will always be camelCased in Data
				data = dataUser.get( elem, key );
				if ( data !== undefined ) {
					return data;
				}

				// Attempt to "discover" the data in
				// HTML5 custom data-* attrs
				data = dataAttr( elem, key );
				if ( data !== undefined ) {
					return data;
				}

				// We tried really hard, but the data doesn't exist.
				return;
			}

			// Set the data...
			this.each( function() {

				// We always store the camelCased key
				dataUser.set( this, key, value );
			} );
		}, null, value, arguments.length > 1, null, true );
	},

	removeData: function( key ) {
		return this.each( function() {
			dataUser.remove( this, key );
		} );
	}
} );


jQuery.extend( {
	queue: function( elem, type, data ) {
		var queue;

		if ( elem ) {
			type = ( type || "fx" ) + "queue";
			queue = dataPriv.get( elem, type );

			// Speed up dequeue by getting out quickly if this is just a lookup
			if ( data ) {
				if ( !queue || Array.isArray( data ) ) {
					queue = dataPriv.access( elem, type, jQuery.makeArray( data ) );
				} else {
					queue.push( data );
				}
			}
			return queue || [];
		}
	},

	dequeue: function( elem, type ) {
		type = type || "fx";

		var queue = jQuery.queue( elem, type ),
			startLength = queue.length,
			fn = queue.shift(),
			hooks = jQuery._queueHooks( elem, type ),
			next = function() {
				jQuery.dequeue( elem, type );
			};

		// If the fx queue is dequeued, always remove the progress sentinel
		if ( fn === "inprogress" ) {
			fn = queue.shift();
			startLength--;
		}

		if ( fn ) {

			// Add a progress sentinel to prevent the fx queue from being
			// automatically dequeued
			if ( type === "fx" ) {
				queue.unshift( "inprogress" );
			}

			// Clear up the last queue stop function
			delete hooks.stop;
			fn.call( elem, next, hooks );
		}

		if ( !startLength && hooks ) {
			hooks.empty.fire();
		}
	},

	// Not public - generate a queueHooks object, or return the current one
	_queueHooks: function( elem, type ) {
		var key = type + "queueHooks";
		return dataPriv.get( elem, key ) || dataPriv.access( elem, key, {
			empty: jQuery.Callbacks( "once memory" ).add( function() {
				dataPriv.remove( elem, [ type + "queue", key ] );
			} )
		} );
	}
} );

jQuery.fn.extend( {
	queue: function( type, data ) {
		var setter = 2;

		if ( typeof type !== "string" ) {
			data = type;
			type = "fx";
			setter--;
		}

		if ( arguments.length < setter ) {
			return jQuery.queue( this[ 0 ], type );
		}

		return data === undefined ?
			this :
			this.each( function() {
				var queue = jQuery.queue( this, type, data );

				// Ensure a hooks for this queue
				jQuery._queueHooks( this, type );

				if ( type === "fx" && queue[ 0 ] !== "inprogress" ) {
					jQuery.dequeue( this, type );
				}
			} );
	},
	dequeue: function( type ) {
		return this.each( function() {
			jQuery.dequeue( this, type );
		} );
	},
	clearQueue: function( type ) {
		return this.queue( type || "fx", [] );
	},

	// Get a promise resolved when queues of a certain type
	// are emptied (fx is the type by default)
	promise: function( type, obj ) {
		var tmp,
			count = 1,
			defer = jQuery.Deferred(),
			elements = this,
			i = this.length,
			resolve = function() {
				if ( !( --count ) ) {
					defer.resolveWith( elements, [ elements ] );
				}
			};

		if ( typeof type !== "string" ) {
			obj = type;
			type = undefined;
		}
		type = type || "fx";

		while ( i-- ) {
			tmp = dataPriv.get( elements[ i ], type + "queueHooks" );
			if ( tmp && tmp.empty ) {
				count++;
				tmp.empty.add( resolve );
			}
		}
		resolve();
		return defer.promise( obj );
	}
} );
var pnum = ( /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/ ).source;

var rcssNum = new RegExp( "^(?:([+-])=|)(" + pnum + ")([a-z%]*)$", "i" );


var cssExpand = [ "Top", "Right", "Bottom", "Left" ];

var documentElement = document.documentElement;



	var isAttached = function( elem ) {
			return jQuery.contains( elem.ownerDocument, elem );
		},
		composed = { composed: true };

	// Support: IE 9 - 11+, Edge 12 - 18+, iOS 10.0 - 10.2 only
	// Check attachment across shadow DOM boundaries when possible (gh-3504)
	// Support: iOS 10.0-10.2 only
	// Early iOS 10 versions support `attachShadow` but not `getRootNode`,
	// leading to errors. We need to check for `getRootNode`.
	if ( documentElement.getRootNode ) {
		isAttached = function( elem ) {
			return jQuery.contains( elem.ownerDocument, elem ) ||
				elem.getRootNode( composed ) === elem.ownerDocument;
		};
	}
var isHiddenWithinTree = function( elem, el ) {

		// isHiddenWithinTree might be called from jQuery#filter function;
		// in that case, element will be second argument
		elem = el || elem;

		// Inline style trumps all
		return elem.style.display === "none" ||
			elem.style.display === "" &&

			// Otherwise, check computed style
			// Support: Firefox <=43 - 45
			// Disconnected elements can have computed display: none, so first confirm that elem is
			// in the document.
			isAttached( elem ) &&

			jQuery.css( elem, "display" ) === "none";
	};

var swap = function( elem, options, callback, args ) {
	var ret, name,
		old = {};

	// Remember the old values, and insert the new ones
	for ( name in options ) {
		old[ name ] = elem.style[ name ];
		elem.style[ name ] = options[ name ];
	}

	ret = callback.apply( elem, args || [] );

	// Revert the old values
	for ( name in options ) {
		elem.style[ name ] = old[ name ];
	}

	return ret;
};




function adjustCSS( elem, prop, valueParts, tween ) {
	var adjusted, scale,
		maxIterations = 20,
		currentValue = tween ?
			function() {
				return tween.cur();
			} :
			function() {
				return jQuery.css( elem, prop, "" );
			},
		initial = currentValue(),
		unit = valueParts && valueParts[ 3 ] || ( jQuery.cssNumber[ prop ] ? "" : "px" ),

		// Starting value computation is required for potential unit mismatches
		initialInUnit = elem.nodeType &&
			( jQuery.cssNumber[ prop ] || unit !== "px" && +initial ) &&
			rcssNum.exec( jQuery.css( elem, prop ) );

	if ( initialInUnit && initialInUnit[ 3 ] !== unit ) {

		// Support: Firefox <=54
		// Halve the iteration target value to prevent interference from CSS upper bounds (gh-2144)
		initial = initial / 2;

		// Trust units reported by jQuery.css
		unit = unit || initialInUnit[ 3 ];

		// Iteratively approximate from a nonzero starting point
		initialInUnit = +initial || 1;

		while ( maxIterations-- ) {

			// Evaluate and update our best guess (doubling guesses that zero out).
			// Finish if the scale equals or crosses 1 (making the old*new product non-positive).
			jQuery.style( elem, prop, initialInUnit + unit );
			if ( ( 1 - scale ) * ( 1 - ( scale = currentValue() / initial || 0.5 ) ) <= 0 ) {
				maxIterations = 0;
			}
			initialInUnit = initialInUnit / scale;

		}

		initialInUnit = initialInUnit * 2;
		jQuery.style( elem, prop, initialInUnit + unit );

		// Make sure we update the tween properties later on
		valueParts = valueParts || [];
	}

	if ( valueParts ) {
		initialInUnit = +initialInUnit || +initial || 0;

		// Apply relative offset (+=/-=) if specified
		adjusted = valueParts[ 1 ] ?
			initialInUnit + ( valueParts[ 1 ] + 1 ) * valueParts[ 2 ] :
			+valueParts[ 2 ];
		if ( tween ) {
			tween.unit = unit;
			tween.start = initialInUnit;
			tween.end = adjusted;
		}
	}
	return adjusted;
}


var defaultDisplayMap = {};

function getDefaultDisplay( elem ) {
	var temp,
		doc = elem.ownerDocument,
		nodeName = elem.nodeName,
		display = defaultDisplayMap[ nodeName ];

	if ( display ) {
		return display;
	}

	temp = doc.body.appendChild( doc.createElement( nodeName ) );
	display = jQuery.css( temp, "display" );

	temp.parentNode.removeChild( temp );

	if ( display === "none" ) {
		display = "block";
	}
	defaultDisplayMap[ nodeName ] = display;

	return display;
}

function showHide( elements, show ) {
	var display, elem,
		values = [],
		index = 0,
		length = elements.length;

	// Determine new display value for elements that need to change
	for ( ; index < length; index++ ) {
		elem = elements[ index ];
		if ( !elem.style ) {
			continue;
		}

		display = elem.style.display;
		if ( show ) {

			// Since we force visibility upon cascade-hidden elements, an immediate (and slow)
			// check is required in this first loop unless we have a nonempty display value (either
			// inline or about-to-be-restored)
			if ( display === "none" ) {
				values[ index ] = dataPriv.get( elem, "display" ) || null;
				if ( !values[ index ] ) {
					elem.style.display = "";
				}
			}
			if ( elem.style.display === "" && isHiddenWithinTree( elem ) ) {
				values[ index ] = getDefaultDisplay( elem );
			}
		} else {
			if ( display !== "none" ) {
				values[ index ] = "none";

				// Remember what we're overwriting
				dataPriv.set( elem, "display", display );
			}
		}
	}

	// Set the display of the elements in a second loop to avoid constant reflow
	for ( index = 0; index < length; index++ ) {
		if ( values[ index ] != null ) {
			elements[ index ].style.display = values[ index ];
		}
	}

	return elements;
}

jQuery.fn.extend( {
	show: function() {
		return showHide( this, true );
	},
	hide: function() {
		return showHide( this );
	},
	toggle: function( state ) {
		if ( typeof state === "boolean" ) {
			return state ? this.show() : this.hide();
		}

		return this.each( function() {
			if ( isHiddenWithinTree( this ) ) {
				jQuery( this ).show();
			} else {
				jQuery( this ).hide();
			}
		} );
	}
} );
var rcheckableType = ( /^(?:checkbox|radio)$/i );

var rtagName = ( /<([a-z][^\/\0>\x20\t\r\n\f]*)/i );

var rscriptType = ( /^$|^module$|\/(?:java|ecma)script/i );



// We have to close these tags to support XHTML (#13200)
var wrapMap = {

	// Support: IE <=9 only
	option: [ 1, "<select multiple='multiple'>", "</select>" ],

	// XHTML parsers do not magically insert elements in the
	// same way that tag soup parsers do. So we cannot shorten
	// this by omitting <tbody> or other required elements.
	thead: [ 1, "<table>", "</table>" ],
	col: [ 2, "<table><colgroup>", "</colgroup></table>" ],
	tr: [ 2, "<table><tbody>", "</tbody></table>" ],
	td: [ 3, "<table><tbody><tr>", "</tr></tbody></table>" ],

	_default: [ 0, "", "" ]
};

// Support: IE <=9 only
wrapMap.optgroup = wrapMap.option;

wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;
wrapMap.th = wrapMap.td;


function getAll( context, tag ) {

	// Support: IE <=9 - 11 only
	// Use typeof to avoid zero-argument method invocation on host objects (#15151)
	var ret;

	if ( typeof context.getElementsByTagName !== "undefined" ) {
		ret = context.getElementsByTagName( tag || "*" );

	} else if ( typeof context.querySelectorAll !== "undefined" ) {
		ret = context.querySelectorAll( tag || "*" );

	} else {
		ret = [];
	}

	if ( tag === undefined || tag && nodeName( context, tag ) ) {
		return jQuery.merge( [ context ], ret );
	}

	return ret;
}


// Mark scripts as having already been evaluated
function setGlobalEval( elems, refElements ) {
	var i = 0,
		l = elems.length;

	for ( ; i < l; i++ ) {
		dataPriv.set(
			elems[ i ],
			"globalEval",
			!refElements || dataPriv.get( refElements[ i ], "globalEval" )
		);
	}
}


var rhtml = /<|&#?\w+;/;

function buildFragment( elems, context, scripts, selection, ignored ) {
	var elem, tmp, tag, wrap, attached, j,
		fragment = context.createDocumentFragment(),
		nodes = [],
		i = 0,
		l = elems.length;

	for ( ; i < l; i++ ) {
		elem = elems[ i ];

		if ( elem || elem === 0 ) {

			// Add nodes directly
			if ( toType( elem ) === "object" ) {

				// Support: Android <=4.0 only, PhantomJS 1 only
				// push.apply(_, arraylike) throws on ancient WebKit
				jQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );

			// Convert non-html into a text node
			} else if ( !rhtml.test( elem ) ) {
				nodes.push( context.createTextNode( elem ) );

			// Convert html into DOM nodes
			} else {
				tmp = tmp || fragment.appendChild( context.createElement( "div" ) );

				// Deserialize a standard representation
				tag = ( rtagName.exec( elem ) || [ "", "" ] )[ 1 ].toLowerCase();
				wrap = wrapMap[ tag ] || wrapMap._default;
				tmp.innerHTML = wrap[ 1 ] + jQuery.htmlPrefilter( elem ) + wrap[ 2 ];

				// Descend through wrappers to the right content
				j = wrap[ 0 ];
				while ( j-- ) {
					tmp = tmp.lastChild;
				}

				// Support: Android <=4.0 only, PhantomJS 1 only
				// push.apply(_, arraylike) throws on ancient WebKit
				jQuery.merge( nodes, tmp.childNodes );

				// Remember the top-level container
				tmp = fragment.firstChild;

				// Ensure the created nodes are orphaned (#12392)
				tmp.textContent = "";
			}
		}
	}

	// Remove wrapper from fragment
	fragment.textContent = "";

	i = 0;
	while ( ( elem = nodes[ i++ ] ) ) {

		// Skip elements already in the context collection (trac-4087)
		if ( selection && jQuery.inArray( elem, selection ) > -1 ) {
			if ( ignored ) {
				ignored.push( elem );
			}
			continue;
		}

		attached = isAttached( elem );

		// Append to fragment
		tmp = getAll( fragment.appendChild( elem ), "script" );

		// Preserve script evaluation history
		if ( attached ) {
			setGlobalEval( tmp );
		}

		// Capture executables
		if ( scripts ) {
			j = 0;
			while ( ( elem = tmp[ j++ ] ) ) {
				if ( rscriptType.test( elem.type || "" ) ) {
					scripts.push( elem );
				}
			}
		}
	}

	return fragment;
}


( function() {
	var fragment = document.createDocumentFragment(),
		div = fragment.appendChild( document.createElement( "div" ) ),
		input = document.createElement( "input" );

	// Support: Android 4.0 - 4.3 only
	// Check state lost if the name is set (#11217)
	// Support: Windows Web Apps (WWA)
	// `name` and `type` must use .setAttribute for WWA (#14901)
	input.setAttribute( "type", "radio" );
	input.setAttribute( "checked", "checked" );
	input.setAttribute( "name", "t" );

	div.appendChild( input );

	// Support: Android <=4.1 only
	// Older WebKit doesn't clone checked state correctly in fragments
	support.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;

	// Support: IE <=11 only
	// Make sure textarea (and checkbox) defaultValue is properly cloned
	div.innerHTML = "<textarea>x</textarea>";
	support.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;
} )();


var
	rkeyEvent = /^key/,
	rmouseEvent = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,
	rtypenamespace = /^([^.]*)(?:\.(.+)|)/;

function returnTrue() {
	return true;
}

function returnFalse() {
	return false;
}

// Support: IE <=9 - 11+
// focus() and blur() are asynchronous, except when they are no-op.
// So expect focus to be synchronous when the element is already active,
// and blur to be synchronous when the element is not already active.
// (focus and blur are always synchronous in other supported browsers,
// this just defines when we can count on it).
function expectSync( elem, type ) {
	return ( elem === safeActiveElement() ) === ( type === "focus" );
}

// Support: IE <=9 only
// Accessing document.activeElement can throw unexpectedly
// https://bugs.jquery.com/ticket/13393
function safeActiveElement() {
	try {
		return document.activeElement;
	} catch ( err ) { }
}

function on( elem, types, selector, data, fn, one ) {
	var origFn, type;

	// Types can be a map of types/handlers
	if ( typeof types === "object" ) {

		// ( types-Object, selector, data )
		if ( typeof selector !== "string" ) {

			// ( types-Object, data )
			data = data || selector;
			selector = undefined;
		}
		for ( type in types ) {
			on( elem, type, selector, data, types[ type ], one );
		}
		return elem;
	}

	if ( data == null && fn == null ) {

		// ( types, fn )
		fn = selector;
		data = selector = undefined;
	} else if ( fn == null ) {
		if ( typeof selector === "string" ) {

			// ( types, selector, fn )
			fn = data;
			data = undefined;
		} else {

			// ( types, data, fn )
			fn = data;
			data = selector;
			selector = undefined;
		}
	}
	if ( fn === false ) {
		fn = returnFalse;
	} else if ( !fn ) {
		return elem;
	}

	if ( one === 1 ) {
		origFn = fn;
		fn = function( event ) {

			// Can use an empty set, since event contains the info
			jQuery().off( event );
			return origFn.apply( this, arguments );
		};

		// Use same guid so caller can remove using origFn
		fn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );
	}
	return elem.each( function() {
		jQuery.event.add( this, types, fn, data, selector );
	} );
}

/*
 * Helper functions for managing events -- not part of the public interface.
 * Props to Dean Edwards' addEvent library for many of the ideas.
 */
jQuery.event = {

	global: {},

	add: function( elem, types, handler, data, selector ) {

		var handleObjIn, eventHandle, tmp,
			events, t, handleObj,
			special, handlers, type, namespaces, origType,
			elemData = dataPriv.get( elem );

		// Don't attach events to noData or text/comment nodes (but allow plain objects)
		if ( !elemData ) {
			return;
		}

		// Caller can pass in an object of custom data in lieu of the handler
		if ( handler.handler ) {
			handleObjIn = handler;
			handler = handleObjIn.handler;
			selector = handleObjIn.selector;
		}

		// Ensure that invalid selectors throw exceptions at attach time
		// Evaluate against documentElement in case elem is a non-element node (e.g., document)
		if ( selector ) {
			jQuery.find.matchesSelector( documentElement, selector );
		}

		// Make sure that the handler has a unique ID, used to find/remove it later
		if ( !handler.guid ) {
			handler.guid = jQuery.guid++;
		}

		// Init the element's event structure and main handler, if this is the first
		if ( !( events = elemData.events ) ) {
			events = elemData.events = {};
		}
		if ( !( eventHandle = elemData.handle ) ) {
			eventHandle = elemData.handle = function( e ) {

				// Discard the second event of a jQuery.event.trigger() and
				// when an event is called after a page has unloaded
				return typeof jQuery !== "undefined" && jQuery.event.triggered !== e.type ?
					jQuery.event.dispatch.apply( elem, arguments ) : undefined;
			};
		}

		// Handle multiple events separated by a space
		types = ( types || "" ).match( rnothtmlwhite ) || [ "" ];
		t = types.length;
		while ( t-- ) {
			tmp = rtypenamespace.exec( types[ t ] ) || [];
			type = origType = tmp[ 1 ];
			namespaces = ( tmp[ 2 ] || "" ).split( "." ).sort();

			// There *must* be a type, no attaching namespace-only handlers
			if ( !type ) {
				continue;
			}

			// If event changes its type, use the special event handlers for the changed type
			special = jQuery.event.special[ type ] || {};

			// If selector defined, determine special event api type, otherwise given type
			type = ( selector ? special.delegateType : special.bindType ) || type;

			// Update special based on newly reset type
			special = jQuery.event.special[ type ] || {};

			// handleObj is passed to all event handlers
			handleObj = jQuery.extend( {
				type: type,
				origType: origType,
				data: data,
				handler: handler,
				guid: handler.guid,
				selector: selector,
				needsContext: selector && jQuery.expr.match.needsContext.test( selector ),
				namespace: namespaces.join( "." )
			}, handleObjIn );

			// Init the event handler queue if we're the first
			if ( !( handlers = events[ type ] ) ) {
				handlers = events[ type ] = [];
				handlers.delegateCount = 0;

				// Only use addEventListener if the special events handler returns false
				if ( !special.setup ||
					special.setup.call( elem, data, namespaces, eventHandle ) === false ) {

					if ( elem.addEventListener ) {
						elem.addEventListener( type, eventHandle );
					}
				}
			}

			if ( special.add ) {
				special.add.call( elem, handleObj );

				if ( !handleObj.handler.guid ) {
					handleObj.handler.guid = handler.guid;
				}
			}

			// Add to the element's handler list, delegates in front
			if ( selector ) {
				handlers.splice( handlers.delegateCount++, 0, handleObj );
			} else {
				handlers.push( handleObj );
			}

			// Keep track of which events have ever been used, for event optimization
			jQuery.event.global[ type ] = true;
		}

	},

	// Detach an event or set of events from an element
	remove: function( elem, types, handler, selector, mappedTypes ) {

		var j, origCount, tmp,
			events, t, handleObj,
			special, handlers, type, namespaces, origType,
			elemData = dataPriv.hasData( elem ) && dataPriv.get( elem );

		if ( !elemData || !( events = elemData.events ) ) {
			return;
		}

		// Once for each type.namespace in types; type may be omitted
		types = ( types || "" ).match( rnothtmlwhite ) || [ "" ];
		t = types.length;
		while ( t-- ) {
			tmp = rtypenamespace.exec( types[ t ] ) || [];
			type = origType = tmp[ 1 ];
			namespaces = ( tmp[ 2 ] || "" ).split( "." ).sort();

			// Unbind all events (on this namespace, if provided) for the element
			if ( !type ) {
				for ( type in events ) {
					jQuery.event.remove( elem, type + types[ t ], handler, selector, true );
				}
				continue;
			}

			special = jQuery.event.special[ type ] || {};
			type = ( selector ? special.delegateType : special.bindType ) || type;
			handlers = events[ type ] || [];
			tmp = tmp[ 2 ] &&
				new RegExp( "(^|\\.)" + namespaces.join( "\\.(?:.*\\.|)" ) + "(\\.|$)" );

			// Remove matching events
			origCount = j = handlers.length;
			while ( j-- ) {
				handleObj = handlers[ j ];

				if ( ( mappedTypes || origType === handleObj.origType ) &&
					( !handler || handler.guid === handleObj.guid ) &&
					( !tmp || tmp.test( handleObj.namespace ) ) &&
					( !selector || selector === handleObj.selector ||
						selector === "**" && handleObj.selector ) ) {
					handlers.splice( j, 1 );

					if ( handleObj.selector ) {
						handlers.delegateCount--;
					}
					if ( special.remove ) {
						special.remove.call( elem, handleObj );
					}
				}
			}

			// Remove generic event handler if we removed something and no more handlers exist
			// (avoids potential for endless recursion during removal of special event handlers)
			if ( origCount && !handlers.length ) {
				if ( !special.teardown ||
					special.teardown.call( elem, namespaces, elemData.handle ) === false ) {

					jQuery.removeEvent( elem, type, elemData.handle );
				}

				delete events[ type ];
			}
		}

		// Remove data and the expando if it's no longer used
		if ( jQuery.isEmptyObject( events ) ) {
			dataPriv.remove( elem, "handle events" );
		}
	},

	dispatch: function( nativeEvent ) {

		// Make a writable jQuery.Event from the native event object
		var event = jQuery.event.fix( nativeEvent );

		var i, j, ret, matched, handleObj, handlerQueue,
			args = new Array( arguments.length ),
			handlers = ( dataPriv.get( this, "events" ) || {} )[ event.type ] || [],
			special = jQuery.event.special[ event.type ] || {};

		// Use the fix-ed jQuery.Event rather than the (read-only) native event
		args[ 0 ] = event;

		for ( i = 1; i < arguments.length; i++ ) {
			args[ i ] = arguments[ i ];
		}

		event.delegateTarget = this;

		// Call the preDispatch hook for the mapped type, and let it bail if desired
		if ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {
			return;
		}

		// Determine handlers
		handlerQueue = jQuery.event.handlers.call( this, event, handlers );

		// Run delegates first; they may want to stop propagation beneath us
		i = 0;
		while ( ( matched = handlerQueue[ i++ ] ) && !event.isPropagationStopped() ) {
			event.currentTarget = matched.elem;

			j = 0;
			while ( ( handleObj = matched.handlers[ j++ ] ) &&
				!event.isImmediatePropagationStopped() ) {

				// If the event is namespaced, then each handler is only invoked if it is
				// specially universal or its namespaces are a superset of the event's.
				if ( !event.rnamespace || handleObj.namespace === false ||
					event.rnamespace.test( handleObj.namespace ) ) {

					event.handleObj = handleObj;
					event.data = handleObj.data;

					ret = ( ( jQuery.event.special[ handleObj.origType ] || {} ).handle ||
						handleObj.handler ).apply( matched.elem, args );

					if ( ret !== undefined ) {
						if ( ( event.result = ret ) === false ) {
							event.preventDefault();
							event.stopPropagation();
						}
					}
				}
			}
		}

		// Call the postDispatch hook for the mapped type
		if ( special.postDispatch ) {
			special.postDispatch.call( this, event );
		}

		return event.result;
	},

	handlers: function( event, handlers ) {
		var i, handleObj, sel, matchedHandlers, matchedSelectors,
			handlerQueue = [],
			delegateCount = handlers.delegateCount,
			cur = event.target;

		// Find delegate handlers
		if ( delegateCount &&

			// Support: IE <=9
			// Black-hole SVG <use> instance trees (trac-13180)
			cur.nodeType &&

			// Support: Firefox <=42
			// Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)
			// https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click
			// Support: IE 11 only
			// ...but not arrow key "clicks" of radio inputs, which can have `button` -1 (gh-2343)
			!( event.type === "click" && event.button >= 1 ) ) {

			for ( ; cur !== this; cur = cur.parentNode || this ) {

				// Don't check non-elements (#13208)
				// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)
				if ( cur.nodeType === 1 && !( event.type === "click" && cur.disabled === true ) ) {
					matchedHandlers = [];
					matchedSelectors = {};
					for ( i = 0; i < delegateCount; i++ ) {
						handleObj = handlers[ i ];

						// Don't conflict with Object.prototype properties (#13203)
						sel = handleObj.selector + " ";

						if ( matchedSelectors[ sel ] === undefined ) {
							matchedSelectors[ sel ] = handleObj.needsContext ?
								jQuery( sel, this ).index( cur ) > -1 :
								jQuery.find( sel, this, null, [ cur ] ).length;
						}
						if ( matchedSelectors[ sel ] ) {
							matchedHandlers.push( handleObj );
						}
					}
					if ( matchedHandlers.length ) {
						handlerQueue.push( { elem: cur, handlers: matchedHandlers } );
					}
				}
			}
		}

		// Add the remaining (directly-bound) handlers
		cur = this;
		if ( delegateCount < handlers.length ) {
			handlerQueue.push( { elem: cur, handlers: handlers.slice( delegateCount ) } );
		}

		return handlerQueue;
	},

	addProp: function( name, hook ) {
		Object.defineProperty( jQuery.Event.prototype, name, {
			enumerable: true,
			configurable: true,

			get: isFunction( hook ) ?
				function() {
					if ( this.originalEvent ) {
							return hook( this.originalEvent );
					}
				} :
				function() {
					if ( this.originalEvent ) {
							return this.originalEvent[ name ];
					}
				},

			set: function( value ) {
				Object.defineProperty( this, name, {
					enumerable: true,
					configurable: true,
					writable: true,
					value: value
				} );
			}
		} );
	},

	fix: function( originalEvent ) {
		return originalEvent[ jQuery.expando ] ?
			originalEvent :
			new jQuery.Event( originalEvent );
	},

	special: {
		load: {

			// Prevent triggered image.load events from bubbling to window.load
			noBubble: true
		},
		click: {

			// Utilize native event to ensure correct state for checkable inputs
			setup: function( data ) {

				// For mutual compressibility with _default, replace `this` access with a local var.
				// `|| data` is dead code meant only to preserve the variable through minification.
				var el = this || data;

				// Claim the first handler
				if ( rcheckableType.test( el.type ) &&
					el.click && nodeName( el, "input" ) ) {

					// dataPriv.set( el, "click", ... )
					leverageNative( el, "click", returnTrue );
				}

				// Return false to allow normal processing in the caller
				return false;
			},
			trigger: function( data ) {

				// For mutual compressibility with _default, replace `this` access with a local var.
				// `|| data` is dead code meant only to preserve the variable through minification.
				var el = this || data;

				// Force setup before triggering a click
				if ( rcheckableType.test( el.type ) &&
					el.click && nodeName( el, "input" ) ) {

					leverageNative( el, "click" );
				}

				// Return non-false to allow normal event-path propagation
				return true;
			},

			// For cross-browser consistency, suppress native .click() on links
			// Also prevent it if we're currently inside a leveraged native-event stack
			_default: function( event ) {
				var target = event.target;
				return rcheckableType.test( target.type ) &&
					target.click && nodeName( target, "input" ) &&
					dataPriv.get( target, "click" ) ||
					nodeName( target, "a" );
			}
		},

		beforeunload: {
			postDispatch: function( event ) {

				// Support: Firefox 20+
				// Firefox doesn't alert if the returnValue field is not set.
				if ( event.result !== undefined && event.originalEvent ) {
					event.originalEvent.returnValue = event.result;
				}
			}
		}
	}
};

// Ensure the presence of an event listener that handles manually-triggered
// synthetic events by interrupting progress until reinvoked in response to
// *native* events that it fires directly, ensuring that state changes have
// already occurred before other listeners are invoked.
function leverageNative( el, type, expectSync ) {

	// Missing expectSync indicates a trigger call, which must force setup through jQuery.event.add
	if ( !expectSync ) {
		if ( dataPriv.get( el, type ) === undefined ) {
			jQuery.event.add( el, type, returnTrue );
		}
		return;
	}

	// Register the controller as a special universal handler for all event namespaces
	dataPriv.set( el, type, false );
	jQuery.event.add( el, type, {
		namespace: false,
		handler: function( event ) {
			var notAsync, result,
				saved = dataPriv.get( this, type );

			if ( ( event.isTrigger & 1 ) && this[ type ] ) {

				// Interrupt processing of the outer synthetic .trigger()ed event
				// Saved data should be false in such cases, but might be a leftover capture object
				// from an async native handler (gh-4350)
				if ( !saved.length ) {

					// Store arguments for use when handling the inner native event
					// There will always be at least one argument (an event object), so this array
					// will not be confused with a leftover capture object.
					saved = slice.call( arguments );
					dataPriv.set( this, type, saved );

					// Trigger the native event and capture its result
					// Support: IE <=9 - 11+
					// focus() and blur() are asynchronous
					notAsync = expectSync( this, type );
					this[ type ]();
					result = dataPriv.get( this, type );
					if ( saved !== result || notAsync ) {
						dataPriv.set( this, type, false );
					} else {
						result = {};
					}
					if ( saved !== result ) {

						// Cancel the outer synthetic event
						event.stopImmediatePropagation();
						event.preventDefault();
						return result.value;
					}

				// If this is an inner synthetic event for an event with a bubbling surrogate
				// (focus or blur), assume that the surrogate already propagated from triggering the
				// native event and prevent that from happening again here.
				// This technically gets the ordering wrong w.r.t. to `.trigger()` (in which the
				// bubbling surrogate propagates *after* the non-bubbling base), but that seems
				// less bad than duplication.
				} else if ( ( jQuery.event.special[ type ] || {} ).delegateType ) {
					event.stopPropagation();
				}

			// If this is a native event triggered above, everything is now in order
			// Fire an inner synthetic event with the original arguments
			} else if ( saved.length ) {

				// ...and capture the result
				dataPriv.set( this, type, {
					value: jQuery.event.trigger(

						// Support: IE <=9 - 11+
						// Extend with the prototype to reset the above stopImmediatePropagation()
						jQuery.extend( saved[ 0 ], jQuery.Event.prototype ),
						saved.slice( 1 ),
						this
					)
				} );

				// Abort handling of the native event
				event.stopImmediatePropagation();
			}
		}
	} );
}

jQuery.removeEvent = function( elem, type, handle ) {

	// This "if" is needed for plain objects
	if ( elem.removeEventListener ) {
		elem.removeEventListener( type, handle );
	}
};

jQuery.Event = function( src, props ) {

	// Allow instantiation without the 'new' keyword
	if ( !( this instanceof jQuery.Event ) ) {
		return new jQuery.Event( src, props );
	}

	// Event object
	if ( src && src.type ) {
		this.originalEvent = src;
		this.type = src.type;

		// Events bubbling up the document may have been marked as prevented
		// by a handler lower down the tree; reflect the correct value.
		this.isDefaultPrevented = src.defaultPrevented ||
				src.defaultPrevented === undefined &&

				// Support: Android <=2.3 only
				src.returnValue === false ?
			returnTrue :
			returnFalse;

		// Create target properties
		// Support: Safari <=6 - 7 only
		// Target should not be a text node (#504, #13143)
		this.target = ( src.target && src.target.nodeType === 3 ) ?
			src.target.parentNode :
			src.target;

		this.currentTarget = src.currentTarget;
		this.relatedTarget = src.relatedTarget;

	// Event type
	} else {
		this.type = src;
	}

	// Put explicitly provided properties onto the event object
	if ( props ) {
		jQuery.extend( this, props );
	}

	// Create a timestamp if incoming event doesn't have one
	this.timeStamp = src && src.timeStamp || Date.now();

	// Mark it as fixed
	this[ jQuery.expando ] = true;
};

// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding
// https://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html
jQuery.Event.prototype = {
	constructor: jQuery.Event,
	isDefaultPrevented: returnFalse,
	isPropagationStopped: returnFalse,
	isImmediatePropagationStopped: returnFalse,
	isSimulated: false,

	preventDefault: function() {
		var e = this.originalEvent;

		this.isDefaultPrevented = returnTrue;

		if ( e && !this.isSimulated ) {
			e.preventDefault();
		}
	},
	stopPropagation: function() {
		var e = this.originalEvent;

		this.isPropagationStopped = returnTrue;

		if ( e && !this.isSimulated ) {
			e.stopPropagation();
		}
	},
	stopImmediatePropagation: function() {
		var e = this.originalEvent;

		this.isImmediatePropagationStopped = returnTrue;

		if ( e && !this.isSimulated ) {
			e.stopImmediatePropagation();
		}

		this.stopPropagation();
	}
};

// Includes all common event props including KeyEvent and MouseEvent specific props
jQuery.each( {
	altKey: true,
	bubbles: true,
	cancelable: true,
	changedTouches: true,
	ctrlKey: true,
	detail: true,
	eventPhase: true,
	metaKey: true,
	pageX: true,
	pageY: true,
	shiftKey: true,
	view: true,
	"char": true,
	code: true,
	charCode: true,
	key: true,
	keyCode: true,
	button: true,
	buttons: true,
	clientX: true,
	clientY: true,
	offsetX: true,
	offsetY: true,
	pointerId: true,
	pointerType: true,
	screenX: true,
	screenY: true,
	targetTouches: true,
	toElement: true,
	touches: true,

	which: function( event ) {
		var button = event.button;

		// Add which for key events
		if ( event.which == null && rkeyEvent.test( event.type ) ) {
			return event.charCode != null ? event.charCode : event.keyCode;
		}

		// Add which for click: 1 === left; 2 === middle; 3 === right
		if ( !event.which && button !== undefined && rmouseEvent.test( event.type ) ) {
			if ( button & 1 ) {
				return 1;
			}

			if ( button & 2 ) {
				return 3;
			}

			if ( button & 4 ) {
				return 2;
			}

			return 0;
		}

		return event.which;
	}
}, jQuery.event.addProp );

jQuery.each( { focus: "focusin", blur: "focusout" }, function( type, delegateType ) {
	jQuery.event.special[ type ] = {

		// Utilize native event if possible so blur/focus sequence is correct
		setup: function() {

			// Claim the first handler
			// dataPriv.set( this, "focus", ... )
			// dataPriv.set( this, "blur", ... )
			leverageNative( this, type, expectSync );

			// Return false to allow normal processing in the caller
			return false;
		},
		trigger: function() {

			// Force setup before trigger
			leverageNative( this, type );

			// Return non-false to allow normal event-path propagation
			return true;
		},

		delegateType: delegateType
	};
} );

// Create mouseenter/leave events using mouseover/out and event-time checks
// so that event delegation works in jQuery.
// Do the same for pointerenter/pointerleave and pointerover/pointerout
//
// Support: Safari 7 only
// Safari sends mouseenter too often; see:
// https://bugs.chromium.org/p/chromium/issues/detail?id=470258
// for the description of the bug (it existed in older Chrome versions as well).
jQuery.each( {
	mouseenter: "mouseover",
	mouseleave: "mouseout",
	pointerenter: "pointerover",
	pointerleave: "pointerout"
}, function( orig, fix ) {
	jQuery.event.special[ orig ] = {
		delegateType: fix,
		bindType: fix,

		handle: function( event ) {
			var ret,
				target = this,
				related = event.relatedTarget,
				handleObj = event.handleObj;

			// For mouseenter/leave call the handler if related is outside the target.
			// NB: No relatedTarget if the mouse left/entered the browser window
			if ( !related || ( related !== target && !jQuery.contains( target, related ) ) ) {
				event.type = handleObj.origType;
				ret = handleObj.handler.apply( this, arguments );
				event.type = fix;
			}
			return ret;
		}
	};
} );

jQuery.fn.extend( {

	on: function( types, selector, data, fn ) {
		return on( this, types, selector, data, fn );
	},
	one: function( types, selector, data, fn ) {
		return on( this, types, selector, data, fn, 1 );
	},
	off: function( types, selector, fn ) {
		var handleObj, type;
		if ( types && types.preventDefault && types.handleObj ) {

			// ( event )  dispatched jQuery.Event
			handleObj = types.handleObj;
			jQuery( types.delegateTarget ).off(
				handleObj.namespace ?
					handleObj.origType + "." + handleObj.namespace :
					handleObj.origType,
				handleObj.selector,
				handleObj.handler
			);
			return this;
		}
		if ( typeof types === "object" ) {

			// ( types-object [, selector] )
			for ( type in types ) {
				this.off( type, selector, types[ type ] );
			}
			return this;
		}
		if ( selector === false || typeof selector === "function" ) {

			// ( types [, fn] )
			fn = selector;
			selector = undefined;
		}
		if ( fn === false ) {
			fn = returnFalse;
		}
		return this.each( function() {
			jQuery.event.remove( this, types, fn, selector );
		} );
	}
} );


var

	/* eslint-disable max-len */

	// See https://github.com/eslint/eslint/issues/3229
	rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\/\0>\x20\t\r\n\f]*)[^>]*)\/>/gi,

	/* eslint-enable */

	// Support: IE <=10 - 11, Edge 12 - 13 only
	// In IE/Edge using regex groups here causes severe slowdowns.
	// See https://connect.microsoft.com/IE/feedback/details/1736512/
	rnoInnerhtml = /<script|<style|<link/i,

	// checked="checked" or checked
	rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i,
	rcleanScript = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;

// Prefer a tbody over its parent table for containing new rows
function manipulationTarget( elem, content ) {
	if ( nodeName( elem, "table" ) &&
		nodeName( content.nodeType !== 11 ? content : content.firstChild, "tr" ) ) {

		return jQuery( elem ).children( "tbody" )[ 0 ] || elem;
	}

	return elem;
}

// Replace/restore the type attribute of script elements for safe DOM manipulation
function disableScript( elem ) {
	elem.type = ( elem.getAttribute( "type" ) !== null ) + "/" + elem.type;
	return elem;
}
function restoreScript( elem ) {
	if ( ( elem.type || "" ).slice( 0, 5 ) === "true/" ) {
		elem.type = elem.type.slice( 5 );
	} else {
		elem.removeAttribute( "type" );
	}

	return elem;
}

function cloneCopyEvent( src, dest ) {
	var i, l, type, pdataOld, pdataCur, udataOld, udataCur, events;

	if ( dest.nodeType !== 1 ) {
		return;
	}

	// 1. Copy private data: events, handlers, etc.
	if ( dataPriv.hasData( src ) ) {
		pdataOld = dataPriv.access( src );
		pdataCur = dataPriv.set( dest, pdataOld );
		events = pdataOld.events;

		if ( events ) {
			delete pdataCur.handle;
			pdataCur.events = {};

			for ( type in events ) {
				for ( i = 0, l = events[ type ].length; i < l; i++ ) {
					jQuery.event.add( dest, type, events[ type ][ i ] );
				}
			}
		}
	}

	// 2. Copy user data
	if ( dataUser.hasData( src ) ) {
		udataOld = dataUser.access( src );
		udataCur = jQuery.extend( {}, udataOld );

		dataUser.set( dest, udataCur );
	}
}

// Fix IE bugs, see support tests
function fixInput( src, dest ) {
	var nodeName = dest.nodeName.toLowerCase();

	// Fails to persist the checked state of a cloned checkbox or radio button.
	if ( nodeName === "input" && rcheckableType.test( src.type ) ) {
		dest.checked = src.checked;

	// Fails to return the selected option to the default selected state when cloning options
	} else if ( nodeName === "input" || nodeName === "textarea" ) {
		dest.defaultValue = src.defaultValue;
	}
}

function domManip( collection, args, callback, ignored ) {

	// Flatten any nested arrays
	args = concat.apply( [], args );

	var fragment, first, scripts, hasScripts, node, doc,
		i = 0,
		l = collection.length,
		iNoClone = l - 1,
		value = args[ 0 ],
		valueIsFunction = isFunction( value );

	// We can't cloneNode fragments that contain checked, in WebKit
	if ( valueIsFunction ||
			( l > 1 && typeof value === "string" &&
				!support.checkClone && rchecked.test( value ) ) ) {
		return collection.each( function( index ) {
			var self = collection.eq( index );
			if ( valueIsFunction ) {
				args[ 0 ] = value.call( this, index, self.html() );
			}
			domManip( self, args, callback, ignored );
		} );
	}

	if ( l ) {
		fragment = buildFragment( args, collection[ 0 ].ownerDocument, false, collection, ignored );
		first = fragment.firstChild;

		if ( fragment.childNodes.length === 1 ) {
			fragment = first;
		}

		// Require either new content or an interest in ignored elements to invoke the callback
		if ( first || ignored ) {
			scripts = jQuery.map( getAll( fragment, "script" ), disableScript );
			hasScripts = scripts.length;

			// Use the original fragment for the last item
			// instead of the first because it can end up
			// being emptied incorrectly in certain situations (#8070).
			for ( ; i < l; i++ ) {
				node = fragment;

				if ( i !== iNoClone ) {
					node = jQuery.clone( node, true, true );

					// Keep references to cloned scripts for later restoration
					if ( hasScripts ) {

						// Support: Android <=4.0 only, PhantomJS 1 only
						// push.apply(_, arraylike) throws on ancient WebKit
						jQuery.merge( scripts, getAll( node, "script" ) );
					}
				}

				callback.call( collection[ i ], node, i );
			}

			if ( hasScripts ) {
				doc = scripts[ scripts.length - 1 ].ownerDocument;

				// Reenable scripts
				jQuery.map( scripts, restoreScript );

				// Evaluate executable scripts on first document insertion
				for ( i = 0; i < hasScripts; i++ ) {
					node = scripts[ i ];
					if ( rscriptType.test( node.type || "" ) &&
						!dataPriv.access( node, "globalEval" ) &&
						jQuery.contains( doc, node ) ) {

						if ( node.src && ( node.type || "" ).toLowerCase()  !== "module" ) {

							// Optional AJAX dependency, but won't run scripts if not present
							if ( jQuery._evalUrl && !node.noModule ) {
								jQuery._evalUrl( node.src, {
									nonce: node.nonce || node.getAttribute( "nonce" )
								} );
							}
						} else {
							DOMEval( node.textContent.replace( rcleanScript, "" ), node, doc );
						}
					}
				}
			}
		}
	}

	return collection;
}

function remove( elem, selector, keepData ) {
	var node,
		nodes = selector ? jQuery.filter( selector, elem ) : elem,
		i = 0;

	for ( ; ( node = nodes[ i ] ) != null; i++ ) {
		if ( !keepData && node.nodeType === 1 ) {
			jQuery.cleanData( getAll( node ) );
		}

		if ( node.parentNode ) {
			if ( keepData && isAttached( node ) ) {
				setGlobalEval( getAll( node, "script" ) );
			}
			node.parentNode.removeChild( node );
		}
	}

	return elem;
}

jQuery.extend( {
	htmlPrefilter: function( html ) {
		return html.replace( rxhtmlTag, "<$1></$2>" );
	},

	clone: function( elem, dataAndEvents, deepDataAndEvents ) {
		var i, l, srcElements, destElements,
			clone = elem.cloneNode( true ),
			inPage = isAttached( elem );

		// Fix IE cloning issues
		if ( !support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) &&
				!jQuery.isXMLDoc( elem ) ) {

			// We eschew Sizzle here for performance reasons: https://jsperf.com/getall-vs-sizzle/2
			destElements = getAll( clone );
			srcElements = getAll( elem );

			for ( i = 0, l = srcElements.length; i < l; i++ ) {
				fixInput( srcElements[ i ], destElements[ i ] );
			}
		}

		// Copy the events from the original to the clone
		if ( dataAndEvents ) {
			if ( deepDataAndEvents ) {
				srcElements = srcElements || getAll( elem );
				destElements = destElements || getAll( clone );

				for ( i = 0, l = srcElements.length; i < l; i++ ) {
					cloneCopyEvent( srcElements[ i ], destElements[ i ] );
				}
			} else {
				cloneCopyEvent( elem, clone );
			}
		}

		// Preserve script evaluation history
		destElements = getAll( clone, "script" );
		if ( destElements.length > 0 ) {
			setGlobalEval( destElements, !inPage && getAll( elem, "script" ) );
		}

		// Return the cloned set
		return clone;
	},

	cleanData: function( elems ) {
		var data, elem, type,
			special = jQuery.event.special,
			i = 0;

		for ( ; ( elem = elems[ i ] ) !== undefined; i++ ) {
			if ( acceptData( elem ) ) {
				if ( ( data = elem[ dataPriv.expando ] ) ) {
					if ( data.events ) {
						for ( type in data.events ) {
							if ( special[ type ] ) {
								jQuery.event.remove( elem, type );

							// This is a shortcut to avoid jQuery.event.remove's overhead
							} else {
								jQuery.removeEvent( elem, type, data.handle );
							}
						}
					}

					// Support: Chrome <=35 - 45+
					// Assign undefined instead of using delete, see Data#remove
					elem[ dataPriv.expando ] = undefined;
				}
				if ( elem[ dataUser.expando ] ) {

					// Support: Chrome <=35 - 45+
					// Assign undefined instead of using delete, see Data#remove
					elem[ dataUser.expando ] = undefined;
				}
			}
		}
	}
} );

jQuery.fn.extend( {
	detach: function( selector ) {
		return remove( this, selector, true );
	},

	remove: function( selector ) {
		return remove( this, selector );
	},

	text: function( value ) {
		return access( this, function( value ) {
			return value === undefined ?
				jQuery.text( this ) :
				this.empty().each( function() {
					if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
						this.textContent = value;
					}
				} );
		}, null, value, arguments.length );
	},

	append: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
				var target = manipulationTarget( this, elem );
				target.appendChild( elem );
			}
		} );
	},

	prepend: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
				var target = manipulationTarget( this, elem );
				target.insertBefore( elem, target.firstChild );
			}
		} );
	},

	before: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.parentNode ) {
				this.parentNode.insertBefore( elem, this );
			}
		} );
	},

	after: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.parentNode ) {
				this.parentNode.insertBefore( elem, this.nextSibling );
			}
		} );
	},

	empty: function() {
		var elem,
			i = 0;

		for ( ; ( elem = this[ i ] ) != null; i++ ) {
			if ( elem.nodeType === 1 ) {

				// Prevent memory leaks
				jQuery.cleanData( getAll( elem, false ) );

				// Remove any remaining nodes
				elem.textContent = "";
			}
		}

		return this;
	},

	clone: function( dataAndEvents, deepDataAndEvents ) {
		dataAndEvents = dataAndEvents == null ? false : dataAndEvents;
		deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;

		return this.map( function() {
			return jQuery.clone( this, dataAndEvents, deepDataAndEvents );
		} );
	},

	html: function( value ) {
		return access( this, function( value ) {
			var elem = this[ 0 ] || {},
				i = 0,
				l = this.length;

			if ( value === undefined && elem.nodeType === 1 ) {
				return elem.innerHTML;
			}

			// See if we can take a shortcut and just use innerHTML
			if ( typeof value === "string" && !rnoInnerhtml.test( value ) &&
				!wrapMap[ ( rtagName.exec( value ) || [ "", "" ] )[ 1 ].toLowerCase() ] ) {

				value = jQuery.htmlPrefilter( value );

				try {
					for ( ; i < l; i++ ) {
						elem = this[ i ] || {};

						// Remove element nodes and prevent memory leaks
						if ( elem.nodeType === 1 ) {
							jQuery.cleanData( getAll( elem, false ) );
							elem.innerHTML = value;
						}
					}

					elem = 0;

				// If using innerHTML throws an exception, use the fallback method
				} catch ( e ) {}
			}

			if ( elem ) {
				this.empty().append( value );
			}
		}, null, value, arguments.length );
	},

	replaceWith: function() {
		var ignored = [];

		// Make the changes, replacing each non-ignored context element with the new content
		return domManip( this, arguments, function( elem ) {
			var parent = this.parentNode;

			if ( jQuery.inArray( this, ignored ) < 0 ) {
				jQuery.cleanData( getAll( this ) );
				if ( parent ) {
					parent.replaceChild( elem, this );
				}
			}

		// Force callback invocation
		}, ignored );
	}
} );

jQuery.each( {
	appendTo: "append",
	prependTo: "prepend",
	insertBefore: "before",
	insertAfter: "after",
	replaceAll: "replaceWith"
}, function( name, original ) {
	jQuery.fn[ name ] = function( selector ) {
		var elems,
			ret = [],
			insert = jQuery( selector ),
			last = insert.length - 1,
			i = 0;

		for ( ; i <= last; i++ ) {
			elems = i === last ? this : this.clone( true );
			jQuery( insert[ i ] )[ original ]( elems );

			// Support: Android <=4.0 only, PhantomJS 1 only
			// .get() because push.apply(_, arraylike) throws on ancient WebKit
			push.apply( ret, elems.get() );
		}

		return this.pushStack( ret );
	};
} );
var rnumnonpx = new RegExp( "^(" + pnum + ")(?!px)[a-z%]+$", "i" );

var getStyles = function( elem ) {

		// Support: IE <=11 only, Firefox <=30 (#15098, #14150)
		// IE throws on elements created in popups
		// FF meanwhile throws on frame elements through "defaultView.getComputedStyle"
		var view = elem.ownerDocument.defaultView;

		if ( !view || !view.opener ) {
			view = window;
		}

		return view.getComputedStyle( elem );
	};

var rboxStyle = new RegExp( cssExpand.join( "|" ), "i" );



( function() {

	// Executing both pixelPosition & boxSizingReliable tests require only one layout
	// so they're executed at the same time to save the second computation.
	function computeStyleTests() {

		// This is a singleton, we need to execute it only once
		if ( !div ) {
			return;
		}

		container.style.cssText = "position:absolute;left:-11111px;width:60px;" +
			"margin-top:1px;padding:0;border:0";
		div.style.cssText =
			"position:relative;display:block;box-sizing:border-box;overflow:scroll;" +
			"margin:auto;border:1px;padding:1px;" +
			"width:60%;top:1%";
		documentElement.appendChild( container ).appendChild( div );

		var divStyle = window.getComputedStyle( div );
		pixelPositionVal = divStyle.top !== "1%";

		// Support: Android 4.0 - 4.3 only, Firefox <=3 - 44
		reliableMarginLeftVal = roundPixelMeasures( divStyle.marginLeft ) === 12;

		// Support: Android 4.0 - 4.3 only, Safari <=9.1 - 10.1, iOS <=7.0 - 9.3
		// Some styles come back with percentage values, even though they shouldn't
		div.style.right = "60%";
		pixelBoxStylesVal = roundPixelMeasures( divStyle.right ) === 36;

		// Support: IE 9 - 11 only
		// Detect misreporting of content dimensions for box-sizing:border-box elements
		boxSizingReliableVal = roundPixelMeasures( divStyle.width ) === 36;

		// Support: IE 9 only
		// Detect overflow:scroll screwiness (gh-3699)
		// Support: Chrome <=64
		// Don't get tricked when zoom affects offsetWidth (gh-4029)
		div.style.position = "absolute";
		scrollboxSizeVal = roundPixelMeasures( div.offsetWidth / 3 ) === 12;

		documentElement.removeChild( container );

		// Nullify the div so it wouldn't be stored in the memory and
		// it will also be a sign that checks already performed
		div = null;
	}

	function roundPixelMeasures( measure ) {
		return Math.round( parseFloat( measure ) );
	}

	var pixelPositionVal, boxSizingReliableVal, scrollboxSizeVal, pixelBoxStylesVal,
		reliableMarginLeftVal,
		container = document.createElement( "div" ),
		div = document.createElement( "div" );

	// Finish early in limited (non-browser) environments
	if ( !div.style ) {
		return;
	}

	// Support: IE <=9 - 11 only
	// Style of cloned element affects source element cloned (#8908)
	div.style.backgroundClip = "content-box";
	div.cloneNode( true ).style.backgroundClip = "";
	support.clearCloneStyle = div.style.backgroundClip === "content-box";

	jQuery.extend( support, {
		boxSizingReliable: function() {
			computeStyleTests();
			return boxSizingReliableVal;
		},
		pixelBoxStyles: function() {
			computeStyleTests();
			return pixelBoxStylesVal;
		},
		pixelPosition: function() {
			computeStyleTests();
			return pixelPositionVal;
		},
		reliableMarginLeft: function() {
			computeStyleTests();
			return reliableMarginLeftVal;
		},
		scrollboxSize: function() {
			computeStyleTests();
			return scrollboxSizeVal;
		}
	} );
} )();


function curCSS( elem, name, computed ) {
	var width, minWidth, maxWidth, ret,

		// Support: Firefox 51+
		// Retrieving style before computed somehow
		// fixes an issue with getting wrong values
		// on detached elements
		style = elem.style;

	computed = computed || getStyles( elem );

	// getPropertyValue is needed for:
	//   .css('filter') (IE 9 only, #12537)
	//   .css('--customProperty) (#3144)
	if ( computed ) {
		ret = computed.getPropertyValue( name ) || computed[ name ];

		if ( ret === "" && !isAttached( elem ) ) {
			ret = jQuery.style( elem, name );
		}

		// A tribute to the "awesome hack by Dean Edwards"
		// Android Browser returns percentage for some values,
		// but width seems to be reliably pixels.
		// This is against the CSSOM draft spec:
		// https://drafts.csswg.org/cssom/#resolved-values
		if ( !support.pixelBoxStyles() && rnumnonpx.test( ret ) && rboxStyle.test( name ) ) {

			// Remember the original values
			width = style.width;
			minWidth = style.minWidth;
			maxWidth = style.maxWidth;

			// Put in the new values to get a computed value out
			style.minWidth = style.maxWidth = style.width = ret;
			ret = computed.width;

			// Revert the changed values
			style.width = width;
			style.minWidth = minWidth;
			style.maxWidth = maxWidth;
		}
	}

	return ret !== undefined ?

		// Support: IE <=9 - 11 only
		// IE returns zIndex value as an integer.
		ret + "" :
		ret;
}


function addGetHookIf( conditionFn, hookFn ) {

	// Define the hook, we'll check on the first run if it's really needed.
	return {
		get: function() {
			if ( conditionFn() ) {

				// Hook not needed (or it's not possible to use it due
				// to missing dependency), remove it.
				delete this.get;
				return;
			}

			// Hook needed; redefine it so that the support test is not executed again.
			return ( this.get = hookFn ).apply( this, arguments );
		}
	};
}


var cssPrefixes = [ "Webkit", "Moz", "ms" ],
	emptyStyle = document.createElement( "div" ).style,
	vendorProps = {};

// Return a vendor-prefixed property or undefined
function vendorPropName( name ) {

	// Check for vendor prefixed names
	var capName = name[ 0 ].toUpperCase() + name.slice( 1 ),
		i = cssPrefixes.length;

	while ( i-- ) {
		name = cssPrefixes[ i ] + capName;
		if ( name in emptyStyle ) {
			return name;
		}
	}
}

// Return a potentially-mapped jQuery.cssProps or vendor prefixed property
function finalPropName( name ) {
	var final = jQuery.cssProps[ name ] || vendorProps[ name ];

	if ( final ) {
		return final;
	}
	if ( name in emptyStyle ) {
		return name;
	}
	return vendorProps[ name ] = vendorPropName( name ) || name;
}


var

	// Swappable if display is none or starts with table
	// except "table", "table-cell", or "table-caption"
	// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display
	rdisplayswap = /^(none|table(?!-c[ea]).+)/,
	rcustomProp = /^--/,
	cssShow = { position: "absolute", visibility: "hidden", display: "block" },
	cssNormalTransform = {
		letterSpacing: "0",
		fontWeight: "400"
	};

function setPositiveNumber( elem, value, subtract ) {

	// Any relative (+/-) values have already been
	// normalized at this point
	var matches = rcssNum.exec( value );
	return matches ?

		// Guard against undefined "subtract", e.g., when used as in cssHooks
		Math.max( 0, matches[ 2 ] - ( subtract || 0 ) ) + ( matches[ 3 ] || "px" ) :
		value;
}

function boxModelAdjustment( elem, dimension, box, isBorderBox, styles, computedVal ) {
	var i = dimension === "width" ? 1 : 0,
		extra = 0,
		delta = 0;

	// Adjustment may not be necessary
	if ( box === ( isBorderBox ? "border" : "content" ) ) {
		return 0;
	}

	for ( ; i < 4; i += 2 ) {

		// Both box models exclude margin
		if ( box === "margin" ) {
			delta += jQuery.css( elem, box + cssExpand[ i ], true, styles );
		}

		// If we get here with a content-box, we're seeking "padding" or "border" or "margin"
		if ( !isBorderBox ) {

			// Add padding
			delta += jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );

			// For "border" or "margin", add border
			if ( box !== "padding" ) {
				delta += jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );

			// But still keep track of it otherwise
			} else {
				extra += jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
			}

		// If we get here with a border-box (content + padding + border), we're seeking "content" or
		// "padding" or "margin"
		} else {

			// For "content", subtract padding
			if ( box === "content" ) {
				delta -= jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );
			}

			// For "content" or "padding", subtract border
			if ( box !== "margin" ) {
				delta -= jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
			}
		}
	}

	// Account for positive content-box scroll gutter when requested by providing computedVal
	if ( !isBorderBox && computedVal >= 0 ) {

		// offsetWidth/offsetHeight is a rounded sum of content, padding, scroll gutter, and border
		// Assuming integer scroll gutter, subtract the rest and round down
		delta += Math.max( 0, Math.ceil(
			elem[ "offset" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -
			computedVal -
			delta -
			extra -
			0.5

		// If offsetWidth/offsetHeight is unknown, then we can't determine content-box scroll gutter
		// Use an explicit zero to avoid NaN (gh-3964)
		) ) || 0;
	}

	return delta;
}

function getWidthOrHeight( elem, dimension, extra ) {

	// Start with computed style
	var styles = getStyles( elem ),

		// To avoid forcing a reflow, only fetch boxSizing if we need it (gh-4322).
		// Fake content-box until we know it's needed to know the true value.
		boxSizingNeeded = !support.boxSizingReliable() || extra,
		isBorderBox = boxSizingNeeded &&
			jQuery.css( elem, "boxSizing", false, styles ) === "border-box",
		valueIsBorderBox = isBorderBox,

		val = curCSS( elem, dimension, styles ),
		offsetProp = "offset" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 );

	// Support: Firefox <=54
	// Return a confounding non-pixel value or feign ignorance, as appropriate.
	if ( rnumnonpx.test( val ) ) {
		if ( !extra ) {
			return val;
		}
		val = "auto";
	}


	// Fall back to offsetWidth/offsetHeight when value is "auto"
	// This happens for inline elements with no explicit setting (gh-3571)
	// Support: Android <=4.1 - 4.3 only
	// Also use offsetWidth/offsetHeight for misreported inline dimensions (gh-3602)
	// Support: IE 9-11 only
	// Also use offsetWidth/offsetHeight for when box sizing is unreliable
	// We use getClientRects() to check for hidden/disconnected.
	// In those cases, the computed value can be trusted to be border-box
	if ( ( !support.boxSizingReliable() && isBorderBox ||
		val === "auto" ||
		!parseFloat( val ) && jQuery.css( elem, "display", false, styles ) === "inline" ) &&
		elem.getClientRects().length ) {

		isBorderBox = jQuery.css( elem, "boxSizing", false, styles ) === "border-box";

		// Where available, offsetWidth/offsetHeight approximate border box dimensions.
		// Where not available (e.g., SVG), assume unreliable box-sizing and interpret the
		// retrieved value as a content box dimension.
		valueIsBorderBox = offsetProp in elem;
		if ( valueIsBorderBox ) {
			val = elem[ offsetProp ];
		}
	}

	// Normalize "" and auto
	val = parseFloat( val ) || 0;

	// Adjust for the element's box model
	return ( val +
		boxModelAdjustment(
			elem,
			dimension,
			extra || ( isBorderBox ? "border" : "content" ),
			valueIsBorderBox,
			styles,

			// Provide the current computed size to request scroll gutter calculation (gh-3589)
			val
		)
	) + "px";
}

jQuery.extend( {

	// Add in style property hooks for overriding the default
	// behavior of getting and setting a style property
	cssHooks: {
		opacity: {
			get: function( elem, computed ) {
				if ( computed ) {

					// We should always get a number back from opacity
					var ret = curCSS( elem, "opacity" );
					return ret === "" ? "1" : ret;
				}
			}
		}
	},

	// Don't automatically add "px" to these possibly-unitless properties
	cssNumber: {
		"animationIterationCount": true,
		"columnCount": true,
		"fillOpacity": true,
		"flexGrow": true,
		"flexShrink": true,
		"fontWeight": true,
		"gridArea": true,
		"gridColumn": true,
		"gridColumnEnd": true,
		"gridColumnStart": true,
		"gridRow": true,
		"gridRowEnd": true,
		"gridRowStart": true,
		"lineHeight": true,
		"opacity": true,
		"order": true,
		"orphans": true,
		"widows": true,
		"zIndex": true,
		"zoom": true
	},

	// Add in properties whose names you wish to fix before
	// setting or getting the value
	cssProps: {},

	// Get and set the style property on a DOM Node
	style: function( elem, name, value, extra ) {

		// Don't set styles on text and comment nodes
		if ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {
			return;
		}

		// Make sure that we're working with the right name
		var ret, type, hooks,
			origName = camelCase( name ),
			isCustomProp = rcustomProp.test( name ),
			style = elem.style;

		// Make sure that we're working with the right name. We don't
		// want to query the value if it is a CSS custom property
		// since they are user-defined.
		if ( !isCustomProp ) {
			name = finalPropName( origName );
		}

		// Gets hook for the prefixed version, then unprefixed version
		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

		// Check if we're setting a value
		if ( value !== undefined ) {
			type = typeof value;

			// Convert "+=" or "-=" to relative numbers (#7345)
			if ( type === "string" && ( ret = rcssNum.exec( value ) ) && ret[ 1 ] ) {
				value = adjustCSS( elem, name, ret );

				// Fixes bug #9237
				type = "number";
			}

			// Make sure that null and NaN values aren't set (#7116)
			if ( value == null || value !== value ) {
				return;
			}

			// If a number was passed in, add the unit (except for certain CSS properties)
			// The isCustomProp check can be removed in jQuery 4.0 when we only auto-append
			// "px" to a few hardcoded values.
			if ( type === "number" && !isCustomProp ) {
				value += ret && ret[ 3 ] || ( jQuery.cssNumber[ origName ] ? "" : "px" );
			}

			// background-* props affect original clone's values
			if ( !support.clearCloneStyle && value === "" && name.indexOf( "background" ) === 0 ) {
				style[ name ] = "inherit";
			}

			// If a hook was provided, use that value, otherwise just set the specified value
			if ( !hooks || !( "set" in hooks ) ||
				( value = hooks.set( elem, value, extra ) ) !== undefined ) {

				if ( isCustomProp ) {
					style.setProperty( name, value );
				} else {
					style[ name ] = value;
				}
			}

		} else {

			// If a hook was provided get the non-computed value from there
			if ( hooks && "get" in hooks &&
				( ret = hooks.get( elem, false, extra ) ) !== undefined ) {

				return ret;
			}

			// Otherwise just get the value from the style object
			return style[ name ];
		}
	},

	css: function( elem, name, extra, styles ) {
		var val, num, hooks,
			origName = camelCase( name ),
			isCustomProp = rcustomProp.test( name );

		// Make sure that we're working with the right name. We don't
		// want to modify the value if it is a CSS custom property
		// since they are user-defined.
		if ( !isCustomProp ) {
			name = finalPropName( origName );
		}

		// Try prefixed name followed by the unprefixed name
		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

		// If a hook was provided get the computed value from there
		if ( hooks && "get" in hooks ) {
			val = hooks.get( elem, true, extra );
		}

		// Otherwise, if a way to get the computed value exists, use that
		if ( val === undefined ) {
			val = curCSS( elem, name, styles );
		}

		// Convert "normal" to computed value
		if ( val === "normal" && name in cssNormalTransform ) {
			val = cssNormalTransform[ name ];
		}

		// Make numeric if forced or a qualifier was provided and val looks numeric
		if ( extra === "" || extra ) {
			num = parseFloat( val );
			return extra === true || isFinite( num ) ? num || 0 : val;
		}

		return val;
	}
} );

jQuery.each( [ "height", "width" ], function( i, dimension ) {
	jQuery.cssHooks[ dimension ] = {
		get: function( elem, computed, extra ) {
			if ( computed ) {

				// Certain elements can have dimension info if we invisibly show them
				// but it must have a current display style that would benefit
				return rdisplayswap.test( jQuery.css( elem, "display" ) ) &&

					// Support: Safari 8+
					// Table columns in Safari have non-zero offsetWidth & zero
					// getBoundingClientRect().width unless display is changed.
					// Support: IE <=11 only
					// Running getBoundingClientRect on a disconnected node
					// in IE throws an error.
					( !elem.getClientRects().length || !elem.getBoundingClientRect().width ) ?
						swap( elem, cssShow, function() {
							return getWidthOrHeight( elem, dimension, extra );
						} ) :
						getWidthOrHeight( elem, dimension, extra );
			}
		},

		set: function( elem, value, extra ) {
			var matches,
				styles = getStyles( elem ),

				// Only read styles.position if the test has a chance to fail
				// to avoid forcing a reflow.
				scrollboxSizeBuggy = !support.scrollboxSize() &&
					styles.position === "absolute",

				// To avoid forcing a reflow, only fetch boxSizing if we need it (gh-3991)
				boxSizingNeeded = scrollboxSizeBuggy || extra,
				isBorderBox = boxSizingNeeded &&
					jQuery.css( elem, "boxSizing", false, styles ) === "border-box",
				subtract = extra ?
					boxModelAdjustment(
						elem,
						dimension,
						extra,
						isBorderBox,
						styles
					) :
					0;

			// Account for unreliable border-box dimensions by comparing offset* to computed and
			// faking a content-box to get border and padding (gh-3699)
			if ( isBorderBox && scrollboxSizeBuggy ) {
				subtract -= Math.ceil(
					elem[ "offset" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -
					parseFloat( styles[ dimension ] ) -
					boxModelAdjustment( elem, dimension, "border", false, styles ) -
					0.5
				);
			}

			// Convert to pixels if value adjustment is needed
			if ( subtract && ( matches = rcssNum.exec( value ) ) &&
				( matches[ 3 ] || "px" ) !== "px" ) {

				elem.style[ dimension ] = value;
				value = jQuery.css( elem, dimension );
			}

			return setPositiveNumber( elem, value, subtract );
		}
	};
} );

jQuery.cssHooks.marginLeft = addGetHookIf( support.reliableMarginLeft,
	function( elem, computed ) {
		if ( computed ) {
			return ( parseFloat( curCSS( elem, "marginLeft" ) ) ||
				elem.getBoundingClientRect().left -
					swap( elem, { marginLeft: 0 }, function() {
						return elem.getBoundingClientRect().left;
					} )
				) + "px";
		}
	}
);

// These hooks are used by animate to expand properties
jQuery.each( {
	margin: "",
	padding: "",
	border: "Width"
}, function( prefix, suffix ) {
	jQuery.cssHooks[ prefix + suffix ] = {
		expand: function( value ) {
			var i = 0,
				expanded = {},

				// Assumes a single number if not a string
				parts = typeof value === "string" ? value.split( " " ) : [ value ];

			for ( ; i < 4; i++ ) {
				expanded[ prefix + cssExpand[ i ] + suffix ] =
					parts[ i ] || parts[ i - 2 ] || parts[ 0 ];
			}

			return expanded;
		}
	};

	if ( prefix !== "margin" ) {
		jQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;
	}
} );

jQuery.fn.extend( {
	css: function( name, value ) {
		return access( this, function( elem, name, value ) {
			var styles, len,
				map = {},
				i = 0;

			if ( Array.isArray( name ) ) {
				styles = getStyles( elem );
				len = name.length;

				for ( ; i < len; i++ ) {
					map[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );
				}

				return map;
			}

			return value !== undefined ?
				jQuery.style( elem, name, value ) :
				jQuery.css( elem, name );
		}, name, value, arguments.length > 1 );
	}
} );


function Tween( elem, options, prop, end, easing ) {
	return new Tween.prototype.init( elem, options, prop, end, easing );
}
jQuery.Tween = Tween;

Tween.prototype = {
	constructor: Tween,
	init: function( elem, options, prop, end, easing, unit ) {
		this.elem = elem;
		this.prop = prop;
		this.easing = easing || jQuery.easing._default;
		this.options = options;
		this.start = this.now = this.cur();
		this.end = end;
		this.unit = unit || ( jQuery.cssNumber[ prop ] ? "" : "px" );
	},
	cur: function() {
		var hooks = Tween.propHooks[ this.prop ];

		return hooks && hooks.get ?
			hooks.get( this ) :
			Tween.propHooks._default.get( this );
	},
	run: function( percent ) {
		var eased,
			hooks = Tween.propHooks[ this.prop ];

		if ( this.options.duration ) {
			this.pos = eased = jQuery.easing[ this.easing ](
				percent, this.options.duration * percent, 0, 1, this.options.duration
			);
		} else {
			this.pos = eased = percent;
		}
		this.now = ( this.end - this.start ) * eased + this.start;

		if ( this.options.step ) {
			this.options.step.call( this.elem, this.now, this );
		}

		if ( hooks && hooks.set ) {
			hooks.set( this );
		} else {
			Tween.propHooks._default.set( this );
		}
		return this;
	}
};

Tween.prototype.init.prototype = Tween.prototype;

Tween.propHooks = {
	_default: {
		get: function( tween ) {
			var result;

			// Use a property on the element directly when it is not a DOM element,
			// or when there is no matching style property that exists.
			if ( tween.elem.nodeType !== 1 ||
				tween.elem[ tween.prop ] != null && tween.elem.style[ tween.prop ] == null ) {
				return tween.elem[ tween.prop ];
			}

			// Passing an empty string as a 3rd parameter to .css will automatically
			// attempt a parseFloat and fallback to a string if the parse fails.
			// Simple values such as "10px" are parsed to Float;
			// complex values such as "rotate(1rad)" are returned as-is.
			result = jQuery.css( tween.elem, tween.prop, "" );

			// Empty strings, null, undefined and "auto" are converted to 0.
			return !result || result === "auto" ? 0 : result;
		},
		set: function( tween ) {

			// Use step hook for back compat.
			// Use cssHook if its there.
			// Use .style if available and use plain properties where available.
			if ( jQuery.fx.step[ tween.prop ] ) {
				jQuery.fx.step[ tween.prop ]( tween );
			} else if ( tween.elem.nodeType === 1 && (
					jQuery.cssHooks[ tween.prop ] ||
					tween.elem.style[ finalPropName( tween.prop ) ] != null ) ) {
				jQuery.style( tween.elem, tween.prop, tween.now + tween.unit );
			} else {
				tween.elem[ tween.prop ] = tween.now;
			}
		}
	}
};

// Support: IE <=9 only
// Panic based approach to setting things on disconnected nodes
Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {
	set: function( tween ) {
		if ( tween.elem.nodeType && tween.elem.parentNode ) {
			tween.elem[ tween.prop ] = tween.now;
		}
	}
};

jQuery.easing = {
	linear: function( p ) {
		return p;
	},
	swing: function( p ) {
		return 0.5 - Math.cos( p * Math.PI ) / 2;
	},
	_default: "swing"
};

jQuery.fx = Tween.prototype.init;

// Back compat <1.8 extension point
jQuery.fx.step = {};




var
	fxNow, inProgress,
	rfxtypes = /^(?:toggle|show|hide)$/,
	rrun = /queueHooks$/;

function schedule() {
	if ( inProgress ) {
		if ( document.hidden === false && window.requestAnimationFrame ) {
			window.requestAnimationFrame( schedule );
		} else {
			window.setTimeout( schedule, jQuery.fx.interval );
		}

		jQuery.fx.tick();
	}
}

// Animations created synchronously will run synchronously
function createFxNow() {
	window.setTimeout( function() {
		fxNow = undefined;
	} );
	return ( fxNow = Date.now() );
}

// Generate parameters to create a standard animation
function genFx( type, includeWidth ) {
	var which,
		i = 0,
		attrs = { height: type };

	// If we include width, step value is 1 to do all cssExpand values,
	// otherwise step value is 2 to skip over Left and Right
	includeWidth = includeWidth ? 1 : 0;
	for ( ; i < 4; i += 2 - includeWidth ) {
		which = cssExpand[ i ];
		attrs[ "margin" + which ] = attrs[ "padding" + which ] = type;
	}

	if ( includeWidth ) {
		attrs.opacity = attrs.width = type;
	}

	return attrs;
}

function createTween( value, prop, animation ) {
	var tween,
		collection = ( Animation.tweeners[ prop ] || [] ).concat( Animation.tweeners[ "*" ] ),
		index = 0,
		length = collection.length;
	for ( ; index < length; index++ ) {
		if ( ( tween = collection[ index ].call( animation, prop, value ) ) ) {

			// We're done with this property
			return tween;
		}
	}
}

function defaultPrefilter( elem, props, opts ) {
	var prop, value, toggle, hooks, oldfire, propTween, restoreDisplay, display,
		isBox = "width" in props || "height" in props,
		anim = this,
		orig = {},
		style = elem.style,
		hidden = elem.nodeType && isHiddenWithinTree( elem ),
		dataShow = dataPriv.get( elem, "fxshow" );

	// Queue-skipping animations hijack the fx hooks
	if ( !opts.queue ) {
		hooks = jQuery._queueHooks( elem, "fx" );
		if ( hooks.unqueued == null ) {
			hooks.unqueued = 0;
			oldfire = hooks.empty.fire;
			hooks.empty.fire = function() {
				if ( !hooks.unqueued ) {
					oldfire();
				}
			};
		}
		hooks.unqueued++;

		anim.always( function() {

			// Ensure the complete handler is called before this completes
			anim.always( function() {
				hooks.unqueued--;
				if ( !jQuery.queue( elem, "fx" ).length ) {
					hooks.empty.fire();
				}
			} );
		} );
	}

	// Detect show/hide animations
	for ( prop in props ) {
		value = props[ prop ];
		if ( rfxtypes.test( value ) ) {
			delete props[ prop ];
			toggle = toggle || value === "toggle";
			if ( value === ( hidden ? "hide" : "show" ) ) {

				// Pretend to be hidden if this is a "show" and
				// there is still data from a stopped show/hide
				if ( value === "show" && dataShow && dataShow[ prop ] !== undefined ) {
					hidden = true;

				// Ignore all other no-op show/hide data
				} else {
					continue;
				}
			}
			orig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );
		}
	}

	// Bail out if this is a no-op like .hide().hide()
	propTween = !jQuery.isEmptyObject( props );
	if ( !propTween && jQuery.isEmptyObject( orig ) ) {
		return;
	}

	// Restrict "overflow" and "display" styles during box animations
	if ( isBox && elem.nodeType === 1 ) {

		// Support: IE <=9 - 11, Edge 12 - 15
		// Record all 3 overflow attributes because IE does not infer the shorthand
		// from identically-valued overflowX and overflowY and Edge just mirrors
		// the overflowX value there.
		opts.overflow = [ style.overflow, style.overflowX, style.overflowY ];

		// Identify a display type, preferring old show/hide data over the CSS cascade
		restoreDisplay = dataShow && dataShow.display;
		if ( restoreDisplay == null ) {
			restoreDisplay = dataPriv.get( elem, "display" );
		}
		display = jQuery.css( elem, "display" );
		if ( display === "none" ) {
			if ( restoreDisplay ) {
				display = restoreDisplay;
			} else {

				// Get nonempty value(s) by temporarily forcing visibility
				showHide( [ elem ], true );
				restoreDisplay = elem.style.display || restoreDisplay;
				display = jQuery.css( elem, "display" );
				showHide( [ elem ] );
			}
		}

		// Animate inline elements as inline-block
		if ( display === "inline" || display === "inline-block" && restoreDisplay != null ) {
			if ( jQuery.css( elem, "float" ) === "none" ) {

				// Restore the original display value at the end of pure show/hide animations
				if ( !propTween ) {
					anim.done( function() {
						style.display = restoreDisplay;
					} );
					if ( restoreDisplay == null ) {
						display = style.display;
						restoreDisplay = display === "none" ? "" : display;
					}
				}
				style.display = "inline-block";
			}
		}
	}

	if ( opts.overflow ) {
		style.overflow = "hidden";
		anim.always( function() {
			style.overflow = opts.overflow[ 0 ];
			style.overflowX = opts.overflow[ 1 ];
			style.overflowY = opts.overflow[ 2 ];
		} );
	}

	// Implement show/hide animations
	propTween = false;
	for ( prop in orig ) {

		// General show/hide setup for this element animation
		if ( !propTween ) {
			if ( dataShow ) {
				if ( "hidden" in dataShow ) {
					hidden = dataShow.hidden;
				}
			} else {
				dataShow = dataPriv.access( elem, "fxshow", { display: restoreDisplay } );
			}

			// Store hidden/visible for toggle so `.stop().toggle()` "reverses"
			if ( toggle ) {
				dataShow.hidden = !hidden;
			}

			// Show elements before animating them
			if ( hidden ) {
				showHide( [ elem ], true );
			}

			/* eslint-disable no-loop-func */

			anim.done( function() {

			/* eslint-enable no-loop-func */

				// The final step of a "hide" animation is actually hiding the element
				if ( !hidden ) {
					showHide( [ elem ] );
				}
				dataPriv.remove( elem, "fxshow" );
				for ( prop in orig ) {
					jQuery.style( elem, prop, orig[ prop ] );
				}
			} );
		}

		// Per-property setup
		propTween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );
		if ( !( prop in dataShow ) ) {
			dataShow[ prop ] = propTween.start;
			if ( hidden ) {
				propTween.end = propTween.start;
				propTween.start = 0;
			}
		}
	}
}

function propFilter( props, specialEasing ) {
	var index, name, easing, value, hooks;

	// camelCase, specialEasing and expand cssHook pass
	for ( index in props ) {
		name = camelCase( index );
		easing = specialEasing[ name ];
		value = props[ index ];
		if ( Array.isArray( value ) ) {
			easing = value[ 1 ];
			value = props[ index ] = value[ 0 ];
		}

		if ( index !== name ) {
			props[ name ] = value;
			delete props[ index ];
		}

		hooks = jQuery.cssHooks[ name ];
		if ( hooks && "expand" in hooks ) {
			value = hooks.expand( value );
			delete props[ name ];

			// Not quite $.extend, this won't overwrite existing keys.
			// Reusing 'index' because we have the correct "name"
			for ( index in value ) {
				if ( !( index in props ) ) {
					props[ index ] = value[ index ];
					specialEasing[ index ] = easing;
				}
			}
		} else {
			specialEasing[ name ] = easing;
		}
	}
}

function Animation( elem, properties, options ) {
	var result,
		stopped,
		index = 0,
		length = Animation.prefilters.length,
		deferred = jQuery.Deferred().always( function() {

			// Don't match elem in the :animated selector
			delete tick.elem;
		} ),
		tick = function() {
			if ( stopped ) {
				return false;
			}
			var currentTime = fxNow || createFxNow(),
				remaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),

				// Support: Android 2.3 only
				// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)
				temp = remaining / animation.duration || 0,
				percent = 1 - temp,
				index = 0,
				length = animation.tweens.length;

			for ( ; index < length; index++ ) {
				animation.tweens[ index ].run( percent );
			}

			deferred.notifyWith( elem, [ animation, percent, remaining ] );

			// If there's more to do, yield
			if ( percent < 1 && length ) {
				return remaining;
			}

			// If this was an empty animation, synthesize a final progress notification
			if ( !length ) {
				deferred.notifyWith( elem, [ animation, 1, 0 ] );
			}

			// Resolve the animation and report its conclusion
			deferred.resolveWith( elem, [ animation ] );
			return false;
		},
		animation = deferred.promise( {
			elem: elem,
			props: jQuery.extend( {}, properties ),
			opts: jQuery.extend( true, {
				specialEasing: {},
				easing: jQuery.easing._default
			}, options ),
			originalProperties: properties,
			originalOptions: options,
			startTime: fxNow || createFxNow(),
			duration: options.duration,
			tweens: [],
			createTween: function( prop, end ) {
				var tween = jQuery.Tween( elem, animation.opts, prop, end,
						animation.opts.specialEasing[ prop ] || animation.opts.easing );
				animation.tweens.push( tween );
				return tween;
			},
			stop: function( gotoEnd ) {
				var index = 0,

					// If we are going to the end, we want to run all the tweens
					// otherwise we skip this part
					length = gotoEnd ? animation.tweens.length : 0;
				if ( stopped ) {
					return this;
				}
				stopped = true;
				for ( ; index < length; index++ ) {
					animation.tweens[ index ].run( 1 );
				}

				// Resolve when we played the last frame; otherwise, reject
				if ( gotoEnd ) {
					deferred.notifyWith( elem, [ animation, 1, 0 ] );
					deferred.resolveWith( elem, [ animation, gotoEnd ] );
				} else {
					deferred.rejectWith( elem, [ animation, gotoEnd ] );
				}
				return this;
			}
		} ),
		props = animation.props;

	propFilter( props, animation.opts.specialEasing );

	for ( ; index < length; index++ ) {
		result = Animation.prefilters[ index ].call( animation, elem, props, animation.opts );
		if ( result ) {
			if ( isFunction( result.stop ) ) {
				jQuery._queueHooks( animation.elem, animation.opts.queue ).stop =
					result.stop.bind( result );
			}
			return result;
		}
	}

	jQuery.map( props, createTween, animation );

	if ( isFunction( animation.opts.start ) ) {
		animation.opts.start.call( elem, animation );
	}

	// Attach callbacks from options
	animation
		.progress( animation.opts.progress )
		.done( animation.opts.done, animation.opts.complete )
		.fail( animation.opts.fail )
		.always( animation.opts.always );

	jQuery.fx.timer(
		jQuery.extend( tick, {
			elem: elem,
			anim: animation,
			queue: animation.opts.queue
		} )
	);

	return animation;
}

jQuery.Animation = jQuery.extend( Animation, {

	tweeners: {
		"*": [ function( prop, value ) {
			var tween = this.createTween( prop, value );
			adjustCSS( tween.elem, prop, rcssNum.exec( value ), tween );
			return tween;
		} ]
	},

	tweener: function( props, callback ) {
		if ( isFunction( props ) ) {
			callback = props;
			props = [ "*" ];
		} else {
			props = props.match( rnothtmlwhite );
		}

		var prop,
			index = 0,
			length = props.length;

		for ( ; index < length; index++ ) {
			prop = props[ index ];
			Animation.tweeners[ prop ] = Animation.tweeners[ prop ] || [];
			Animation.tweeners[ prop ].unshift( callback );
		}
	},

	prefilters: [ defaultPrefilter ],

	prefilter: function( callback, prepend ) {
		if ( prepend ) {
			Animation.prefilters.unshift( callback );
		} else {
			Animation.prefilters.push( callback );
		}
	}
} );

jQuery.speed = function( speed, easing, fn ) {
	var opt = speed && typeof speed === "object" ? jQuery.extend( {}, speed ) : {
		complete: fn || !fn && easing ||
			isFunction( speed ) && speed,
		duration: speed,
		easing: fn && easing || easing && !isFunction( easing ) && easing
	};

	// Go to the end state if fx are off
	if ( jQuery.fx.off ) {
		opt.duration = 0;

	} else {
		if ( typeof opt.duration !== "number" ) {
			if ( opt.duration in jQuery.fx.speeds ) {
				opt.duration = jQuery.fx.speeds[ opt.duration ];

			} else {
				opt.duration = jQuery.fx.speeds._default;
			}
		}
	}

	// Normalize opt.queue - true/undefined/null -> "fx"
	if ( opt.queue == null || opt.queue === true ) {
		opt.queue = "fx";
	}

	// Queueing
	opt.old = opt.complete;

	opt.complete = function() {
		if ( isFunction( opt.old ) ) {
			opt.old.call( this );
		}

		if ( opt.queue ) {
			jQuery.dequeue( this, opt.queue );
		}
	};

	return opt;
};

jQuery.fn.extend( {
	fadeTo: function( speed, to, easing, callback ) {

		// Show any hidden elements after setting opacity to 0
		return this.filter( isHiddenWithinTree ).css( "opacity", 0 ).show()

			// Animate to the value specified
			.end().animate( { opacity: to }, speed, easing, callback );
	},
	animate: function( prop, speed, easing, callback ) {
		var empty = jQuery.isEmptyObject( prop ),
			optall = jQuery.speed( speed, easing, callback ),
			doAnimation = function() {

				// Operate on a copy of prop so per-property easing won't be lost
				var anim = Animation( this, jQuery.extend( {}, prop ), optall );

				// Empty animations, or finishing resolves immediately
				if ( empty || dataPriv.get( this, "finish" ) ) {
					anim.stop( true );
				}
			};
			doAnimation.finish = doAnimation;

		return empty || optall.queue === false ?
			this.each( doAnimation ) :
			this.queue( optall.queue, doAnimation );
	},
	stop: function( type, clearQueue, gotoEnd ) {
		var stopQueue = function( hooks ) {
			var stop = hooks.stop;
			delete hooks.stop;
			stop( gotoEnd );
		};

		if ( typeof type !== "string" ) {
			gotoEnd = clearQueue;
			clearQueue = type;
			type = undefined;
		}
		if ( clearQueue && type !== false ) {
			this.queue( type || "fx", [] );
		}

		return this.each( function() {
			var dequeue = true,
				index = type != null && type + "queueHooks",
				timers = jQuery.timers,
				data = dataPriv.get( this );

			if ( index ) {
				if ( data[ index ] && data[ index ].stop ) {
					stopQueue( data[ index ] );
				}
			} else {
				for ( index in data ) {
					if ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {
						stopQueue( data[ index ] );
					}
				}
			}

			for ( index = timers.length; index--; ) {
				if ( timers[ index ].elem === this &&
					( type == null || timers[ index ].queue === type ) ) {

					timers[ index ].anim.stop( gotoEnd );
					dequeue = false;
					timers.splice( index, 1 );
				}
			}

			// Start the next in the queue if the last step wasn't forced.
			// Timers currently will call their complete callbacks, which
			// will dequeue but only if they were gotoEnd.
			if ( dequeue || !gotoEnd ) {
				jQuery.dequeue( this, type );
			}
		} );
	},
	finish: function( type ) {
		if ( type !== false ) {
			type = type || "fx";
		}
		return this.each( function() {
			var index,
				data = dataPriv.get( this ),
				queue = data[ type + "queue" ],
				hooks = data[ type + "queueHooks" ],
				timers = jQuery.timers,
				length = queue ? queue.length : 0;

			// Enable finishing flag on private data
			data.finish = true;

			// Empty the queue first
			jQuery.queue( this, type, [] );

			if ( hooks && hooks.stop ) {
				hooks.stop.call( this, true );
			}

			// Look for any active animations, and finish them
			for ( index = timers.length; index--; ) {
				if ( timers[ index ].elem === this && timers[ index ].queue === type ) {
					timers[ index ].anim.stop( true );
					timers.splice( index, 1 );
				}
			}

			// Look for any animations in the old queue and finish them
			for ( index = 0; index < length; index++ ) {
				if ( queue[ index ] && queue[ index ].finish ) {
					queue[ index ].finish.call( this );
				}
			}

			// Turn off finishing flag
			delete data.finish;
		} );
	}
} );

jQuery.each( [ "toggle", "show", "hide" ], function( i, name ) {
	var cssFn = jQuery.fn[ name ];
	jQuery.fn[ name ] = function( speed, easing, callback ) {
		return speed == null || typeof speed === "boolean" ?
			cssFn.apply( this, arguments ) :
			this.animate( genFx( name, true ), speed, easing, callback );
	};
} );

// Generate shortcuts for custom animations
jQuery.each( {
	slideDown: genFx( "show" ),
	slideUp: genFx( "hide" ),
	slideToggle: genFx( "toggle" ),
	fadeIn: { opacity: "show" },
	fadeOut: { opacity: "hide" },
	fadeToggle: { opacity: "toggle" }
}, function( name, props ) {
	jQuery.fn[ name ] = function( speed, easing, callback ) {
		return this.animate( props, speed, easing, callback );
	};
} );

jQuery.timers = [];
jQuery.fx.tick = function() {
	var timer,
		i = 0,
		timers = jQuery.timers;

	fxNow = Date.now();

	for ( ; i < timers.length; i++ ) {
		timer = timers[ i ];

		// Run the timer and safely remove it when done (allowing for external removal)
		if ( !timer() && timers[ i ] === timer ) {
			timers.splice( i--, 1 );
		}
	}

	if ( !timers.length ) {
		jQuery.fx.stop();
	}
	fxNow = undefined;
};

jQuery.fx.timer = function( timer ) {
	jQuery.timers.push( timer );
	jQuery.fx.start();
};

jQuery.fx.interval = 13;
jQuery.fx.start = function() {
	if ( inProgress ) {
		return;
	}

	inProgress = true;
	schedule();
};

jQuery.fx.stop = function() {
	inProgress = null;
};

jQuery.fx.speeds = {
	slow: 600,
	fast: 200,

	// Default speed
	_default: 400
};


// Based off of the plugin by Clint Helfers, with permission.
// https://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/
jQuery.fn.delay = function( time, type ) {
	time = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;
	type = type || "fx";

	return this.queue( type, function( next, hooks ) {
		var timeout = window.setTimeout( next, time );
		hooks.stop = function() {
			window.clearTimeout( timeout );
		};
	} );
};


( function() {
	var input = document.createElement( "input" ),
		select = document.createElement( "select" ),
		opt = select.appendChild( document.createElement( "option" ) );

	input.type = "checkbox";

	// Support: Android <=4.3 only
	// Default value for a checkbox should be "on"
	support.checkOn = input.value !== "";

	// Support: IE <=11 only
	// Must access selectedIndex to make default options select
	support.optSelected = opt.selected;

	// Support: IE <=11 only
	// An input loses its value after becoming a radio
	input = document.createElement( "input" );
	input.value = "t";
	input.type = "radio";
	support.radioValue = input.value === "t";
} )();


var boolHook,
	attrHandle = jQuery.expr.attrHandle;

jQuery.fn.extend( {
	attr: function( name, value ) {
		return access( this, jQuery.attr, name, value, arguments.length > 1 );
	},

	removeAttr: function( name ) {
		return this.each( function() {
			jQuery.removeAttr( this, name );
		} );
	}
} );

jQuery.extend( {
	attr: function( elem, name, value ) {
		var ret, hooks,
			nType = elem.nodeType;

		// Don't get/set attributes on text, comment and attribute nodes
		if ( nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}

		// Fallback to prop when attributes are not supported
		if ( typeof elem.getAttribute === "undefined" ) {
			return jQuery.prop( elem, name, value );
		}

		// Attribute hooks are determined by the lowercase version
		// Grab necessary hook if one is defined
		if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {
			hooks = jQuery.attrHooks[ name.toLowerCase() ] ||
				( jQuery.expr.match.bool.test( name ) ? boolHook : undefined );
		}

		if ( value !== undefined ) {
			if ( value === null ) {
				jQuery.removeAttr( elem, name );
				return;
			}

			if ( hooks && "set" in hooks &&
				( ret = hooks.set( elem, value, name ) ) !== undefined ) {
				return ret;
			}

			elem.setAttribute( name, value + "" );
			return value;
		}

		if ( hooks && "get" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {
			return ret;
		}

		ret = jQuery.find.attr( elem, name );

		// Non-existent attributes return null, we normalize to undefined
		return ret == null ? undefined : ret;
	},

	attrHooks: {
		type: {
			set: function( elem, value ) {
				if ( !support.radioValue && value === "radio" &&
					nodeName( elem, "input" ) ) {
					var val = elem.value;
					elem.setAttribute( "type", value );
					if ( val ) {
						elem.value = val;
					}
					return value;
				}
			}
		}
	},

	removeAttr: function( elem, value ) {
		var name,
			i = 0,

			// Attribute names can contain non-HTML whitespace characters
			// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2
			attrNames = value && value.match( rnothtmlwhite );

		if ( attrNames && elem.nodeType === 1 ) {
			while ( ( name = attrNames[ i++ ] ) ) {
				elem.removeAttribute( name );
			}
		}
	}
} );

// Hooks for boolean attributes
boolHook = {
	set: function( elem, value, name ) {
		if ( value === false ) {

			// Remove boolean attributes when set to false
			jQuery.removeAttr( elem, name );
		} else {
			elem.setAttribute( name, name );
		}
		return name;
	}
};

jQuery.each( jQuery.expr.match.bool.source.match( /\w+/g ), function( i, name ) {
	var getter = attrHandle[ name ] || jQuery.find.attr;

	attrHandle[ name ] = function( elem, name, isXML ) {
		var ret, handle,
			lowercaseName = name.toLowerCase();

		if ( !isXML ) {

			// Avoid an infinite loop by temporarily removing this function from the getter
			handle = attrHandle[ lowercaseName ];
			attrHandle[ lowercaseName ] = ret;
			ret = getter( elem, name, isXML ) != null ?
				lowercaseName :
				null;
			attrHandle[ lowercaseName ] = handle;
		}
		return ret;
	};
} );




var rfocusable = /^(?:input|select|textarea|button)$/i,
	rclickable = /^(?:a|area)$/i;

jQuery.fn.extend( {
	prop: function( name, value ) {
		return access( this, jQuery.prop, name, value, arguments.length > 1 );
	},

	removeProp: function( name ) {
		return this.each( function() {
			delete this[ jQuery.propFix[ name ] || name ];
		} );
	}
} );

jQuery.extend( {
	prop: function( elem, name, value ) {
		var ret, hooks,
			nType = elem.nodeType;

		// Don't get/set properties on text, comment and attribute nodes
		if ( nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}

		if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {

			// Fix name and attach hooks
			name = jQuery.propFix[ name ] || name;
			hooks = jQuery.propHooks[ name ];
		}

		if ( value !== undefined ) {
			if ( hooks && "set" in hooks &&
				( ret = hooks.set( elem, value, name ) ) !== undefined ) {
				return ret;
			}

			return ( elem[ name ] = value );
		}

		if ( hooks && "get" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {
			return ret;
		}

		return elem[ name ];
	},

	propHooks: {
		tabIndex: {
			get: function( elem ) {

				// Support: IE <=9 - 11 only
				// elem.tabIndex doesn't always return the
				// correct value when it hasn't been explicitly set
				// https://web.archive.org/web/20141116233347/http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/
				// Use proper attribute retrieval(#12072)
				var tabindex = jQuery.find.attr( elem, "tabindex" );

				if ( tabindex ) {
					return parseInt( tabindex, 10 );
				}

				if (
					rfocusable.test( elem.nodeName ) ||
					rclickable.test( elem.nodeName ) &&
					elem.href
				) {
					return 0;
				}

				return -1;
			}
		}
	},

	propFix: {
		"for": "htmlFor",
		"class": "className"
	}
} );

// Support: IE <=11 only
// Accessing the selectedIndex property
// forces the browser to respect setting selected
// on the option
// The getter ensures a default option is selected
// when in an optgroup
// eslint rule "no-unused-expressions" is disabled for this code
// since it considers such accessions noop
if ( !support.optSelected ) {
	jQuery.propHooks.selected = {
		get: function( elem ) {

			/* eslint no-unused-expressions: "off" */

			var parent = elem.parentNode;
			if ( parent && parent.parentNode ) {
				parent.parentNode.selectedIndex;
			}
			return null;
		},
		set: function( elem ) {

			/* eslint no-unused-expressions: "off" */

			var parent = elem.parentNode;
			if ( parent ) {
				parent.selectedIndex;

				if ( parent.parentNode ) {
					parent.parentNode.selectedIndex;
				}
			}
		}
	};
}

jQuery.each( [
	"tabIndex",
	"readOnly",
	"maxLength",
	"cellSpacing",
	"cellPadding",
	"rowSpan",
	"colSpan",
	"useMap",
	"frameBorder",
	"contentEditable"
], function() {
	jQuery.propFix[ this.toLowerCase() ] = this;
} );




	// Strip and collapse whitespace according to HTML spec
	// https://infra.spec.whatwg.org/#strip-and-collapse-ascii-whitespace
	function stripAndCollapse( value ) {
		var tokens = value.match( rnothtmlwhite ) || [];
		return tokens.join( " " );
	}


function getClass( elem ) {
	return elem.getAttribute && elem.getAttribute( "class" ) || "";
}

function classesToArray( value ) {
	if ( Array.isArray( value ) ) {
		return value;
	}
	if ( typeof value === "string" ) {
		return value.match( rnothtmlwhite ) || [];
	}
	return [];
}

jQuery.fn.extend( {
	addClass: function( value ) {
		var classes, elem, cur, curValue, clazz, j, finalValue,
			i = 0;

		if ( isFunction( value ) ) {
			return this.each( function( j ) {
				jQuery( this ).addClass( value.call( this, j, getClass( this ) ) );
			} );
		}

		classes = classesToArray( value );

		if ( classes.length ) {
			while ( ( elem = this[ i++ ] ) ) {
				curValue = getClass( elem );
				cur = elem.nodeType === 1 && ( " " + stripAndCollapse( curValue ) + " " );

				if ( cur ) {
					j = 0;
					while ( ( clazz = classes[ j++ ] ) ) {
						if ( cur.indexOf( " " + clazz + " " ) < 0 ) {
							cur += clazz + " ";
						}
					}

					// Only assign if different to avoid unneeded rendering.
					finalValue = stripAndCollapse( cur );
					if ( curValue !== finalValue ) {
						elem.setAttribute( "class", finalValue );
					}
				}
			}
		}

		return this;
	},

	removeClass: function( value ) {
		var classes, elem, cur, curValue, clazz, j, finalValue,
			i = 0;

		if ( isFunction( value ) ) {
			return this.each( function( j ) {
				jQuery( this ).removeClass( value.call( this, j, getClass( this ) ) );
			} );
		}

		if ( !arguments.length ) {
			return this.attr( "class", "" );
		}

		classes = classesToArray( value );

		if ( classes.length ) {
			while ( ( elem = this[ i++ ] ) ) {
				curValue = getClass( elem );

				// This expression is here for better compressibility (see addClass)
				cur = elem.nodeType === 1 && ( " " + stripAndCollapse( curValue ) + " " );

				if ( cur ) {
					j = 0;
					while ( ( clazz = classes[ j++ ] ) ) {

						// Remove *all* instances
						while ( cur.indexOf( " " + clazz + " " ) > -1 ) {
							cur = cur.replace( " " + clazz + " ", " " );
						}
					}

					// Only assign if different to avoid unneeded rendering.
					finalValue = stripAndCollapse( cur );
					if ( curValue !== finalValue ) {
						elem.setAttribute( "class", finalValue );
					}
				}
			}
		}

		return this;
	},

	toggleClass: function( value, stateVal ) {
		var type = typeof value,
			isValidValue = type === "string" || Array.isArray( value );

		if ( typeof stateVal === "boolean" && isValidValue ) {
			return stateVal ? this.addClass( value ) : this.removeClass( value );
		}

		if ( isFunction( value ) ) {
			return this.each( function( i ) {
				jQuery( this ).toggleClass(
					value.call( this, i, getClass( this ), stateVal ),
					stateVal
				);
			} );
		}

		return this.each( function() {
			var className, i, self, classNames;

			if ( isValidValue ) {

				// Toggle individual class names
				i = 0;
				self = jQuery( this );
				classNames = classesToArray( value );

				while ( ( className = classNames[ i++ ] ) ) {

					// Check each className given, space separated list
					if ( self.hasClass( className ) ) {
						self.removeClass( className );
					} else {
						self.addClass( className );
					}
				}

			// Toggle whole class name
			} else if ( value === undefined || type === "boolean" ) {
				className = getClass( this );
				if ( className ) {

					// Store className if set
					dataPriv.set( this, "__className__", className );
				}

				// If the element has a class name or if we're passed `false`,
				// then remove the whole classname (if there was one, the above saved it).
				// Otherwise bring back whatever was previously saved (if anything),
				// falling back to the empty string if nothing was stored.
				if ( this.setAttribute ) {
					this.setAttribute( "class",
						className || value === false ?
						"" :
						dataPriv.get( this, "__className__" ) || ""
					);
				}
			}
		} );
	},

	hasClass: function( selector ) {
		var className, elem,
			i = 0;

		className = " " + selector + " ";
		while ( ( elem = this[ i++ ] ) ) {
			if ( elem.nodeType === 1 &&
				( " " + stripAndCollapse( getClass( elem ) ) + " " ).indexOf( className ) > -1 ) {
					return true;
			}
		}

		return false;
	}
} );




var rreturn = /\r/g;

jQuery.fn.extend( {
	val: function( value ) {
		var hooks, ret, valueIsFunction,
			elem = this[ 0 ];

		if ( !arguments.length ) {
			if ( elem ) {
				hooks = jQuery.valHooks[ elem.type ] ||
					jQuery.valHooks[ elem.nodeName.toLowerCase() ];

				if ( hooks &&
					"get" in hooks &&
					( ret = hooks.get( elem, "value" ) ) !== undefined
				) {
					return ret;
				}

				ret = elem.value;

				// Handle most common string cases
				if ( typeof ret === "string" ) {
					return ret.replace( rreturn, "" );
				}

				// Handle cases where value is null/undef or number
				return ret == null ? "" : ret;
			}

			return;
		}

		valueIsFunction = isFunction( value );

		return this.each( function( i ) {
			var val;

			if ( this.nodeType !== 1 ) {
				return;
			}

			if ( valueIsFunction ) {
				val = value.call( this, i, jQuery( this ).val() );
			} else {
				val = value;
			}

			// Treat null/undefined as ""; convert numbers to string
			if ( val == null ) {
				val = "";

			} else if ( typeof val === "number" ) {
				val += "";

			} else if ( Array.isArray( val ) ) {
				val = jQuery.map( val, function( value ) {
					return value == null ? "" : value + "";
				} );
			}

			hooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];

			// If set returns undefined, fall back to normal setting
			if ( !hooks || !( "set" in hooks ) || hooks.set( this, val, "value" ) === undefined ) {
				this.value = val;
			}
		} );
	}
} );

jQuery.extend( {
	valHooks: {
		option: {
			get: function( elem ) {

				var val = jQuery.find.attr( elem, "value" );
				return val != null ?
					val :

					// Support: IE <=10 - 11 only
					// option.text throws exceptions (#14686, #14858)
					// Strip and collapse whitespace
					// https://html.spec.whatwg.org/#strip-and-collapse-whitespace
					stripAndCollapse( jQuery.text( elem ) );
			}
		},
		select: {
			get: function( elem ) {
				var value, option, i,
					options = elem.options,
					index = elem.selectedIndex,
					one = elem.type === "select-one",
					values = one ? null : [],
					max = one ? index + 1 : options.length;

				if ( index < 0 ) {
					i = max;

				} else {
					i = one ? index : 0;
				}

				// Loop through all the selected options
				for ( ; i < max; i++ ) {
					option = options[ i ];

					// Support: IE <=9 only
					// IE8-9 doesn't update selected after form reset (#2551)
					if ( ( option.selected || i === index ) &&

							// Don't return options that are disabled or in a disabled optgroup
							!option.disabled &&
							( !option.parentNode.disabled ||
								!nodeName( option.parentNode, "optgroup" ) ) ) {

						// Get the specific value for the option
						value = jQuery( option ).val();

						// We don't need an array for one selects
						if ( one ) {
							return value;
						}

						// Multi-Selects return an array
						values.push( value );
					}
				}

				return values;
			},

			set: function( elem, value ) {
				var optionSet, option,
					options = elem.options,
					values = jQuery.makeArray( value ),
					i = options.length;

				while ( i-- ) {
					option = options[ i ];

					/* eslint-disable no-cond-assign */

					if ( option.selected =
						jQuery.inArray( jQuery.valHooks.option.get( option ), values ) > -1
					) {
						optionSet = true;
					}

					/* eslint-enable no-cond-assign */
				}

				// Force browsers to behave consistently when non-matching value is set
				if ( !optionSet ) {
					elem.selectedIndex = -1;
				}
				return values;
			}
		}
	}
} );

// Radios and checkboxes getter/setter
jQuery.each( [ "radio", "checkbox" ], function() {
	jQuery.valHooks[ this ] = {
		set: function( elem, value ) {
			if ( Array.isArray( value ) ) {
				return ( elem.checked = jQuery.inArray( jQuery( elem ).val(), value ) > -1 );
			}
		}
	};
	if ( !support.checkOn ) {
		jQuery.valHooks[ this ].get = function( elem ) {
			return elem.getAttribute( "value" ) === null ? "on" : elem.value;
		};
	}
} );




// Return jQuery for attributes-only inclusion


support.focusin = "onfocusin" in window;


var rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,
	stopPropagationCallback = function( e ) {
		e.stopPropagation();
	};

jQuery.extend( jQuery.event, {

	trigger: function( event, data, elem, onlyHandlers ) {

		var i, cur, tmp, bubbleType, ontype, handle, special, lastElement,
			eventPath = [ elem || document ],
			type = hasOwn.call( event, "type" ) ? event.type : event,
			namespaces = hasOwn.call( event, "namespace" ) ? event.namespace.split( "." ) : [];

		cur = lastElement = tmp = elem = elem || document;

		// Don't do events on text and comment nodes
		if ( elem.nodeType === 3 || elem.nodeType === 8 ) {
			return;
		}

		// focus/blur morphs to focusin/out; ensure we're not firing them right now
		if ( rfocusMorph.test( type + jQuery.event.triggered ) ) {
			return;
		}

		if ( type.indexOf( "." ) > -1 ) {

			// Namespaced trigger; create a regexp to match event type in handle()
			namespaces = type.split( "." );
			type = namespaces.shift();
			namespaces.sort();
		}
		ontype = type.indexOf( ":" ) < 0 && "on" + type;

		// Caller can pass in a jQuery.Event object, Object, or just an event type string
		event = event[ jQuery.expando ] ?
			event :
			new jQuery.Event( type, typeof event === "object" && event );

		// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)
		event.isTrigger = onlyHandlers ? 2 : 3;
		event.namespace = namespaces.join( "." );
		event.rnamespace = event.namespace ?
			new RegExp( "(^|\\.)" + namespaces.join( "\\.(?:.*\\.|)" ) + "(\\.|$)" ) :
			null;

		// Clean up the event in case it is being reused
		event.result = undefined;
		if ( !event.target ) {
			event.target = elem;
		}

		// Clone any incoming data and prepend the event, creating the handler arg list
		data = data == null ?
			[ event ] :
			jQuery.makeArray( data, [ event ] );

		// Allow special events to draw outside the lines
		special = jQuery.event.special[ type ] || {};
		if ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {
			return;
		}

		// Determine event propagation path in advance, per W3C events spec (#9951)
		// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)
		if ( !onlyHandlers && !special.noBubble && !isWindow( elem ) ) {

			bubbleType = special.delegateType || type;
			if ( !rfocusMorph.test( bubbleType + type ) ) {
				cur = cur.parentNode;
			}
			for ( ; cur; cur = cur.parentNode ) {
				eventPath.push( cur );
				tmp = cur;
			}

			// Only add window if we got to document (e.g., not plain obj or detached DOM)
			if ( tmp === ( elem.ownerDocument || document ) ) {
				eventPath.push( tmp.defaultView || tmp.parentWindow || window );
			}
		}

		// Fire handlers on the event path
		i = 0;
		while ( ( cur = eventPath[ i++ ] ) && !event.isPropagationStopped() ) {
			lastElement = cur;
			event.type = i > 1 ?
				bubbleType :
				special.bindType || type;

			// jQuery handler
			handle = ( dataPriv.get( cur, "events" ) || {} )[ event.type ] &&
				dataPriv.get( cur, "handle" );
			if ( handle ) {
				handle.apply( cur, data );
			}

			// Native handler
			handle = ontype && cur[ ontype ];
			if ( handle && handle.apply && acceptData( cur ) ) {
				event.result = handle.apply( cur, data );
				if ( event.result === false ) {
					event.preventDefault();
				}
			}
		}
		event.type = type;

		// If nobody prevented the default action, do it now
		if ( !onlyHandlers && !event.isDefaultPrevented() ) {

			if ( ( !special._default ||
				special._default.apply( eventPath.pop(), data ) === false ) &&
				acceptData( elem ) ) {

				// Call a native DOM method on the target with the same name as the event.
				// Don't do default actions on window, that's where global variables be (#6170)
				if ( ontype && isFunction( elem[ type ] ) && !isWindow( elem ) ) {

					// Don't re-trigger an onFOO event when we call its FOO() method
					tmp = elem[ ontype ];

					if ( tmp ) {
						elem[ ontype ] = null;
					}

					// Prevent re-triggering of the same event, since we already bubbled it above
					jQuery.event.triggered = type;

					if ( event.isPropagationStopped() ) {
						lastElement.addEventListener( type, stopPropagationCallback );
					}

					elem[ type ]();

					if ( event.isPropagationStopped() ) {
						lastElement.removeEventListener( type, stopPropagationCallback );
					}

					jQuery.event.triggered = undefined;

					if ( tmp ) {
						elem[ ontype ] = tmp;
					}
				}
			}
		}

		return event.result;
	},

	// Piggyback on a donor event to simulate a different one
	// Used only for `focus(in | out)` events
	simulate: function( type, elem, event ) {
		var e = jQuery.extend(
			new jQuery.Event(),
			event,
			{
				type: type,
				isSimulated: true
			}
		);

		jQuery.event.trigger( e, null, elem );
	}

} );

jQuery.fn.extend( {

	trigger: function( type, data ) {
		return this.each( function() {
			jQuery.event.trigger( type, data, this );
		} );
	},
	triggerHandler: function( type, data ) {
		var elem = this[ 0 ];
		if ( elem ) {
			return jQuery.event.trigger( type, data, elem, true );
		}
	}
} );


// Support: Firefox <=44
// Firefox doesn't have focus(in | out) events
// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787
//
// Support: Chrome <=48 - 49, Safari <=9.0 - 9.1
// focus(in | out) events fire after focus & blur events,
// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order
// Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857
if ( !support.focusin ) {
	jQuery.each( { focus: "focusin", blur: "focusout" }, function( orig, fix ) {

		// Attach a single capturing handler on the document while someone wants focusin/focusout
		var handler = function( event ) {
			jQuery.event.simulate( fix, event.target, jQuery.event.fix( event ) );
		};

		jQuery.event.special[ fix ] = {
			setup: function() {
				var doc = this.ownerDocument || this,
					attaches = dataPriv.access( doc, fix );

				if ( !attaches ) {
					doc.addEventListener( orig, handler, true );
				}
				dataPriv.access( doc, fix, ( attaches || 0 ) + 1 );
			},
			teardown: function() {
				var doc = this.ownerDocument || this,
					attaches = dataPriv.access( doc, fix ) - 1;

				if ( !attaches ) {
					doc.removeEventListener( orig, handler, true );
					dataPriv.remove( doc, fix );

				} else {
					dataPriv.access( doc, fix, attaches );
				}
			}
		};
	} );
}
var location = window.location;

var nonce = Date.now();

var rquery = ( /\?/ );



// Cross-browser xml parsing
jQuery.parseXML = function( data ) {
	var xml;
	if ( !data || typeof data !== "string" ) {
		return null;
	}

	// Support: IE 9 - 11 only
	// IE throws on parseFromString with invalid input.
	try {
		xml = ( new window.DOMParser() ).parseFromString( data, "text/xml" );
	} catch ( e ) {
		xml = undefined;
	}

	if ( !xml || xml.getElementsByTagName( "parsererror" ).length ) {
		jQuery.error( "Invalid XML: " + data );
	}
	return xml;
};


var
	rbracket = /\[\]$/,
	rCRLF = /\r?\n/g,
	rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,
	rsubmittable = /^(?:input|select|textarea|keygen)/i;

function buildParams( prefix, obj, traditional, add ) {
	var name;

	if ( Array.isArray( obj ) ) {

		// Serialize array item.
		jQuery.each( obj, function( i, v ) {
			if ( traditional || rbracket.test( prefix ) ) {

				// Treat each array item as a scalar.
				add( prefix, v );

			} else {

				// Item is non-scalar (array or object), encode its numeric index.
				buildParams(
					prefix + "[" + ( typeof v === "object" && v != null ? i : "" ) + "]",
					v,
					traditional,
					add
				);
			}
		} );

	} else if ( !traditional && toType( obj ) === "object" ) {

		// Serialize object item.
		for ( name in obj ) {
			buildParams( prefix + "[" + name + "]", obj[ name ], traditional, add );
		}

	} else {

		// Serialize scalar item.
		add( prefix, obj );
	}
}

// Serialize an array of form elements or a set of
// key/values into a query string
jQuery.param = function( a, traditional ) {
	var prefix,
		s = [],
		add = function( key, valueOrFunction ) {

			// If value is a function, invoke it and use its return value
			var value = isFunction( valueOrFunction ) ?
				valueOrFunction() :
				valueOrFunction;

			s[ s.length ] = encodeURIComponent( key ) + "=" +
				encodeURIComponent( value == null ? "" : value );
		};

	if ( a == null ) {
		return "";
	}

	// If an array was passed in, assume that it is an array of form elements.
	if ( Array.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {

		// Serialize the form elements
		jQuery.each( a, function() {
			add( this.name, this.value );
		} );

	} else {

		// If traditional, encode the "old" way (the way 1.3.2 or older
		// did it), otherwise encode params recursively.
		for ( prefix in a ) {
			buildParams( prefix, a[ prefix ], traditional, add );
		}
	}

	// Return the resulting serialization
	return s.join( "&" );
};

jQuery.fn.extend( {
	serialize: function() {
		return jQuery.param( this.serializeArray() );
	},
	serializeArray: function() {
		return this.map( function() {

			// Can add propHook for "elements" to filter or add form elements
			var elements = jQuery.prop( this, "elements" );
			return elements ? jQuery.makeArray( elements ) : this;
		} )
		.filter( function() {
			var type = this.type;

			// Use .is( ":disabled" ) so that fieldset[disabled] works
			return this.name && !jQuery( this ).is( ":disabled" ) &&
				rsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&
				( this.checked || !rcheckableType.test( type ) );
		} )
		.map( function( i, elem ) {
			var val = jQuery( this ).val();

			if ( val == null ) {
				return null;
			}

			if ( Array.isArray( val ) ) {
				return jQuery.map( val, function( val ) {
					return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
				} );
			}

			return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
		} ).get();
	}
} );


var
	r20 = /%20/g,
	rhash = /#.*$/,
	rantiCache = /([?&])_=[^&]*/,
	rheaders = /^(.*?):[ \t]*([^\r\n]*)$/mg,

	// #7653, #8125, #8152: local protocol detection
	rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
	rnoContent = /^(?:GET|HEAD)$/,
	rprotocol = /^\/\//,

	/* Prefilters
	 * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)
	 * 2) These are called:
	 *    - BEFORE asking for a transport
	 *    - AFTER param serialization (s.data is a string if s.processData is true)
	 * 3) key is the dataType
	 * 4) the catchall symbol "*" can be used
	 * 5) execution will start with transport dataType and THEN continue down to "*" if needed
	 */
	prefilters = {},

	/* Transports bindings
	 * 1) key is the dataType
	 * 2) the catchall symbol "*" can be used
	 * 3) selection will start with transport dataType and THEN go to "*" if needed
	 */
	transports = {},

	// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression
	allTypes = "*/".concat( "*" ),

	// Anchor tag for parsing the document origin
	originAnchor = document.createElement( "a" );
	originAnchor.href = location.href;

// Base "constructor" for jQuery.ajaxPrefilter and jQuery.ajaxTransport
function addToPrefiltersOrTransports( structure ) {

	// dataTypeExpression is optional and defaults to "*"
	return function( dataTypeExpression, func ) {

		if ( typeof dataTypeExpression !== "string" ) {
			func = dataTypeExpression;
			dataTypeExpression = "*";
		}

		var dataType,
			i = 0,
			dataTypes = dataTypeExpression.toLowerCase().match( rnothtmlwhite ) || [];

		if ( isFunction( func ) ) {

			// For each dataType in the dataTypeExpression
			while ( ( dataType = dataTypes[ i++ ] ) ) {

				// Prepend if requested
				if ( dataType[ 0 ] === "+" ) {
					dataType = dataType.slice( 1 ) || "*";
					( structure[ dataType ] = structure[ dataType ] || [] ).unshift( func );

				// Otherwise append
				} else {
					( structure[ dataType ] = structure[ dataType ] || [] ).push( func );
				}
			}
		}
	};
}

// Base inspection function for prefilters and transports
function inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {

	var inspected = {},
		seekingTransport = ( structure === transports );

	function inspect( dataType ) {
		var selected;
		inspected[ dataType ] = true;
		jQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {
			var dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );
			if ( typeof dataTypeOrTransport === "string" &&
				!seekingTransport && !inspected[ dataTypeOrTransport ] ) {

				options.dataTypes.unshift( dataTypeOrTransport );
				inspect( dataTypeOrTransport );
				return false;
			} else if ( seekingTransport ) {
				return !( selected = dataTypeOrTransport );
			}
		} );
		return selected;
	}

	return inspect( options.dataTypes[ 0 ] ) || !inspected[ "*" ] && inspect( "*" );
}

// A special extend for ajax options
// that takes "flat" options (not to be deep extended)
// Fixes #9887
function ajaxExtend( target, src ) {
	var key, deep,
		flatOptions = jQuery.ajaxSettings.flatOptions || {};

	for ( key in src ) {
		if ( src[ key ] !== undefined ) {
			( flatOptions[ key ] ? target : ( deep || ( deep = {} ) ) )[ key ] = src[ key ];
		}
	}
	if ( deep ) {
		jQuery.extend( true, target, deep );
	}

	return target;
}

/* Handles responses to an ajax request:
 * - finds the right dataType (mediates between content-type and expected dataType)
 * - returns the corresponding response
 */
function ajaxHandleResponses( s, jqXHR, responses ) {

	var ct, type, finalDataType, firstDataType,
		contents = s.contents,
		dataTypes = s.dataTypes;

	// Remove auto dataType and get content-type in the process
	while ( dataTypes[ 0 ] === "*" ) {
		dataTypes.shift();
		if ( ct === undefined ) {
			ct = s.mimeType || jqXHR.getResponseHeader( "Content-Type" );
		}
	}

	// Check if we're dealing with a known content-type
	if ( ct ) {
		for ( type in contents ) {
			if ( contents[ type ] && contents[ type ].test( ct ) ) {
				dataTypes.unshift( type );
				break;
			}
		}
	}

	// Check to see if we have a response for the expected dataType
	if ( dataTypes[ 0 ] in responses ) {
		finalDataType = dataTypes[ 0 ];
	} else {

		// Try convertible dataTypes
		for ( type in responses ) {
			if ( !dataTypes[ 0 ] || s.converters[ type + " " + dataTypes[ 0 ] ] ) {
				finalDataType = type;
				break;
			}
			if ( !firstDataType ) {
				firstDataType = type;
			}
		}

		// Or just use first one
		finalDataType = finalDataType || firstDataType;
	}

	// If we found a dataType
	// We add the dataType to the list if needed
	// and return the corresponding response
	if ( finalDataType ) {
		if ( finalDataType !== dataTypes[ 0 ] ) {
			dataTypes.unshift( finalDataType );
		}
		return responses[ finalDataType ];
	}
}

/* Chain conversions given the request and the original response
 * Also sets the responseXXX fields on the jqXHR instance
 */
function ajaxConvert( s, response, jqXHR, isSuccess ) {
	var conv2, current, conv, tmp, prev,
		converters = {},

		// Work with a copy of dataTypes in case we need to modify it for conversion
		dataTypes = s.dataTypes.slice();

	// Create converters map with lowercased keys
	if ( dataTypes[ 1 ] ) {
		for ( conv in s.converters ) {
			converters[ conv.toLowerCase() ] = s.converters[ conv ];
		}
	}

	current = dataTypes.shift();

	// Convert to each sequential dataType
	while ( current ) {

		if ( s.responseFields[ current ] ) {
			jqXHR[ s.responseFields[ current ] ] = response;
		}

		// Apply the dataFilter if provided
		if ( !prev && isSuccess && s.dataFilter ) {
			response = s.dataFilter( response, s.dataType );
		}

		prev = current;
		current = dataTypes.shift();

		if ( current ) {

			// There's only work to do if current dataType is non-auto
			if ( current === "*" ) {

				current = prev;

			// Convert response if prev dataType is non-auto and differs from current
			} else if ( prev !== "*" && prev !== current ) {

				// Seek a direct converter
				conv = converters[ prev + " " + current ] || converters[ "* " + current ];

				// If none found, seek a pair
				if ( !conv ) {
					for ( conv2 in converters ) {

						// If conv2 outputs current
						tmp = conv2.split( " " );
						if ( tmp[ 1 ] === current ) {

							// If prev can be converted to accepted input
							conv = converters[ prev + " " + tmp[ 0 ] ] ||
								converters[ "* " + tmp[ 0 ] ];
							if ( conv ) {

								// Condense equivalence converters
								if ( conv === true ) {
									conv = converters[ conv2 ];

								// Otherwise, insert the intermediate dataType
								} else if ( converters[ conv2 ] !== true ) {
									current = tmp[ 0 ];
									dataTypes.unshift( tmp[ 1 ] );
								}
								break;
							}
						}
					}
				}

				// Apply converter (if not an equivalence)
				if ( conv !== true ) {

					// Unless errors are allowed to bubble, catch and return them
					if ( conv && s.throws ) {
						response = conv( response );
					} else {
						try {
							response = conv( response );
						} catch ( e ) {
							return {
								state: "parsererror",
								error: conv ? e : "No conversion from " + prev + " to " + current
							};
						}
					}
				}
			}
		}
	}

	return { state: "success", data: response };
}

jQuery.extend( {

	// Counter for holding the number of active queries
	active: 0,

	// Last-Modified header cache for next request
	lastModified: {},
	etag: {},

	ajaxSettings: {
		url: location.href,
		type: "GET",
		isLocal: rlocalProtocol.test( location.protocol ),
		global: true,
		processData: true,
		async: true,
		contentType: "application/x-www-form-urlencoded; charset=UTF-8",

		/*
		timeout: 0,
		data: null,
		dataType: null,
		username: null,
		password: null,
		cache: null,
		throws: false,
		traditional: false,
		headers: {},
		*/

		accepts: {
			"*": allTypes,
			text: "text/plain",
			html: "text/html",
			xml: "application/xml, text/xml",
			json: "application/json, text/javascript"
		},

		contents: {
			xml: /\bxml\b/,
			html: /\bhtml/,
			json: /\bjson\b/
		},

		responseFields: {
			xml: "responseXML",
			text: "responseText",
			json: "responseJSON"
		},

		// Data converters
		// Keys separate source (or catchall "*") and destination types with a single space
		converters: {

			// Convert anything to text
			"* text": String,

			// Text to html (true = no transformation)
			"text html": true,

			// Evaluate text as a json expression
			"text json": JSON.parse,

			// Parse text as xml
			"text xml": jQuery.parseXML
		},

		// For options that shouldn't be deep extended:
		// you can add your own custom options here if
		// and when you create one that shouldn't be
		// deep extended (see ajaxExtend)
		flatOptions: {
			url: true,
			context: true
		}
	},

	// Creates a full fledged settings object into target
	// with both ajaxSettings and settings fields.
	// If target is omitted, writes into ajaxSettings.
	ajaxSetup: function( target, settings ) {
		return settings ?

			// Building a settings object
			ajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :

			// Extending ajaxSettings
			ajaxExtend( jQuery.ajaxSettings, target );
	},

	ajaxPrefilter: addToPrefiltersOrTransports( prefilters ),
	ajaxTransport: addToPrefiltersOrTransports( transports ),

	// Main method
	ajax: function( url, options ) {

		// If url is an object, simulate pre-1.5 signature
		if ( typeof url === "object" ) {
			options = url;
			url = undefined;
		}

		// Force options to be an object
		options = options || {};

		var transport,

			// URL without anti-cache param
			cacheURL,

			// Response headers
			responseHeadersString,
			responseHeaders,

			// timeout handle
			timeoutTimer,

			// Url cleanup var
			urlAnchor,

			// Request state (becomes false upon send and true upon completion)
			completed,

			// To know if global events are to be dispatched
			fireGlobals,

			// Loop variable
			i,

			// uncached part of the url
			uncached,

			// Create the final options object
			s = jQuery.ajaxSetup( {}, options ),

			// Callbacks context
			callbackContext = s.context || s,

			// Context for global events is callbackContext if it is a DOM node or jQuery collection
			globalEventContext = s.context &&
				( callbackContext.nodeType || callbackContext.jquery ) ?
					jQuery( callbackContext ) :
					jQuery.event,

			// Deferreds
			deferred = jQuery.Deferred(),
			completeDeferred = jQuery.Callbacks( "once memory" ),

			// Status-dependent callbacks
			statusCode = s.statusCode || {},

			// Headers (they are sent all at once)
			requestHeaders = {},
			requestHeadersNames = {},

			// Default abort message
			strAbort = "canceled",

			// Fake xhr
			jqXHR = {
				readyState: 0,

				// Builds headers hashtable if needed
				getResponseHeader: function( key ) {
					var match;
					if ( completed ) {
						if ( !responseHeaders ) {
							responseHeaders = {};
							while ( ( match = rheaders.exec( responseHeadersString ) ) ) {
								responseHeaders[ match[ 1 ].toLowerCase() + " " ] =
									( responseHeaders[ match[ 1 ].toLowerCase() + " " ] || [] )
										.concat( match[ 2 ] );
							}
						}
						match = responseHeaders[ key.toLowerCase() + " " ];
					}
					return match == null ? null : match.join( ", " );
				},

				// Raw string
				getAllResponseHeaders: function() {
					return completed ? responseHeadersString : null;
				},

				// Caches the header
				setRequestHeader: function( name, value ) {
					if ( completed == null ) {
						name = requestHeadersNames[ name.toLowerCase() ] =
							requestHeadersNames[ name.toLowerCase() ] || name;
						requestHeaders[ name ] = value;
					}
					return this;
				},

				// Overrides response content-type header
				overrideMimeType: function( type ) {
					if ( completed == null ) {
						s.mimeType = type;
					}
					return this;
				},

				// Status-dependent callbacks
				statusCode: function( map ) {
					var code;
					if ( map ) {
						if ( completed ) {

							// Execute the appropriate callbacks
							jqXHR.always( map[ jqXHR.status ] );
						} else {

							// Lazy-add the new callbacks in a way that preserves old ones
							for ( code in map ) {
								statusCode[ code ] = [ statusCode[ code ], map[ code ] ];
							}
						}
					}
					return this;
				},

				// Cancel the request
				abort: function( statusText ) {
					var finalText = statusText || strAbort;
					if ( transport ) {
						transport.abort( finalText );
					}
					done( 0, finalText );
					return this;
				}
			};

		// Attach deferreds
		deferred.promise( jqXHR );

		// Add protocol if not provided (prefilters might expect it)
		// Handle falsy url in the settings object (#10093: consistency with old signature)
		// We also use the url parameter if available
		s.url = ( ( url || s.url || location.href ) + "" )
			.replace( rprotocol, location.protocol + "//" );

		// Alias method option to type as per ticket #12004
		s.type = options.method || options.type || s.method || s.type;

		// Extract dataTypes list
		s.dataTypes = ( s.dataType || "*" ).toLowerCase().match( rnothtmlwhite ) || [ "" ];

		// A cross-domain request is in order when the origin doesn't match the current origin.
		if ( s.crossDomain == null ) {
			urlAnchor = document.createElement( "a" );

			// Support: IE <=8 - 11, Edge 12 - 15
			// IE throws exception on accessing the href property if url is malformed,
			// e.g. http://example.com:80x/
			try {
				urlAnchor.href = s.url;

				// Support: IE <=8 - 11 only
				// Anchor's host property isn't correctly set when s.url is relative
				urlAnchor.href = urlAnchor.href;
				s.crossDomain = originAnchor.protocol + "//" + originAnchor.host !==
					urlAnchor.protocol + "//" + urlAnchor.host;
			} catch ( e ) {

				// If there is an error parsing the URL, assume it is crossDomain,
				// it can be rejected by the transport if it is invalid
				s.crossDomain = true;
			}
		}

		// Convert data if not already a string
		if ( s.data && s.processData && typeof s.data !== "string" ) {
			s.data = jQuery.param( s.data, s.traditional );
		}

		// Apply prefilters
		inspectPrefiltersOrTransports( prefilters, s, options, jqXHR );

		// If request was aborted inside a prefilter, stop there
		if ( completed ) {
			return jqXHR;
		}

		// We can fire global events as of now if asked to
		// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)
		fireGlobals = jQuery.event && s.global;

		// Watch for a new set of requests
		if ( fireGlobals && jQuery.active++ === 0 ) {
			jQuery.event.trigger( "ajaxStart" );
		}

		// Uppercase the type
		s.type = s.type.toUpperCase();

		// Determine if request has content
		s.hasContent = !rnoContent.test( s.type );

		// Save the URL in case we're toying with the If-Modified-Since
		// and/or If-None-Match header later on
		// Remove hash to simplify url manipulation
		cacheURL = s.url.replace( rhash, "" );

		// More options handling for requests with no content
		if ( !s.hasContent ) {

			// Remember the hash so we can put it back
			uncached = s.url.slice( cacheURL.length );

			// If data is available and should be processed, append data to url
			if ( s.data && ( s.processData || typeof s.data === "string" ) ) {
				cacheURL += ( rquery.test( cacheURL ) ? "&" : "?" ) + s.data;

				// #9682: remove data so that it's not used in an eventual retry
				delete s.data;
			}

			// Add or update anti-cache param if needed
			if ( s.cache === false ) {
				cacheURL = cacheURL.replace( rantiCache, "$1" );
				uncached = ( rquery.test( cacheURL ) ? "&" : "?" ) + "_=" + ( nonce++ ) + uncached;
			}

			// Put hash and anti-cache on the URL that will be requested (gh-1732)
			s.url = cacheURL + uncached;

		// Change '%20' to '+' if this is encoded form body content (gh-2658)
		} else if ( s.data && s.processData &&
			( s.contentType || "" ).indexOf( "application/x-www-form-urlencoded" ) === 0 ) {
			s.data = s.data.replace( r20, "+" );
		}

		// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
		if ( s.ifModified ) {
			if ( jQuery.lastModified[ cacheURL ] ) {
				jqXHR.setRequestHeader( "If-Modified-Since", jQuery.lastModified[ cacheURL ] );
			}
			if ( jQuery.etag[ cacheURL ] ) {
				jqXHR.setRequestHeader( "If-None-Match", jQuery.etag[ cacheURL ] );
			}
		}

		// Set the correct header, if data is being sent
		if ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {
			jqXHR.setRequestHeader( "Content-Type", s.contentType );
		}

		// Set the Accepts header for the server, depending on the dataType
		jqXHR.setRequestHeader(
			"Accept",
			s.dataTypes[ 0 ] && s.accepts[ s.dataTypes[ 0 ] ] ?
				s.accepts[ s.dataTypes[ 0 ] ] +
					( s.dataTypes[ 0 ] !== "*" ? ", " + allTypes + "; q=0.01" : "" ) :
				s.accepts[ "*" ]
		);

		// Check for headers option
		for ( i in s.headers ) {
			jqXHR.setRequestHeader( i, s.headers[ i ] );
		}

		// Allow custom headers/mimetypes and early abort
		if ( s.beforeSend &&
			( s.beforeSend.call( callbackContext, jqXHR, s ) === false || completed ) ) {

			// Abort if not done already and return
			return jqXHR.abort();
		}

		// Aborting is no longer a cancellation
		strAbort = "abort";

		// Install callbacks on deferreds
		completeDeferred.add( s.complete );
		jqXHR.done( s.success );
		jqXHR.fail( s.error );

		// Get transport
		transport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );

		// If no transport, we auto-abort
		if ( !transport ) {
			done( -1, "No Transport" );
		} else {
			jqXHR.readyState = 1;

			// Send global event
			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxSend", [ jqXHR, s ] );
			}

			// If request was aborted inside ajaxSend, stop there
			if ( completed ) {
				return jqXHR;
			}

			// Timeout
			if ( s.async && s.timeout > 0 ) {
				timeoutTimer = window.setTimeout( function() {
					jqXHR.abort( "timeout" );
				}, s.timeout );
			}

			try {
				completed = false;
				transport.send( requestHeaders, done );
			} catch ( e ) {

				// Rethrow post-completion exceptions
				if ( completed ) {
					throw e;
				}

				// Propagate others as results
				done( -1, e );
			}
		}

		// Callback for when everything is done
		function done( status, nativeStatusText, responses, headers ) {
			var isSuccess, success, error, response, modified,
				statusText = nativeStatusText;

			// Ignore repeat invocations
			if ( completed ) {
				return;
			}

			completed = true;

			// Clear timeout if it exists
			if ( timeoutTimer ) {
				window.clearTimeout( timeoutTimer );
			}

			// Dereference transport for early garbage collection
			// (no matter how long the jqXHR object will be used)
			transport = undefined;

			// Cache response headers
			responseHeadersString = headers || "";

			// Set readyState
			jqXHR.readyState = status > 0 ? 4 : 0;

			// Determine if successful
			isSuccess = status >= 200 && status < 300 || status === 304;

			// Get response data
			if ( responses ) {
				response = ajaxHandleResponses( s, jqXHR, responses );
			}

			// Convert no matter what (that way responseXXX fields are always set)
			response = ajaxConvert( s, response, jqXHR, isSuccess );

			// If successful, handle type chaining
			if ( isSuccess ) {

				// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
				if ( s.ifModified ) {
					modified = jqXHR.getResponseHeader( "Last-Modified" );
					if ( modified ) {
						jQuery.lastModified[ cacheURL ] = modified;
					}
					modified = jqXHR.getResponseHeader( "etag" );
					if ( modified ) {
						jQuery.etag[ cacheURL ] = modified;
					}
				}

				// if no content
				if ( status === 204 || s.type === "HEAD" ) {
					statusText = "nocontent";

				// if not modified
				} else if ( status === 304 ) {
					statusText = "notmodified";

				// If we have data, let's convert it
				} else {
					statusText = response.state;
					success = response.data;
					error = response.error;
					isSuccess = !error;
				}
			} else {

				// Extract error from statusText and normalize for non-aborts
				error = statusText;
				if ( status || !statusText ) {
					statusText = "error";
					if ( status < 0 ) {
						status = 0;
					}
				}
			}

			// Set data for the fake xhr object
			jqXHR.status = status;
			jqXHR.statusText = ( nativeStatusText || statusText ) + "";

			// Success/Error
			if ( isSuccess ) {
				deferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );
			} else {
				deferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );
			}

			// Status-dependent callbacks
			jqXHR.statusCode( statusCode );
			statusCode = undefined;

			if ( fireGlobals ) {
				globalEventContext.trigger( isSuccess ? "ajaxSuccess" : "ajaxError",
					[ jqXHR, s, isSuccess ? success : error ] );
			}

			// Complete
			completeDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );

			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxComplete", [ jqXHR, s ] );

				// Handle the global AJAX counter
				if ( !( --jQuery.active ) ) {
					jQuery.event.trigger( "ajaxStop" );
				}
			}
		}

		return jqXHR;
	},

	getJSON: function( url, data, callback ) {
		return jQuery.get( url, data, callback, "json" );
	},

	getScript: function( url, callback ) {
		return jQuery.get( url, undefined, callback, "script" );
	}
} );

jQuery.each( [ "get", "post" ], function( i, method ) {
	jQuery[ method ] = function( url, data, callback, type ) {

		// Shift arguments if data argument was omitted
		if ( isFunction( data ) ) {
			type = type || callback;
			callback = data;
			data = undefined;
		}

		// The url can be an options object (which then must have .url)
		return jQuery.ajax( jQuery.extend( {
			url: url,
			type: method,
			dataType: type,
			data: data,
			success: callback
		}, jQuery.isPlainObject( url ) && url ) );
	};
} );


jQuery._evalUrl = function( url, options ) {
	return jQuery.ajax( {
		url: url,

		// Make this explicit, since user can override this through ajaxSetup (#11264)
		type: "GET",
		dataType: "script",
		cache: true,
		async: false,
		global: false,

		// Only evaluate the response if it is successful (gh-4126)
		// dataFilter is not invoked for failure responses, so using it instead
		// of the default converter is kludgy but it works.
		converters: {
			"text script": function() {}
		},
		dataFilter: function( response ) {
			jQuery.globalEval( response, options );
		}
	} );
};


jQuery.fn.extend( {
	wrapAll: function( html ) {
		var wrap;

		if ( this[ 0 ] ) {
			if ( isFunction( html ) ) {
				html = html.call( this[ 0 ] );
			}

			// The elements to wrap the target around
			wrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );

			if ( this[ 0 ].parentNode ) {
				wrap.insertBefore( this[ 0 ] );
			}

			wrap.map( function() {
				var elem = this;

				while ( elem.firstElementChild ) {
					elem = elem.firstElementChild;
				}

				return elem;
			} ).append( this );
		}

		return this;
	},

	wrapInner: function( html ) {
		if ( isFunction( html ) ) {
			return this.each( function( i ) {
				jQuery( this ).wrapInner( html.call( this, i ) );
			} );
		}

		return this.each( function() {
			var self = jQuery( this ),
				contents = self.contents();

			if ( contents.length ) {
				contents.wrapAll( html );

			} else {
				self.append( html );
			}
		} );
	},

	wrap: function( html ) {
		var htmlIsFunction = isFunction( html );

		return this.each( function( i ) {
			jQuery( this ).wrapAll( htmlIsFunction ? html.call( this, i ) : html );
		} );
	},

	unwrap: function( selector ) {
		this.parent( selector ).not( "body" ).each( function() {
			jQuery( this ).replaceWith( this.childNodes );
		} );
		return this;
	}
} );


jQuery.expr.pseudos.hidden = function( elem ) {
	return !jQuery.expr.pseudos.visible( elem );
};
jQuery.expr.pseudos.visible = function( elem ) {
	return !!( elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length );
};




jQuery.ajaxSettings.xhr = function() {
	try {
		return new window.XMLHttpRequest();
	} catch ( e ) {}
};

var xhrSuccessStatus = {

		// File protocol always yields status code 0, assume 200
		0: 200,

		// Support: IE <=9 only
		// #1450: sometimes IE returns 1223 when it should be 204
		1223: 204
	},
	xhrSupported = jQuery.ajaxSettings.xhr();

support.cors = !!xhrSupported && ( "withCredentials" in xhrSupported );
support.ajax = xhrSupported = !!xhrSupported;

jQuery.ajaxTransport( function( options ) {
	var callback, errorCallback;

	// Cross domain only allowed if supported through XMLHttpRequest
	if ( support.cors || xhrSupported && !options.crossDomain ) {
		return {
			send: function( headers, complete ) {
				var i,
					xhr = options.xhr();

				xhr.open(
					options.type,
					options.url,
					options.async,
					options.username,
					options.password
				);

				// Apply custom fields if provided
				if ( options.xhrFields ) {
					for ( i in options.xhrFields ) {
						xhr[ i ] = options.xhrFields[ i ];
					}
				}

				// Override mime type if needed
				if ( options.mimeType && xhr.overrideMimeType ) {
					xhr.overrideMimeType( options.mimeType );
				}

				// X-Requested-With header
				// For cross-domain requests, seeing as conditions for a preflight are
				// akin to a jigsaw puzzle, we simply never set it to be sure.
				// (it can always be set on a per-request basis or even using ajaxSetup)
				// For same-domain requests, won't change header if already provided.
				if ( !options.crossDomain && !headers[ "X-Requested-With" ] ) {
					headers[ "X-Requested-With" ] = "XMLHttpRequest";
				}

				// Set headers
				for ( i in headers ) {
					xhr.setRequestHeader( i, headers[ i ] );
				}

				// Callback
				callback = function( type ) {
					return function() {
						if ( callback ) {
							callback = errorCallback = xhr.onload =
								xhr.onerror = xhr.onabort = xhr.ontimeout =
									xhr.onreadystatechange = null;

							if ( type === "abort" ) {
								xhr.abort();
							} else if ( type === "error" ) {

								// Support: IE <=9 only
								// On a manual native abort, IE9 throws
								// errors on any property access that is not readyState
								if ( typeof xhr.status !== "number" ) {
									complete( 0, "error" );
								} else {
									complete(

										// File: protocol always yields status 0; see #8605, #14207
										xhr.status,
										xhr.statusText
									);
								}
							} else {
								complete(
									xhrSuccessStatus[ xhr.status ] || xhr.status,
									xhr.statusText,

									// Support: IE <=9 only
									// IE9 has no XHR2 but throws on binary (trac-11426)
									// For XHR2 non-text, let the caller handle it (gh-2498)
									( xhr.responseType || "text" ) !== "text"  ||
									typeof xhr.responseText !== "string" ?
										{ binary: xhr.response } :
										{ text: xhr.responseText },
									xhr.getAllResponseHeaders()
								);
							}
						}
					};
				};

				// Listen to events
				xhr.onload = callback();
				errorCallback = xhr.onerror = xhr.ontimeout = callback( "error" );

				// Support: IE 9 only
				// Use onreadystatechange to replace onabort
				// to handle uncaught aborts
				if ( xhr.onabort !== undefined ) {
					xhr.onabort = errorCallback;
				} else {
					xhr.onreadystatechange = function() {

						// Check readyState before timeout as it changes
						if ( xhr.readyState === 4 ) {

							// Allow onerror to be called first,
							// but that will not handle a native abort
							// Also, save errorCallback to a variable
							// as xhr.onerror cannot be accessed
							window.setTimeout( function() {
								if ( callback ) {
									errorCallback();
								}
							} );
						}
					};
				}

				// Create the abort callback
				callback = callback( "abort" );

				try {

					// Do send the request (this may raise an exception)
					xhr.send( options.hasContent && options.data || null );
				} catch ( e ) {

					// #14683: Only rethrow if this hasn't been notified as an error yet
					if ( callback ) {
						throw e;
					}
				}
			},

			abort: function() {
				if ( callback ) {
					callback();
				}
			}
		};
	}
} );




// Prevent auto-execution of scripts when no explicit dataType was provided (See gh-2432)
jQuery.ajaxPrefilter( function( s ) {
	if ( s.crossDomain ) {
		s.contents.script = false;
	}
} );

// Install script dataType
jQuery.ajaxSetup( {
	accepts: {
		script: "text/javascript, application/javascript, " +
			"application/ecmascript, application/x-ecmascript"
	},
	contents: {
		script: /\b(?:java|ecma)script\b/
	},
	converters: {
		"text script": function( text ) {
			jQuery.globalEval( text );
			return text;
		}
	}
} );

// Handle cache's special case and crossDomain
jQuery.ajaxPrefilter( "script", function( s ) {
	if ( s.cache === undefined ) {
		s.cache = false;
	}
	if ( s.crossDomain ) {
		s.type = "GET";
	}
} );

// Bind script tag hack transport
jQuery.ajaxTransport( "script", function( s ) {

	// This transport only deals with cross domain or forced-by-attrs requests
	if ( s.crossDomain || s.scriptAttrs ) {
		var script, callback;
		return {
			send: function( _, complete ) {
				script = jQuery( "<script>" )
					.attr( s.scriptAttrs || {} )
					.prop( { charset: s.scriptCharset, src: s.url } )
					.on( "load error", callback = function( evt ) {
						script.remove();
						callback = null;
						if ( evt ) {
							complete( evt.type === "error" ? 404 : 200, evt.type );
						}
					} );

				// Use native DOM manipulation to avoid our domManip AJAX trickery
				document.head.appendChild( script[ 0 ] );
			},
			abort: function() {
				if ( callback ) {
					callback();
				}
			}
		};
	}
} );




var oldCallbacks = [],
	rjsonp = /(=)\?(?=&|$)|\?\?/;

// Default jsonp settings
jQuery.ajaxSetup( {
	jsonp: "callback",
	jsonpCallback: function() {
		var callback = oldCallbacks.pop() || ( jQuery.expando + "_" + ( nonce++ ) );
		this[ callback ] = true;
		return callback;
	}
} );

// Detect, normalize options and install callbacks for jsonp requests
jQuery.ajaxPrefilter( "json jsonp", function( s, originalSettings, jqXHR ) {

	var callbackName, overwritten, responseContainer,
		jsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?
			"url" :
			typeof s.data === "string" &&
				( s.contentType || "" )
					.indexOf( "application/x-www-form-urlencoded" ) === 0 &&
				rjsonp.test( s.data ) && "data"
		);

	// Handle iff the expected data type is "jsonp" or we have a parameter to set
	if ( jsonProp || s.dataTypes[ 0 ] === "jsonp" ) {

		// Get callback name, remembering preexisting value associated with it
		callbackName = s.jsonpCallback = isFunction( s.jsonpCallback ) ?
			s.jsonpCallback() :
			s.jsonpCallback;

		// Insert callback into url or form data
		if ( jsonProp ) {
			s[ jsonProp ] = s[ jsonProp ].replace( rjsonp, "$1" + callbackName );
		} else if ( s.jsonp !== false ) {
			s.url += ( rquery.test( s.url ) ? "&" : "?" ) + s.jsonp + "=" + callbackName;
		}

		// Use data converter to retrieve json after script execution
		s.converters[ "script json" ] = function() {
			if ( !responseContainer ) {
				jQuery.error( callbackName + " was not called" );
			}
			return responseContainer[ 0 ];
		};

		// Force json dataType
		s.dataTypes[ 0 ] = "json";

		// Install callback
		overwritten = window[ callbackName ];
		window[ callbackName ] = function() {
			responseContainer = arguments;
		};

		// Clean-up function (fires after converters)
		jqXHR.always( function() {

			// If previous value didn't exist - remove it
			if ( overwritten === undefined ) {
				jQuery( window ).removeProp( callbackName );

			// Otherwise restore preexisting value
			} else {
				window[ callbackName ] = overwritten;
			}

			// Save back as free
			if ( s[ callbackName ] ) {

				// Make sure that re-using the options doesn't screw things around
				s.jsonpCallback = originalSettings.jsonpCallback;

				// Save the callback name for future use
				oldCallbacks.push( callbackName );
			}

			// Call if it was a function and we have a response
			if ( responseContainer && isFunction( overwritten ) ) {
				overwritten( responseContainer[ 0 ] );
			}

			responseContainer = overwritten = undefined;
		} );

		// Delegate to script
		return "script";
	}
} );




// Support: Safari 8 only
// In Safari 8 documents created via document.implementation.createHTMLDocument
// collapse sibling forms: the second one becomes a child of the first one.
// Because of that, this security measure has to be disabled in Safari 8.
// https://bugs.webkit.org/show_bug.cgi?id=137337
support.createHTMLDocument = ( function() {
	var body = document.implementation.createHTMLDocument( "" ).body;
	body.innerHTML = "<form></form><form></form>";
	return body.childNodes.length === 2;
} )();


// Argument "data" should be string of html
// context (optional): If specified, the fragment will be created in this context,
// defaults to document
// keepScripts (optional): If true, will include scripts passed in the html string
jQuery.parseHTML = function( data, context, keepScripts ) {
	if ( typeof data !== "string" ) {
		return [];
	}
	if ( typeof context === "boolean" ) {
		keepScripts = context;
		context = false;
	}

	var base, parsed, scripts;

	if ( !context ) {

		// Stop scripts or inline event handlers from being executed immediately
		// by using document.implementation
		if ( support.createHTMLDocument ) {
			context = document.implementation.createHTMLDocument( "" );

			// Set the base href for the created document
			// so any parsed elements with URLs
			// are based on the document's URL (gh-2965)
			base = context.createElement( "base" );
			base.href = document.location.href;
			context.head.appendChild( base );
		} else {
			context = document;
		}
	}

	parsed = rsingleTag.exec( data );
	scripts = !keepScripts && [];

	// Single tag
	if ( parsed ) {
		return [ context.createElement( parsed[ 1 ] ) ];
	}

	parsed = buildFragment( [ data ], context, scripts );

	if ( scripts && scripts.length ) {
		jQuery( scripts ).remove();
	}

	return jQuery.merge( [], parsed.childNodes );
};


/**
 * Load a url into a page
 */
jQuery.fn.load = function( url, params, callback ) {
	var selector, type, response,
		self = this,
		off = url.indexOf( " " );

	if ( off > -1 ) {
		selector = stripAndCollapse( url.slice( off ) );
		url = url.slice( 0, off );
	}

	// If it's a function
	if ( isFunction( params ) ) {

		// We assume that it's the callback
		callback = params;
		params = undefined;

	// Otherwise, build a param string
	} else if ( params && typeof params === "object" ) {
		type = "POST";
	}

	// If we have elements to modify, make the request
	if ( self.length > 0 ) {
		jQuery.ajax( {
			url: url,

			// If "type" variable is undefined, then "GET" method will be used.
			// Make value of this field explicit since
			// user can override it through ajaxSetup method
			type: type || "GET",
			dataType: "html",
			data: params
		} ).done( function( responseText ) {

			// Save response for use in complete callback
			response = arguments;

			self.html( selector ?

				// If a selector was specified, locate the right elements in a dummy div
				// Exclude scripts to avoid IE 'Permission Denied' errors
				jQuery( "<div>" ).append( jQuery.parseHTML( responseText ) ).find( selector ) :

				// Otherwise use the full result
				responseText );

		// If the request succeeds, this function gets "data", "status", "jqXHR"
		// but they are ignored because response was set above.
		// If it fails, this function gets "jqXHR", "status", "error"
		} ).always( callback && function( jqXHR, status ) {
			self.each( function() {
				callback.apply( this, response || [ jqXHR.responseText, status, jqXHR ] );
			} );
		} );
	}

	return this;
};




// Attach a bunch of functions for handling common AJAX events
jQuery.each( [
	"ajaxStart",
	"ajaxStop",
	"ajaxComplete",
	"ajaxError",
	"ajaxSuccess",
	"ajaxSend"
], function( i, type ) {
	jQuery.fn[ type ] = function( fn ) {
		return this.on( type, fn );
	};
} );




jQuery.expr.pseudos.animated = function( elem ) {
	return jQuery.grep( jQuery.timers, function( fn ) {
		return elem === fn.elem;
	} ).length;
};




jQuery.offset = {
	setOffset: function( elem, options, i ) {
		var curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,
			position = jQuery.css( elem, "position" ),
			curElem = jQuery( elem ),
			props = {};

		// Set position first, in-case top/left are set even on static elem
		if ( position === "static" ) {
			elem.style.position = "relative";
		}

		curOffset = curElem.offset();
		curCSSTop = jQuery.css( elem, "top" );
		curCSSLeft = jQuery.css( elem, "left" );
		calculatePosition = ( position === "absolute" || position === "fixed" ) &&
			( curCSSTop + curCSSLeft ).indexOf( "auto" ) > -1;

		// Need to be able to calculate position if either
		// top or left is auto and position is either absolute or fixed
		if ( calculatePosition ) {
			curPosition = curElem.position();
			curTop = curPosition.top;
			curLeft = curPosition.left;

		} else {
			curTop = parseFloat( curCSSTop ) || 0;
			curLeft = parseFloat( curCSSLeft ) || 0;
		}

		if ( isFunction( options ) ) {

			// Use jQuery.extend here to allow modification of coordinates argument (gh-1848)
			options = options.call( elem, i, jQuery.extend( {}, curOffset ) );
		}

		if ( options.top != null ) {
			props.top = ( options.top - curOffset.top ) + curTop;
		}
		if ( options.left != null ) {
			props.left = ( options.left - curOffset.left ) + curLeft;
		}

		if ( "using" in options ) {
			options.using.call( elem, props );

		} else {
			curElem.css( props );
		}
	}
};

jQuery.fn.extend( {

	// offset() relates an element's border box to the document origin
	offset: function( options ) {

		// Preserve chaining for setter
		if ( arguments.length ) {
			return options === undefined ?
				this :
				this.each( function( i ) {
					jQuery.offset.setOffset( this, options, i );
				} );
		}

		var rect, win,
			elem = this[ 0 ];

		if ( !elem ) {
			return;
		}

		// Return zeros for disconnected and hidden (display: none) elements (gh-2310)
		// Support: IE <=11 only
		// Running getBoundingClientRect on a
		// disconnected node in IE throws an error
		if ( !elem.getClientRects().length ) {
			return { top: 0, left: 0 };
		}

		// Get document-relative position by adding viewport scroll to viewport-relative gBCR
		rect = elem.getBoundingClientRect();
		win = elem.ownerDocument.defaultView;
		return {
			top: rect.top + win.pageYOffset,
			left: rect.left + win.pageXOffset
		};
	},

	// position() relates an element's margin box to its offset parent's padding box
	// This corresponds to the behavior of CSS absolute positioning
	position: function() {
		if ( !this[ 0 ] ) {
			return;
		}

		var offsetParent, offset, doc,
			elem = this[ 0 ],
			parentOffset = { top: 0, left: 0 };

		// position:fixed elements are offset from the viewport, which itself always has zero offset
		if ( jQuery.css( elem, "position" ) === "fixed" ) {

			// Assume position:fixed implies availability of getBoundingClientRect
			offset = elem.getBoundingClientRect();

		} else {
			offset = this.offset();

			// Account for the *real* offset parent, which can be the document or its root element
			// when a statically positioned element is identified
			doc = elem.ownerDocument;
			offsetParent = elem.offsetParent || doc.documentElement;
			while ( offsetParent &&
				( offsetParent === doc.body || offsetParent === doc.documentElement ) &&
				jQuery.css( offsetParent, "position" ) === "static" ) {

				offsetParent = offsetParent.parentNode;
			}
			if ( offsetParent && offsetParent !== elem && offsetParent.nodeType === 1 ) {

				// Incorporate borders into its offset, since they are outside its content origin
				parentOffset = jQuery( offsetParent ).offset();
				parentOffset.top += jQuery.css( offsetParent, "borderTopWidth", true );
				parentOffset.left += jQuery.css( offsetParent, "borderLeftWidth", true );
			}
		}

		// Subtract parent offsets and element margins
		return {
			top: offset.top - parentOffset.top - jQuery.css( elem, "marginTop", true ),
			left: offset.left - parentOffset.left - jQuery.css( elem, "marginLeft", true )
		};
	},

	// This method will return documentElement in the following cases:
	// 1) For the element inside the iframe without offsetParent, this method will return
	//    documentElement of the parent window
	// 2) For the hidden or detached element
	// 3) For body or html element, i.e. in case of the html node - it will return itself
	//
	// but those exceptions were never presented as a real life use-cases
	// and might be considered as more preferable results.
	//
	// This logic, however, is not guaranteed and can change at any point in the future
	offsetParent: function() {
		return this.map( function() {
			var offsetParent = this.offsetParent;

			while ( offsetParent && jQuery.css( offsetParent, "position" ) === "static" ) {
				offsetParent = offsetParent.offsetParent;
			}

			return offsetParent || documentElement;
		} );
	}
} );

// Create scrollLeft and scrollTop methods
jQuery.each( { scrollLeft: "pageXOffset", scrollTop: "pageYOffset" }, function( method, prop ) {
	var top = "pageYOffset" === prop;

	jQuery.fn[ method ] = function( val ) {
		return access( this, function( elem, method, val ) {

			// Coalesce documents and windows
			var win;
			if ( isWindow( elem ) ) {
				win = elem;
			} else if ( elem.nodeType === 9 ) {
				win = elem.defaultView;
			}

			if ( val === undefined ) {
				return win ? win[ prop ] : elem[ method ];
			}

			if ( win ) {
				win.scrollTo(
					!top ? val : win.pageXOffset,
					top ? val : win.pageYOffset
				);

			} else {
				elem[ method ] = val;
			}
		}, method, val, arguments.length );
	};
} );

// Support: Safari <=7 - 9.1, Chrome <=37 - 49
// Add the top/left cssHooks using jQuery.fn.position
// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084
// Blink bug: https://bugs.chromium.org/p/chromium/issues/detail?id=589347
// getComputedStyle returns percent when specified for top/left/bottom/right;
// rather than make the css module depend on the offset module, just check for it here
jQuery.each( [ "top", "left" ], function( i, prop ) {
	jQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,
		function( elem, computed ) {
			if ( computed ) {
				computed = curCSS( elem, prop );

				// If curCSS returns percentage, fallback to offset
				return rnumnonpx.test( computed ) ?
					jQuery( elem ).position()[ prop ] + "px" :
					computed;
			}
		}
	);
} );


// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods
jQuery.each( { Height: "height", Width: "width" }, function( name, type ) {
	jQuery.each( { padding: "inner" + name, content: type, "": "outer" + name },
		function( defaultExtra, funcName ) {

		// Margin is only for outerHeight, outerWidth
		jQuery.fn[ funcName ] = function( margin, value ) {
			var chainable = arguments.length && ( defaultExtra || typeof margin !== "boolean" ),
				extra = defaultExtra || ( margin === true || value === true ? "margin" : "border" );

			return access( this, function( elem, type, value ) {
				var doc;

				if ( isWindow( elem ) ) {

					// $( window ).outerWidth/Height return w/h including scrollbars (gh-1729)
					return funcName.indexOf( "outer" ) === 0 ?
						elem[ "inner" + name ] :
						elem.document.documentElement[ "client" + name ];
				}

				// Get document width or height
				if ( elem.nodeType === 9 ) {
					doc = elem.documentElement;

					// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],
					// whichever is greatest
					return Math.max(
						elem.body[ "scroll" + name ], doc[ "scroll" + name ],
						elem.body[ "offset" + name ], doc[ "offset" + name ],
						doc[ "client" + name ]
					);
				}

				return value === undefined ?

					// Get width or height on the element, requesting but not forcing parseFloat
					jQuery.css( elem, type, extra ) :

					// Set width or height on the element
					jQuery.style( elem, type, value, extra );
			}, type, chainable ? margin : undefined, chainable );
		};
	} );
} );


jQuery.each( ( "blur focus focusin focusout resize scroll click dblclick " +
	"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave " +
	"change select submit keydown keypress keyup contextmenu" ).split( " " ),
	function( i, name ) {

	// Handle event binding
	jQuery.fn[ name ] = function( data, fn ) {
		return arguments.length > 0 ?
			this.on( name, null, data, fn ) :
			this.trigger( name );
	};
} );

jQuery.fn.extend( {
	hover: function( fnOver, fnOut ) {
		return this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );
	}
} );




jQuery.fn.extend( {

	bind: function( types, data, fn ) {
		return this.on( types, null, data, fn );
	},
	unbind: function( types, fn ) {
		return this.off( types, null, fn );
	},

	delegate: function( selector, types, data, fn ) {
		return this.on( types, selector, data, fn );
	},
	undelegate: function( selector, types, fn ) {

		// ( namespace ) or ( selector, types [, fn] )
		return arguments.length === 1 ?
			this.off( selector, "**" ) :
			this.off( types, selector || "**", fn );
	}
} );

// Bind a function to a context, optionally partially applying any
// arguments.
// jQuery.proxy is deprecated to promote standards (specifically Function#bind)
// However, it is not slated for removal any time soon
jQuery.proxy = function( fn, context ) {
	var tmp, args, proxy;

	if ( typeof context === "string" ) {
		tmp = fn[ context ];
		context = fn;
		fn = tmp;
	}

	// Quick check to determine if target is callable, in the spec
	// this throws a TypeError, but we will just return undefined.
	if ( !isFunction( fn ) ) {
		return undefined;
	}

	// Simulated bind
	args = slice.call( arguments, 2 );
	proxy = function() {
		return fn.apply( context || this, args.concat( slice.call( arguments ) ) );
	};

	// Set the guid of unique handler to the same of original handler, so it can be removed
	proxy.guid = fn.guid = fn.guid || jQuery.guid++;

	return proxy;
};

jQuery.holdReady = function( hold ) {
	if ( hold ) {
		jQuery.readyWait++;
	} else {
		jQuery.ready( true );
	}
};
jQuery.isArray = Array.isArray;
jQuery.parseJSON = JSON.parse;
jQuery.nodeName = nodeName;
jQuery.isFunction = isFunction;
jQuery.isWindow = isWindow;
jQuery.camelCase = camelCase;
jQuery.type = toType;

jQuery.now = Date.now;

jQuery.isNumeric = function( obj ) {

	// As of jQuery 3.0, isNumeric is limited to
	// strings and numbers (primitives or objects)
	// that can be coerced to finite numbers (gh-2662)
	var type = jQuery.type( obj );
	return ( type === "number" || type === "string" ) &&

		// parseFloat NaNs numeric-cast false positives ("")
		// ...but misinterprets leading-number strings, particularly hex literals ("0x...")
		// subtraction forces infinities to NaN
		!isNaN( obj - parseFloat( obj ) );
};




// Register as a named AMD module, since jQuery can be concatenated with other
// files that may use define, but not via a proper concatenation script that
// understands anonymous AMD modules. A named AMD is safest and most robust
// way to register. Lowercase jquery is used because AMD module names are
// derived from file names, and jQuery is normally delivered in a lowercase
// file name. Do this after creating the global so that if an AMD module wants
// to call noConflict to hide this version of jQuery, it will work.

// Note that for maximum portability, libraries that are not jQuery should
// declare themselves as anonymous modules, and avoid setting a global if an
// AMD loader is present. jQuery is a special case. For more information, see
// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon

if ( true ) {
	!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function() {
		return jQuery;
	}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
}




var

	// Map over jQuery in case of overwrite
	_jQuery = window.jQuery,

	// Map over the $ in case of overwrite
	_$ = window.$;

jQuery.noConflict = function( deep ) {
	if ( window.$ === jQuery ) {
		window.$ = _$;
	}

	if ( deep && window.jQuery === jQuery ) {
		window.jQuery = _jQuery;
	}

	return jQuery;
};

// Expose jQuery and $ identifiers, even in AMD
// (#7102#comment:10, https://github.com/jquery/jquery/pull/557)
// and CommonJS for browser emulators (#13566)
if ( !noGlobal ) {
	window.jQuery = window.$ = jQuery;
}




return jQuery;
} );


/***/ }),

/***/ 1371:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_ImportPeople_vue__ = __webpack_require__(1358);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_ImportPeople_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_ImportPeople_vue__);
/* harmony namespace reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_ImportPeople_vue__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_ImportPeople_vue__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_13_7_3_vue_loader_lib_template_compiler_index_id_data_v_521bac13_hasScoped_true_buble_transforms_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_template_index_0_ImportPeople_vue__ = __webpack_require__(1376);
var disposed = false
function injectStyle (ssrContext) {
  if (disposed) return
  __webpack_require__(1372)
  __webpack_require__(1374)
}
var normalizeComponent = __webpack_require__(42)
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = "data-v-521bac13"
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_ImportPeople_vue___default.a,
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_13_7_3_vue_loader_lib_template_compiler_index_id_data_v_521bac13_hasScoped_true_buble_transforms_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_template_index_0_ImportPeople_vue__["a" /* default */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "devPkg/components/common/people_import/ImportPeople.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-loader/node_modules/vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-521bac13", Component.options)
  } else {
    hotAPI.reload("data-v-521bac13", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),

/***/ 1372:
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(1373);
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__(76)("1607df52", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../node_modules/_css-loader@0.28.11@css-loader/index.js!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-521bac13\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=styles&index=0!./ImportPeople.vue", function() {
     var newContent = require("!!../../../../node_modules/_css-loader@0.28.11@css-loader/index.js!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-521bac13\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=styles&index=0!./ImportPeople.vue");
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ 1373:
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(43)(false);
// imports


// module
exports.push([module.i, "\ninput[type=file]{\n  display: none;\n}\n/* 后期新增的样式只能再style中添加，不能使用scoped */\n.red-star {\n  color: red!important;\n}\n", ""]);

// exports


/***/ }),

/***/ 1374:
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(1375);
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__(76)("7f52f26a", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../node_modules/_css-loader@0.28.11@css-loader/index.js!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-521bac13\",\"scoped\":true,\"hasInlineConfig\":false}!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=styles&index=1!./ImportPeople.vue", function() {
     var newContent = require("!!../../../../node_modules/_css-loader@0.28.11@css-loader/index.js!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-521bac13\",\"scoped\":true,\"hasInlineConfig\":false}!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=styles&index=1!./ImportPeople.vue");
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ 1375:
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(43)(false);
// imports


// module
exports.push([module.i, "\n.table-wrap[data-v-521bac13] {\n  font-size: 14px;\n  margin-top: 20px;\n  background: #fff;\n}\n.table-wrap .el-col[data-v-521bac13]{\n  border: 1px solid #ececec;\n  height: 42px;\n  line-height: 40px;\n}\n.table-right[data-v-521bac13] {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  text-align: center;\n}\n.table-item[data-v-521bac13] {\n  /*width: 100%;*/\n  /*border-right: 1px solid #ccc;*/\n}\n.submit-button[data-v-521bac13] {\n  float: right;\n  margin-top: 20px;\n}\n.table-wrap td[data-v-521bac13]{\n  border: 1px solid #dbdde0;\n  text-align: center;\n}\n.table-wrap table[data-v-521bac13]{\n  border-collapse:collapse;\n  width: 100%;\n}\n.table-header[data-v-521bac13]{\n  width: 100px;\n}\n.table-content[data-v-521bac13]{\n  width: calc(100% - 100px)\n}\n\n", ""]);

// exports


/***/ }),

/***/ 1376:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    { staticClass: "import-wrap" },
    [
      _c(
        "el-main",
        [
          _c(
            "el-upload",
            {
              staticClass: "upload-demo",
              attrs: {
                action: _vm.fileServer,
                headers: _vm.token,
                "on-success": _vm.handleSuccess,
                "before-remove": _vm.beforeRemove,
                "on-remove": _vm.handleRemove,
                "on-error": _vm.handleError,
                limit: 1,
                "on-exceed": _vm.handleExceed,
                "file-list": _vm.fileList,
                beforeUpload: _vm.beforeAvatarUpload
              }
            },
            [
              _c("el-button", { attrs: { size: "small", type: "primary" } }, [
                _vm._v("点击上传")
              ]),
              _vm._v(" "),
              _c(
                "div",
                {
                  staticClass: "el-upload__tip",
                  attrs: { slot: "tip" },
                  slot: "tip"
                },
                [_vm._v("单次仅支持一次上传一个文件, 文件大小不可超过10M")]
              ),
              _vm._v(" "),
              _c(
                "div",
                {
                  staticClass: "el-upload__tip",
                  attrs: { slot: "tip" },
                  slot: "tip"
                },
                [_vm._v("需要修改时请删除当前文件后, 重新上传")]
              )
            ],
            1
          ),
          _vm._v(" "),
          _c(
            "el-table",
            {
              staticStyle: { width: "100%" },
              attrs: { data: _vm.rowsDataDefault, stripe: "" }
            },
            [
              _c("el-table-column", {
                attrs: { label: "系统对应表头", width: "120" },
                scopedSlots: _vm._u([
                  {
                    key: "default",
                    fn: function(scope) {
                      return [
                        _vm.uploadSuccess
                          ? _c("span", [_vm._v("上传文件表头")])
                          : _vm._e()
                      ]
                    }
                  }
                ])
              }),
              _vm._v(" "),
              _vm._l(_vm.companyHeader, function(item, index) {
                return _vm.importType == "company"
                  ? _c("el-table-column", {
                      key: item,
                      attrs: {
                        label: item,
                        align: "center",
                        width: "130",
                        "render-header": _vm.companyRenderHeader
                      },
                      scopedSlots: _vm._u(
                        [
                          {
                            key: "default",
                            fn: function(scope) {
                              return [
                                _vm.uploadSuccess
                                  ? _c(
                                      "el-select",
                                      {
                                        attrs: {
                                          clearable: "",
                                          "value-key": "col"
                                        },
                                        on: { change: _vm.changeHeader },
                                        model: {
                                          value: _vm.rowsData[index],
                                          callback: function($$v) {
                                            _vm.$set(_vm.rowsData, index, $$v)
                                          },
                                          expression: "rowsData[index]"
                                        }
                                      },
                                      _vm._l(_vm.headerData, function(option) {
                                        return _c("el-option", {
                                          key: option.col,
                                          attrs: {
                                            value: option,
                                            label: option.title,
                                            disabled: option.isChoosed
                                          }
                                        })
                                      }),
                                      1
                                    )
                                  : _vm._e()
                              ]
                            }
                          }
                        ],
                        null,
                        true
                      )
                    })
                  : _vm._e()
              }),
              _vm._v(" "),
              _vm._l(_vm.partyHeader, function(item, index) {
                return _vm.importType == "party"
                  ? _c("el-table-column", {
                      key: item,
                      attrs: {
                        label: item,
                        align: "center",
                        width: "130",
                        "render-header": _vm.partyRenderHeader
                      },
                      scopedSlots: _vm._u(
                        [
                          {
                            key: "default",
                            fn: function(scope) {
                              return [
                                _vm.uploadSuccess
                                  ? _c(
                                      "el-select",
                                      {
                                        attrs: {
                                          clearable: "",
                                          "value-key": "col"
                                        },
                                        on: { change: _vm.changeHeader },
                                        model: {
                                          value: _vm.rowsData[index],
                                          callback: function($$v) {
                                            _vm.$set(_vm.rowsData, index, $$v)
                                          },
                                          expression: "rowsData[index]"
                                        }
                                      },
                                      _vm._l(_vm.headerData, function(option) {
                                        return _c("el-option", {
                                          key: option.col,
                                          attrs: {
                                            value: option,
                                            label: option.title,
                                            disabled: option.isChoosed
                                          }
                                        })
                                      }),
                                      1
                                    )
                                  : _vm._e()
                              ]
                            }
                          }
                        ],
                        null,
                        true
                      )
                    })
                  : _vm._e()
              })
            ],
            2
          ),
          _vm._v(" "),
          _c(
            "el-button",
            {
              staticClass: "submit-button",
              attrs: {
                type: "primary",
                disabled: !_vm.uploadSuccess,
                loading: _vm.loading
              },
              on: { click: _vm.importExcel }
            },
            [_vm._v("确定导入")]
          )
        ],
        1
      )
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ __webpack_exports__["a"] = (esExports);
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-loader/node_modules/vue-hot-reload-api")      .rerender("data-v-521bac13", esExports)
  }
}

/***/ }),

/***/ 1377:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_My_Message_vue__ = __webpack_require__(1359);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_My_Message_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_My_Message_vue__);
/* harmony namespace reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_My_Message_vue__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_My_Message_vue__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_13_7_3_vue_loader_lib_template_compiler_index_id_data_v_456084a4_hasScoped_false_buble_transforms_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_template_index_0_My_Message_vue__ = __webpack_require__(1380);
var disposed = false
function injectStyle (ssrContext) {
  if (disposed) return
  __webpack_require__(1378)
}
var normalizeComponent = __webpack_require__(42)
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_My_Message_vue___default.a,
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_13_7_3_vue_loader_lib_template_compiler_index_id_data_v_456084a4_hasScoped_false_buble_transforms_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_template_index_0_My_Message_vue__["a" /* default */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "devPkg/components/personal_manage/My_Message.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-loader/node_modules/vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-456084a4", Component.options)
  } else {
    hotAPI.reload("data-v-456084a4", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),

/***/ 1378:
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(1379);
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__(76)("970c9b4a", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../node_modules/_css-loader@0.28.11@css-loader/index.js!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-456084a4\",\"scoped\":false,\"hasInlineConfig\":false}!../../../node_modules/_less-loader@4.1.0@less-loader/dist/cjs.js!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=styles&index=0!./My_Message.vue", function() {
     var newContent = require("!!../../../node_modules/_css-loader@0.28.11@css-loader/index.js!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-456084a4\",\"scoped\":false,\"hasInlineConfig\":false}!../../../node_modules/_less-loader@4.1.0@less-loader/dist/cjs.js!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=styles&index=0!./My_Message.vue");
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ 1379:
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(43)(false);
// imports


// module
exports.push([module.i, "\n.date-type-div {\n  position: relative;\n}\n.date-type-div .type {\n  position: absolute;\n  right: 0;\n  width: 100px;\n  top: 0;\n}\n", ""]);

// exports


/***/ }),

/***/ 1380:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    { staticClass: "personal-message content-manage personal-top" },
    [
      _c("my-message", {
        attrs: {
          hisToryData: _vm.hisToryData,
          rosterId: _vm.rosterId,
          mathRandom: _vm.mathRandom,
          afferentUserId: _vm.afferentUserId
        }
      }),
      _vm._v(" "),
      _c("my-experience", {
        attrs: {
          hisToryData: _vm.hisToryData,
          rosterId: _vm.rosterId,
          mathRandom: _vm.mathRandom,
          afferentUserId: _vm.afferentUserId
        }
      }),
      _vm._v(" "),
      _c("my-archiveses", {
        attrs: {
          hisToryData: _vm.hisToryData,
          rosterId: _vm.rosterId,
          mathRandom: _vm.mathRandom,
          afferentUserId: _vm.afferentUserId
        }
      })
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ __webpack_exports__["a"] = (esExports);
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-loader/node_modules/vue-hot-reload-api")      .rerender("data-v-456084a4", esExports)
  }
}

/***/ }),

/***/ 1388:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _stringify = __webpack_require__(188);

var _stringify2 = _interopRequireDefault(_stringify);

var _promise = __webpack_require__(440);

var _promise2 = _interopRequireDefault(_promise);

var _qs = __webpack_require__(1347);

var _qs2 = _interopRequireDefault(_qs);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
  data: function data() {
    var checkTime = function checkTime(rule, value, callback) {
      if (!value) {
        callback();
      } else {
        if (value > new Date().getTime()) {
          callback(new Error('时间必须选当前时间之前'));
        } else {
          callback();
        }
      }
    };

    return {
      orgCode: sessionStorage.getItem("orgCode"),

      loading: false,
      dialogLoading: false,

      searchForm: {
        name: null,
        sex: null,
        education: null,
        age: undefined,
        workAge: undefined,
        nationName: null
      },

      multiFlag: false, //批量操作的标识 false为单个操作
      peopleTableData: [], //表格数据
      currentPage: 1,
      currentPerPage: 5,
      total: null,
      peopleChoosed: [],

      tempOperateType: 'new',

      infoDialogVisible: false,
      peopleForm: { //当前编辑的人员表单
        name: null,
        sex: null,
        nation: null,
        education: null,
        borthday: {
          type: 1,
          date_time: null
        },
        workBorth: {
          type: 1,
          date_time: null
        },
        // partyBorth:     null,
        outLook: null,
        idNumber: null
      },
      rules: {
        name: [{ required: true, message: '请输入姓名', trigger: 'blur' }],
        idNumber: [{ required: true, min: 15, max: 18, message: '请输入正确的身份证号', trigger: 'blur' }],
        borthday: [{ validator: checkTime, trigger: 'blur' }, { validator: checkTime, trigger: 'change' }],
        workBorth: [{ validator: checkTime, trigger: 'blur' }, { validator: checkTime, trigger: 'change' }]
      },
      companyDialogVisible: false,
      tempPeopleId: null, //当前选中的人员的Id
      tempOrg: {}, //当前选中的公司对象
      orgList: [], //分类的树形结构
      tempId: null, //当前选中的公司
      defaultProps: {
        children: 'childrens', //分类/专题树的配置
        label: 'name'
      },

      outlookDialogVisible: false,
      outlook: null,

      // 字典对照表数据, 从后台获取
      dictionaryGender: {},
      dictionaryNation: {},
      dictionaryEducation: {},
      dictionaryOutlook: {},
      dictionaryNationPlace: {},
      techPositionList: [] //技术职务的数据
    };
  },

  props: {
    treeId: {
      type: Number,
      default: null
    }
  },
  watch: {
    "treeId": {
      handler: function handler(newV, oldV) {
        this.getPeopleTableData();
      },

      deep: true
    }
  },
  mounted: function mounted() {
    this.getDictionaryData();
    this.getPeopleTableData();
    this.getOrgList("/org_units/orgunitstree", "orgList");
  },

  methods: {
    /**
     * 清空 表单
     * @return {[type]} [description]
     */
    clearForm: function clearForm() {
      this.searchForm = {
        name: null,
        sex: null,
        education: null,
        age: undefined,
        workAge: undefined,
        nationName: null
      };
    },

    /**
     * 获取字典表数据
     * @return {[type]} [description]
     */
    getDictionaryData: function getDictionaryData() {
      var self = this;

      var config = {
        url: basePath + "/contrast/all_contrast_info",
        method: "get"
      };

      self.$request.requestAxios(config.method, config.url, null, function (response) {
        response.data.data.forEach(function (item) {
          switch (item.id) {
            case 1:
              self.dictionaryGender = item.list;
              break;
            case 2:
              self.dictionaryNation = item.list;
              break;
            case 3:
              self.dictionaryEducation = item.list;
              break;
            case 6:
              self.dictionaryOutlook = item.list;
              break;
            case 9:
              self.dictionaryNationPlace = item.list;
              break;
            case 17:
              self.techPositionList = item.list;
              break;
          }
        });
      }, function (error) {
        self.$message.error(error.data.meta.message);
      });
    },

    /**
     * 转化对应字典表的数据, 数字 > 文字
     * @param  {string} type  所需要转化的字典表名
     * @param  {number} value 所需要转化的数据
     * @return {string}       值对应的字典表名称
     */
    dictionaryTransfer: function dictionaryTransfer(type, value) {
      var self = this;
      var target = {};
      switch (type) {
        case "gender":
          target = self.dictionaryGender;
          break;
        case "nation":
          target = self.dictionaryNation;
          break;
        case "education":
          target = self.dictionaryEducation;
          break;
        case "outlook":
          target = self.dictionaryOutlook;
          break;
        case "nationPlace":
          target = self.dictionaryNationPlace;
          break;
        case "position":
          target = self.techPositionList;
          break;
      }

      for (var item in target) {
        if (target[item].key == value) {
          return target[item].value;
        }
      }
    },

    /**
     * 获取表格数据
     * @param  {number} page    页数/ 不传查询当前页
     * @param  {number} perPage 每页条数 / 不传查当前的每页
     * @return {object} 查询结束的promise
     */
    getPeopleTableData: function getPeopleTableData(page, perPage) {
      var self = this;

      self.loading = true;
      var config = {
        url: basePath + "/userimport/user/byselecter",
        method: "post",
        data: self.searchForm
      };
      self.searchForm.pageNum = page || this.currentPage, self.searchForm.pageSize = perPage || this.currentPerPage;
      self.searchForm.complayOgListStr = this.treeId;

      var p = new _promise2.default(function (resolve, reject) {
        self.$request.requestAxios(config.method, config.url, config.data, function (response) {
          self.peopleTableData = response.data.data.rows;
          self.total = response.data.data.total;
          self.transferData(self.peopleTableData); //数据转换
          self.loading = false;
          resolve("成功");
        }, function (error) {
          self.peopleTableData = [];
          self.total = null;
          self.loading = false;
          self.$message.error(error.data.meta.message);
          reject("失败");
        });
      });

      return p;
    },

    /**
     * 将返回的数据处理, 用于表格显示
     * @param  {[type]} data [description]
     * @return {[type]}      [description]
     */
    transferData: function transferData(data) {
      var self = this;

      data.forEach(function (item, index) {
        item.birthDayFormat = self.$util.timestampToTime(item.borthday).split(" ")[0];
        item.workBirthFormat = self.$util.timestampToTime(item.workBorth).split(" ")[0];
        // item.partyBirthFormat = self.$util.timestampToTime(item.partyBorth).split(" ")[0]
      });
    },
    handleSizeChange: function handleSizeChange(val) {
      this.currentPerPage = val;
      this.getPeopleTableData(null, val);
    },
    handleCurrentChange: function handleCurrentChange(val) {
      this.currentPage = val;
      this.getPeopleTableData(val, null);
    },

    /**
     * 获取公司数据(树)
     * @return none
     */
    getOrgList: function getOrgList(url, target) {
      var self = this;
      self.loading = true;
      self.orgDialogVisible = false;
      var config = {
        url: basePath + url,
        method: 'get'
      };
      self.$request.requestAxios(config.method, config.url, config.data, function (response) {
        self[target] = response.data.data;
        self.loading = false;
      }, function (error) {
        self.$message.error(error.data.meta.message);
        self.loading = false;
      });
    },

    /**
     * 添加人员
     */
    addPeople: function addPeople() {
      this.peopleForm = { //还原人员表单
        name: null,
        sex: null,
        nation: null,
        education: null,
        borthday: {
          type: 1,
          date_time: null
        },
        workBorth: {
          type: 1,
          date_time: null
        },
        // partyBorth:     null,
        outLook: null
      };
      this.tempOperateType = "new";
      this.infoDialogVisible = true;
      if (this.$refs.peopleForm) {
        this.$refs.peopleForm.clearValidate();
      }
    },

    /**
     * 点击编辑, 写入当前的人员数据
     * @param  {object} tableItem 当前点击表格对应的对象
     * @return none
     */
    editPeople: function editPeople(tableItem) {
      this.tempOperateType = "edit";
      this.infoDialogVisible = true;
      var newForm = JSON.parse((0, _stringify2.default)(tableItem));
      if (!newForm.borthday) {
        newForm.borthday = {
          type: 1,
          date_time: null
        };
      }
      if (!newForm.workBorth) {
        newForm.workBorth = {
          type: 1,
          date_time: null
        };
      }
      this.peopleForm = newForm;
    },

    /**
     * 点击确定, 提交当前人员的修改
     * @return {[type]} [description]
     */
    submitPeopleForm: function submitPeopleForm() {
      var self = this;

      self.peopleForm.userName = "这是强制修改的名字";
      self.peopleForm.mobilNumber = 121212;

      var config = {
        data: self.peopleForm
      };

      if (self.tempOperateType == "new") {
        config.url = basePath + "/hr_users/add/from_org/" + self.orgCode;
        config.method = "post";
      } else {
        config.url = basePath + "/hr_users/update/" + self.peopleForm.userId;
        config.method = "put";
      }

      self.$refs.peopleForm.validate(function (valid) {
        // 表单验证
        if (valid) {
          self.$request.requestAxios(config.method, config.url, config.data, function (response) {
            self.$message({
              type: "success",
              message: "成功"
            });
            self.$refs.peopleForm.clearValidate();
            self.getPeopleTableData().then(function () {
              self.infoDialogVisible = false;
            }); // 重新查询
          }, function (error) {
            self.$message.error(error.data.meta.message);
          });
        } else {
          self.$message.error("请检查必填字段");
        }
      });
    },

    /**
     * 当选中的table row发生变化时 记录变化后的选中人员数组
     * @param  {array} selection 选中的对象数组
     * @return none
     */
    tableSelectChanged: function tableSelectChanged(selection) {
      var self = this;
      self.peopleChoosed = [];
      if (selection) {
        selection.forEach(function (item, index) {
          self.peopleChoosed.push(item.userId);
        });
      }
    },

    /**
     * 点击修改所属公司( 单个/ 批量), 单个记录当前id, 并修改当前的操作状态
     * @param  {object}  tableItem 当前点击表格对应的对象
     * @param  {boolean} multi     是否是批量操作
     * @return none
     */
    editPeopleCompany: function editPeopleCompany(tableItem, multi) {
      if (multi) {
        this.multiFlag = true;
      } else {
        this.multiFlag = false;
        this.tempPeopleId = tableItem.userId;
      }
      this.tempOrg = {};
      this.companyDialogVisible = true;
    },

    /**
     * 点击树中的公司, 设置为选中
     * @param  {object} item 数据对象
     * @param  {object} node 节点对象
     * @return {[type]}      [description]
     */
    orgClicked: function orgClicked(item, node) {
      this.tempOrg = item;
    },

    /**
     * 提交 公司组织修改 (单个/ 批量)
     * @return {[type]}       [description]
     */
    submitOrg: function submitOrg() {
      var self = this;
      var config = {
        url: basePath + "/hr_users/batch/update/org/" + self.tempOrg.id + "/from_org/" + self.orgCode,
        method: "post",
        data: {
          list: []
        }
      };

      if (self.multiFlag) {
        //批量操作提交时需要给table变为loading
        self.loading = true;
        config.data.list = self.peopleChoosed; //批量时使用table的selection
      } else {
        config.data.list.push(self.tempPeopleId); //单个使用tempPeopleId
      }

      self.$request.requestAxios(config.method, config.url, config.data, function (response) {
        self.$message({
          type: "success",
          message: "修改成功"
        });
        self.getPeopleTableData().then(function () {
          self.companyDialogVisible = false;
        });
      }, function (error) {
        self.$message.error(error.data.meta.message);
        self.companyDialogVisible = false;
        self.loading = false;
      });
    },

    /**
     * 点击修改政治面貌(单个/ 批量), 单个记录当前id, 并修改当前的操作状态
     * @param  {object}  tableItem 当前点击表格对应的对象
     * @param  {boolean} multi     是否是批量操作
     * @return none
     */
    editOutlook: function editOutlook(tableItem, multi) {
      if (multi) {
        this.multiFlag = true;
      } else {
        this.multiFlag = false;
        this.tempPeopleId = tableItem.userId;
      }
      this.outlook = null;
      this.outlookDialogVisible = true;
    },
    submitOutlook: function submitOutlook() {
      var self = this;
      var config = {
        url: basePath + "/hr_users/batch/update/outlook/" + self.outlook + "/from_org/" + self.orgCode,
        method: "post",
        data: {
          list: []
        }
      };

      if (self.multiFlag) {
        //批量操作提交时需要给table变为loading
        self.loading = true;
        config.data.list = self.peopleChoosed; //批量时使用table的selection
      } else {
        config.data.list.push(self.tempPeopleId); //单个使用tempPeopleId
      }

      self.$request.requestAxios(config.method, config.url, config.data, function (response) {
        self.$message({
          type: "success",
          message: "修改成功"
        });

        self.getPeopleTableData().then(function () {
          self.outlookDialogVisible = false;
        });
      }, function (error) {
        self.$message.error(error.data.meta.message);
        self.outlookDialogVisible = false;
        self.loading = false;
      });
    },

    /**
     * 修改完成(单个/批量)
     * @param  {object}  tableItem 当前点击表格对应的对象
     * @param  {boolean} multi     是否是批量操作
     * @return {[type]}           [description]
     */
    editFinish: function editFinish(tableItem, multi) {
      var self = this;
      var idsString = "";

      if (multi) {
        this.multiFlag = true;
        idsString = self.peopleChoosed.join(",");
      } else {
        this.multiFlag = false;
        idsString = tableItem.userId;
      }

      var config = {
        url: basePath + "/userimport/user/" + idsString + "/buildFinish",
        method: "get"
      };
      self.$confirm("确认完成吗?", "提示", {
        confirmButtonText: '确定',
        cancelButtonText: '取消',
        type: 'warning'
      }).then(function () {
        self.loading = true;
        self.$request.requestAxios(config.method, config.url, null, function (response) {
          self.$message({
            type: "success",
            message: "已完成修改"
          });
          self.getPeopleTableData().then(function () {
            self.loading = false;
          });
        }, function (error) {
          self.$message.error(error.data.meta.message);
          self.loading = false;
        });
      }).catch(function () {});
    },

    /**
     * 删除人员(单个/批量)
     * @param  {object}  tableItem 当前点击表格对应的对象
     * @param  {boolean} multi     是否是批量操作
     * @return {[type]}           [description]
     */
    deletePeople: function deletePeople(tableItem, multi) {
      var self = this;

      var config = {
        url: basePath + "/hr_users/batch/delete/from_org/" + self.orgCode,
        method: "delete",
        data: {
          list: []
        }
      };

      if (multi) {
        this.multiFlag = true;
        config.data.list = self.peopleChoosed;
      } else {
        this.multiFlag = false;
        config.data.list.push(tableItem.userId);
      }

      self.$confirm("确认删除吗?", "提示", {
        confirmButtonText: '确定',
        cancelButtonText: '取消',
        type: 'warning'
      }).then(function () {
        self.loading = true;
        self.$request.requestAxios(config.method, config.url, { data: config.data }, function (response) {
          self.$message({
            type: "success",
            message: "删除成功"
          });
          self.getPeopleTableData().then(function () {
            self.loading = false;
          });
        }, function (error) {
          self.$message.error(error.data.meta.message);
          self.loading = false;
        });
      }).catch(function () {});
    }
  }
}; //
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

/***/ }),

/***/ 1396:
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/**!
 * Sortable
 * @author	RubaXa   <trash@rubaxa.org>
 * @author	owenm    <owen23355@gmail.com>
 * @license MIT
 */

(function sortableModule(factory) {
	"use strict";

	if (true) {
		!(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :
				__WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	}
	else if (typeof module != "undefined" && typeof module.exports != "undefined") {
		module.exports = factory();
	}
	else {
		/* jshint sub:true */
		window["Sortable"] = factory();
	}
})(function sortableFactory() {
	"use strict";

	if (typeof window === "undefined" || !window.document) {
		return function sortableError() {
			throw new Error("Sortable.js requires a window with a document");
		};
	}

	var dragEl,
		parentEl,
		ghostEl,
		cloneEl,
		rootEl,
		nextEl,
		lastDownEl,

		scrollEl,
		scrollParentEl,
		scrollCustomFn,

		oldIndex,
		newIndex,
		oldDraggableIndex,
		newDraggableIndex,

		activeGroup,
		putSortable,

		autoScrolls = [],
		scrolling = false,

		awaitingDragStarted = false,
		ignoreNextClick = false,
		sortables = [],

		pointerElemChangedInterval,
		lastPointerElemX,
		lastPointerElemY,

		tapEvt,
		touchEvt,

		moved,


		lastTarget,
		lastDirection,
		pastFirstInvertThresh = false,
		isCircumstantialInvert = false,
		lastMode, // 'swap' or 'insert'

		targetMoveDistance,

		// For positioning ghost absolutely
		ghostRelativeParent,
		ghostRelativeParentInitialScroll = [], // (left, top)

		realDragElRect, // dragEl rect after current animation

		/** @const */
		R_SPACE = /\s+/g,

		expando = 'Sortable' + (new Date).getTime(),

		win = window,
		document = win.document,
		parseInt = win.parseInt,
		setTimeout = win.setTimeout,

		$ = win.jQuery || win.Zepto,
		Polymer = win.Polymer,

		captureMode = {
			capture: false,
			passive: false
		},

		IE11OrLess = !!navigator.userAgent.match(/(?:Trident.*rv[ :]?11\.|msie|iemobile)/i),
		Edge = !!navigator.userAgent.match(/Edge/i),
		FireFox = !!navigator.userAgent.match(/firefox/i),
		Safari = !!(navigator.userAgent.match(/safari/i) && !navigator.userAgent.match(/chrome/i) && !navigator.userAgent.match(/android/i)),
		IOS = !!(navigator.userAgent.match(/iP(ad|od|hone)/i)),

		PositionGhostAbsolutely = IOS,

		CSSFloatProperty = Edge || IE11OrLess ? 'cssFloat' : 'float',

		// This will not pass for IE9, because IE9 DnD only works on anchors
		supportDraggable = ('draggable' in document.createElement('div')),

		supportCssPointerEvents = (function() {
			// false when <= IE11
			if (IE11OrLess) {
				return false;
			}
			var el = document.createElement('x');
			el.style.cssText = 'pointer-events:auto';
			return el.style.pointerEvents === 'auto';
		})(),

		_silent = false,
		_alignedSilent = false,

		abs = Math.abs,
		min = Math.min,
		max = Math.max,

		savedInputChecked = [],

		_detectDirection = function(el, options) {
			var elCSS = _css(el),
				elWidth = parseInt(elCSS.width)
					- parseInt(elCSS.paddingLeft)
					- parseInt(elCSS.paddingRight)
					- parseInt(elCSS.borderLeftWidth)
					- parseInt(elCSS.borderRightWidth),
				child1 = _getChild(el, 0, options),
				child2 = _getChild(el, 1, options),
				firstChildCSS = child1 && _css(child1),
				secondChildCSS = child2 && _css(child2),
				firstChildWidth = firstChildCSS && parseInt(firstChildCSS.marginLeft) + parseInt(firstChildCSS.marginRight) + _getRect(child1).width,
				secondChildWidth = secondChildCSS && parseInt(secondChildCSS.marginLeft) + parseInt(secondChildCSS.marginRight) + _getRect(child2).width;

			if (elCSS.display === 'flex') {
				return elCSS.flexDirection === 'column' || elCSS.flexDirection === 'column-reverse'
				? 'vertical' : 'horizontal';
			}

			if (elCSS.display === 'grid') {
				return elCSS.gridTemplateColumns.split(' ').length <= 1 ? 'vertical' : 'horizontal';
			}

			if (child1 && firstChildCSS.float !== 'none') {
				var touchingSideChild2 = firstChildCSS.float === 'left' ? 'left' : 'right';

				return child2 && (secondChildCSS.clear === 'both' || secondChildCSS.clear === touchingSideChild2) ?
					'vertical' : 'horizontal';
			}

			return (child1 &&
				(
					firstChildCSS.display === 'block' ||
					firstChildCSS.display === 'flex' ||
					firstChildCSS.display === 'table' ||
					firstChildCSS.display === 'grid' ||
					firstChildWidth >= elWidth &&
					elCSS[CSSFloatProperty] === 'none' ||
					child2 &&
					elCSS[CSSFloatProperty] === 'none' &&
					firstChildWidth + secondChildWidth > elWidth
				) ?
				'vertical' : 'horizontal'
			);
		},

		/**
		 * Detects first nearest empty sortable to X and Y position using emptyInsertThreshold.
		 * @param  {Number} x      X position
		 * @param  {Number} y      Y position
		 * @return {HTMLElement}   Element of the first found nearest Sortable
		 */
		_detectNearestEmptySortable = function(x, y) {
			for (var i = 0; i < sortables.length; i++) {
				if (_lastChild(sortables[i])) continue;

				var rect = _getRect(sortables[i]),
					threshold = sortables[i][expando].options.emptyInsertThreshold,
					insideHorizontally = x >= (rect.left - threshold) && x <= (rect.right + threshold),
					insideVertically = y >= (rect.top - threshold) && y <= (rect.bottom + threshold);

				if (threshold && insideHorizontally && insideVertically) {
					return sortables[i];
				}
			}
		},

		_isClientInRowColumn = function(x, y, el, axis, options) {
			var targetRect = _getRect(el),
				targetS1Opp = axis === 'vertical' ? targetRect.left : targetRect.top,
				targetS2Opp = axis === 'vertical' ? targetRect.right : targetRect.bottom,
				mouseOnOppAxis = axis === 'vertical' ? x : y;

			return targetS1Opp < mouseOnOppAxis && mouseOnOppAxis < targetS2Opp;
		},

		_isElInRowColumn = function(el1, el2, axis) {
			var el1Rect = el1 === dragEl && realDragElRect || _getRect(el1),
				el2Rect = el2 === dragEl && realDragElRect || _getRect(el2),
				el1S1Opp = axis === 'vertical' ? el1Rect.left : el1Rect.top,
				el1S2Opp = axis === 'vertical' ? el1Rect.right : el1Rect.bottom,
				el1OppLength = axis === 'vertical' ? el1Rect.width : el1Rect.height,
				el2S1Opp = axis === 'vertical' ? el2Rect.left : el2Rect.top,
				el2S2Opp = axis === 'vertical' ? el2Rect.right : el2Rect.bottom,
				el2OppLength = axis === 'vertical' ? el2Rect.width : el2Rect.height;

			return (
				el1S1Opp === el2S1Opp ||
				el1S2Opp === el2S2Opp ||
				(el1S1Opp + el1OppLength / 2) === (el2S1Opp + el2OppLength / 2)
			);
		},

		_getParentAutoScrollElement = function(el, includeSelf) {
			// skip to window
			if (!el || !el.getBoundingClientRect) return _getWindowScrollingElement();

			var elem = el;
			var gotSelf = false;
			do {
				// we don't need to get elem css if it isn't even overflowing in the first place (performance)
				if (elem.clientWidth < elem.scrollWidth || elem.clientHeight < elem.scrollHeight) {
					var elemCSS = _css(elem);
					if (
						elem.clientWidth < elem.scrollWidth && (elemCSS.overflowX == 'auto' || elemCSS.overflowX == 'scroll') ||
						elem.clientHeight < elem.scrollHeight && (elemCSS.overflowY == 'auto' || elemCSS.overflowY == 'scroll')
					) {
						if (!elem || !elem.getBoundingClientRect || elem === document.body) return _getWindowScrollingElement();

						if (gotSelf || includeSelf) return elem;
						gotSelf = true;
					}
				}
			/* jshint boss:true */
			} while (elem = elem.parentNode);

			return _getWindowScrollingElement();
		},

		_getWindowScrollingElement = function() {
			if (IE11OrLess) {
				return document.documentElement;
			} else {
				return document.scrollingElement;
			}
		},

		_scrollBy = function(el, x, y) {
			el.scrollLeft += x;
			el.scrollTop += y;
		},

		_autoScroll = _throttle(function (/**Event*/evt, /**Object*/options, /**HTMLElement*/rootEl, /**Boolean*/isFallback) {
			// Bug: https://bugzilla.mozilla.org/show_bug.cgi?id=505521
			if (options.scroll) {
				var _this = rootEl ? rootEl[expando] : window,
					sens = options.scrollSensitivity,
					speed = options.scrollSpeed,

					x = evt.clientX,
					y = evt.clientY,

					winScroller = _getWindowScrollingElement(),

					scrollThisInstance = false;

				// Detect scrollEl
				if (scrollParentEl !== rootEl) {
					_clearAutoScrolls();

					scrollEl = options.scroll;
					scrollCustomFn = options.scrollFn;

					if (scrollEl === true) {
						scrollEl = _getParentAutoScrollElement(rootEl, true);
						scrollParentEl = scrollEl;
					}
				}


				var layersOut = 0;
				var currentParent = scrollEl;
				do {
					var	el = currentParent,
						rect = _getRect(el),

						top = rect.top,
						bottom = rect.bottom,
						left = rect.left,
						right = rect.right,

						width = rect.width,
						height = rect.height,

						scrollWidth,
						scrollHeight,

						css,

						vx,
						vy,

						canScrollX,
						canScrollY,

						scrollPosX,
						scrollPosY;


					scrollWidth = el.scrollWidth;
					scrollHeight = el.scrollHeight;

					css = _css(el);

					scrollPosX = el.scrollLeft;
					scrollPosY = el.scrollTop;

					if (el === winScroller) {
						canScrollX = width < scrollWidth && (css.overflowX === 'auto' || css.overflowX === 'scroll' || css.overflowX === 'visible');
						canScrollY = height < scrollHeight && (css.overflowY === 'auto' || css.overflowY === 'scroll' || css.overflowY === 'visible');
					} else {
						canScrollX = width < scrollWidth && (css.overflowX === 'auto' || css.overflowX === 'scroll');
						canScrollY = height < scrollHeight && (css.overflowY === 'auto' || css.overflowY === 'scroll');
					}

					vx = canScrollX && (abs(right - x) <= sens && (scrollPosX + width) < scrollWidth) - (abs(left - x) <= sens && !!scrollPosX);

					vy = canScrollY && (abs(bottom - y) <= sens && (scrollPosY + height) < scrollHeight) - (abs(top - y) <= sens && !!scrollPosY);


					if (!autoScrolls[layersOut]) {
						for (var i = 0; i <= layersOut; i++) {
							if (!autoScrolls[i]) {
								autoScrolls[i] = {};
							}
						}
					}

					if (autoScrolls[layersOut].vx != vx || autoScrolls[layersOut].vy != vy || autoScrolls[layersOut].el !== el) {
						autoScrolls[layersOut].el = el;
						autoScrolls[layersOut].vx = vx;
						autoScrolls[layersOut].vy = vy;

						clearInterval(autoScrolls[layersOut].pid);

						if (el && (vx != 0 || vy != 0)) {
							scrollThisInstance = true;
							/* jshint loopfunc:true */
							autoScrolls[layersOut].pid = setInterval((function () {
								// emulate drag over during autoscroll (fallback), emulating native DnD behaviour
								if (isFallback && this.layer === 0) {
									Sortable.active._emulateDragOver(true);
									Sortable.active._onTouchMove(touchEvt, true);
								}
								var scrollOffsetY = autoScrolls[this.layer].vy ? autoScrolls[this.layer].vy * speed : 0;
								var scrollOffsetX = autoScrolls[this.layer].vx ? autoScrolls[this.layer].vx * speed : 0;

								if ('function' === typeof(scrollCustomFn)) {
									if (scrollCustomFn.call(_this, scrollOffsetX, scrollOffsetY, evt, touchEvt, autoScrolls[this.layer].el) !== 'continue') {
										return;
									}
								}

								_scrollBy(autoScrolls[this.layer].el, scrollOffsetX, scrollOffsetY);
							}).bind({layer: layersOut}), 24);
						}
					}
					layersOut++;
				} while (options.bubbleScroll && currentParent !== winScroller && (currentParent = _getParentAutoScrollElement(currentParent, false)));
				scrolling = scrollThisInstance; // in case another function catches scrolling as false in between when it is not
			}
		}, 30),

		_clearAutoScrolls = function () {
			autoScrolls.forEach(function(autoScroll) {
				clearInterval(autoScroll.pid);
			});
			autoScrolls = [];
		},

		_prepareGroup = function (options) {
			function toFn(value, pull) {
				return function(to, from, dragEl, evt) {
					var sameGroup = to.options.group.name &&
									from.options.group.name &&
									to.options.group.name === from.options.group.name;

					if (value == null && (pull || sameGroup)) {
						// Default pull value
						// Default pull and put value if same group
						return true;
					} else if (value == null || value === false) {
						return false;
					} else if (pull && value === 'clone') {
						return value;
					} else if (typeof value === 'function') {
						return toFn(value(to, from, dragEl, evt), pull)(to, from, dragEl, evt);
					} else {
						var otherGroup = (pull ? to : from).options.group.name;

						return (value === true ||
						(typeof value === 'string' && value === otherGroup) ||
						(value.join && value.indexOf(otherGroup) > -1));
					}
				};
			}

			var group = {};
			var originalGroup = options.group;

			if (!originalGroup || typeof originalGroup != 'object') {
				originalGroup = {name: originalGroup};
			}

			group.name = originalGroup.name;
			group.checkPull = toFn(originalGroup.pull, true);
			group.checkPut = toFn(originalGroup.put);
			group.revertClone = originalGroup.revertClone;

			options.group = group;
		},

		_checkAlignment = function(evt) {
			if (!dragEl || !dragEl.parentNode) return;
			dragEl.parentNode[expando] && dragEl.parentNode[expando]._computeIsAligned(evt);
		},

		_hideGhostForTarget = function() {
			if (!supportCssPointerEvents && ghostEl) {
				_css(ghostEl, 'display', 'none');
			}
		},

		_unhideGhostForTarget = function() {
			if (!supportCssPointerEvents && ghostEl) {
				_css(ghostEl, 'display', '');
			}
		};


	// #1184 fix - Prevent click event on fallback if dragged but item not changed position
	document.addEventListener('click', function(evt) {
		if (ignoreNextClick) {
			evt.preventDefault();
			evt.stopPropagation && evt.stopPropagation();
			evt.stopImmediatePropagation && evt.stopImmediatePropagation();
			ignoreNextClick = false;
			return false;
		}
	}, true);

	var nearestEmptyInsertDetectEvent = function(evt) {
		if (dragEl) {
			evt = evt.touches ? evt.touches[0] : evt;
			var nearest = _detectNearestEmptySortable(evt.clientX, evt.clientY);

			if (nearest) {
				// Create imitation event
				var event = {};
				for (var i in evt) {
					event[i] = evt[i];
				}
				event.target = event.rootEl = nearest;
				event.preventDefault = void 0;
				event.stopPropagation = void 0;
				nearest[expando]._onDragOver(event);
			}
		}
	};

	/**
	 * @class  Sortable
	 * @param  {HTMLElement}  el
	 * @param  {Object}       [options]
	 */
	function Sortable(el, options) {
		if (!(el && el.nodeType && el.nodeType === 1)) {
			throw 'Sortable: `el` must be HTMLElement, not ' + {}.toString.call(el);
		}

		this.el = el; // root element
		this.options = options = _extend({}, options);


		// Export instance
		el[expando] = this;

		// Default options
		var defaults = {
			group: null,
			sort: true,
			disabled: false,
			store: null,
			handle: null,
			scroll: true,
			scrollSensitivity: 30,
			scrollSpeed: 10,
			bubbleScroll: true,
			draggable: /[uo]l/i.test(el.nodeName) ? '>li' : '>*',
			swapThreshold: 1, // percentage; 0 <= x <= 1
			invertSwap: false, // invert always
			invertedSwapThreshold: null, // will be set to same as swapThreshold if default
			removeCloneOnHide: true,
			direction: function() {
				return _detectDirection(el, this.options);
			},
			ghostClass: 'sortable-ghost',
			chosenClass: 'sortable-chosen',
			dragClass: 'sortable-drag',
			ignore: 'a, img',
			filter: null,
			preventOnFilter: true,
			animation: 0,
			easing: null,
			setData: function (dataTransfer, dragEl) {
				dataTransfer.setData('Text', dragEl.textContent);
			},
			dropBubble: false,
			dragoverBubble: false,
			dataIdAttr: 'data-id',
			delay: 0,
			delayOnTouchOnly: false,
			touchStartThreshold: parseInt(window.devicePixelRatio, 10) || 1,
			forceFallback: false,
			fallbackClass: 'sortable-fallback',
			fallbackOnBody: false,
			fallbackTolerance: 0,
			fallbackOffset: {x: 0, y: 0},
			supportPointer: Sortable.supportPointer !== false && ('PointerEvent' in window),
			emptyInsertThreshold: 5
		};


		// Set default options
		for (var name in defaults) {
			!(name in options) && (options[name] = defaults[name]);
		}

		_prepareGroup(options);

		// Bind all private methods
		for (var fn in this) {
			if (fn.charAt(0) === '_' && typeof this[fn] === 'function') {
				this[fn] = this[fn].bind(this);
			}
		}

		// Setup drag mode
		this.nativeDraggable = options.forceFallback ? false : supportDraggable;

		if (this.nativeDraggable) {
			// Touch start threshold cannot be greater than the native dragstart threshold
			this.options.touchStartThreshold = 1;
		}

		// Bind events
		if (options.supportPointer) {
			_on(el, 'pointerdown', this._onTapStart);
		} else {
			_on(el, 'mousedown', this._onTapStart);
			_on(el, 'touchstart', this._onTapStart);
		}

		if (this.nativeDraggable) {
			_on(el, 'dragover', this);
			_on(el, 'dragenter', this);
		}

		sortables.push(this.el);

		// Restore sorting
		options.store && options.store.get && this.sort(options.store.get(this) || []);
	}

	Sortable.prototype = /** @lends Sortable.prototype */ {
		constructor: Sortable,

		_computeIsAligned: function(evt) {
			var target;

			if (ghostEl && !supportCssPointerEvents) {
				_hideGhostForTarget();
				target = document.elementFromPoint(evt.clientX, evt.clientY);
				_unhideGhostForTarget();
			} else {
				target = evt.target;
			}

			target = _closest(target, this.options.draggable, this.el, false);
			if (_alignedSilent) return;
			if (!dragEl || dragEl.parentNode !== this.el) return;

			var children = this.el.children;
			for (var i = 0; i < children.length; i++) {
				// Don't change for target in case it is changed to aligned before onDragOver is fired
				if (_closest(children[i], this.options.draggable, this.el, false) && children[i] !== target) {
					children[i].sortableMouseAligned = _isClientInRowColumn(evt.clientX, evt.clientY, children[i], this._getDirection(evt, null), this.options);
				}
			}
			// Used for nulling last target when not in element, nothing to do with checking if aligned
			if (!_closest(target, this.options.draggable, this.el, true)) {
				lastTarget = null;
			}

			_alignedSilent = true;
			setTimeout(function() {
				_alignedSilent = false;
			}, 30);

		},

		_getDirection: function(evt, target) {
			return (typeof this.options.direction === 'function') ? this.options.direction.call(this, evt, target, dragEl) : this.options.direction;
		},

		_onTapStart: function (/** Event|TouchEvent */evt) {
			if (!evt.cancelable) return;
			var _this = this,
				el = this.el,
				options = this.options,
				preventOnFilter = options.preventOnFilter,
				type = evt.type,
				touch = evt.touches && evt.touches[0],
				target = (touch || evt).target,
				originalTarget = evt.target.shadowRoot && ((evt.path && evt.path[0]) || (evt.composedPath && evt.composedPath()[0])) || target,
				filter = options.filter,
				startIndex,
				startDraggableIndex;

			_saveInputCheckedState(el);

			// Don't trigger start event when an element is been dragged, otherwise the evt.oldindex always wrong when set option.group.
			if (dragEl) {
				return;
			}

			if (/mousedown|pointerdown/.test(type) && evt.button !== 0 || options.disabled) {
				return; // only left button and enabled
			}

			// cancel dnd if original target is content editable
			if (originalTarget.isContentEditable) {
				return;
			}

			target = _closest(target, options.draggable, el, false);


			if (lastDownEl === target) {
				// Ignoring duplicate `down`
				return;
			}

			// Get the index of the dragged element within its parent
			startIndex = _index(target);
			startDraggableIndex = _index(target, options.draggable);

			// Check filter
			if (typeof filter === 'function') {
				if (filter.call(this, evt, target, this)) {
					_dispatchEvent(_this, originalTarget, 'filter', target, el, el, startIndex, undefined, startDraggableIndex);
					preventOnFilter && evt.cancelable && evt.preventDefault();
					return; // cancel dnd
				}
			}
			else if (filter) {
				filter = filter.split(',').some(function (criteria) {
					criteria = _closest(originalTarget, criteria.trim(), el, false);

					if (criteria) {
						_dispatchEvent(_this, criteria, 'filter', target, el, el, startIndex, undefined, startDraggableIndex);
						return true;
					}
				});

				if (filter) {
					preventOnFilter && evt.cancelable && evt.preventDefault();
					return; // cancel dnd
				}
			}

			if (options.handle && !_closest(originalTarget, options.handle, el, false)) {
				return;
			}

			// Prepare `dragstart`
			this._prepareDragStart(evt, touch, target, startIndex, startDraggableIndex);
		},


		_handleAutoScroll: function(evt, fallback) {
			if (!dragEl || !this.options.scroll) return;
			var x = evt.clientX,
				y = evt.clientY,

				elem = document.elementFromPoint(x, y),
				_this = this;

			// IE does not seem to have native autoscroll,
			// Edge's autoscroll seems too conditional,
			// MACOS Safari does not have autoscroll,
			// Firefox and Chrome are good
			if (fallback || Edge || IE11OrLess || Safari) {
				_autoScroll(evt, _this.options, elem, fallback);

				// Listener for pointer element change
				var ogElemScroller = _getParentAutoScrollElement(elem, true);
				if (
					scrolling &&
					(
						!pointerElemChangedInterval ||
						x !== lastPointerElemX ||
						y !== lastPointerElemY
					)
				) {

					pointerElemChangedInterval && clearInterval(pointerElemChangedInterval);
					// Detect for pointer elem change, emulating native DnD behaviour
					pointerElemChangedInterval = setInterval(function() {
						if (!dragEl) return;
						// could also check if scroll direction on newElem changes due to parent autoscrolling
						var newElem = _getParentAutoScrollElement(document.elementFromPoint(x, y), true);
						if (newElem !== ogElemScroller) {
							ogElemScroller = newElem;
							_clearAutoScrolls();
							_autoScroll(evt, _this.options, ogElemScroller, fallback);
						}
					}, 10);
					lastPointerElemX = x;
					lastPointerElemY = y;
				}

			} else {
				// if DnD is enabled (and browser has good autoscrolling), first autoscroll will already scroll, so get parent autoscroll of first autoscroll
				if (!_this.options.bubbleScroll || _getParentAutoScrollElement(elem, true) === _getWindowScrollingElement()) {
					_clearAutoScrolls();
					return;
				}
				_autoScroll(evt, _this.options, _getParentAutoScrollElement(elem, false), false);
			}
		},

		_prepareDragStart: function (/** Event */evt, /** Touch */touch, /** HTMLElement */target, /** Number */startIndex, /** Number */startDraggableIndex) {
			var _this = this,
				el = _this.el,
				options = _this.options,
				ownerDocument = el.ownerDocument,
				dragStartFn;

			if (target && !dragEl && (target.parentNode === el)) {
				rootEl = el;
				dragEl = target;
				parentEl = dragEl.parentNode;
				nextEl = dragEl.nextSibling;
				lastDownEl = target;
				activeGroup = options.group;
				oldIndex = startIndex;
				oldDraggableIndex = startDraggableIndex;

				tapEvt = {
					target: dragEl,
					clientX: (touch || evt).clientX,
					clientY: (touch || evt).clientY
				};

				this._lastX = (touch || evt).clientX;
				this._lastY = (touch || evt).clientY;

				dragEl.style['will-change'] = 'all';
				// undo animation if needed
				dragEl.style.transition = '';
				dragEl.style.transform = '';

				dragStartFn = function () {
					// Delayed drag has been triggered
					// we can re-enable the events: touchmove/mousemove
					_this._disableDelayedDragEvents();

					if (!FireFox && _this.nativeDraggable) {
						dragEl.draggable = true;
					}

					// Bind the events: dragstart/dragend
					_this._triggerDragStart(evt, touch);

					// Drag start event
					_dispatchEvent(_this, rootEl, 'choose', dragEl, rootEl, rootEl, oldIndex, undefined, oldDraggableIndex);

					// Chosen item
					_toggleClass(dragEl, options.chosenClass, true);
				};

				// Disable "draggable"
				options.ignore.split(',').forEach(function (criteria) {
					_find(dragEl, criteria.trim(), _disableDraggable);
				});

				_on(ownerDocument, 'dragover', nearestEmptyInsertDetectEvent);
				_on(ownerDocument, 'mousemove', nearestEmptyInsertDetectEvent);
				_on(ownerDocument, 'touchmove', nearestEmptyInsertDetectEvent);

				_on(ownerDocument, 'mouseup', _this._onDrop);
				_on(ownerDocument, 'touchend', _this._onDrop);
				_on(ownerDocument, 'touchcancel', _this._onDrop);

				// Make dragEl draggable (must be before delay for FireFox)
				if (FireFox && this.nativeDraggable) {
					this.options.touchStartThreshold = 4;
					dragEl.draggable = true;
				}

				// Delay is impossible for native DnD in Edge or IE
				if (options.delay && (options.delayOnTouchOnly ? touch : true) && (!this.nativeDraggable || !(Edge || IE11OrLess))) {
					// If the user moves the pointer or let go the click or touch
					// before the delay has been reached:
					// disable the delayed drag
					_on(ownerDocument, 'mouseup', _this._disableDelayedDrag);
					_on(ownerDocument, 'touchend', _this._disableDelayedDrag);
					_on(ownerDocument, 'touchcancel', _this._disableDelayedDrag);
					_on(ownerDocument, 'mousemove', _this._delayedDragTouchMoveHandler);
					_on(ownerDocument, 'touchmove', _this._delayedDragTouchMoveHandler);
					options.supportPointer && _on(ownerDocument, 'pointermove', _this._delayedDragTouchMoveHandler);

					_this._dragStartTimer = setTimeout(dragStartFn, options.delay);
				} else {
					dragStartFn();
				}
			}
		},

		_delayedDragTouchMoveHandler: function (/** TouchEvent|PointerEvent **/e) {
			var touch = e.touches ? e.touches[0] : e;
			if (max(abs(touch.clientX - this._lastX), abs(touch.clientY - this._lastY))
					>= Math.floor(this.options.touchStartThreshold / (this.nativeDraggable && window.devicePixelRatio || 1))
			) {
				this._disableDelayedDrag();
			}
		},

		_disableDelayedDrag: function () {
			dragEl && _disableDraggable(dragEl);
			clearTimeout(this._dragStartTimer);

			this._disableDelayedDragEvents();
		},

		_disableDelayedDragEvents: function () {
			var ownerDocument = this.el.ownerDocument;
			_off(ownerDocument, 'mouseup', this._disableDelayedDrag);
			_off(ownerDocument, 'touchend', this._disableDelayedDrag);
			_off(ownerDocument, 'touchcancel', this._disableDelayedDrag);
			_off(ownerDocument, 'mousemove', this._delayedDragTouchMoveHandler);
			_off(ownerDocument, 'touchmove', this._delayedDragTouchMoveHandler);
			_off(ownerDocument, 'pointermove', this._delayedDragTouchMoveHandler);
		},

		_triggerDragStart: function (/** Event */evt, /** Touch */touch) {
			touch = touch || (evt.pointerType == 'touch' ? evt : null);

			if (!this.nativeDraggable || touch) {
				if (this.options.supportPointer) {
					_on(document, 'pointermove', this._onTouchMove);
				} else if (touch) {
					_on(document, 'touchmove', this._onTouchMove);
				} else {
					_on(document, 'mousemove', this._onTouchMove);
				}
			} else {
				_on(dragEl, 'dragend', this);
				_on(rootEl, 'dragstart', this._onDragStart);
			}

			try {
				if (document.selection) {
					// Timeout neccessary for IE9
					_nextTick(function () {
						document.selection.empty();
					});
				} else {
					window.getSelection().removeAllRanges();
				}
			} catch (err) {
			}
		},

		_dragStarted: function (fallback, evt) {
			awaitingDragStarted = false;
			if (rootEl && dragEl) {
				if (this.nativeDraggable) {
					_on(document, 'dragover', this._handleAutoScroll);
					_on(document, 'dragover', _checkAlignment);
				}
				var options = this.options;

				// Apply effect
				!fallback && _toggleClass(dragEl, options.dragClass, false);
				_toggleClass(dragEl, options.ghostClass, true);

				// In case dragging an animated element
				_css(dragEl, 'transform', '');

				Sortable.active = this;

				fallback && this._appendGhost();

				// Drag start event
				_dispatchEvent(this, rootEl, 'start', dragEl, rootEl, rootEl, oldIndex, undefined, oldDraggableIndex, undefined, evt);
			} else {
				this._nulling();
			}
		},

		_emulateDragOver: function (forAutoScroll) {
			if (touchEvt) {
				if (this._lastX === touchEvt.clientX && this._lastY === touchEvt.clientY && !forAutoScroll) {
					return;
				}
				this._lastX = touchEvt.clientX;
				this._lastY = touchEvt.clientY;

				_hideGhostForTarget();

				var target = document.elementFromPoint(touchEvt.clientX, touchEvt.clientY);
				var parent = target;

				while (target && target.shadowRoot) {
					target = target.shadowRoot.elementFromPoint(touchEvt.clientX, touchEvt.clientY);
					if (target === parent) break;
					parent = target;
				}

				if (parent) {
					do {
						if (parent[expando]) {
							var inserted;

							inserted = parent[expando]._onDragOver({
								clientX: touchEvt.clientX,
								clientY: touchEvt.clientY,
								target: target,
								rootEl: parent
							});

							if (inserted && !this.options.dragoverBubble) {
								break;
							}
						}

						target = parent; // store last element
					}
					/* jshint boss:true */
					while (parent = parent.parentNode);
				}
				dragEl.parentNode[expando]._computeIsAligned(touchEvt);

				_unhideGhostForTarget();
			}
		},


		_onTouchMove: function (/**TouchEvent*/evt, forAutoScroll) {
			if (tapEvt) {
				var	options = this.options,
					fallbackTolerance = options.fallbackTolerance,
					fallbackOffset = options.fallbackOffset,
					touch = evt.touches ? evt.touches[0] : evt,
					matrix = ghostEl && _matrix(ghostEl),
					scaleX = ghostEl && matrix && matrix.a,
					scaleY = ghostEl && matrix && matrix.d,
					relativeScrollOffset = PositionGhostAbsolutely && ghostRelativeParent && _getRelativeScrollOffset(ghostRelativeParent),
					dx = ((touch.clientX - tapEvt.clientX)
							+ fallbackOffset.x) / (scaleX || 1)
							+ (relativeScrollOffset ? (relativeScrollOffset[0] - ghostRelativeParentInitialScroll[0]) : 0) / (scaleX || 1),
					dy = ((touch.clientY - tapEvt.clientY)
							+ fallbackOffset.y) / (scaleY || 1)
							+ (relativeScrollOffset ? (relativeScrollOffset[1] - ghostRelativeParentInitialScroll[1]) : 0) / (scaleY || 1),
					translate3d = evt.touches ? 'translate3d(' + dx + 'px,' + dy + 'px,0)' : 'translate(' + dx + 'px,' + dy + 'px)';

				// only set the status to dragging, when we are actually dragging
				if (!Sortable.active && !awaitingDragStarted) {
					if (fallbackTolerance &&
						min(abs(touch.clientX - this._lastX), abs(touch.clientY - this._lastY)) < fallbackTolerance
					) {
						return;
					}
					this._onDragStart(evt, true);
				}

				!forAutoScroll && this._handleAutoScroll(touch, true);

				moved = true;
				touchEvt = touch;

				_css(ghostEl, 'webkitTransform', translate3d);
				_css(ghostEl, 'mozTransform', translate3d);
				_css(ghostEl, 'msTransform', translate3d);
				_css(ghostEl, 'transform', translate3d);

				evt.cancelable && evt.preventDefault();
			}
		},

		_appendGhost: function () {
			// Bug if using scale(): https://stackoverflow.com/questions/2637058
			// Not being adjusted for
			if (!ghostEl) {
				var container = this.options.fallbackOnBody ? document.body : rootEl,
					rect = _getRect(dragEl, true, container, !PositionGhostAbsolutely),
					css = _css(dragEl),
					options = this.options;

				// Position absolutely
				if (PositionGhostAbsolutely) {
					// Get relatively positioned parent
					ghostRelativeParent = container;

					while (
						_css(ghostRelativeParent, 'position') === 'static' &&
						_css(ghostRelativeParent, 'transform') === 'none' &&
						ghostRelativeParent !== document
					) {
						ghostRelativeParent = ghostRelativeParent.parentNode;
					}

					if (ghostRelativeParent !== document) {
						var ghostRelativeParentRect = _getRect(ghostRelativeParent, true);

						rect.top -= ghostRelativeParentRect.top;
						rect.left -= ghostRelativeParentRect.left;
					}

					if (ghostRelativeParent !== document.body && ghostRelativeParent !== document.documentElement) {
						if (ghostRelativeParent === document) ghostRelativeParent = _getWindowScrollingElement();

						rect.top += ghostRelativeParent.scrollTop;
						rect.left += ghostRelativeParent.scrollLeft;
					} else {
						ghostRelativeParent = _getWindowScrollingElement();
					}
					ghostRelativeParentInitialScroll = _getRelativeScrollOffset(ghostRelativeParent);
				}


				ghostEl = dragEl.cloneNode(true);

				_toggleClass(ghostEl, options.ghostClass, false);
				_toggleClass(ghostEl, options.fallbackClass, true);
				_toggleClass(ghostEl, options.dragClass, true);

				_css(ghostEl, 'box-sizing', 'border-box');
				_css(ghostEl, 'margin', 0);
				_css(ghostEl, 'top', rect.top);
				_css(ghostEl, 'left', rect.left);
				_css(ghostEl, 'width', rect.width);
				_css(ghostEl, 'height', rect.height);
				_css(ghostEl, 'opacity', '0.8');
				_css(ghostEl, 'position', (PositionGhostAbsolutely ? 'absolute' : 'fixed'));
				_css(ghostEl, 'zIndex', '100000');
				_css(ghostEl, 'pointerEvents', 'none');

				container.appendChild(ghostEl);
			}
		},

		_onDragStart: function (/**Event*/evt, /**boolean*/fallback) {
			var _this = this;
			var dataTransfer = evt.dataTransfer;
			var options = _this.options;

			// Setup clone
			cloneEl = _clone(dragEl);

			cloneEl.draggable = false;
			cloneEl.style['will-change'] = '';

			this._hideClone();

			_toggleClass(cloneEl, _this.options.chosenClass, false);


			// #1143: IFrame support workaround
			_this._cloneId = _nextTick(function () {
				if (!_this.options.removeCloneOnHide) {
					rootEl.insertBefore(cloneEl, dragEl);
				}
				_dispatchEvent(_this, rootEl, 'clone', dragEl);
			});


			!fallback && _toggleClass(dragEl, options.dragClass, true);

			// Set proper drop events
			if (fallback) {
				ignoreNextClick = true;
				_this._loopId = setInterval(_this._emulateDragOver, 50);
			} else {
				// Undo what was set in _prepareDragStart before drag started
				_off(document, 'mouseup', _this._onDrop);
				_off(document, 'touchend', _this._onDrop);
				_off(document, 'touchcancel', _this._onDrop);

				if (dataTransfer) {
					dataTransfer.effectAllowed = 'move';
					options.setData && options.setData.call(_this, dataTransfer, dragEl);
				}

				_on(document, 'drop', _this);

				// #1276 fix:
				_css(dragEl, 'transform', 'translateZ(0)');
			}

			awaitingDragStarted = true;

			_this._dragStartId = _nextTick(_this._dragStarted.bind(_this, fallback, evt));
			_on(document, 'selectstart', _this);
			if (Safari) {
				_css(document.body, 'user-select', 'none');
			}
		},


		// Returns true - if no further action is needed (either inserted or another condition)
		_onDragOver: function (/**Event*/evt) {
			var el = this.el,
				target = evt.target,
				dragRect,
				targetRect,
				revert,
				options = this.options,
				group = options.group,
				activeSortable = Sortable.active,
				isOwner = (activeGroup === group),
				canSort = options.sort,
				_this = this;

			if (_silent) return;

			// Return invocation when dragEl is inserted (or completed)
			function completed(insertion) {
				if (insertion) {
					if (isOwner) {
						activeSortable._hideClone();
					} else {
						activeSortable._showClone(_this);
					}

					if (activeSortable) {
						// Set ghost class to new sortable's ghost class
						_toggleClass(dragEl, putSortable ? putSortable.options.ghostClass : activeSortable.options.ghostClass, false);
						_toggleClass(dragEl, options.ghostClass, true);
					}

					if (putSortable !== _this && _this !== Sortable.active) {
						putSortable = _this;
					} else if (_this === Sortable.active) {
						putSortable = null;
					}

					// Animation
					dragRect && _this._animate(dragRect, dragEl);
					target && targetRect && _this._animate(targetRect, target);
				}


				// Null lastTarget if it is not inside a previously swapped element
				if ((target === dragEl && !dragEl.animated) || (target === el && !target.animated)) {
					lastTarget = null;
				}

				// no bubbling and not fallback
				if (!options.dragoverBubble && !evt.rootEl && target !== document) {
					_this._handleAutoScroll(evt);
					dragEl.parentNode[expando]._computeIsAligned(evt);

					// Do not detect for empty insert if already inserted
					!insertion && nearestEmptyInsertDetectEvent(evt);
				}

				!options.dragoverBubble && evt.stopPropagation && evt.stopPropagation();

				return true;
			}

			// Call when dragEl has been inserted
			function changed() {
				_dispatchEvent(_this, rootEl, 'change', target, el, rootEl, oldIndex, _index(dragEl), oldDraggableIndex, _index(dragEl, options.draggable), evt);
			}


			if (evt.preventDefault !== void 0) {
				evt.cancelable && evt.preventDefault();
			}


			moved = true;

			target = _closest(target, options.draggable, el, true);

			// target is dragEl or target is animated
			if (dragEl.contains(evt.target) || target.animated) {
				return completed(false);
			}

			if (target !== dragEl) {
				ignoreNextClick = false;
			}

			if (activeSortable && !options.disabled &&
				(isOwner
					? canSort || (revert = !rootEl.contains(dragEl)) // Reverting item into the original list
					: (
						putSortable === this ||
						(
							(this.lastPutMode = activeGroup.checkPull(this, activeSortable, dragEl, evt)) &&
							group.checkPut(this, activeSortable, dragEl, evt)
						)
					)
				)
			) {
				var axis = this._getDirection(evt, target);

				dragRect = _getRect(dragEl);

				if (revert) {
					this._hideClone();
					parentEl = rootEl; // actualization

					if (nextEl) {
						rootEl.insertBefore(dragEl, nextEl);
					} else {
						rootEl.appendChild(dragEl);
					}

					return completed(true);
				}

				var elLastChild = _lastChild(el);

				if (!elLastChild || _ghostIsLast(evt, axis, el) && !elLastChild.animated) {
					// assign target only if condition is true
					if (elLastChild && el === evt.target) {
						target = elLastChild;
					}

					if (target) {
						targetRect = _getRect(target);
					}

					if (isOwner) {
						activeSortable._hideClone();
					} else {
						activeSortable._showClone(this);
					}

					if (_onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, !!target) !== false) {
						el.appendChild(dragEl);
						parentEl = el; // actualization
						realDragElRect = null;

						changed();
						return completed(true);
					}
				}
				else if (target && target !== dragEl && target.parentNode === el) {
					var direction = 0,
						targetBeforeFirstSwap,
						aligned = target.sortableMouseAligned,
						differentLevel = dragEl.parentNode !== el,
						side1 = axis === 'vertical' ? 'top' : 'left',
						scrolledPastTop = _isScrolledPast(target, 'top') || _isScrolledPast(dragEl, 'top'),
						scrollBefore = scrolledPastTop ? scrolledPastTop.scrollTop : void 0;


					if (lastTarget !== target) {
						lastMode = null;
						targetBeforeFirstSwap = _getRect(target)[side1];
						pastFirstInvertThresh = false;
					}

					// Reference: https://www.lucidchart.com/documents/view/10fa0e93-e362-4126-aca2-b709ee56bd8b/0
					if (
						_isElInRowColumn(dragEl, target, axis) && aligned ||
						differentLevel ||
						scrolledPastTop ||
						options.invertSwap ||
						lastMode === 'insert' ||
						// Needed, in the case that we are inside target and inserted because not aligned... aligned will stay false while inside
						// and lastMode will change to 'insert', but we must swap
						lastMode === 'swap'
					) {
						// New target that we will be inside
						if (lastMode !== 'swap') {
							isCircumstantialInvert = options.invertSwap || differentLevel;
						}

						direction = _getSwapDirection(evt, target, axis,
							options.swapThreshold, options.invertedSwapThreshold == null ? options.swapThreshold : options.invertedSwapThreshold,
							isCircumstantialInvert,
							lastTarget === target);
						lastMode = 'swap';
					} else {
						// Insert at position
						direction = _getInsertDirection(target);
						lastMode = 'insert';
					}
					if (direction === 0) return completed(false);

					realDragElRect = null;
					lastTarget = target;

					lastDirection = direction;

					targetRect = _getRect(target);

					var nextSibling = target.nextElementSibling,
						after = false;

					after = direction === 1;

					var moveVector = _onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, after);

					if (moveVector !== false) {
						if (moveVector === 1 || moveVector === -1) {
							after = (moveVector === 1);
						}

						_silent = true;
						setTimeout(_unsilent, 30);

						if (isOwner) {
							activeSortable._hideClone();
						} else {
							activeSortable._showClone(this);
						}

						if (after && !nextSibling) {
							el.appendChild(dragEl);
						} else {
							target.parentNode.insertBefore(dragEl, after ? nextSibling : target);
						}

						// Undo chrome's scroll adjustment
						if (scrolledPastTop) {
							_scrollBy(scrolledPastTop, 0, scrollBefore - scrolledPastTop.scrollTop);
						}

						parentEl = dragEl.parentNode; // actualization

						// must be done before animation
						if (targetBeforeFirstSwap !== undefined && !isCircumstantialInvert) {
							targetMoveDistance = abs(targetBeforeFirstSwap - _getRect(target)[side1]);
						}
						changed();

						return completed(true);
					}
				}

				if (el.contains(dragEl)) {
					return completed(false);
				}
			}

			return false;
		},

		_animate: function (prevRect, target) {
			var ms = this.options.animation;

			if (ms) {
				var currentRect = _getRect(target);

				if (target === dragEl) {
					realDragElRect = currentRect;
				}

				if (prevRect.nodeType === 1) {
					prevRect = _getRect(prevRect);
				}

				// Check if actually moving position
				if ((prevRect.left + prevRect.width / 2) !== (currentRect.left + currentRect.width / 2)
					|| (prevRect.top + prevRect.height / 2) !== (currentRect.top + currentRect.height / 2)
				) {
					var matrix = _matrix(this.el),
						scaleX = matrix && matrix.a,
						scaleY = matrix && matrix.d;

					_css(target, 'transition', 'none');
					_css(target, 'transform', 'translate3d('
						+ (prevRect.left - currentRect.left) / (scaleX ? scaleX : 1) + 'px,'
						+ (prevRect.top - currentRect.top) / (scaleY ? scaleY : 1) + 'px,0)'
					);

					this._repaint(target);
					_css(target, 'transition', 'transform ' + ms + 'ms' + (this.options.easing ? ' ' + this.options.easing : ''));
					_css(target, 'transform', 'translate3d(0,0,0)');
				}

				(typeof target.animated === 'number') && clearTimeout(target.animated);
				target.animated = setTimeout(function () {
					_css(target, 'transition', '');
					_css(target, 'transform', '');
					target.animated = false;
				}, ms);
			}
		},

		_repaint: function(target) {
			return target.offsetWidth;
		},

		_offMoveEvents: function() {
			_off(document, 'touchmove', this._onTouchMove);
			_off(document, 'pointermove', this._onTouchMove);
			_off(document, 'dragover', nearestEmptyInsertDetectEvent);
			_off(document, 'mousemove', nearestEmptyInsertDetectEvent);
			_off(document, 'touchmove', nearestEmptyInsertDetectEvent);
		},

		_offUpEvents: function () {
			var ownerDocument = this.el.ownerDocument;

			_off(ownerDocument, 'mouseup', this._onDrop);
			_off(ownerDocument, 'touchend', this._onDrop);
			_off(ownerDocument, 'pointerup', this._onDrop);
			_off(ownerDocument, 'touchcancel', this._onDrop);
			_off(document, 'selectstart', this);
		},

		_onDrop: function (/**Event*/evt) {
			var el = this.el,
				options = this.options;
			awaitingDragStarted = false;
			scrolling = false;
			isCircumstantialInvert = false;
			pastFirstInvertThresh = false;

			clearInterval(this._loopId);

			clearInterval(pointerElemChangedInterval);
			_clearAutoScrolls();
			_cancelThrottle();

			clearTimeout(this._dragStartTimer);

			_cancelNextTick(this._cloneId);
			_cancelNextTick(this._dragStartId);

			// Unbind events
			_off(document, 'mousemove', this._onTouchMove);


			if (this.nativeDraggable) {
				_off(document, 'drop', this);
				_off(el, 'dragstart', this._onDragStart);
				_off(document, 'dragover', this._handleAutoScroll);
				_off(document, 'dragover', _checkAlignment);
			}

			if (Safari) {
				_css(document.body, 'user-select', '');
			}

			this._offMoveEvents();
			this._offUpEvents();

			if (evt) {
				if (moved) {
					evt.cancelable && evt.preventDefault();
					!options.dropBubble && evt.stopPropagation();
				}

				ghostEl && ghostEl.parentNode && ghostEl.parentNode.removeChild(ghostEl);

				if (rootEl === parentEl || (putSortable && putSortable.lastPutMode !== 'clone')) {
					// Remove clone
					cloneEl && cloneEl.parentNode && cloneEl.parentNode.removeChild(cloneEl);
				}

				if (dragEl) {
					if (this.nativeDraggable) {
						_off(dragEl, 'dragend', this);
					}

					_disableDraggable(dragEl);
					dragEl.style['will-change'] = '';

					// Remove class's
					_toggleClass(dragEl, putSortable ? putSortable.options.ghostClass : this.options.ghostClass, false);
					_toggleClass(dragEl, this.options.chosenClass, false);

					// Drag stop event
					_dispatchEvent(this, rootEl, 'unchoose', dragEl, parentEl, rootEl, oldIndex, null, oldDraggableIndex, null, evt);

					if (rootEl !== parentEl) {
						newIndex = _index(dragEl);
						newDraggableIndex = _index(dragEl, options.draggable);

						if (newIndex >= 0) {
							// Add event
							_dispatchEvent(null, parentEl, 'add', dragEl, parentEl, rootEl, oldIndex, newIndex, oldDraggableIndex, newDraggableIndex, evt);

							// Remove event
							_dispatchEvent(this, rootEl, 'remove', dragEl, parentEl, rootEl, oldIndex, newIndex, oldDraggableIndex, newDraggableIndex, evt);

							// drag from one list and drop into another
							_dispatchEvent(null, parentEl, 'sort', dragEl, parentEl, rootEl, oldIndex, newIndex, oldDraggableIndex, newDraggableIndex, evt);
							_dispatchEvent(this, rootEl, 'sort', dragEl, parentEl, rootEl, oldIndex, newIndex, oldDraggableIndex, newDraggableIndex, evt);
						}

						putSortable && putSortable.save();
					}
					else {
						if (dragEl.nextSibling !== nextEl) {
							// Get the index of the dragged element within its parent
							newIndex = _index(dragEl);
							newDraggableIndex = _index(dragEl, options.draggable);

							if (newIndex >= 0) {
								// drag & drop within the same list
								_dispatchEvent(this, rootEl, 'update', dragEl, parentEl, rootEl, oldIndex, newIndex, oldDraggableIndex, newDraggableIndex, evt);
								_dispatchEvent(this, rootEl, 'sort', dragEl, parentEl, rootEl, oldIndex, newIndex, oldDraggableIndex, newDraggableIndex, evt);
							}
						}
					}

					if (Sortable.active) {
						/* jshint eqnull:true */
						if (newIndex == null || newIndex === -1) {
							newIndex = oldIndex;
							newDraggableIndex = oldDraggableIndex;
						}
						_dispatchEvent(this, rootEl, 'end', dragEl, parentEl, rootEl, oldIndex, newIndex, oldDraggableIndex, newDraggableIndex, evt);

						// Save sorting
						this.save();
					}
				}

			}
			this._nulling();
		},

		_nulling: function() {
			rootEl =
			dragEl =
			parentEl =
			ghostEl =
			nextEl =
			cloneEl =
			lastDownEl =

			scrollEl =
			scrollParentEl =
			autoScrolls.length =

			pointerElemChangedInterval =
			lastPointerElemX =
			lastPointerElemY =

			tapEvt =
			touchEvt =

			moved =
			newIndex =
			oldIndex =

			lastTarget =
			lastDirection =

			realDragElRect =

			putSortable =
			activeGroup =
			Sortable.active = null;

			savedInputChecked.forEach(function (el) {
				el.checked = true;
			});

			savedInputChecked.length = 0;
		},

		handleEvent: function (/**Event*/evt) {
			switch (evt.type) {
				case 'drop':
				case 'dragend':
					this._onDrop(evt);
					break;

				case 'dragenter':
				case 'dragover':
					if (dragEl) {
						this._onDragOver(evt);
						_globalDragOver(evt);
					}
					break;

				case 'selectstart':
					evt.preventDefault();
					break;
			}
		},


		/**
		 * Serializes the item into an array of string.
		 * @returns {String[]}
		 */
		toArray: function () {
			var order = [],
				el,
				children = this.el.children,
				i = 0,
				n = children.length,
				options = this.options;

			for (; i < n; i++) {
				el = children[i];
				if (_closest(el, options.draggable, this.el, false)) {
					order.push(el.getAttribute(options.dataIdAttr) || _generateId(el));
				}
			}

			return order;
		},


		/**
		 * Sorts the elements according to the array.
		 * @param  {String[]}  order  order of the items
		 */
		sort: function (order) {
			var items = {}, rootEl = this.el;

			this.toArray().forEach(function (id, i) {
				var el = rootEl.children[i];

				if (_closest(el, this.options.draggable, rootEl, false)) {
					items[id] = el;
				}
			}, this);

			order.forEach(function (id) {
				if (items[id]) {
					rootEl.removeChild(items[id]);
					rootEl.appendChild(items[id]);
				}
			});
		},


		/**
		 * Save the current sorting
		 */
		save: function () {
			var store = this.options.store;
			store && store.set && store.set(this);
		},


		/**
		 * For each element in the set, get the first element that matches the selector by testing the element itself and traversing up through its ancestors in the DOM tree.
		 * @param   {HTMLElement}  el
		 * @param   {String}       [selector]  default: `options.draggable`
		 * @returns {HTMLElement|null}
		 */
		closest: function (el, selector) {
			return _closest(el, selector || this.options.draggable, this.el, false);
		},


		/**
		 * Set/get option
		 * @param   {string} name
		 * @param   {*}      [value]
		 * @returns {*}
		 */
		option: function (name, value) {
			var options = this.options;

			if (value === void 0) {
				return options[name];
			} else {
				options[name] = value;

				if (name === 'group') {
					_prepareGroup(options);
				}
			}
		},


		/**
		 * Destroy
		 */
		destroy: function () {
			var el = this.el;

			el[expando] = null;

			_off(el, 'mousedown', this._onTapStart);
			_off(el, 'touchstart', this._onTapStart);
			_off(el, 'pointerdown', this._onTapStart);

			if (this.nativeDraggable) {
				_off(el, 'dragover', this);
				_off(el, 'dragenter', this);
			}
			// Remove draggable attributes
			Array.prototype.forEach.call(el.querySelectorAll('[draggable]'), function (el) {
				el.removeAttribute('draggable');
			});

			this._onDrop();

			sortables.splice(sortables.indexOf(this.el), 1);

			this.el = el = null;
		},

		_hideClone: function() {
			if (!cloneEl.cloneHidden) {
				_css(cloneEl, 'display', 'none');
				cloneEl.cloneHidden = true;
				if (cloneEl.parentNode && this.options.removeCloneOnHide) {
					cloneEl.parentNode.removeChild(cloneEl);
				}
			}
		},

		_showClone: function(putSortable) {
			if (putSortable.lastPutMode !== 'clone') {
				this._hideClone();
				return;
			}

			if (cloneEl.cloneHidden) {
				// show clone at dragEl or original position
				if (rootEl.contains(dragEl) && !this.options.group.revertClone) {
					rootEl.insertBefore(cloneEl, dragEl);
				} else if (nextEl) {
					rootEl.insertBefore(cloneEl, nextEl);
				} else {
					rootEl.appendChild(cloneEl);
				}

				if (this.options.group.revertClone) {
					this._animate(dragEl, cloneEl);
				}
				_css(cloneEl, 'display', '');
				cloneEl.cloneHidden = false;
			}
		}
	};

	function _closest(/**HTMLElement*/el, /**String*/selector, /**HTMLElement*/ctx, includeCTX) {
		if (el) {
			ctx = ctx || document;

			do {
				if (
					selector != null &&
					(
						selector[0] === '>' ?
						el.parentNode === ctx && _matches(el, selector) :
						_matches(el, selector)
					) ||
					includeCTX && el === ctx
				) {
					return el;
				}

				if (el === ctx) break;
				/* jshint boss:true */
			} while (el = _getParentOrHost(el));
		}

		return null;
	}


	function _getParentOrHost(el) {
		return (el.host && el !== document && el.host.nodeType)
			? el.host
			: el.parentNode;
	}


	function _globalDragOver(/**Event*/evt) {
		if (evt.dataTransfer) {
			evt.dataTransfer.dropEffect = 'move';
		}
		evt.cancelable && evt.preventDefault();
	}


	function _on(el, event, fn) {
		el.addEventListener(event, fn, IE11OrLess ? false : captureMode);
	}


	function _off(el, event, fn) {
		el.removeEventListener(event, fn, IE11OrLess ? false : captureMode);
	}


	function _toggleClass(el, name, state) {
		if (el && name) {
			if (el.classList) {
				el.classList[state ? 'add' : 'remove'](name);
			}
			else {
				var className = (' ' + el.className + ' ').replace(R_SPACE, ' ').replace(' ' + name + ' ', ' ');
				el.className = (className + (state ? ' ' + name : '')).replace(R_SPACE, ' ');
			}
		}
	}


	function _css(el, prop, val) {
		var style = el && el.style;

		if (style) {
			if (val === void 0) {
				if (document.defaultView && document.defaultView.getComputedStyle) {
					val = document.defaultView.getComputedStyle(el, '');
				}
				else if (el.currentStyle) {
					val = el.currentStyle;
				}

				return prop === void 0 ? val : val[prop];
			}
			else {
				if (!(prop in style) && prop.indexOf('webkit') === -1) {
					prop = '-webkit-' + prop;
				}

				style[prop] = val + (typeof val === 'string' ? '' : 'px');
			}
		}
	}

	function _matrix(el) {
		var appliedTransforms = '';
		do {
			var transform = _css(el, 'transform');

			if (transform && transform !== 'none') {
				appliedTransforms = transform + ' ' + appliedTransforms;
			}
			/* jshint boss:true */
		} while (el = el.parentNode);

		if (window.DOMMatrix) {
			return new DOMMatrix(appliedTransforms);
		} else if (window.WebKitCSSMatrix) {
			return new WebKitCSSMatrix(appliedTransforms);
		} else if (window.CSSMatrix) {
			return new CSSMatrix(appliedTransforms);
		}
	}


	function _find(ctx, tagName, iterator) {
		if (ctx) {
			var list = ctx.getElementsByTagName(tagName), i = 0, n = list.length;

			if (iterator) {
				for (; i < n; i++) {
					iterator(list[i], i);
				}
			}

			return list;
		}

		return [];
	}



	function _dispatchEvent(
		sortable, rootEl, name,
		targetEl, toEl, fromEl,
		startIndex, newIndex,
		startDraggableIndex, newDraggableIndex,
		originalEvt
	) {
		sortable = (sortable || rootEl[expando]);
		var evt,
			options = sortable.options,
			onName = 'on' + name.charAt(0).toUpperCase() + name.substr(1);
		// Support for new CustomEvent feature
		if (window.CustomEvent && !IE11OrLess && !Edge) {
			evt = new CustomEvent(name, {
				bubbles: true,
				cancelable: true
			});
		} else {
			evt = document.createEvent('Event');
			evt.initEvent(name, true, true);
		}

		evt.to = toEl || rootEl;
		evt.from = fromEl || rootEl;
		evt.item = targetEl || rootEl;
		evt.clone = cloneEl;

		evt.oldIndex = startIndex;
		evt.newIndex = newIndex;

		evt.oldDraggableIndex = startDraggableIndex;
		evt.newDraggableIndex = newDraggableIndex;

		evt.originalEvent = originalEvt;
		evt.pullMode = putSortable ? putSortable.lastPutMode : undefined;

		if (rootEl) {
			rootEl.dispatchEvent(evt);
		}

		if (options[onName]) {
			options[onName].call(sortable, evt);
		}
	}


	function _onMove(fromEl, toEl, dragEl, dragRect, targetEl, targetRect, originalEvt, willInsertAfter) {
		var evt,
			sortable = fromEl[expando],
			onMoveFn = sortable.options.onMove,
			retVal;
		// Support for new CustomEvent feature
		if (window.CustomEvent && !IE11OrLess && !Edge) {
			evt = new CustomEvent('move', {
				bubbles: true,
				cancelable: true
			});
		} else {
			evt = document.createEvent('Event');
			evt.initEvent('move', true, true);
		}

		evt.to = toEl;
		evt.from = fromEl;
		evt.dragged = dragEl;
		evt.draggedRect = dragRect;
		evt.related = targetEl || toEl;
		evt.relatedRect = targetRect || _getRect(toEl);
		evt.willInsertAfter = willInsertAfter;

		evt.originalEvent = originalEvt;

		fromEl.dispatchEvent(evt);

		if (onMoveFn) {
			retVal = onMoveFn.call(sortable, evt, originalEvt);
		}

		return retVal;
	}

	function _disableDraggable(el) {
		el.draggable = false;
	}

	function _unsilent() {
		_silent = false;
	}

	/**
	 * Gets nth child of el, ignoring hidden children, sortable's elements (does not ignore clone if it's visible)
	 * and non-draggable elements
	 * @param  {HTMLElement} el       The parent element
	 * @param  {Number} childNum      The index of the child
	 * @param  {Object} options       Parent Sortable's options
	 * @return {HTMLElement}          The child at index childNum, or null if not found
	 */
	function _getChild(el, childNum, options) {
		var currentChild = 0,
			i = 0,
			children = el.children;

		while (i < children.length) {
			if (
				children[i].style.display !== 'none' &&
				children[i] !== ghostEl &&
				children[i] !== dragEl &&
				_closest(children[i], options.draggable, el, false)
			) {
				if (currentChild === childNum) {
					return children[i];
				}
				currentChild++;
			}

			i++;
		}
		return null;
	}

	/**
	 * Gets the last child in the el, ignoring ghostEl or invisible elements (clones)
	 * @param  {HTMLElement} el       Parent element
	 * @return {HTMLElement}          The last child, ignoring ghostEl
	 */
	function _lastChild(el) {
		var last = el.lastElementChild;

		while (last && (last === ghostEl || _css(last, 'display') === 'none')) {
			last = last.previousElementSibling;
		}

		return last || null;
	}

	function _ghostIsLast(evt, axis, el) {
		var elRect = _getRect(_lastChild(el)),
			mouseOnAxis = axis === 'vertical' ? evt.clientY : evt.clientX,
			mouseOnOppAxis = axis === 'vertical' ? evt.clientX : evt.clientY,
			targetS2 = axis === 'vertical' ? elRect.bottom : elRect.right,
			targetS1Opp = axis === 'vertical' ? elRect.left : elRect.top,
			targetS2Opp = axis === 'vertical' ? elRect.right : elRect.bottom,
			spacer = 10;

		return (
			axis === 'vertical' ?
				(mouseOnOppAxis > targetS2Opp + spacer || mouseOnOppAxis <= targetS2Opp && mouseOnAxis > targetS2 && mouseOnOppAxis >= targetS1Opp) :
				(mouseOnAxis > targetS2 && mouseOnOppAxis > targetS1Opp || mouseOnAxis <= targetS2 && mouseOnOppAxis > targetS2Opp + spacer)
		);
	}

	function _getSwapDirection(evt, target, axis, swapThreshold, invertedSwapThreshold, invertSwap, isLastTarget) {
		var targetRect = _getRect(target),
			mouseOnAxis = axis === 'vertical' ? evt.clientY : evt.clientX,
			targetLength = axis === 'vertical' ? targetRect.height : targetRect.width,
			targetS1 = axis === 'vertical' ? targetRect.top : targetRect.left,
			targetS2 = axis === 'vertical' ? targetRect.bottom : targetRect.right,
			dragRect = _getRect(dragEl),
			invert = false;


		if (!invertSwap) {
			// Never invert or create dragEl shadow when target movemenet causes mouse to move past the end of regular swapThreshold
			if (isLastTarget && targetMoveDistance < targetLength * swapThreshold) { // multiplied only by swapThreshold because mouse will already be inside target by (1 - threshold) * targetLength / 2
				// check if past first invert threshold on side opposite of lastDirection
				if (!pastFirstInvertThresh &&
					(lastDirection === 1 ?
						(
							mouseOnAxis > targetS1 + targetLength * invertedSwapThreshold / 2
						) :
						(
							mouseOnAxis < targetS2 - targetLength * invertedSwapThreshold / 2
						)
					)
				)
				{
					// past first invert threshold, do not restrict inverted threshold to dragEl shadow
					pastFirstInvertThresh = true;
				}

				if (!pastFirstInvertThresh) {
					var dragS1 = axis === 'vertical' ? dragRect.top : dragRect.left,
						dragS2 = axis === 'vertical' ? dragRect.bottom : dragRect.right;
					// dragEl shadow (target move distance shadow)
					if (
						lastDirection === 1 ?
						(
							mouseOnAxis < targetS1 + targetMoveDistance // over dragEl shadow
						) :
						(
							mouseOnAxis > targetS2 - targetMoveDistance
						)
					)
					{
						return lastDirection * -1;
					}
				} else {
					invert = true;
				}
			} else {
				// Regular
				if (
					mouseOnAxis > targetS1 + (targetLength * (1 - swapThreshold) / 2) &&
					mouseOnAxis < targetS2 - (targetLength * (1 - swapThreshold) / 2)
				) {
					return _getInsertDirection(target);
				}
			}
		}

		invert = invert || invertSwap;

		if (invert) {
			// Invert of regular
			if (
				mouseOnAxis < targetS1 + (targetLength * invertedSwapThreshold / 2) ||
				mouseOnAxis > targetS2 - (targetLength * invertedSwapThreshold / 2)
			)
			{
				return ((mouseOnAxis > targetS1 + targetLength / 2) ? 1 : -1);
			}
		}

		return 0;
	}

	/**
	 * Gets the direction dragEl must be swapped relative to target in order to make it
	 * seem that dragEl has been "inserted" into that element's position
	 * @param  {HTMLElement} target       The target whose position dragEl is being inserted at
	 * @return {Number}                   Direction dragEl must be swapped
	 */
	function _getInsertDirection(target) {
		var dragElIndex = _index(dragEl),
			targetIndex = _index(target);

		if (dragElIndex < targetIndex) {
			return 1;
		} else {
			return -1;
		}
	}


	/**
	 * Generate id
	 * @param   {HTMLElement} el
	 * @returns {String}
	 * @private
	 */
	function _generateId(el) {
		var str = el.tagName + el.className + el.src + el.href + el.textContent,
			i = str.length,
			sum = 0;

		while (i--) {
			sum += str.charCodeAt(i);
		}

		return sum.toString(36);
	}

	/**
	 * Returns the index of an element within its parent for a selected set of
	 * elements
	 * @param  {HTMLElement} el
	 * @param  {selector} selector
	 * @return {number}
	 */
	function _index(el, selector) {
		var index = 0;

		if (!el || !el.parentNode) {
			return -1;
		}

		while (el && (el = el.previousElementSibling)) {
			if ((el.nodeName.toUpperCase() !== 'TEMPLATE') && el !== cloneEl && (!selector || _matches(el, selector))) {
				index++;
			}
		}

		return index;
	}

	function _matches(/**HTMLElement*/el, /**String*/selector) {
		if (!selector) return;

		selector[0] === '>' && (selector = selector.substring(1));

		if (el) {
			try {
				if (el.matches) {
					return el.matches(selector);
				} else if (el.msMatchesSelector) {
					return el.msMatchesSelector(selector);
				} else if (el.webkitMatchesSelector) {
					return el.webkitMatchesSelector(selector);
				}
			} catch(_) {
				return false;
			}
		}

		return false;
	}

	var _throttleTimeout;
	function _throttle(callback, ms) {
		return function () {
			if (!_throttleTimeout) {
				var args = arguments,
					_this = this;

				_throttleTimeout = setTimeout(function () {
					if (args.length === 1) {
						callback.call(_this, args[0]);
					} else {
						callback.apply(_this, args);
					}

					_throttleTimeout = void 0;
				}, ms);
			}
		};
	}

	function _cancelThrottle() {
		clearTimeout(_throttleTimeout);
		_throttleTimeout = void 0;
	}

	function _extend(dst, src) {
		if (dst && src) {
			for (var key in src) {
				if (src.hasOwnProperty(key)) {
					dst[key] = src[key];
				}
			}
		}

		return dst;
	}

	function _clone(el) {
		if (Polymer && Polymer.dom) {
			return Polymer.dom(el).cloneNode(true);
		}
		else if ($) {
			return $(el).clone(true)[0];
		}
		else {
			return el.cloneNode(true);
		}
	}

	function _saveInputCheckedState(root) {
		savedInputChecked.length = 0;

		var inputs = root.getElementsByTagName('input');
		var idx = inputs.length;

		while (idx--) {
			var el = inputs[idx];
			el.checked && savedInputChecked.push(el);
		}
	}

	function _nextTick(fn) {
		return setTimeout(fn, 0);
	}

	function _cancelNextTick(id) {
		return clearTimeout(id);
	}


	/**
	 * Returns the "bounding client rect" of given element
	 * @param  {HTMLElement} el                The element whose boundingClientRect is wanted
	 * @param  {[HTMLElement]} container       the parent the element will be placed in
	 * @param  {[Boolean]} adjustForTransform  Whether the rect should compensate for parent's transform
	 * @return {Object}                        The boundingClientRect of el
	 */
	function _getRect(el, adjustForTransform, container, adjustForFixed) {
		if (!el.getBoundingClientRect && el !== win) return;

		var elRect,
			top,
			left,
			bottom,
			right,
			height,
			width;

		if (el !== win && el !== _getWindowScrollingElement()) {
			elRect = el.getBoundingClientRect();
			top = elRect.top;
			left = elRect.left;
			bottom = elRect.bottom;
			right = elRect.right;
			height = elRect.height;
			width = elRect.width;
		} else {
			top = 0;
			left = 0;
			bottom = window.innerHeight;
			right = window.innerWidth;
			height = window.innerHeight;
			width = window.innerWidth;
		}

		if (adjustForFixed && el !== win) {
			// Adjust for translate()
			container = container || el.parentNode;

			// solves #1123 (see: https://stackoverflow.com/a/37953806/6088312)
			// Not needed on <= IE11
			if (!IE11OrLess) {
				do {
					if (container && container.getBoundingClientRect && _css(container, 'transform') !== 'none') {
						var containerRect = container.getBoundingClientRect();

						// Set relative to edges of padding box of container
						top -= containerRect.top + parseInt(_css(container, 'border-top-width'));
						left -= containerRect.left + parseInt(_css(container, 'border-left-width'));
						bottom = top + elRect.height;
						right = left + elRect.width;

						break;
					}
					/* jshint boss:true */
				} while (container = container.parentNode);
			}
		}

		if (adjustForTransform && el !== win) {
			// Adjust for scale()
			var matrix = _matrix(container || el),
				scaleX = matrix && matrix.a,
				scaleY = matrix && matrix.d;

			if (matrix) {
				top /= scaleY;
				left /= scaleX;

				width /= scaleX;
				height /= scaleY;

				bottom = top + height;
				right = left + width;
			}
		}

		return {
			top: top,
			left: left,
			bottom: bottom,
			right: right,
			width: width,
			height: height
		};
	}


	/**
	 * Checks if a side of an element is scrolled past a side of it's parents
	 * @param  {HTMLElement}  el       The element who's side being scrolled out of view is in question
	 * @param  {String}       side     Side of the element in question ('top', 'left', 'right', 'bottom')
	 * @return {HTMLElement}           The parent scroll element that the el's side is scrolled past, or null if there is no such element
	 */
	function _isScrolledPast(el, side) {
		var parent = _getParentAutoScrollElement(el, true),
			elSide = _getRect(el)[side];

		/* jshint boss:true */
		while (parent) {
			var parentSide = _getRect(parent)[side],
				visible;

			if (side === 'top' || side === 'left') {
				visible = elSide >= parentSide;
			} else {
				visible = elSide <= parentSide;
			}

			if (!visible) return parent;

			if (parent === _getWindowScrollingElement()) break;

			parent = _getParentAutoScrollElement(parent, false);
		}

		return false;
	}

	/**
	 * Returns the scroll offset of the given element, added with all the scroll offsets of parent elements.
	 * The value is returned in real pixels.
	 * @param  {HTMLElement} el
	 * @return {Array}             Offsets in the format of [left, top]
	 */
	function _getRelativeScrollOffset(el) {
		var offsetLeft = 0,
			offsetTop = 0,
			winScroller = _getWindowScrollingElement();

		if (el) {
			do {
				var matrix = _matrix(el),
					scaleX = matrix.a,
					scaleY = matrix.d;

				offsetLeft += el.scrollLeft * scaleX;
				offsetTop += el.scrollTop * scaleY;
			} while (el !== winScroller && (el = el.parentNode));
		}

		return [offsetLeft, offsetTop];
	}

	// Fixed #973:
	_on(document, 'touchmove', function(evt) {
		if ((Sortable.active || awaitingDragStarted) && evt.cancelable) {
			evt.preventDefault();
		}
	});


	// Export utils
	Sortable.utils = {
		on: _on,
		off: _off,
		css: _css,
		find: _find,
		is: function (el, selector) {
			return !!_closest(el, selector, el, false);
		},
		extend: _extend,
		throttle: _throttle,
		closest: _closest,
		toggleClass: _toggleClass,
		clone: _clone,
		index: _index,
		nextTick: _nextTick,
		cancelNextTick: _cancelNextTick,
		detectDirection: _detectDirection,
		getChild: _getChild
	};


	/**
	 * Create sortable instance
	 * @param {HTMLElement}  el
	 * @param {Object}      [options]
	 */
	Sortable.create = function (el, options) {
		return new Sortable(el, options);
	};


	// Export
	Sortable.version = '1.9.0';
	return Sortable;
});


/***/ }),

/***/ 1408:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_Information_vue__ = __webpack_require__(1388);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_Information_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_Information_vue__);
/* harmony namespace reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_Information_vue__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_Information_vue__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_13_7_3_vue_loader_lib_template_compiler_index_id_data_v_216d97fd_hasScoped_true_buble_transforms_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_template_index_0_Information_vue__ = __webpack_require__(1413);
var disposed = false
function injectStyle (ssrContext) {
  if (disposed) return
  __webpack_require__(1409)
  __webpack_require__(1411)
}
var normalizeComponent = __webpack_require__(42)
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = "data-v-216d97fd"
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_Information_vue___default.a,
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_13_7_3_vue_loader_lib_template_compiler_index_id_data_v_216d97fd_hasScoped_true_buble_transforms_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_template_index_0_Information_vue__["a" /* default */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "devPkg/components/common/people_import/Information.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-loader/node_modules/vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-216d97fd", Component.options)
  } else {
    hotAPI.reload("data-v-216d97fd", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),

/***/ 1409:
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(1410);
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__(76)("2b44fc9c", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../node_modules/_css-loader@0.28.11@css-loader/index.js!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-216d97fd\",\"scoped\":true,\"hasInlineConfig\":false}!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=styles&index=0!./Information.vue", function() {
     var newContent = require("!!../../../../node_modules/_css-loader@0.28.11@css-loader/index.js!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-216d97fd\",\"scoped\":true,\"hasInlineConfig\":false}!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=styles&index=0!./Information.vue");
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ 1410:
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(43)(false);
// imports


// module
exports.push([module.i, "\n.width-wrap[data-v-216d97fd] {\n  width: calc( 100vw - 725px);\n}\n.people-search-form[data-v-216d97fd] {\n  background: #fff;\n  padding: 19px 10px 0 10px;\n}\n.people-search-form .search-button-group[data-v-216d97fd] {\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end;\n}\n.add-people-button[data-v-216d97fd] {\n  float: right;\n}\n.operate-button-group[data-v-216d97fd] {\n  padding-top: 20px;\n  border-top: 1px solid #ddd;\n}\n.people-table-wrap[data-v-216d97fd] {\n  padding-top: 20px;\n}\n.el-footer[data-v-216d97fd] {\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n}\n.tree-in-model[data-v-216d97fd] {\n  height: 300px;\n  overflow: auto;\n}\n.choosed-company[data-v-216d97fd] {\n  border-top: 1px solid #ccc;\n}\n", ""]);

// exports


/***/ }),

/***/ 1411:
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(1412);
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__(76)("ceb4b234", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../node_modules/_css-loader@0.28.11@css-loader/index.js!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-216d97fd\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=styles&index=1!./Information.vue", function() {
     var newContent = require("!!../../../../node_modules/_css-loader@0.28.11@css-loader/index.js!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-216d97fd\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=styles&index=1!./Information.vue");
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ 1412:
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(43)(false);
// imports


// module
exports.push([module.i, "\n.left-margin-50 .el-form-item__content {\n  margin-left: 50px!important;\n}\n.el-tree-node__expand-icon.el-icon-caret-right{\n  font-size: 18px;\n  color: #000;\n}\n.el-tree-node__expand-icon.el-icon-caret-right.is-leaf{\n  color: transparent;\n}\n", ""]);

// exports


/***/ }),

/***/ 1413:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    { staticClass: "width-wrap" },
    [
      _c(
        "el-form",
        {
          ref: "searchForm",
          staticClass: "people-search-form",
          attrs: { "label-width": "110px", size: "small" }
        },
        [
          _c(
            "el-row",
            [
              _c(
                "el-col",
                { attrs: { span: 8 } },
                [
                  _c(
                    "el-form-item",
                    { attrs: { label: "姓名：" } },
                    [
                      _c("el-input", {
                        attrs: { type: "text", placeholder: "请输入姓名" },
                        nativeOn: {
                          keyup: function($event) {
                            if (
                              !$event.type.indexOf("key") &&
                              _vm._k(
                                $event.keyCode,
                                "enter",
                                13,
                                $event.key,
                                "Enter"
                              )
                            ) {
                              return null
                            }
                            return _vm.getPeopleTableData(1, _vm.currentPerPage)
                          }
                        },
                        model: {
                          value: _vm.searchForm.name,
                          callback: function($$v) {
                            _vm.$set(_vm.searchForm, "name", $$v)
                          },
                          expression: "searchForm.name"
                        }
                      })
                    ],
                    1
                  )
                ],
                1
              ),
              _vm._v(" "),
              _c(
                "el-col",
                { attrs: { span: 8 } },
                [
                  _c(
                    "el-form-item",
                    { attrs: { label: "性别：" } },
                    [
                      _c(
                        "el-select",
                        {
                          staticClass: "fill-width",
                          attrs: { placeholder: "请选择性别" },
                          model: {
                            value: _vm.searchForm.sex,
                            callback: function($$v) {
                              _vm.$set(_vm.searchForm, "sex", $$v)
                            },
                            expression: "searchForm.sex"
                          }
                        },
                        _vm._l(_vm.dictionaryGender, function(item, index) {
                          return _c("el-option", {
                            key: "搜索-性别" + index,
                            attrs: { value: item.key, label: item.value }
                          })
                        }),
                        1
                      )
                    ],
                    1
                  )
                ],
                1
              ),
              _vm._v(" "),
              _c(
                "el-col",
                { attrs: { span: 8 } },
                [
                  _c(
                    "el-form-item",
                    { attrs: { label: "文化程度：" } },
                    [
                      _c(
                        "el-select",
                        {
                          staticClass: "fill-width",
                          attrs: { placeholder: "请选择学历" },
                          model: {
                            value: _vm.searchForm.education,
                            callback: function($$v) {
                              _vm.$set(_vm.searchForm, "education", $$v)
                            },
                            expression: "searchForm.education"
                          }
                        },
                        _vm._l(_vm.dictionaryEducation, function(item, index) {
                          return _c("el-option", {
                            key: "搜索-学历" + index,
                            attrs: { value: item.key, label: item.value }
                          })
                        }),
                        1
                      )
                    ],
                    1
                  )
                ],
                1
              ),
              _vm._v(" "),
              _c(
                "el-col",
                { attrs: { span: 8 } },
                [
                  _c(
                    "el-form-item",
                    { attrs: { label: "年龄：" } },
                    [
                      _c("el-input-number", {
                        staticClass: "fill-width",
                        attrs: {
                          min: 0,
                          type: "number",
                          placeholder: "请输入年龄(岁)"
                        },
                        nativeOn: {
                          keyup: function($event) {
                            if (
                              !$event.type.indexOf("key") &&
                              _vm._k(
                                $event.keyCode,
                                "enter",
                                13,
                                $event.key,
                                "Enter"
                              )
                            ) {
                              return null
                            }
                            return _vm.getPeopleTableData(1, _vm.currentPerPage)
                          }
                        },
                        model: {
                          value: _vm.searchForm.age,
                          callback: function($$v) {
                            _vm.$set(_vm.searchForm, "age", $$v)
                          },
                          expression: "searchForm.age"
                        }
                      })
                    ],
                    1
                  )
                ],
                1
              ),
              _vm._v(" "),
              _c(
                "el-col",
                { attrs: { span: 8 } },
                [
                  _c(
                    "el-form-item",
                    { attrs: { label: "工作年限：" } },
                    [
                      _c("el-input-number", {
                        staticClass: "fill-width",
                        attrs: {
                          min: 0,
                          type: "number",
                          placeholder: "请输入工作年限(年)"
                        },
                        nativeOn: {
                          keyup: function($event) {
                            if (
                              !$event.type.indexOf("key") &&
                              _vm._k(
                                $event.keyCode,
                                "enter",
                                13,
                                $event.key,
                                "Enter"
                              )
                            ) {
                              return null
                            }
                            return _vm.getPeopleTableData(1, _vm.currentPerPage)
                          }
                        },
                        model: {
                          value: _vm.searchForm.workAge,
                          callback: function($$v) {
                            _vm.$set(_vm.searchForm, "workAge", $$v)
                          },
                          expression: "searchForm.workAge"
                        }
                      })
                    ],
                    1
                  )
                ],
                1
              ),
              _vm._v(" "),
              _c(
                "el-col",
                { attrs: { span: 8 } },
                [
                  _c(
                    "el-form-item",
                    { attrs: { label: "民族：" } },
                    [
                      _c(
                        "el-select",
                        {
                          staticClass: "fill-width",
                          attrs: {
                            placeholder: "请选择民族(可输入筛选)",
                            filterable: ""
                          },
                          model: {
                            value: _vm.searchForm.nationName,
                            callback: function($$v) {
                              _vm.$set(_vm.searchForm, "nationName", $$v)
                            },
                            expression: "searchForm.nationName"
                          }
                        },
                        _vm._l(_vm.dictionaryNation, function(item, index) {
                          return _c("el-option", {
                            key: "搜索-民族" + index,
                            attrs: { value: item.key, label: item.value }
                          })
                        }),
                        1
                      )
                    ],
                    1
                  )
                ],
                1
              ),
              _vm._v(" "),
              _c(
                "el-col",
                { attrs: { span: 10, offset: 14 } },
                [
                  _c(
                    "el-form-item",
                    { staticClass: "search-button-group" },
                    [
                      _c(
                        "el-button",
                        {
                          attrs: { type: "default" },
                          on: { click: _vm.clearForm }
                        },
                        [_vm._v("重置")]
                      ),
                      _vm._v(" "),
                      _c(
                        "el-button",
                        {
                          attrs: { type: "primary" },
                          on: {
                            click: function($event) {
                              return _vm.getPeopleTableData(
                                1,
                                _vm.currentPerPage
                              )
                            }
                          }
                        },
                        [_vm._v("搜索")]
                      )
                    ],
                    1
                  )
                ],
                1
              )
            ],
            1
          )
        ],
        1
      ),
      _vm._v(" "),
      _c(
        "div",
        { staticClass: "operate-button-group" },
        [
          _c(
            "el-button",
            {
              attrs: {
                disabled: _vm.peopleChoosed.length <= 0,
                type: "default",
                size: "small"
              },
              on: {
                click: function($event) {
                  return _vm.editOutlook(null, true)
                }
              }
            },
            [_vm._v("批量修改政治面貌")]
          ),
          _vm._v(" "),
          _c(
            "el-button",
            {
              attrs: {
                disabled: _vm.peopleChoosed.length <= 0,
                type: "default",
                size: "small"
              },
              on: {
                click: function($event) {
                  return _vm.editPeopleCompany(null, true)
                }
              }
            },
            [_vm._v("批量修改公司组织")]
          ),
          _vm._v(" "),
          _c(
            "el-button",
            {
              attrs: {
                disabled: _vm.peopleChoosed.length <= 0,
                type: "primary",
                size: "small"
              },
              on: {
                click: function($event) {
                  return _vm.editFinish(null, true)
                }
              }
            },
            [_vm._v("批量完成修改")]
          ),
          _vm._v(" "),
          _c(
            "el-button",
            {
              attrs: {
                disabled: _vm.peopleChoosed.length <= 0,
                type: "danger",
                size: "small"
              },
              on: {
                click: function($event) {
                  return _vm.deletePeople(null, true)
                }
              }
            },
            [_vm._v("批量删除")]
          ),
          _vm._v(" "),
          _c(
            "el-button",
            {
              staticClass: "add-people-button",
              attrs: { type: "default", size: "small" },
              on: { click: _vm.addPeople }
            },
            [_vm._v("添加人员 + ")]
          )
        ],
        1
      ),
      _vm._v(" "),
      _c(
        "div",
        {
          directives: [
            {
              name: "loading",
              rawName: "v-loading",
              value: _vm.loading,
              expression: "loading"
            }
          ],
          staticClass: "people-table-wrap"
        },
        [
          _c(
            "el-table",
            {
              attrs: { data: _vm.peopleTableData, stripe: "", border: "" },
              on: { "selection-change": _vm.tableSelectChanged }
            },
            [
              _c("el-table-column", {
                attrs: { fixed: "left", type: "selection", width: "45" }
              }),
              _vm._v(" "),
              _c("el-table-column", {
                attrs: {
                  fixed: "left",
                  type: "index",
                  width: "50",
                  label: "序号"
                }
              }),
              _vm._v(" "),
              _c("el-table-column", {
                attrs: { prop: "name", label: "姓名", width: "90" }
              }),
              _vm._v(" "),
              _c("el-table-column", {
                attrs: { label: "技术职务" },
                scopedSlots: _vm._u([
                  {
                    key: "default",
                    fn: function(scope) {
                      return [
                        _vm._v(
                          _vm._s(
                            _vm.dictionaryTransfer("position", scope.row.tPost)
                          )
                        )
                      ]
                    }
                  }
                ])
              }),
              _vm._v(" "),
              _c("el-table-column", {
                attrs: { label: "性别" },
                scopedSlots: _vm._u([
                  {
                    key: "default",
                    fn: function(scope) {
                      return [
                        _vm._v(
                          _vm._s(
                            _vm.dictionaryTransfer("gender", scope.row.sex)
                          )
                        )
                      ]
                    }
                  }
                ])
              }),
              _vm._v(" "),
              _c("el-table-column", {
                attrs: { label: "民族" },
                scopedSlots: _vm._u([
                  {
                    key: "default",
                    fn: function(scope) {
                      return [
                        _vm._v(
                          _vm._s(
                            _vm.dictionaryTransfer("nation", scope.row.nation)
                          )
                        )
                      ]
                    }
                  }
                ])
              }),
              _vm._v(" "),
              _c("el-table-column", {
                attrs: { label: "籍贯", prop: "nationPlace" },
                scopedSlots: _vm._u([
                  {
                    key: "default",
                    fn: function(scope) {
                      return [
                        _vm._v(
                          _vm._s(
                            _vm.dictionaryTransfer(
                              "nationPlace",
                              scope.row.nationPlace
                            )
                          )
                        )
                      ]
                    }
                  }
                ])
              }),
              _vm._v(" "),
              _c("el-table-column", {
                attrs: { label: "文化程度" },
                scopedSlots: _vm._u([
                  {
                    key: "default",
                    fn: function(scope) {
                      return [
                        _vm._v(
                          _vm._s(
                            _vm.dictionaryTransfer(
                              "education",
                              scope.row.education
                            )
                          )
                        )
                      ]
                    }
                  }
                ])
              }),
              _vm._v(" "),
              _c("el-table-column", {
                attrs: {
                  label: "出生年月",
                  width: "120",
                  "show-overflow-tooltip": ""
                },
                scopedSlots: _vm._u([
                  {
                    key: "default",
                    fn: function(scope) {
                      return [
                        _vm._v(_vm._s(_vm.$util.showDate(scope.row.borthday)))
                      ]
                    }
                  }
                ])
              }),
              _vm._v(" "),
              _c("el-table-column", {
                attrs: {
                  prop: "complayOrg",
                  label: "所属公司",
                  width: "120",
                  "show-overflow-tooltip": ""
                }
              }),
              _vm._v(" "),
              _c("el-table-column", {
                attrs: {
                  label: "参加工作时间",
                  width: "120",
                  "show-overflow-tooltip": ""
                },
                scopedSlots: _vm._u([
                  {
                    key: "default",
                    fn: function(scope) {
                      return [
                        _vm._v(_vm._s(_vm.$util.showDate(scope.row.workBorth)))
                      ]
                    }
                  }
                ])
              }),
              _vm._v(" "),
              _c("el-table-column", {
                attrs: { width: "90", label: "政治面貌" },
                scopedSlots: _vm._u([
                  {
                    key: "default",
                    fn: function(scope) {
                      return [
                        _vm._v(
                          _vm._s(
                            _vm.dictionaryTransfer("outlook", scope.row.outLook)
                          )
                        )
                      ]
                    }
                  }
                ])
              }),
              _vm._v(" "),
              _c("el-table-column", {
                attrs: { fixed: "right", label: "操作", width: "310" },
                scopedSlots: _vm._u([
                  {
                    key: "default",
                    fn: function(scope) {
                      return [
                        _c(
                          "el-tooltip",
                          {
                            attrs: {
                              enterable: false,
                              content: "编辑基本信息",
                              placement: "top-start"
                            }
                          },
                          [
                            _c(
                              "el-button",
                              {
                                attrs: { type: "default", size: "mini" },
                                on: {
                                  click: function($event) {
                                    return _vm.editPeople(scope.row)
                                  }
                                }
                              },
                              [_c("i", { staticClass: "el-icon-edit" })]
                            )
                          ],
                          1
                        ),
                        _vm._v(" "),
                        _c(
                          "el-tooltip",
                          {
                            attrs: {
                              enterable: false,
                              content: "编辑政治面貌",
                              placement: "top-start"
                            }
                          },
                          [
                            _c(
                              "el-button",
                              {
                                attrs: { type: "default", size: "mini" },
                                on: {
                                  click: function($event) {
                                    return _vm.editOutlook(scope.row, false)
                                  }
                                }
                              },
                              [_c("i", { staticClass: "el-icon-edit-outline" })]
                            )
                          ],
                          1
                        ),
                        _vm._v(" "),
                        _c(
                          "el-tooltip",
                          {
                            attrs: {
                              enterable: false,
                              content: "修改公司组织",
                              placement: "top-start"
                            }
                          },
                          [
                            _c(
                              "el-button",
                              {
                                attrs: { type: "default", size: "mini" },
                                on: {
                                  click: function($event) {
                                    return _vm.editPeopleCompany(
                                      scope.row,
                                      false
                                    )
                                  }
                                }
                              },
                              [_c("i", { staticClass: "fa fa-sitemap" })]
                            )
                          ],
                          1
                        ),
                        _vm._v(" "),
                        _c(
                          "el-tooltip",
                          {
                            attrs: {
                              enterable: false,
                              content: "完成修改",
                              placement: "top-start"
                            }
                          },
                          [
                            _c(
                              "el-button",
                              {
                                attrs: { type: "primary", size: "mini" },
                                on: {
                                  click: function($event) {
                                    return _vm.editFinish(scope.row, false)
                                  }
                                }
                              },
                              [_c("i", { staticClass: "el-icon-check" })]
                            )
                          ],
                          1
                        ),
                        _vm._v(" "),
                        _c(
                          "el-tooltip",
                          {
                            attrs: {
                              enterable: false,
                              content: "删除人员",
                              placement: "top-start"
                            }
                          },
                          [
                            _c(
                              "el-button",
                              {
                                attrs: { type: "danger", size: "mini" },
                                on: {
                                  click: function($event) {
                                    return _vm.deletePeople(scope.row, false)
                                  }
                                }
                              },
                              [_c("i", { staticClass: "el-icon-delete" })]
                            )
                          ],
                          1
                        )
                      ]
                    }
                  }
                ])
              })
            ],
            1
          ),
          _vm._v(" "),
          _c(
            "el-footer",
            [
              _c("el-pagination", {
                attrs: {
                  "current-page": _vm.currentPage,
                  "page-sizes": [5, 10, 20],
                  "page-size": _vm.currentPerPage,
                  layout: "total, sizes, prev, pager, next, jumper",
                  total: _vm.total
                },
                on: {
                  "size-change": _vm.handleSizeChange,
                  "current-change": _vm.handleCurrentChange
                }
              })
            ],
            1
          )
        ],
        1
      ),
      _vm._v(" "),
      _c(
        "el-dialog",
        {
          attrs: {
            "close-on-click-modal": false,
            title: _vm.tempOperateType == "new" ? "新增人员" : "编辑人员",
            visible: _vm.infoDialogVisible,
            width: "40vw"
          },
          on: {
            "update:visible": function($event) {
              _vm.infoDialogVisible = $event
            }
          }
        },
        [
          _c(
            "el-form",
            {
              ref: "peopleForm",
              attrs: {
                model: _vm.peopleForm,
                "label-width": "100px",
                size: "small",
                rules: _vm.rules
              }
            },
            [
              _c(
                "el-form-item",
                { attrs: { label: "姓名", prop: "name" } },
                [
                  _c("el-input", {
                    attrs: { type: "text" },
                    model: {
                      value: _vm.peopleForm.name,
                      callback: function($$v) {
                        _vm.$set(_vm.peopleForm, "name", $$v)
                      },
                      expression: "peopleForm.name"
                    }
                  })
                ],
                1
              ),
              _vm._v(" "),
              _c(
                "el-form-item",
                { attrs: { label: "技术职务" } },
                [
                  _c(
                    "el-select",
                    {
                      staticClass: "fill-width",
                      model: {
                        value: _vm.peopleForm.tPost,
                        callback: function($$v) {
                          _vm.$set(_vm.peopleForm, "tPost", $$v)
                        },
                        expression: "peopleForm.tPost"
                      }
                    },
                    _vm._l(_vm.techPositionList, function(item, index) {
                      return _c(
                        "el-option",
                        {
                          key: index + "技术职务",
                          attrs: { value: item.key, label: item.value }
                        },
                        [_vm._v(_vm._s(item.value))]
                      )
                    }),
                    1
                  )
                ],
                1
              ),
              _vm._v(" "),
              _c(
                "el-form-item",
                { attrs: { label: "性别" } },
                [
                  _c(
                    "el-select",
                    {
                      staticClass: "fill-width",
                      attrs: { placeholder: "请选择性别" },
                      model: {
                        value: _vm.peopleForm.sex,
                        callback: function($$v) {
                          _vm.$set(_vm.peopleForm, "sex", $$v)
                        },
                        expression: "peopleForm.sex"
                      }
                    },
                    _vm._l(_vm.dictionaryGender, function(item, index) {
                      return _c("el-option", {
                        key: "编辑-性别" + index,
                        attrs: { value: item.key, label: item.value }
                      })
                    }),
                    1
                  )
                ],
                1
              ),
              _vm._v(" "),
              _c(
                "el-form-item",
                { attrs: { label: "身份证号", prop: "idNumber" } },
                [
                  _c("el-input", {
                    attrs: { type: "text" },
                    model: {
                      value: _vm.peopleForm.idNumber,
                      callback: function($$v) {
                        _vm.$set(_vm.peopleForm, "idNumber", $$v)
                      },
                      expression: "peopleForm.idNumber"
                    }
                  })
                ],
                1
              ),
              _vm._v(" "),
              _c(
                "el-form-item",
                { attrs: { label: "民族" } },
                [
                  _c(
                    "el-select",
                    {
                      staticClass: "fill-width",
                      attrs: {
                        placeholder: "请选择民族(可输入筛选)",
                        filterable: ""
                      },
                      model: {
                        value: _vm.peopleForm.nation,
                        callback: function($$v) {
                          _vm.$set(_vm.peopleForm, "nation", $$v)
                        },
                        expression: "peopleForm.nation"
                      }
                    },
                    _vm._l(_vm.dictionaryNation, function(item, index) {
                      return _c("el-option", {
                        key: "编辑-民族" + index,
                        attrs: { value: item.key, label: item.value }
                      })
                    }),
                    1
                  )
                ],
                1
              ),
              _vm._v(" "),
              _c(
                "el-form-item",
                { attrs: { label: "籍贯" } },
                [
                  _c(
                    "el-select",
                    {
                      staticClass: "fill-width",
                      attrs: {
                        placeholder: "请选择籍贯(可输入筛选)",
                        filterable: ""
                      },
                      model: {
                        value: _vm.peopleForm.nationPlace,
                        callback: function($$v) {
                          _vm.$set(_vm.peopleForm, "nationPlace", $$v)
                        },
                        expression: "peopleForm.nationPlace"
                      }
                    },
                    _vm._l(_vm.dictionaryNationPlace, function(item, index) {
                      return _c("el-option", {
                        key: "编辑-籍贯" + index,
                        attrs: { value: item.key, label: item.value }
                      })
                    }),
                    1
                  )
                ],
                1
              ),
              _vm._v(" "),
              _c(
                "el-form-item",
                { attrs: { label: "文化程度" } },
                [
                  _c(
                    "el-select",
                    {
                      staticClass: "fill-width",
                      attrs: { placeholder: "请选择学历" },
                      model: {
                        value: _vm.peopleForm.education,
                        callback: function($$v) {
                          _vm.$set(_vm.peopleForm, "education", $$v)
                        },
                        expression: "peopleForm.education"
                      }
                    },
                    _vm._l(_vm.dictionaryEducation, function(item, index) {
                      return _c("el-option", {
                        key: "编辑-学历" + index,
                        attrs: { value: item.key, label: item.value }
                      })
                    }),
                    1
                  )
                ],
                1
              ),
              _vm._v(" "),
              _c(
                "el-form-item",
                { attrs: { label: "出生年月", prop: "borthday.date_time" } },
                [
                  _c("el-date-picker", {
                    staticClass: "fill-width",
                    attrs: {
                      type: _vm.$util.datePickerType(
                        _vm.peopleForm.borthday.type
                      ),
                      "value-format": "timestamp",
                      placeholder: "请选择出生年月"
                    },
                    model: {
                      value: _vm.peopleForm.borthday.date_time,
                      callback: function($$v) {
                        _vm.$set(_vm.peopleForm.borthday, "date_time", $$v)
                      },
                      expression: "peopleForm.borthday.date_time"
                    }
                  }),
                  _vm._v(" "),
                  _c(
                    "el-select",
                    {
                      staticClass: "date-picker-after",
                      model: {
                        value: _vm.peopleForm.borthday.type,
                        callback: function($$v) {
                          _vm.$set(_vm.peopleForm.borthday, "type", $$v)
                        },
                        expression: "peopleForm.borthday.type"
                      }
                    },
                    _vm._l(_vm.$util.timeType, function(item, index) {
                      return _c("el-option", {
                        key: "出生年月" + index,
                        attrs: { label: item.label, value: item.value }
                      })
                    }),
                    1
                  )
                ],
                1
              ),
              _vm._v(" "),
              _c(
                "el-form-item",
                {
                  attrs: { label: "参加工作时间", prop: "workBorth.date_time" }
                },
                [
                  _c("el-date-picker", {
                    staticClass: "fill-width",
                    attrs: {
                      type: _vm.$util.datePickerType(
                        _vm.peopleForm.workBorth.type
                      ),
                      "value-format": "timestamp",
                      placeholder: "请选择参加工作时间"
                    },
                    model: {
                      value: _vm.peopleForm.workBorth.date_time,
                      callback: function($$v) {
                        _vm.$set(_vm.peopleForm.workBorth, "date_time", $$v)
                      },
                      expression: "peopleForm.workBorth.date_time"
                    }
                  }),
                  _vm._v(" "),
                  _c(
                    "el-select",
                    {
                      staticClass: "date-picker-after",
                      model: {
                        value: _vm.peopleForm.workBorth.type,
                        callback: function($$v) {
                          _vm.$set(_vm.peopleForm.workBorth, "type", $$v)
                        },
                        expression: "peopleForm.workBorth.type"
                      }
                    },
                    _vm._l(_vm.$util.timeType, function(item, index) {
                      return _c("el-option", {
                        key: "参加工作时间" + index,
                        attrs: { label: item.label, value: item.value }
                      })
                    }),
                    1
                  )
                ],
                1
              ),
              _vm._v(" "),
              _c(
                "el-form-item",
                { attrs: { label: "政治面貌" } },
                [
                  _c(
                    "el-select",
                    {
                      staticClass: "fill-width",
                      attrs: { placeholder: "请选择政治面貌" },
                      model: {
                        value: _vm.peopleForm.outLook,
                        callback: function($$v) {
                          _vm.$set(_vm.peopleForm, "outLook", $$v)
                        },
                        expression: "peopleForm.outLook"
                      }
                    },
                    _vm._l(_vm.dictionaryOutlook, function(item, index) {
                      return _c("el-option", {
                        key: "编辑-政治面貌" + index,
                        attrs: { value: item.key, label: item.value }
                      })
                    }),
                    1
                  )
                ],
                1
              )
            ],
            1
          ),
          _vm._v(" "),
          _c(
            "span",
            { attrs: { slot: "footer" }, slot: "footer" },
            [
              _c(
                "el-button",
                {
                  on: {
                    click: function($event) {
                      _vm.infoDialogVisible = false
                    }
                  }
                },
                [_vm._v("取 消")]
              ),
              _vm._v(" "),
              _c(
                "el-button",
                {
                  attrs: { type: "primary" },
                  on: { click: _vm.submitPeopleForm }
                },
                [_vm._v("确 定")]
              )
            ],
            1
          )
        ],
        1
      ),
      _vm._v(" "),
      _c(
        "el-dialog",
        {
          attrs: {
            "close-on-click-modal": false,
            title: "编辑政治面貌",
            visible: _vm.outlookDialogVisible,
            width: "40vw"
          },
          on: {
            "update:visible": function($event) {
              _vm.outlookDialogVisible = $event
            }
          }
        },
        [
          _c(
            "el-form",
            {
              ref: "outlookForm",
              attrs: { "label-width": "80px", size: "small" }
            },
            [
              _c(
                "el-form-item",
                { attrs: { label: "政治面貌", required: "" } },
                [
                  _c(
                    "el-select",
                    {
                      staticClass: "fill-width",
                      attrs: { placeholder: "请选择政治面貌" },
                      model: {
                        value: _vm.outlook,
                        callback: function($$v) {
                          _vm.outlook = $$v
                        },
                        expression: "outlook"
                      }
                    },
                    _vm._l(_vm.dictionaryOutlook, function(item, index) {
                      return _c("el-option", {
                        key: "批量-政治面貌" + index,
                        attrs: { value: item.key, label: item.value }
                      })
                    }),
                    1
                  )
                ],
                1
              )
            ],
            1
          ),
          _vm._v(" "),
          _c(
            "span",
            { attrs: { slot: "footer" }, slot: "footer" },
            [
              _c(
                "el-button",
                {
                  on: {
                    click: function($event) {
                      _vm.outlookDialogVisible = false
                    }
                  }
                },
                [_vm._v("取 消")]
              ),
              _vm._v(" "),
              _c(
                "el-button",
                {
                  attrs: { type: "primary", disabled: !_vm.outlook },
                  on: { click: _vm.submitOutlook }
                },
                [_vm._v("确 定")]
              )
            ],
            1
          )
        ],
        1
      ),
      _vm._v(" "),
      _c(
        "el-dialog",
        {
          attrs: {
            "close-on-click-modal": false,
            title: "修改公司组织",
            visible: _vm.companyDialogVisible,
            width: "40vw"
          },
          on: {
            "update:visible": function($event) {
              _vm.companyDialogVisible = $event
            }
          }
        },
        [
          _vm.orgList && _vm.orgList.length > 0
            ? _c("el-tree", {
                directives: [
                  {
                    name: "loading",
                    rawName: "v-loading",
                    value: _vm.loading,
                    expression: "loading"
                  }
                ],
                ref: "typeTree",
                staticClass: "tree-in-model",
                attrs: {
                  data: _vm.orgList,
                  "node-key": "id",
                  props: _vm.defaultProps,
                  "expand-on-click-node": false
                },
                on: { "node-click": _vm.orgClicked },
                scopedSlots: _vm._u(
                  [
                    {
                      key: "default",
                      fn: function(ref) {
                        var node = ref.node
                        var data = ref.data
                        return _c("span", { staticClass: "custom-tree-node" }, [
                          _c("span", [_vm._v(_vm._s(node.label))])
                        ])
                      }
                    }
                  ],
                  null,
                  false,
                  4137812816
                )
              })
            : _vm._e(),
          _vm._v(" "),
          _vm.tempOrg.name
            ? _c("p", { staticClass: "choosed-company" }, [
                _vm._v("当前选中的公司：\n      "),
                _c("span", [_vm._v(_vm._s(_vm.tempOrg.name))])
              ])
            : _c("p", { staticClass: "choosed-company" }, [
                _vm._v("请点击选择公司")
              ]),
          _vm._v(" "),
          _c(
            "span",
            { attrs: { slot: "footer" }, slot: "footer" },
            [
              _c(
                "el-button",
                {
                  on: {
                    click: function($event) {
                      _vm.companyDialogVisible = false
                    }
                  }
                },
                [_vm._v("取 消")]
              ),
              _vm._v(" "),
              _c(
                "el-button",
                {
                  attrs: { type: "primary", disabled: !_vm.tempOrg.name },
                  on: { click: _vm.submitOrg }
                },
                [_vm._v("确 定")]
              )
            ],
            1
          )
        ],
        1
      )
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ __webpack_exports__["a"] = (esExports);
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-loader/node_modules/vue-hot-reload-api")      .rerender("data-v-216d97fd", esExports)
  }
}

/***/ }),

/***/ 1414:
/***/ (function(module, exports, __webpack_require__) {

module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "fb15");
/******/ })
/************************************************************************/
/******/ ({

/***/ "02f4":
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__("4588");
var defined = __webpack_require__("be13");
// true  -> String#at
// false -> String#codePointAt
module.exports = function (TO_STRING) {
  return function (that, pos) {
    var s = String(defined(that));
    var i = toInteger(pos);
    var l = s.length;
    var a, b;
    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;
    a = s.charCodeAt(i);
    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff
      ? TO_STRING ? s.charAt(i) : a
      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
  };
};


/***/ }),

/***/ "0390":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var at = __webpack_require__("02f4")(true);

 // `AdvanceStringIndex` abstract operation
// https://tc39.github.io/ecma262/#sec-advancestringindex
module.exports = function (S, index, unicode) {
  return index + (unicode ? at(S, index).length : 1);
};


/***/ }),

/***/ "07e3":
/***/ (function(module, exports) {

var hasOwnProperty = {}.hasOwnProperty;
module.exports = function (it, key) {
  return hasOwnProperty.call(it, key);
};


/***/ }),

/***/ "0bfb":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// 21.2.5.3 get RegExp.prototype.flags
var anObject = __webpack_require__("cb7c");
module.exports = function () {
  var that = anObject(this);
  var result = '';
  if (that.global) result += 'g';
  if (that.ignoreCase) result += 'i';
  if (that.multiline) result += 'm';
  if (that.unicode) result += 'u';
  if (that.sticky) result += 'y';
  return result;
};


/***/ }),

/***/ "0fc9":
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__("3a38");
var max = Math.max;
var min = Math.min;
module.exports = function (index, length) {
  index = toInteger(index);
  return index < 0 ? max(index + length, 0) : min(index, length);
};


/***/ }),

/***/ "1654":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $at = __webpack_require__("71c1")(true);

// 21.1.3.27 String.prototype[@@iterator]()
__webpack_require__("30f1")(String, 'String', function (iterated) {
  this._t = String(iterated); // target
  this._i = 0;                // next index
// 21.1.5.2.1 %StringIteratorPrototype%.next()
}, function () {
  var O = this._t;
  var index = this._i;
  var point;
  if (index >= O.length) return { value: undefined, done: true };
  point = $at(O, index);
  this._i += point.length;
  return { value: point, done: false };
});


/***/ }),

/***/ "1691":
/***/ (function(module, exports) {

// IE 8- don't enum bug keys
module.exports = (
  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
).split(',');


/***/ }),

/***/ "1af6":
/***/ (function(module, exports, __webpack_require__) {

// 22.1.2.2 / 15.4.3.2 Array.isArray(arg)
var $export = __webpack_require__("63b6");

$export($export.S, 'Array', { isArray: __webpack_require__("9003") });


/***/ }),

/***/ "1bc3":
/***/ (function(module, exports, __webpack_require__) {

// 7.1.1 ToPrimitive(input [, PreferredType])
var isObject = __webpack_require__("f772");
// instead of the ES6 spec version, we didn't implement @@toPrimitive case
// and the second argument - flag - preferred type is a string
module.exports = function (it, S) {
  if (!isObject(it)) return it;
  var fn, val;
  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;
  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  throw TypeError("Can't convert object to primitive value");
};


/***/ }),

/***/ "1ec9":
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__("f772");
var document = __webpack_require__("e53d").document;
// typeof document.createElement is 'object' in old IE
var is = isObject(document) && isObject(document.createElement);
module.exports = function (it) {
  return is ? document.createElement(it) : {};
};


/***/ }),

/***/ "20fd":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $defineProperty = __webpack_require__("d9f6");
var createDesc = __webpack_require__("aebd");

module.exports = function (object, index, value) {
  if (index in object) $defineProperty.f(object, index, createDesc(0, value));
  else object[index] = value;
};


/***/ }),

/***/ "214f":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

__webpack_require__("b0c5");
var redefine = __webpack_require__("2aba");
var hide = __webpack_require__("32e9");
var fails = __webpack_require__("79e5");
var defined = __webpack_require__("be13");
var wks = __webpack_require__("2b4c");
var regexpExec = __webpack_require__("520a");

var SPECIES = wks('species');

var REPLACE_SUPPORTS_NAMED_GROUPS = !fails(function () {
  // #replace needs built-in support for named groups.
  // #match works fine because it just return the exec results, even if it has
  // a "grops" property.
  var re = /./;
  re.exec = function () {
    var result = [];
    result.groups = { a: '7' };
    return result;
  };
  return ''.replace(re, '$<a>') !== '7';
});

var SPLIT_WORKS_WITH_OVERWRITTEN_EXEC = (function () {
  // Chrome 51 has a buggy "split" implementation when RegExp#exec !== nativeExec
  var re = /(?:)/;
  var originalExec = re.exec;
  re.exec = function () { return originalExec.apply(this, arguments); };
  var result = 'ab'.split(re);
  return result.length === 2 && result[0] === 'a' && result[1] === 'b';
})();

module.exports = function (KEY, length, exec) {
  var SYMBOL = wks(KEY);

  var DELEGATES_TO_SYMBOL = !fails(function () {
    // String methods call symbol-named RegEp methods
    var O = {};
    O[SYMBOL] = function () { return 7; };
    return ''[KEY](O) != 7;
  });

  var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL ? !fails(function () {
    // Symbol-named RegExp methods call .exec
    var execCalled = false;
    var re = /a/;
    re.exec = function () { execCalled = true; return null; };
    if (KEY === 'split') {
      // RegExp[@@split] doesn't call the regex's exec method, but first creates
      // a new one. We need to return the patched regex when creating the new one.
      re.constructor = {};
      re.constructor[SPECIES] = function () { return re; };
    }
    re[SYMBOL]('');
    return !execCalled;
  }) : undefined;

  if (
    !DELEGATES_TO_SYMBOL ||
    !DELEGATES_TO_EXEC ||
    (KEY === 'replace' && !REPLACE_SUPPORTS_NAMED_GROUPS) ||
    (KEY === 'split' && !SPLIT_WORKS_WITH_OVERWRITTEN_EXEC)
  ) {
    var nativeRegExpMethod = /./[SYMBOL];
    var fns = exec(
      defined,
      SYMBOL,
      ''[KEY],
      function maybeCallNative(nativeMethod, regexp, str, arg2, forceStringMethod) {
        if (regexp.exec === regexpExec) {
          if (DELEGATES_TO_SYMBOL && !forceStringMethod) {
            // The native String method already delegates to @@method (this
            // polyfilled function), leasing to infinite recursion.
            // We avoid it by directly calling the native @@method method.
            return { done: true, value: nativeRegExpMethod.call(regexp, str, arg2) };
          }
          return { done: true, value: nativeMethod.call(str, regexp, arg2) };
        }
        return { done: false };
      }
    );
    var strfn = fns[0];
    var rxfn = fns[1];

    redefine(String.prototype, KEY, strfn);
    hide(RegExp.prototype, SYMBOL, length == 2
      // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)
      // 21.2.5.11 RegExp.prototype[@@split](string, limit)
      ? function (string, arg) { return rxfn.call(string, this, arg); }
      // 21.2.5.6 RegExp.prototype[@@match](string)
      // 21.2.5.9 RegExp.prototype[@@search](string)
      : function (string) { return rxfn.call(string, this); }
    );
  }
};


/***/ }),

/***/ "230e":
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__("d3f4");
var document = __webpack_require__("7726").document;
// typeof document.createElement is 'object' in old IE
var is = isObject(document) && isObject(document.createElement);
module.exports = function (it) {
  return is ? document.createElement(it) : {};
};


/***/ }),

/***/ "23c6":
/***/ (function(module, exports, __webpack_require__) {

// getting tag from 19.1.3.6 Object.prototype.toString()
var cof = __webpack_require__("2d95");
var TAG = __webpack_require__("2b4c")('toStringTag');
// ES3 wrong here
var ARG = cof(function () { return arguments; }()) == 'Arguments';

// fallback for IE11 Script Access Denied error
var tryGet = function (it, key) {
  try {
    return it[key];
  } catch (e) { /* empty */ }
};

module.exports = function (it) {
  var O, T, B;
  return it === undefined ? 'Undefined' : it === null ? 'Null'
    // @@toStringTag case
    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T
    // builtinTag case
    : ARG ? cof(O)
    // ES3 arguments fallback
    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
};


/***/ }),

/***/ "241e":
/***/ (function(module, exports, __webpack_require__) {

// 7.1.13 ToObject(argument)
var defined = __webpack_require__("25eb");
module.exports = function (it) {
  return Object(defined(it));
};


/***/ }),

/***/ "25eb":
/***/ (function(module, exports) {

// 7.2.1 RequireObjectCoercible(argument)
module.exports = function (it) {
  if (it == undefined) throw TypeError("Can't call method on  " + it);
  return it;
};


/***/ }),

/***/ "294c":
/***/ (function(module, exports) {

module.exports = function (exec) {
  try {
    return !!exec();
  } catch (e) {
    return true;
  }
};


/***/ }),

/***/ "2aba":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("7726");
var hide = __webpack_require__("32e9");
var has = __webpack_require__("69a8");
var SRC = __webpack_require__("ca5a")('src');
var $toString = __webpack_require__("fa5b");
var TO_STRING = 'toString';
var TPL = ('' + $toString).split(TO_STRING);

__webpack_require__("8378").inspectSource = function (it) {
  return $toString.call(it);
};

(module.exports = function (O, key, val, safe) {
  var isFunction = typeof val == 'function';
  if (isFunction) has(val, 'name') || hide(val, 'name', key);
  if (O[key] === val) return;
  if (isFunction) has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));
  if (O === global) {
    O[key] = val;
  } else if (!safe) {
    delete O[key];
    hide(O, key, val);
  } else if (O[key]) {
    O[key] = val;
  } else {
    hide(O, key, val);
  }
// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
})(Function.prototype, TO_STRING, function toString() {
  return typeof this == 'function' && this[SRC] || $toString.call(this);
});


/***/ }),

/***/ "2b4c":
/***/ (function(module, exports, __webpack_require__) {

var store = __webpack_require__("5537")('wks');
var uid = __webpack_require__("ca5a");
var Symbol = __webpack_require__("7726").Symbol;
var USE_SYMBOL = typeof Symbol == 'function';

var $exports = module.exports = function (name) {
  return store[name] || (store[name] =
    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
};

$exports.store = store;


/***/ }),

/***/ "2d00":
/***/ (function(module, exports) {

module.exports = false;


/***/ }),

/***/ "2d95":
/***/ (function(module, exports) {

var toString = {}.toString;

module.exports = function (it) {
  return toString.call(it).slice(8, -1);
};


/***/ }),

/***/ "2fdb":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// 21.1.3.7 String.prototype.includes(searchString, position = 0)

var $export = __webpack_require__("5ca1");
var context = __webpack_require__("d2c8");
var INCLUDES = 'includes';

$export($export.P + $export.F * __webpack_require__("5147")(INCLUDES), 'String', {
  includes: function includes(searchString /* , position = 0 */) {
    return !!~context(this, searchString, INCLUDES)
      .indexOf(searchString, arguments.length > 1 ? arguments[1] : undefined);
  }
});


/***/ }),

/***/ "30f1":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var LIBRARY = __webpack_require__("b8e3");
var $export = __webpack_require__("63b6");
var redefine = __webpack_require__("9138");
var hide = __webpack_require__("35e8");
var Iterators = __webpack_require__("481b");
var $iterCreate = __webpack_require__("8f60");
var setToStringTag = __webpack_require__("45f2");
var getPrototypeOf = __webpack_require__("53e2");
var ITERATOR = __webpack_require__("5168")('iterator');
var BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`
var FF_ITERATOR = '@@iterator';
var KEYS = 'keys';
var VALUES = 'values';

var returnThis = function () { return this; };

module.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {
  $iterCreate(Constructor, NAME, next);
  var getMethod = function (kind) {
    if (!BUGGY && kind in proto) return proto[kind];
    switch (kind) {
      case KEYS: return function keys() { return new Constructor(this, kind); };
      case VALUES: return function values() { return new Constructor(this, kind); };
    } return function entries() { return new Constructor(this, kind); };
  };
  var TAG = NAME + ' Iterator';
  var DEF_VALUES = DEFAULT == VALUES;
  var VALUES_BUG = false;
  var proto = Base.prototype;
  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];
  var $default = $native || getMethod(DEFAULT);
  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;
  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;
  var methods, key, IteratorPrototype;
  // Fix native
  if ($anyNative) {
    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));
    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {
      // Set @@toStringTag to native iterators
      setToStringTag(IteratorPrototype, TAG, true);
      // fix for some old engines
      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);
    }
  }
  // fix Array#{values, @@iterator}.name in V8 / FF
  if (DEF_VALUES && $native && $native.name !== VALUES) {
    VALUES_BUG = true;
    $default = function values() { return $native.call(this); };
  }
  // Define iterator
  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {
    hide(proto, ITERATOR, $default);
  }
  // Plug for library
  Iterators[NAME] = $default;
  Iterators[TAG] = returnThis;
  if (DEFAULT) {
    methods = {
      values: DEF_VALUES ? $default : getMethod(VALUES),
      keys: IS_SET ? $default : getMethod(KEYS),
      entries: $entries
    };
    if (FORCED) for (key in methods) {
      if (!(key in proto)) redefine(proto, key, methods[key]);
    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
  }
  return methods;
};


/***/ }),

/***/ "32a6":
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.14 Object.keys(O)
var toObject = __webpack_require__("241e");
var $keys = __webpack_require__("c3a1");

__webpack_require__("ce7e")('keys', function () {
  return function keys(it) {
    return $keys(toObject(it));
  };
});


/***/ }),

/***/ "32e9":
/***/ (function(module, exports, __webpack_require__) {

var dP = __webpack_require__("86cc");
var createDesc = __webpack_require__("4630");
module.exports = __webpack_require__("9e1e") ? function (object, key, value) {
  return dP.f(object, key, createDesc(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};


/***/ }),

/***/ "32fc":
/***/ (function(module, exports, __webpack_require__) {

var document = __webpack_require__("e53d").document;
module.exports = document && document.documentElement;


/***/ }),

/***/ "335c":
/***/ (function(module, exports, __webpack_require__) {

// fallback for non-array-like ES3 and non-enumerable old V8 strings
var cof = __webpack_require__("6b4c");
// eslint-disable-next-line no-prototype-builtins
module.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {
  return cof(it) == 'String' ? it.split('') : Object(it);
};


/***/ }),

/***/ "355d":
/***/ (function(module, exports) {

exports.f = {}.propertyIsEnumerable;


/***/ }),

/***/ "35e8":
/***/ (function(module, exports, __webpack_require__) {

var dP = __webpack_require__("d9f6");
var createDesc = __webpack_require__("aebd");
module.exports = __webpack_require__("8e60") ? function (object, key, value) {
  return dP.f(object, key, createDesc(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};


/***/ }),

/***/ "36c3":
/***/ (function(module, exports, __webpack_require__) {

// to indexed object, toObject with fallback for non-array-like ES3 strings
var IObject = __webpack_require__("335c");
var defined = __webpack_require__("25eb");
module.exports = function (it) {
  return IObject(defined(it));
};


/***/ }),

/***/ "3702":
/***/ (function(module, exports, __webpack_require__) {

// check on default Array iterator
var Iterators = __webpack_require__("481b");
var ITERATOR = __webpack_require__("5168")('iterator');
var ArrayProto = Array.prototype;

module.exports = function (it) {
  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);
};


/***/ }),

/***/ "3a38":
/***/ (function(module, exports) {

// 7.1.4 ToInteger
var ceil = Math.ceil;
var floor = Math.floor;
module.exports = function (it) {
  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
};


/***/ }),

/***/ "40c3":
/***/ (function(module, exports, __webpack_require__) {

// getting tag from 19.1.3.6 Object.prototype.toString()
var cof = __webpack_require__("6b4c");
var TAG = __webpack_require__("5168")('toStringTag');
// ES3 wrong here
var ARG = cof(function () { return arguments; }()) == 'Arguments';

// fallback for IE11 Script Access Denied error
var tryGet = function (it, key) {
  try {
    return it[key];
  } catch (e) { /* empty */ }
};

module.exports = function (it) {
  var O, T, B;
  return it === undefined ? 'Undefined' : it === null ? 'Null'
    // @@toStringTag case
    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T
    // builtinTag case
    : ARG ? cof(O)
    // ES3 arguments fallback
    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
};


/***/ }),

/***/ "4588":
/***/ (function(module, exports) {

// 7.1.4 ToInteger
var ceil = Math.ceil;
var floor = Math.floor;
module.exports = function (it) {
  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
};


/***/ }),

/***/ "45f2":
/***/ (function(module, exports, __webpack_require__) {

var def = __webpack_require__("d9f6").f;
var has = __webpack_require__("07e3");
var TAG = __webpack_require__("5168")('toStringTag');

module.exports = function (it, tag, stat) {
  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });
};


/***/ }),

/***/ "4630":
/***/ (function(module, exports) {

module.exports = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};


/***/ }),

/***/ "469f":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("6c1c");
__webpack_require__("1654");
module.exports = __webpack_require__("7d7b");


/***/ }),

/***/ "481b":
/***/ (function(module, exports) {

module.exports = {};


/***/ }),

/***/ "4aa6":
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__("dc62");

/***/ }),

/***/ "4bf8":
/***/ (function(module, exports, __webpack_require__) {

// 7.1.13 ToObject(argument)
var defined = __webpack_require__("be13");
module.exports = function (it) {
  return Object(defined(it));
};


/***/ }),

/***/ "4ee1":
/***/ (function(module, exports, __webpack_require__) {

var ITERATOR = __webpack_require__("5168")('iterator');
var SAFE_CLOSING = false;

try {
  var riter = [7][ITERATOR]();
  riter['return'] = function () { SAFE_CLOSING = true; };
  // eslint-disable-next-line no-throw-literal
  Array.from(riter, function () { throw 2; });
} catch (e) { /* empty */ }

module.exports = function (exec, skipClosing) {
  if (!skipClosing && !SAFE_CLOSING) return false;
  var safe = false;
  try {
    var arr = [7];
    var iter = arr[ITERATOR]();
    iter.next = function () { return { done: safe = true }; };
    arr[ITERATOR] = function () { return iter; };
    exec(arr);
  } catch (e) { /* empty */ }
  return safe;
};


/***/ }),

/***/ "50ed":
/***/ (function(module, exports) {

module.exports = function (done, value) {
  return { value: value, done: !!done };
};


/***/ }),

/***/ "5147":
/***/ (function(module, exports, __webpack_require__) {

var MATCH = __webpack_require__("2b4c")('match');
module.exports = function (KEY) {
  var re = /./;
  try {
    '/./'[KEY](re);
  } catch (e) {
    try {
      re[MATCH] = false;
      return !'/./'[KEY](re);
    } catch (f) { /* empty */ }
  } return true;
};


/***/ }),

/***/ "5168":
/***/ (function(module, exports, __webpack_require__) {

var store = __webpack_require__("dbdb")('wks');
var uid = __webpack_require__("62a0");
var Symbol = __webpack_require__("e53d").Symbol;
var USE_SYMBOL = typeof Symbol == 'function';

var $exports = module.exports = function (name) {
  return store[name] || (store[name] =
    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
};

$exports.store = store;


/***/ }),

/***/ "5176":
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__("51b6");

/***/ }),

/***/ "51b6":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("a3c3");
module.exports = __webpack_require__("584a").Object.assign;


/***/ }),

/***/ "520a":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var regexpFlags = __webpack_require__("0bfb");

var nativeExec = RegExp.prototype.exec;
// This always refers to the native implementation, because the
// String#replace polyfill uses ./fix-regexp-well-known-symbol-logic.js,
// which loads this file before patching the method.
var nativeReplace = String.prototype.replace;

var patchedExec = nativeExec;

var LAST_INDEX = 'lastIndex';

var UPDATES_LAST_INDEX_WRONG = (function () {
  var re1 = /a/,
      re2 = /b*/g;
  nativeExec.call(re1, 'a');
  nativeExec.call(re2, 'a');
  return re1[LAST_INDEX] !== 0 || re2[LAST_INDEX] !== 0;
})();

// nonparticipating capturing group, copied from es5-shim's String#split patch.
var NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;

var PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED;

if (PATCH) {
  patchedExec = function exec(str) {
    var re = this;
    var lastIndex, reCopy, match, i;

    if (NPCG_INCLUDED) {
      reCopy = new RegExp('^' + re.source + '$(?!\\s)', regexpFlags.call(re));
    }
    if (UPDATES_LAST_INDEX_WRONG) lastIndex = re[LAST_INDEX];

    match = nativeExec.call(re, str);

    if (UPDATES_LAST_INDEX_WRONG && match) {
      re[LAST_INDEX] = re.global ? match.index + match[0].length : lastIndex;
    }
    if (NPCG_INCLUDED && match && match.length > 1) {
      // Fix browsers whose `exec` methods don't consistently return `undefined`
      // for NPCG, like IE8. NOTE: This doesn' work for /(.?)?/
      // eslint-disable-next-line no-loop-func
      nativeReplace.call(match[0], reCopy, function () {
        for (i = 1; i < arguments.length - 2; i++) {
          if (arguments[i] === undefined) match[i] = undefined;
        }
      });
    }

    return match;
  };
}

module.exports = patchedExec;


/***/ }),

/***/ "53e2":
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
var has = __webpack_require__("07e3");
var toObject = __webpack_require__("241e");
var IE_PROTO = __webpack_require__("5559")('IE_PROTO');
var ObjectProto = Object.prototype;

module.exports = Object.getPrototypeOf || function (O) {
  O = toObject(O);
  if (has(O, IE_PROTO)) return O[IE_PROTO];
  if (typeof O.constructor == 'function' && O instanceof O.constructor) {
    return O.constructor.prototype;
  } return O instanceof Object ? ObjectProto : null;
};


/***/ }),

/***/ "549b":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var ctx = __webpack_require__("d864");
var $export = __webpack_require__("63b6");
var toObject = __webpack_require__("241e");
var call = __webpack_require__("b0dc");
var isArrayIter = __webpack_require__("3702");
var toLength = __webpack_require__("b447");
var createProperty = __webpack_require__("20fd");
var getIterFn = __webpack_require__("7cd6");

$export($export.S + $export.F * !__webpack_require__("4ee1")(function (iter) { Array.from(iter); }), 'Array', {
  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)
  from: function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {
    var O = toObject(arrayLike);
    var C = typeof this == 'function' ? this : Array;
    var aLen = arguments.length;
    var mapfn = aLen > 1 ? arguments[1] : undefined;
    var mapping = mapfn !== undefined;
    var index = 0;
    var iterFn = getIterFn(O);
    var length, result, step, iterator;
    if (mapping) mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);
    // if object isn't iterable or it's array with default iterator - use simple case
    if (iterFn != undefined && !(C == Array && isArrayIter(iterFn))) {
      for (iterator = iterFn.call(O), result = new C(); !(step = iterator.next()).done; index++) {
        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);
      }
    } else {
      length = toLength(O.length);
      for (result = new C(length); length > index; index++) {
        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);
      }
    }
    result.length = index;
    return result;
  }
});


/***/ }),

/***/ "54a1":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("6c1c");
__webpack_require__("1654");
module.exports = __webpack_require__("95d5");


/***/ }),

/***/ "5537":
/***/ (function(module, exports, __webpack_require__) {

var core = __webpack_require__("8378");
var global = __webpack_require__("7726");
var SHARED = '__core-js_shared__';
var store = global[SHARED] || (global[SHARED] = {});

(module.exports = function (key, value) {
  return store[key] || (store[key] = value !== undefined ? value : {});
})('versions', []).push({
  version: core.version,
  mode: __webpack_require__("2d00") ? 'pure' : 'global',
  copyright: '© 2019 Denis Pushkarev (zloirock.ru)'
});


/***/ }),

/***/ "5559":
/***/ (function(module, exports, __webpack_require__) {

var shared = __webpack_require__("dbdb")('keys');
var uid = __webpack_require__("62a0");
module.exports = function (key) {
  return shared[key] || (shared[key] = uid(key));
};


/***/ }),

/***/ "584a":
/***/ (function(module, exports) {

var core = module.exports = { version: '2.6.5' };
if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef


/***/ }),

/***/ "5b4e":
/***/ (function(module, exports, __webpack_require__) {

// false -> Array#indexOf
// true  -> Array#includes
var toIObject = __webpack_require__("36c3");
var toLength = __webpack_require__("b447");
var toAbsoluteIndex = __webpack_require__("0fc9");
module.exports = function (IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = toIObject($this);
    var length = toLength(O.length);
    var index = toAbsoluteIndex(fromIndex, length);
    var value;
    // Array#includes uses SameValueZero equality algorithm
    // eslint-disable-next-line no-self-compare
    if (IS_INCLUDES && el != el) while (length > index) {
      value = O[index++];
      // eslint-disable-next-line no-self-compare
      if (value != value) return true;
    // Array#indexOf ignores holes, Array#includes - not
    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {
      if (O[index] === el) return IS_INCLUDES || index || 0;
    } return !IS_INCLUDES && -1;
  };
};


/***/ }),

/***/ "5ca1":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("7726");
var core = __webpack_require__("8378");
var hide = __webpack_require__("32e9");
var redefine = __webpack_require__("2aba");
var ctx = __webpack_require__("9b43");
var PROTOTYPE = 'prototype';

var $export = function (type, name, source) {
  var IS_FORCED = type & $export.F;
  var IS_GLOBAL = type & $export.G;
  var IS_STATIC = type & $export.S;
  var IS_PROTO = type & $export.P;
  var IS_BIND = type & $export.B;
  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE];
  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});
  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});
  var key, own, out, exp;
  if (IS_GLOBAL) source = name;
  for (key in source) {
    // contains in native
    own = !IS_FORCED && target && target[key] !== undefined;
    // export native or passed
    out = (own ? target : source)[key];
    // bind timers to global for call from export context
    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
    // extend global
    if (target) redefine(target, key, out, type & $export.U);
    // export
    if (exports[key] != out) hide(exports, key, exp);
    if (IS_PROTO && expProto[key] != out) expProto[key] = out;
  }
};
global.core = core;
// type bitmap
$export.F = 1;   // forced
$export.G = 2;   // global
$export.S = 4;   // static
$export.P = 8;   // proto
$export.B = 16;  // bind
$export.W = 32;  // wrap
$export.U = 64;  // safe
$export.R = 128; // real proto method for `library`
module.exports = $export;


/***/ }),

/***/ "5d73":
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__("469f");

/***/ }),

/***/ "5f1b":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var classof = __webpack_require__("23c6");
var builtinExec = RegExp.prototype.exec;

 // `RegExpExec` abstract operation
// https://tc39.github.io/ecma262/#sec-regexpexec
module.exports = function (R, S) {
  var exec = R.exec;
  if (typeof exec === 'function') {
    var result = exec.call(R, S);
    if (typeof result !== 'object') {
      throw new TypeError('RegExp exec method returned something other than an Object or null');
    }
    return result;
  }
  if (classof(R) !== 'RegExp') {
    throw new TypeError('RegExp#exec called on incompatible receiver');
  }
  return builtinExec.call(R, S);
};


/***/ }),

/***/ "626a":
/***/ (function(module, exports, __webpack_require__) {

// fallback for non-array-like ES3 and non-enumerable old V8 strings
var cof = __webpack_require__("2d95");
// eslint-disable-next-line no-prototype-builtins
module.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {
  return cof(it) == 'String' ? it.split('') : Object(it);
};


/***/ }),

/***/ "62a0":
/***/ (function(module, exports) {

var id = 0;
var px = Math.random();
module.exports = function (key) {
  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
};


/***/ }),

/***/ "63b6":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("e53d");
var core = __webpack_require__("584a");
var ctx = __webpack_require__("d864");
var hide = __webpack_require__("35e8");
var has = __webpack_require__("07e3");
var PROTOTYPE = 'prototype';

var $export = function (type, name, source) {
  var IS_FORCED = type & $export.F;
  var IS_GLOBAL = type & $export.G;
  var IS_STATIC = type & $export.S;
  var IS_PROTO = type & $export.P;
  var IS_BIND = type & $export.B;
  var IS_WRAP = type & $export.W;
  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});
  var expProto = exports[PROTOTYPE];
  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];
  var key, own, out;
  if (IS_GLOBAL) source = name;
  for (key in source) {
    // contains in native
    own = !IS_FORCED && target && target[key] !== undefined;
    if (own && has(exports, key)) continue;
    // export native or passed
    out = own ? target[key] : source[key];
    // prevent global pollution for namespaces
    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]
    // bind timers to global for call from export context
    : IS_BIND && own ? ctx(out, global)
    // wrap global constructors for prevent change them in library
    : IS_WRAP && target[key] == out ? (function (C) {
      var F = function (a, b, c) {
        if (this instanceof C) {
          switch (arguments.length) {
            case 0: return new C();
            case 1: return new C(a);
            case 2: return new C(a, b);
          } return new C(a, b, c);
        } return C.apply(this, arguments);
      };
      F[PROTOTYPE] = C[PROTOTYPE];
      return F;
    // make static versions for prototype methods
    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%
    if (IS_PROTO) {
      (exports.virtual || (exports.virtual = {}))[key] = out;
      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%
      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);
    }
  }
};
// type bitmap
$export.F = 1;   // forced
$export.G = 2;   // global
$export.S = 4;   // static
$export.P = 8;   // proto
$export.B = 16;  // bind
$export.W = 32;  // wrap
$export.U = 64;  // safe
$export.R = 128; // real proto method for `library`
module.exports = $export;


/***/ }),

/***/ "6762":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// https://github.com/tc39/Array.prototype.includes
var $export = __webpack_require__("5ca1");
var $includes = __webpack_require__("c366")(true);

$export($export.P, 'Array', {
  includes: function includes(el /* , fromIndex = 0 */) {
    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);
  }
});

__webpack_require__("9c6c")('includes');


/***/ }),

/***/ "6821":
/***/ (function(module, exports, __webpack_require__) {

// to indexed object, toObject with fallback for non-array-like ES3 strings
var IObject = __webpack_require__("626a");
var defined = __webpack_require__("be13");
module.exports = function (it) {
  return IObject(defined(it));
};


/***/ }),

/***/ "69a8":
/***/ (function(module, exports) {

var hasOwnProperty = {}.hasOwnProperty;
module.exports = function (it, key) {
  return hasOwnProperty.call(it, key);
};


/***/ }),

/***/ "6a99":
/***/ (function(module, exports, __webpack_require__) {

// 7.1.1 ToPrimitive(input [, PreferredType])
var isObject = __webpack_require__("d3f4");
// instead of the ES6 spec version, we didn't implement @@toPrimitive case
// and the second argument - flag - preferred type is a string
module.exports = function (it, S) {
  if (!isObject(it)) return it;
  var fn, val;
  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;
  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  throw TypeError("Can't convert object to primitive value");
};


/***/ }),

/***/ "6b4c":
/***/ (function(module, exports) {

var toString = {}.toString;

module.exports = function (it) {
  return toString.call(it).slice(8, -1);
};


/***/ }),

/***/ "6c1c":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("c367");
var global = __webpack_require__("e53d");
var hide = __webpack_require__("35e8");
var Iterators = __webpack_require__("481b");
var TO_STRING_TAG = __webpack_require__("5168")('toStringTag');

var DOMIterables = ('CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,' +
  'DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,' +
  'MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,' +
  'SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,' +
  'TextTrackList,TouchList').split(',');

for (var i = 0; i < DOMIterables.length; i++) {
  var NAME = DOMIterables[i];
  var Collection = global[NAME];
  var proto = Collection && Collection.prototype;
  if (proto && !proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);
  Iterators[NAME] = Iterators.Array;
}


/***/ }),

/***/ "71c1":
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__("3a38");
var defined = __webpack_require__("25eb");
// true  -> String#at
// false -> String#codePointAt
module.exports = function (TO_STRING) {
  return function (that, pos) {
    var s = String(defined(that));
    var i = toInteger(pos);
    var l = s.length;
    var a, b;
    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;
    a = s.charCodeAt(i);
    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff
      ? TO_STRING ? s.charAt(i) : a
      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
  };
};


/***/ }),

/***/ "7726":
/***/ (function(module, exports) {

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
var global = module.exports = typeof window != 'undefined' && window.Math == Math
  ? window : typeof self != 'undefined' && self.Math == Math ? self
  // eslint-disable-next-line no-new-func
  : Function('return this')();
if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef


/***/ }),

/***/ "774e":
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__("d2d5");

/***/ }),

/***/ "77f1":
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__("4588");
var max = Math.max;
var min = Math.min;
module.exports = function (index, length) {
  index = toInteger(index);
  return index < 0 ? max(index + length, 0) : min(index, length);
};


/***/ }),

/***/ "794b":
/***/ (function(module, exports, __webpack_require__) {

module.exports = !__webpack_require__("8e60") && !__webpack_require__("294c")(function () {
  return Object.defineProperty(__webpack_require__("1ec9")('div'), 'a', { get: function () { return 7; } }).a != 7;
});


/***/ }),

/***/ "79aa":
/***/ (function(module, exports) {

module.exports = function (it) {
  if (typeof it != 'function') throw TypeError(it + ' is not a function!');
  return it;
};


/***/ }),

/***/ "79e5":
/***/ (function(module, exports) {

module.exports = function (exec) {
  try {
    return !!exec();
  } catch (e) {
    return true;
  }
};


/***/ }),

/***/ "7cd6":
/***/ (function(module, exports, __webpack_require__) {

var classof = __webpack_require__("40c3");
var ITERATOR = __webpack_require__("5168")('iterator');
var Iterators = __webpack_require__("481b");
module.exports = __webpack_require__("584a").getIteratorMethod = function (it) {
  if (it != undefined) return it[ITERATOR]
    || it['@@iterator']
    || Iterators[classof(it)];
};


/***/ }),

/***/ "7d7b":
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__("e4ae");
var get = __webpack_require__("7cd6");
module.exports = __webpack_require__("584a").getIterator = function (it) {
  var iterFn = get(it);
  if (typeof iterFn != 'function') throw TypeError(it + ' is not iterable!');
  return anObject(iterFn.call(it));
};


/***/ }),

/***/ "7e90":
/***/ (function(module, exports, __webpack_require__) {

var dP = __webpack_require__("d9f6");
var anObject = __webpack_require__("e4ae");
var getKeys = __webpack_require__("c3a1");

module.exports = __webpack_require__("8e60") ? Object.defineProperties : function defineProperties(O, Properties) {
  anObject(O);
  var keys = getKeys(Properties);
  var length = keys.length;
  var i = 0;
  var P;
  while (length > i) dP.f(O, P = keys[i++], Properties[P]);
  return O;
};


/***/ }),

/***/ "8378":
/***/ (function(module, exports) {

var core = module.exports = { version: '2.6.5' };
if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef


/***/ }),

/***/ "8436":
/***/ (function(module, exports) {

module.exports = function () { /* empty */ };


/***/ }),

/***/ "86cc":
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__("cb7c");
var IE8_DOM_DEFINE = __webpack_require__("c69a");
var toPrimitive = __webpack_require__("6a99");
var dP = Object.defineProperty;

exports.f = __webpack_require__("9e1e") ? Object.defineProperty : function defineProperty(O, P, Attributes) {
  anObject(O);
  P = toPrimitive(P, true);
  anObject(Attributes);
  if (IE8_DOM_DEFINE) try {
    return dP(O, P, Attributes);
  } catch (e) { /* empty */ }
  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};


/***/ }),

/***/ "8aae":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("32a6");
module.exports = __webpack_require__("584a").Object.keys;


/***/ }),

/***/ "8e60":
/***/ (function(module, exports, __webpack_require__) {

// Thank's IE8 for his funny defineProperty
module.exports = !__webpack_require__("294c")(function () {
  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;
});


/***/ }),

/***/ "8f60":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var create = __webpack_require__("a159");
var descriptor = __webpack_require__("aebd");
var setToStringTag = __webpack_require__("45f2");
var IteratorPrototype = {};

// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
__webpack_require__("35e8")(IteratorPrototype, __webpack_require__("5168")('iterator'), function () { return this; });

module.exports = function (Constructor, NAME, next) {
  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });
  setToStringTag(Constructor, NAME + ' Iterator');
};


/***/ }),

/***/ "9003":
/***/ (function(module, exports, __webpack_require__) {

// 7.2.2 IsArray(argument)
var cof = __webpack_require__("6b4c");
module.exports = Array.isArray || function isArray(arg) {
  return cof(arg) == 'Array';
};


/***/ }),

/***/ "9138":
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__("35e8");


/***/ }),

/***/ "9306":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// 19.1.2.1 Object.assign(target, source, ...)
var getKeys = __webpack_require__("c3a1");
var gOPS = __webpack_require__("9aa9");
var pIE = __webpack_require__("355d");
var toObject = __webpack_require__("241e");
var IObject = __webpack_require__("335c");
var $assign = Object.assign;

// should work with symbols and should have deterministic property order (V8 bug)
module.exports = !$assign || __webpack_require__("294c")(function () {
  var A = {};
  var B = {};
  // eslint-disable-next-line no-undef
  var S = Symbol();
  var K = 'abcdefghijklmnopqrst';
  A[S] = 7;
  K.split('').forEach(function (k) { B[k] = k; });
  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;
}) ? function assign(target, source) { // eslint-disable-line no-unused-vars
  var T = toObject(target);
  var aLen = arguments.length;
  var index = 1;
  var getSymbols = gOPS.f;
  var isEnum = pIE.f;
  while (aLen > index) {
    var S = IObject(arguments[index++]);
    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);
    var length = keys.length;
    var j = 0;
    var key;
    while (length > j) if (isEnum.call(S, key = keys[j++])) T[key] = S[key];
  } return T;
} : $assign;


/***/ }),

/***/ "9427":
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__("63b6");
// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
$export($export.S, 'Object', { create: __webpack_require__("a159") });


/***/ }),

/***/ "95d5":
/***/ (function(module, exports, __webpack_require__) {

var classof = __webpack_require__("40c3");
var ITERATOR = __webpack_require__("5168")('iterator');
var Iterators = __webpack_require__("481b");
module.exports = __webpack_require__("584a").isIterable = function (it) {
  var O = Object(it);
  return O[ITERATOR] !== undefined
    || '@@iterator' in O
    // eslint-disable-next-line no-prototype-builtins
    || Iterators.hasOwnProperty(classof(O));
};


/***/ }),

/***/ "9aa9":
/***/ (function(module, exports) {

exports.f = Object.getOwnPropertySymbols;


/***/ }),

/***/ "9b43":
/***/ (function(module, exports, __webpack_require__) {

// optional / simple context binding
var aFunction = __webpack_require__("d8e8");
module.exports = function (fn, that, length) {
  aFunction(fn);
  if (that === undefined) return fn;
  switch (length) {
    case 1: return function (a) {
      return fn.call(that, a);
    };
    case 2: return function (a, b) {
      return fn.call(that, a, b);
    };
    case 3: return function (a, b, c) {
      return fn.call(that, a, b, c);
    };
  }
  return function (/* ...args */) {
    return fn.apply(that, arguments);
  };
};


/***/ }),

/***/ "9c6c":
/***/ (function(module, exports, __webpack_require__) {

// 22.1.3.31 Array.prototype[@@unscopables]
var UNSCOPABLES = __webpack_require__("2b4c")('unscopables');
var ArrayProto = Array.prototype;
if (ArrayProto[UNSCOPABLES] == undefined) __webpack_require__("32e9")(ArrayProto, UNSCOPABLES, {});
module.exports = function (key) {
  ArrayProto[UNSCOPABLES][key] = true;
};


/***/ }),

/***/ "9def":
/***/ (function(module, exports, __webpack_require__) {

// 7.1.15 ToLength
var toInteger = __webpack_require__("4588");
var min = Math.min;
module.exports = function (it) {
  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
};


/***/ }),

/***/ "9e1e":
/***/ (function(module, exports, __webpack_require__) {

// Thank's IE8 for his funny defineProperty
module.exports = !__webpack_require__("79e5")(function () {
  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;
});


/***/ }),

/***/ "a159":
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
var anObject = __webpack_require__("e4ae");
var dPs = __webpack_require__("7e90");
var enumBugKeys = __webpack_require__("1691");
var IE_PROTO = __webpack_require__("5559")('IE_PROTO');
var Empty = function () { /* empty */ };
var PROTOTYPE = 'prototype';

// Create object with fake `null` prototype: use iframe Object with cleared prototype
var createDict = function () {
  // Thrash, waste and sodomy: IE GC bug
  var iframe = __webpack_require__("1ec9")('iframe');
  var i = enumBugKeys.length;
  var lt = '<';
  var gt = '>';
  var iframeDocument;
  iframe.style.display = 'none';
  __webpack_require__("32fc").appendChild(iframe);
  iframe.src = 'javascript:'; // eslint-disable-line no-script-url
  // createDict = iframe.contentWindow.Object;
  // html.removeChild(iframe);
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
  iframeDocument.close();
  createDict = iframeDocument.F;
  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];
  return createDict();
};

module.exports = Object.create || function create(O, Properties) {
  var result;
  if (O !== null) {
    Empty[PROTOTYPE] = anObject(O);
    result = new Empty();
    Empty[PROTOTYPE] = null;
    // add "__proto__" for Object.getPrototypeOf polyfill
    result[IE_PROTO] = O;
  } else result = createDict();
  return Properties === undefined ? result : dPs(result, Properties);
};


/***/ }),

/***/ "a352":
/***/ (function(module, exports) {

module.exports = __webpack_require__(1396);

/***/ }),

/***/ "a3c3":
/***/ (function(module, exports, __webpack_require__) {

// 19.1.3.1 Object.assign(target, source)
var $export = __webpack_require__("63b6");

$export($export.S + $export.F, 'Object', { assign: __webpack_require__("9306") });


/***/ }),

/***/ "a481":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var anObject = __webpack_require__("cb7c");
var toObject = __webpack_require__("4bf8");
var toLength = __webpack_require__("9def");
var toInteger = __webpack_require__("4588");
var advanceStringIndex = __webpack_require__("0390");
var regExpExec = __webpack_require__("5f1b");
var max = Math.max;
var min = Math.min;
var floor = Math.floor;
var SUBSTITUTION_SYMBOLS = /\$([$&`']|\d\d?|<[^>]*>)/g;
var SUBSTITUTION_SYMBOLS_NO_NAMED = /\$([$&`']|\d\d?)/g;

var maybeToString = function (it) {
  return it === undefined ? it : String(it);
};

// @@replace logic
__webpack_require__("214f")('replace', 2, function (defined, REPLACE, $replace, maybeCallNative) {
  return [
    // `String.prototype.replace` method
    // https://tc39.github.io/ecma262/#sec-string.prototype.replace
    function replace(searchValue, replaceValue) {
      var O = defined(this);
      var fn = searchValue == undefined ? undefined : searchValue[REPLACE];
      return fn !== undefined
        ? fn.call(searchValue, O, replaceValue)
        : $replace.call(String(O), searchValue, replaceValue);
    },
    // `RegExp.prototype[@@replace]` method
    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@replace
    function (regexp, replaceValue) {
      var res = maybeCallNative($replace, regexp, this, replaceValue);
      if (res.done) return res.value;

      var rx = anObject(regexp);
      var S = String(this);
      var functionalReplace = typeof replaceValue === 'function';
      if (!functionalReplace) replaceValue = String(replaceValue);
      var global = rx.global;
      if (global) {
        var fullUnicode = rx.unicode;
        rx.lastIndex = 0;
      }
      var results = [];
      while (true) {
        var result = regExpExec(rx, S);
        if (result === null) break;
        results.push(result);
        if (!global) break;
        var matchStr = String(result[0]);
        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);
      }
      var accumulatedResult = '';
      var nextSourcePosition = 0;
      for (var i = 0; i < results.length; i++) {
        result = results[i];
        var matched = String(result[0]);
        var position = max(min(toInteger(result.index), S.length), 0);
        var captures = [];
        // NOTE: This is equivalent to
        //   captures = result.slice(1).map(maybeToString)
        // but for some reason `nativeSlice.call(result, 1, result.length)` (called in
        // the slice polyfill when slicing native arrays) "doesn't work" in safari 9 and
        // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.
        for (var j = 1; j < result.length; j++) captures.push(maybeToString(result[j]));
        var namedCaptures = result.groups;
        if (functionalReplace) {
          var replacerArgs = [matched].concat(captures, position, S);
          if (namedCaptures !== undefined) replacerArgs.push(namedCaptures);
          var replacement = String(replaceValue.apply(undefined, replacerArgs));
        } else {
          replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);
        }
        if (position >= nextSourcePosition) {
          accumulatedResult += S.slice(nextSourcePosition, position) + replacement;
          nextSourcePosition = position + matched.length;
        }
      }
      return accumulatedResult + S.slice(nextSourcePosition);
    }
  ];

    // https://tc39.github.io/ecma262/#sec-getsubstitution
  function getSubstitution(matched, str, position, captures, namedCaptures, replacement) {
    var tailPos = position + matched.length;
    var m = captures.length;
    var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;
    if (namedCaptures !== undefined) {
      namedCaptures = toObject(namedCaptures);
      symbols = SUBSTITUTION_SYMBOLS;
    }
    return $replace.call(replacement, symbols, function (match, ch) {
      var capture;
      switch (ch.charAt(0)) {
        case '$': return '$';
        case '&': return matched;
        case '`': return str.slice(0, position);
        case "'": return str.slice(tailPos);
        case '<':
          capture = namedCaptures[ch.slice(1, -1)];
          break;
        default: // \d\d?
          var n = +ch;
          if (n === 0) return match;
          if (n > m) {
            var f = floor(n / 10);
            if (f === 0) return match;
            if (f <= m) return captures[f - 1] === undefined ? ch.charAt(1) : captures[f - 1] + ch.charAt(1);
            return match;
          }
          capture = captures[n - 1];
      }
      return capture === undefined ? '' : capture;
    });
  }
});


/***/ }),

/***/ "a4bb":
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__("8aae");

/***/ }),

/***/ "a745":
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__("f410");

/***/ }),

/***/ "aae3":
/***/ (function(module, exports, __webpack_require__) {

// 7.2.8 IsRegExp(argument)
var isObject = __webpack_require__("d3f4");
var cof = __webpack_require__("2d95");
var MATCH = __webpack_require__("2b4c")('match');
module.exports = function (it) {
  var isRegExp;
  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : cof(it) == 'RegExp');
};


/***/ }),

/***/ "aebd":
/***/ (function(module, exports) {

module.exports = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};


/***/ }),

/***/ "b0c5":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var regexpExec = __webpack_require__("520a");
__webpack_require__("5ca1")({
  target: 'RegExp',
  proto: true,
  forced: regexpExec !== /./.exec
}, {
  exec: regexpExec
});


/***/ }),

/***/ "b0dc":
/***/ (function(module, exports, __webpack_require__) {

// call something on iterator step with safe closing on error
var anObject = __webpack_require__("e4ae");
module.exports = function (iterator, fn, value, entries) {
  try {
    return entries ? fn(anObject(value)[0], value[1]) : fn(value);
  // 7.4.6 IteratorClose(iterator, completion)
  } catch (e) {
    var ret = iterator['return'];
    if (ret !== undefined) anObject(ret.call(iterator));
    throw e;
  }
};


/***/ }),

/***/ "b447":
/***/ (function(module, exports, __webpack_require__) {

// 7.1.15 ToLength
var toInteger = __webpack_require__("3a38");
var min = Math.min;
module.exports = function (it) {
  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
};


/***/ }),

/***/ "b8e3":
/***/ (function(module, exports) {

module.exports = true;


/***/ }),

/***/ "be13":
/***/ (function(module, exports) {

// 7.2.1 RequireObjectCoercible(argument)
module.exports = function (it) {
  if (it == undefined) throw TypeError("Can't call method on  " + it);
  return it;
};


/***/ }),

/***/ "c366":
/***/ (function(module, exports, __webpack_require__) {

// false -> Array#indexOf
// true  -> Array#includes
var toIObject = __webpack_require__("6821");
var toLength = __webpack_require__("9def");
var toAbsoluteIndex = __webpack_require__("77f1");
module.exports = function (IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = toIObject($this);
    var length = toLength(O.length);
    var index = toAbsoluteIndex(fromIndex, length);
    var value;
    // Array#includes uses SameValueZero equality algorithm
    // eslint-disable-next-line no-self-compare
    if (IS_INCLUDES && el != el) while (length > index) {
      value = O[index++];
      // eslint-disable-next-line no-self-compare
      if (value != value) return true;
    // Array#indexOf ignores holes, Array#includes - not
    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {
      if (O[index] === el) return IS_INCLUDES || index || 0;
    } return !IS_INCLUDES && -1;
  };
};


/***/ }),

/***/ "c367":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var addToUnscopables = __webpack_require__("8436");
var step = __webpack_require__("50ed");
var Iterators = __webpack_require__("481b");
var toIObject = __webpack_require__("36c3");

// 22.1.3.4 Array.prototype.entries()
// 22.1.3.13 Array.prototype.keys()
// 22.1.3.29 Array.prototype.values()
// 22.1.3.30 Array.prototype[@@iterator]()
module.exports = __webpack_require__("30f1")(Array, 'Array', function (iterated, kind) {
  this._t = toIObject(iterated); // target
  this._i = 0;                   // next index
  this._k = kind;                // kind
// 22.1.5.2.1 %ArrayIteratorPrototype%.next()
}, function () {
  var O = this._t;
  var kind = this._k;
  var index = this._i++;
  if (!O || index >= O.length) {
    this._t = undefined;
    return step(1);
  }
  if (kind == 'keys') return step(0, index);
  if (kind == 'values') return step(0, O[index]);
  return step(0, [index, O[index]]);
}, 'values');

// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
Iterators.Arguments = Iterators.Array;

addToUnscopables('keys');
addToUnscopables('values');
addToUnscopables('entries');


/***/ }),

/***/ "c3a1":
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.14 / 15.2.3.14 Object.keys(O)
var $keys = __webpack_require__("e6f3");
var enumBugKeys = __webpack_require__("1691");

module.exports = Object.keys || function keys(O) {
  return $keys(O, enumBugKeys);
};


/***/ }),

/***/ "c649":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return insertNodeAt; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return camelize; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return console; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return removeNode; });
/* harmony import */ var core_js_modules_es6_regexp_replace__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("a481");
/* harmony import */ var core_js_modules_es6_regexp_replace__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_regexp_replace__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var C_Users_david_desmaisons_Documents_project_source_Vue_Draggable_node_modules_babel_runtime_corejs2_core_js_object_create__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("4aa6");
/* harmony import */ var C_Users_david_desmaisons_Documents_project_source_Vue_Draggable_node_modules_babel_runtime_corejs2_core_js_object_create__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(C_Users_david_desmaisons_Documents_project_source_Vue_Draggable_node_modules_babel_runtime_corejs2_core_js_object_create__WEBPACK_IMPORTED_MODULE_1__);



function getConsole() {
  if (typeof window !== "undefined") {
    return window.console;
  }

  return global.console;
}

var console = getConsole();

function cached(fn) {
  var cache = C_Users_david_desmaisons_Documents_project_source_Vue_Draggable_node_modules_babel_runtime_corejs2_core_js_object_create__WEBPACK_IMPORTED_MODULE_1___default()(null);

  return function cachedFn(str) {
    var hit = cache[str];
    return hit || (cache[str] = fn(str));
  };
}

var regex = /-(\w)/g;
var camelize = cached(function (str) {
  return str.replace(regex, function (_, c) {
    return c ? c.toUpperCase() : "";
  });
});

function removeNode(node) {
  if (node.parentElement !== null) {
    node.parentElement.removeChild(node);
  }
}

function insertNodeAt(fatherNode, node, position) {
  var refNode = position === 0 ? fatherNode.children[0] : fatherNode.children[position - 1].nextSibling;
  fatherNode.insertBefore(node, refNode);
}


/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__("c8ba")))

/***/ }),

/***/ "c69a":
/***/ (function(module, exports, __webpack_require__) {

module.exports = !__webpack_require__("9e1e") && !__webpack_require__("79e5")(function () {
  return Object.defineProperty(__webpack_require__("230e")('div'), 'a', { get: function () { return 7; } }).a != 7;
});


/***/ }),

/***/ "c8ba":
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || new Function("return this")();
} catch (e) {
	// This works if the window reference is available
	if (typeof window === "object") g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),

/***/ "c8bb":
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__("54a1");

/***/ }),

/***/ "ca5a":
/***/ (function(module, exports) {

var id = 0;
var px = Math.random();
module.exports = function (key) {
  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
};


/***/ }),

/***/ "cb7c":
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__("d3f4");
module.exports = function (it) {
  if (!isObject(it)) throw TypeError(it + ' is not an object!');
  return it;
};


/***/ }),

/***/ "ce7e":
/***/ (function(module, exports, __webpack_require__) {

// most Object methods by ES6 should accept primitives
var $export = __webpack_require__("63b6");
var core = __webpack_require__("584a");
var fails = __webpack_require__("294c");
module.exports = function (KEY, exec) {
  var fn = (core.Object || {})[KEY] || Object[KEY];
  var exp = {};
  exp[KEY] = exec(fn);
  $export($export.S + $export.F * fails(function () { fn(1); }), 'Object', exp);
};


/***/ }),

/***/ "d2c8":
/***/ (function(module, exports, __webpack_require__) {

// helper for String#{startsWith, endsWith, includes}
var isRegExp = __webpack_require__("aae3");
var defined = __webpack_require__("be13");

module.exports = function (that, searchString, NAME) {
  if (isRegExp(searchString)) throw TypeError('String#' + NAME + " doesn't accept regex!");
  return String(defined(that));
};


/***/ }),

/***/ "d2d5":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("1654");
__webpack_require__("549b");
module.exports = __webpack_require__("584a").Array.from;


/***/ }),

/***/ "d3f4":
/***/ (function(module, exports) {

module.exports = function (it) {
  return typeof it === 'object' ? it !== null : typeof it === 'function';
};


/***/ }),

/***/ "d864":
/***/ (function(module, exports, __webpack_require__) {

// optional / simple context binding
var aFunction = __webpack_require__("79aa");
module.exports = function (fn, that, length) {
  aFunction(fn);
  if (that === undefined) return fn;
  switch (length) {
    case 1: return function (a) {
      return fn.call(that, a);
    };
    case 2: return function (a, b) {
      return fn.call(that, a, b);
    };
    case 3: return function (a, b, c) {
      return fn.call(that, a, b, c);
    };
  }
  return function (/* ...args */) {
    return fn.apply(that, arguments);
  };
};


/***/ }),

/***/ "d8e8":
/***/ (function(module, exports) {

module.exports = function (it) {
  if (typeof it != 'function') throw TypeError(it + ' is not a function!');
  return it;
};


/***/ }),

/***/ "d9f6":
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__("e4ae");
var IE8_DOM_DEFINE = __webpack_require__("794b");
var toPrimitive = __webpack_require__("1bc3");
var dP = Object.defineProperty;

exports.f = __webpack_require__("8e60") ? Object.defineProperty : function defineProperty(O, P, Attributes) {
  anObject(O);
  P = toPrimitive(P, true);
  anObject(Attributes);
  if (IE8_DOM_DEFINE) try {
    return dP(O, P, Attributes);
  } catch (e) { /* empty */ }
  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};


/***/ }),

/***/ "dbdb":
/***/ (function(module, exports, __webpack_require__) {

var core = __webpack_require__("584a");
var global = __webpack_require__("e53d");
var SHARED = '__core-js_shared__';
var store = global[SHARED] || (global[SHARED] = {});

(module.exports = function (key, value) {
  return store[key] || (store[key] = value !== undefined ? value : {});
})('versions', []).push({
  version: core.version,
  mode: __webpack_require__("b8e3") ? 'pure' : 'global',
  copyright: '© 2019 Denis Pushkarev (zloirock.ru)'
});


/***/ }),

/***/ "dc62":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("9427");
var $Object = __webpack_require__("584a").Object;
module.exports = function create(P, D) {
  return $Object.create(P, D);
};


/***/ }),

/***/ "e4ae":
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__("f772");
module.exports = function (it) {
  if (!isObject(it)) throw TypeError(it + ' is not an object!');
  return it;
};


/***/ }),

/***/ "e53d":
/***/ (function(module, exports) {

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
var global = module.exports = typeof window != 'undefined' && window.Math == Math
  ? window : typeof self != 'undefined' && self.Math == Math ? self
  // eslint-disable-next-line no-new-func
  : Function('return this')();
if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef


/***/ }),

/***/ "e6f3":
/***/ (function(module, exports, __webpack_require__) {

var has = __webpack_require__("07e3");
var toIObject = __webpack_require__("36c3");
var arrayIndexOf = __webpack_require__("5b4e")(false);
var IE_PROTO = __webpack_require__("5559")('IE_PROTO');

module.exports = function (object, names) {
  var O = toIObject(object);
  var i = 0;
  var result = [];
  var key;
  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);
  // Don't enum bug & hidden keys
  while (names.length > i) if (has(O, key = names[i++])) {
    ~arrayIndexOf(result, key) || result.push(key);
  }
  return result;
};


/***/ }),

/***/ "f410":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("1af6");
module.exports = __webpack_require__("584a").Array.isArray;


/***/ }),

/***/ "f559":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// 21.1.3.18 String.prototype.startsWith(searchString [, position ])

var $export = __webpack_require__("5ca1");
var toLength = __webpack_require__("9def");
var context = __webpack_require__("d2c8");
var STARTS_WITH = 'startsWith';
var $startsWith = ''[STARTS_WITH];

$export($export.P + $export.F * __webpack_require__("5147")(STARTS_WITH), 'String', {
  startsWith: function startsWith(searchString /* , position = 0 */) {
    var that = context(this, searchString, STARTS_WITH);
    var index = toLength(Math.min(arguments.length > 1 ? arguments[1] : undefined, that.length));
    var search = String(searchString);
    return $startsWith
      ? $startsWith.call(that, search, index)
      : that.slice(index, index + search.length) === search;
  }
});


/***/ }),

/***/ "f772":
/***/ (function(module, exports) {

module.exports = function (it) {
  return typeof it === 'object' ? it !== null : typeof it === 'function';
};


/***/ }),

/***/ "fa5b":
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__("5537")('native-function-to-string', Function.toString);


/***/ }),

/***/ "fb15":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/@vue/cli-service/lib/commands/build/setPublicPath.js
// This file is imported into lib/wc client bundles.

if (typeof window !== 'undefined') {
  var setPublicPath_i
  if ((setPublicPath_i = window.document.currentScript) && (setPublicPath_i = setPublicPath_i.src.match(/(.+\/)[^/]+\.js(\?.*)?$/))) {
    __webpack_require__.p = setPublicPath_i[1] // eslint-disable-line
  }
}

// Indicate to webpack that this file can be concatenated
/* harmony default export */ var setPublicPath = (null);

// EXTERNAL MODULE: ./node_modules/@babel/runtime-corejs2/core-js/object/assign.js
var object_assign = __webpack_require__("5176");
var assign_default = /*#__PURE__*/__webpack_require__.n(object_assign);

// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.string.starts-with.js
var es6_string_starts_with = __webpack_require__("f559");

// EXTERNAL MODULE: ./node_modules/@babel/runtime-corejs2/core-js/object/keys.js
var keys = __webpack_require__("a4bb");
var keys_default = /*#__PURE__*/__webpack_require__.n(keys);

// EXTERNAL MODULE: ./node_modules/core-js/modules/es7.array.includes.js
var es7_array_includes = __webpack_require__("6762");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.string.includes.js
var es6_string_includes = __webpack_require__("2fdb");

// EXTERNAL MODULE: ./node_modules/@babel/runtime-corejs2/core-js/array/is-array.js
var is_array = __webpack_require__("a745");
var is_array_default = /*#__PURE__*/__webpack_require__.n(is_array);

// CONCATENATED MODULE: ./node_modules/@babel/runtime-corejs2/helpers/esm/arrayWithHoles.js

function _arrayWithHoles(arr) {
  if (is_array_default()(arr)) return arr;
}
// EXTERNAL MODULE: ./node_modules/@babel/runtime-corejs2/core-js/get-iterator.js
var get_iterator = __webpack_require__("5d73");
var get_iterator_default = /*#__PURE__*/__webpack_require__.n(get_iterator);

// CONCATENATED MODULE: ./node_modules/@babel/runtime-corejs2/helpers/esm/iterableToArrayLimit.js

function _iterableToArrayLimit(arr, i) {
  var _arr = [];
  var _n = true;
  var _d = false;
  var _e = undefined;

  try {
    for (var _i = get_iterator_default()(arr), _s; !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);

      if (i && _arr.length === i) break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null) _i["return"]();
    } finally {
      if (_d) throw _e;
    }
  }

  return _arr;
}
// CONCATENATED MODULE: ./node_modules/@babel/runtime-corejs2/helpers/esm/nonIterableRest.js
function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance");
}
// CONCATENATED MODULE: ./node_modules/@babel/runtime-corejs2/helpers/esm/slicedToArray.js



function _slicedToArray(arr, i) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();
}
// CONCATENATED MODULE: ./node_modules/@babel/runtime-corejs2/helpers/esm/arrayWithoutHoles.js

function _arrayWithoutHoles(arr) {
  if (is_array_default()(arr)) {
    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {
      arr2[i] = arr[i];
    }

    return arr2;
  }
}
// EXTERNAL MODULE: ./node_modules/@babel/runtime-corejs2/core-js/array/from.js
var from = __webpack_require__("774e");
var from_default = /*#__PURE__*/__webpack_require__.n(from);

// EXTERNAL MODULE: ./node_modules/@babel/runtime-corejs2/core-js/is-iterable.js
var is_iterable = __webpack_require__("c8bb");
var is_iterable_default = /*#__PURE__*/__webpack_require__.n(is_iterable);

// CONCATENATED MODULE: ./node_modules/@babel/runtime-corejs2/helpers/esm/iterableToArray.js


function _iterableToArray(iter) {
  if (is_iterable_default()(Object(iter)) || Object.prototype.toString.call(iter) === "[object Arguments]") return from_default()(iter);
}
// CONCATENATED MODULE: ./node_modules/@babel/runtime-corejs2/helpers/esm/nonIterableSpread.js
function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance");
}
// CONCATENATED MODULE: ./node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray.js



function _toConsumableArray(arr) {
  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();
}
// EXTERNAL MODULE: external {"commonjs":"sortablejs","commonjs2":"sortablejs","amd":"sortablejs","root":"Sortable"}
var external_commonjs_sortablejs_commonjs2_sortablejs_amd_sortablejs_root_Sortable_ = __webpack_require__("a352");
var external_commonjs_sortablejs_commonjs2_sortablejs_amd_sortablejs_root_Sortable_default = /*#__PURE__*/__webpack_require__.n(external_commonjs_sortablejs_commonjs2_sortablejs_amd_sortablejs_root_Sortable_);

// EXTERNAL MODULE: ./src/util/helper.js
var helper = __webpack_require__("c649");

// CONCATENATED MODULE: ./src/vuedraggable.js










function buildAttribute(object, propName, value) {
  if (value === undefined) {
    return object;
  }

  object = object || {};
  object[propName] = value;
  return object;
}

function computeVmIndex(vnodes, element) {
  return vnodes.map(function (elt) {
    return elt.elm;
  }).indexOf(element);
}

function _computeIndexes(slots, children, isTransition, footerOffset) {
  if (!slots) {
    return [];
  }

  var elmFromNodes = slots.map(function (elt) {
    return elt.elm;
  });
  var footerIndex = children.length - footerOffset;

  var rawIndexes = _toConsumableArray(children).map(function (elt, idx) {
    return idx >= footerIndex ? elmFromNodes.length : elmFromNodes.indexOf(elt);
  });

  return isTransition ? rawIndexes.filter(function (ind) {
    return ind !== -1;
  }) : rawIndexes;
}

function emit(evtName, evtData) {
  var _this = this;

  this.$nextTick(function () {
    return _this.$emit(evtName.toLowerCase(), evtData);
  });
}

function delegateAndEmit(evtName) {
  var _this2 = this;

  return function (evtData) {
    if (_this2.realList !== null) {
      _this2["onDrag" + evtName](evtData);
    }

    emit.call(_this2, evtName, evtData);
  };
}

function vuedraggable_isTransition(slots) {
  if (!slots || slots.length !== 1) {
    return false;
  }

  var _slots = _slicedToArray(slots, 1),
      componentOptions = _slots[0].componentOptions;

  if (!componentOptions) {
    return false;
  }

  return ["transition-group", "TransitionGroup"].includes(componentOptions.tag);
}

function computeChildrenAndOffsets(children, _ref) {
  var header = _ref.header,
      footer = _ref.footer;
  var headerOffset = 0;
  var footerOffset = 0;

  if (header) {
    headerOffset = header.length;
    children = children ? [].concat(_toConsumableArray(header), _toConsumableArray(children)) : _toConsumableArray(header);
  }

  if (footer) {
    footerOffset = footer.length;
    children = children ? [].concat(_toConsumableArray(children), _toConsumableArray(footer)) : _toConsumableArray(footer);
  }

  return {
    children: children,
    headerOffset: headerOffset,
    footerOffset: footerOffset
  };
}

function getComponentAttributes($attrs, componentData) {
  var attributes = null;

  var update = function update(name, value) {
    attributes = buildAttribute(attributes, name, value);
  };

  var attrs = keys_default()($attrs).filter(function (key) {
    return key === "id" || key.startsWith("data-");
  }).reduce(function (res, key) {
    res[key] = $attrs[key];
    return res;
  }, {});

  update("attrs", attrs);

  if (!componentData) {
    return attributes;
  }

  var on = componentData.on,
      props = componentData.props,
      componentDataAttrs = componentData.attrs;
  update("on", on);
  update("props", props);

  assign_default()(attributes.attrs, componentDataAttrs);

  return attributes;
}

var eventsListened = ["Start", "Add", "Remove", "Update", "End"];
var eventsToEmit = ["Choose", "Sort", "Filter", "Clone"];
var readonlyProperties = ["Move"].concat(eventsListened, eventsToEmit).map(function (evt) {
  return "on" + evt;
});
var draggingElement = null;
var vuedraggable_props = {
  options: Object,
  list: {
    type: Array,
    required: false,
    default: null
  },
  value: {
    type: Array,
    required: false,
    default: null
  },
  noTransitionOnDrag: {
    type: Boolean,
    default: false
  },
  clone: {
    type: Function,
    default: function _default(original) {
      return original;
    }
  },
  element: {
    type: String,
    default: "div"
  },
  tag: {
    type: String,
    default: null
  },
  move: {
    type: Function,
    default: null
  },
  componentData: {
    type: Object,
    required: false,
    default: null
  }
};
var draggableComponent = {
  name: "draggable",
  inheritAttrs: false,
  props: vuedraggable_props,
  data: function data() {
    return {
      transitionMode: false,
      noneFunctionalComponentMode: false,
      init: false
    };
  },
  render: function render(h) {
    var slots = this.$slots.default;
    this.transitionMode = vuedraggable_isTransition(slots);

    var _computeChildrenAndOf = computeChildrenAndOffsets(slots, this.$slots),
        children = _computeChildrenAndOf.children,
        headerOffset = _computeChildrenAndOf.headerOffset,
        footerOffset = _computeChildrenAndOf.footerOffset;

    this.headerOffset = headerOffset;
    this.footerOffset = footerOffset;
    var attributes = getComponentAttributes(this.$attrs, this.componentData);
    return h(this.getTag(), attributes, children);
  },
  created: function created() {
    if (this.list !== null && this.value !== null) {
      helper["b" /* console */].error("Value and list props are mutually exclusive! Please set one or another.");
    }

    if (this.element !== "div") {
      helper["b" /* console */].warn("Element props is deprecated please use tag props instead. See https://github.com/SortableJS/Vue.Draggable/blob/master/documentation/migrate.md#element-props");
    }

    if (this.options !== undefined) {
      helper["b" /* console */].warn("Options props is deprecated, add sortable options directly as vue.draggable item, or use v-bind. See https://github.com/SortableJS/Vue.Draggable/blob/master/documentation/migrate.md#options-props");
    }
  },
  mounted: function mounted() {
    var _this3 = this;

    this.noneFunctionalComponentMode = this.getTag().toLowerCase() !== this.$el.nodeName.toLowerCase();

    if (this.noneFunctionalComponentMode && this.transitionMode) {
      throw new Error("Transition-group inside component is not supported. Please alter tag value or remove transition-group. Current tag value: ".concat(this.getTag()));
    }

    var optionsAdded = {};
    eventsListened.forEach(function (elt) {
      optionsAdded["on" + elt] = delegateAndEmit.call(_this3, elt);
    });
    eventsToEmit.forEach(function (elt) {
      optionsAdded["on" + elt] = emit.bind(_this3, elt);
    });

    var attributes = keys_default()(this.$attrs).reduce(function (res, key) {
      res[Object(helper["a" /* camelize */])(key)] = _this3.$attrs[key];
      return res;
    }, {});

    var options = assign_default()({}, this.options, attributes, optionsAdded, {
      onMove: function onMove(evt, originalEvent) {
        return _this3.onDragMove(evt, originalEvent);
      }
    });

    !("draggable" in options) && (options.draggable = ">*");
    this._sortable = new external_commonjs_sortablejs_commonjs2_sortablejs_amd_sortablejs_root_Sortable_default.a(this.rootContainer, options);
    this.computeIndexes();
  },
  beforeDestroy: function beforeDestroy() {
    if (this._sortable !== undefined) this._sortable.destroy();
  },
  computed: {
    rootContainer: function rootContainer() {
      return this.transitionMode ? this.$el.children[0] : this.$el;
    },
    realList: function realList() {
      return this.list ? this.list : this.value;
    }
  },
  watch: {
    options: {
      handler: function handler(newOptionValue) {
        this.updateOptions(newOptionValue);
      },
      deep: true
    },
    $attrs: {
      handler: function handler(newOptionValue) {
        this.updateOptions(newOptionValue);
      },
      deep: true
    },
    realList: function realList() {
      this.computeIndexes();
    }
  },
  methods: {
    getTag: function getTag() {
      return this.tag || this.element;
    },
    updateOptions: function updateOptions(newOptionValue) {
      for (var property in newOptionValue) {
        var value = Object(helper["a" /* camelize */])(property);

        if (readonlyProperties.indexOf(value) === -1) {
          this._sortable.option(value, newOptionValue[property]);
        }
      }
    },
    getChildrenNodes: function getChildrenNodes() {
      if (!this.init) {
        this.noneFunctionalComponentMode = this.noneFunctionalComponentMode && this.$children.length === 1;
        this.init = true;
      }

      if (this.noneFunctionalComponentMode) {
        return this.$children[0].$slots.default;
      }

      var rawNodes = this.$slots.default;
      return this.transitionMode ? rawNodes[0].child.$slots.default : rawNodes;
    },
    computeIndexes: function computeIndexes() {
      var _this4 = this;

      this.$nextTick(function () {
        _this4.visibleIndexes = _computeIndexes(_this4.getChildrenNodes(), _this4.rootContainer.children, _this4.transitionMode, _this4.footerOffset);
      });
    },
    getUnderlyingVm: function getUnderlyingVm(htmlElt) {
      var index = computeVmIndex(this.getChildrenNodes() || [], htmlElt);

      if (index === -1) {
        //Edge case during move callback: related element might be
        //an element different from collection
        return null;
      }

      var element = this.realList[index];
      return {
        index: index,
        element: element
      };
    },
    getUnderlyingPotencialDraggableComponent: function getUnderlyingPotencialDraggableComponent(_ref2) {
      var __vue__ = _ref2.__vue__;

      if (!__vue__ || !__vue__.$options || __vue__.$options._componentTag !== "transition-group") {
        return __vue__;
      }

      return __vue__.$parent;
    },
    emitChanges: function emitChanges(evt) {
      var _this5 = this;

      this.$nextTick(function () {
        _this5.$emit("change", evt);
      });
    },
    alterList: function alterList(onList) {
      if (this.list) {
        onList(this.list);
        return;
      }

      var newList = _toConsumableArray(this.value);

      onList(newList);
      this.$emit("input", newList);
    },
    spliceList: function spliceList() {
      var _arguments = arguments;

      var spliceList = function spliceList(list) {
        return list.splice.apply(list, _toConsumableArray(_arguments));
      };

      this.alterList(spliceList);
    },
    updatePosition: function updatePosition(oldIndex, newIndex) {
      var updatePosition = function updatePosition(list) {
        return list.splice(newIndex, 0, list.splice(oldIndex, 1)[0]);
      };

      this.alterList(updatePosition);
    },
    getRelatedContextFromMoveEvent: function getRelatedContextFromMoveEvent(_ref3) {
      var to = _ref3.to,
          related = _ref3.related;
      var component = this.getUnderlyingPotencialDraggableComponent(to);

      if (!component) {
        return {
          component: component
        };
      }

      var list = component.realList;
      var context = {
        list: list,
        component: component
      };

      if (to !== related && list && component.getUnderlyingVm) {
        var destination = component.getUnderlyingVm(related);

        if (destination) {
          return assign_default()(destination, context);
        }
      }

      return context;
    },
    getVmIndex: function getVmIndex(domIndex) {
      var indexes = this.visibleIndexes;
      var numberIndexes = indexes.length;
      return domIndex > numberIndexes - 1 ? numberIndexes : indexes[domIndex];
    },
    getComponent: function getComponent() {
      return this.$slots.default[0].componentInstance;
    },
    resetTransitionData: function resetTransitionData(index) {
      if (!this.noTransitionOnDrag || !this.transitionMode) {
        return;
      }

      var nodes = this.getChildrenNodes();
      nodes[index].data = null;
      var transitionContainer = this.getComponent();
      transitionContainer.children = [];
      transitionContainer.kept = undefined;
    },
    onDragStart: function onDragStart(evt) {
      this.context = this.getUnderlyingVm(evt.item);
      evt.item._underlying_vm_ = this.clone(this.context.element);
      draggingElement = evt.item;
    },
    onDragAdd: function onDragAdd(evt) {
      var element = evt.item._underlying_vm_;

      if (element === undefined) {
        return;
      }

      Object(helper["d" /* removeNode */])(evt.item);
      var newIndex = this.getVmIndex(evt.newIndex);
      this.spliceList(newIndex, 0, element);
      this.computeIndexes();
      var added = {
        element: element,
        newIndex: newIndex
      };
      this.emitChanges({
        added: added
      });
    },
    onDragRemove: function onDragRemove(evt) {
      Object(helper["c" /* insertNodeAt */])(this.rootContainer, evt.item, evt.oldIndex);

      if (evt.pullMode === "clone") {
        Object(helper["d" /* removeNode */])(evt.clone);
        return;
      }

      var oldIndex = this.context.index;
      this.spliceList(oldIndex, 1);
      var removed = {
        element: this.context.element,
        oldIndex: oldIndex
      };
      this.resetTransitionData(oldIndex);
      this.emitChanges({
        removed: removed
      });
    },
    onDragUpdate: function onDragUpdate(evt) {
      Object(helper["d" /* removeNode */])(evt.item);
      Object(helper["c" /* insertNodeAt */])(evt.from, evt.item, evt.oldIndex);
      var oldIndex = this.context.index;
      var newIndex = this.getVmIndex(evt.newIndex);
      this.updatePosition(oldIndex, newIndex);
      var moved = {
        element: this.context.element,
        oldIndex: oldIndex,
        newIndex: newIndex
      };
      this.emitChanges({
        moved: moved
      });
    },
    updateProperty: function updateProperty(evt, propertyName) {
      evt.hasOwnProperty(propertyName) && (evt[propertyName] += this.headerOffset);
    },
    computeFutureIndex: function computeFutureIndex(relatedContext, evt) {
      if (!relatedContext.element) {
        return 0;
      }

      var domChildren = _toConsumableArray(evt.to.children).filter(function (el) {
        return el.style["display"] !== "none";
      });

      var currentDOMIndex = domChildren.indexOf(evt.related);
      var currentIndex = relatedContext.component.getVmIndex(currentDOMIndex);
      var draggedInList = domChildren.indexOf(draggingElement) !== -1;
      return draggedInList || !evt.willInsertAfter ? currentIndex : currentIndex + 1;
    },
    onDragMove: function onDragMove(evt, originalEvent) {
      var onMove = this.move;

      if (!onMove || !this.realList) {
        return true;
      }

      var relatedContext = this.getRelatedContextFromMoveEvent(evt);
      var draggedContext = this.context;
      var futureIndex = this.computeFutureIndex(relatedContext, evt);

      assign_default()(draggedContext, {
        futureIndex: futureIndex
      });

      var sendEvt = assign_default()({}, evt, {
        relatedContext: relatedContext,
        draggedContext: draggedContext
      });

      return onMove(sendEvt, originalEvent);
    },
    onDragEnd: function onDragEnd() {
      this.computeIndexes();
      draggingElement = null;
    }
  }
};

if (typeof window !== "undefined" && "Vue" in window) {
  window.Vue.component("draggable", draggableComponent);
}

/* harmony default export */ var vuedraggable = (draggableComponent);
// CONCATENATED MODULE: ./node_modules/@vue/cli-service/lib/commands/build/entry-lib.js


/* harmony default export */ var entry_lib = __webpack_exports__["default"] = (vuedraggable);



/***/ })

/******/ })["default"];
//# sourceMappingURL=vuedraggable.common.js.map

/***/ }),

/***/ 1461:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _promise = __webpack_require__(440);

var _promise2 = _interopRequireDefault(_promise);

var _qs = __webpack_require__(1347);

var _qs2 = _interopRequireDefault(_qs);

var _Intro = __webpack_require__(1649);

var _Intro2 = _interopRequireDefault(_Intro);

var _Construction = __webpack_require__(1655);

var _Construction2 = _interopRequireDefault(_Construction);

var _Roster = __webpack_require__(1665);

var _Roster2 = _interopRequireDefault(_Roster);

var _Leader = __webpack_require__(1669);

var _Leader2 = _interopRequireDefault(_Leader);

var _Authority = __webpack_require__(1675);

var _Authority2 = _interopRequireDefault(_Authority);

var _Information = __webpack_require__(1408);

var _Information2 = _interopRequireDefault(_Information);

var _Charts = __webpack_require__(1681);

var _Charts2 = _interopRequireDefault(_Charts);

var _FromEdit = __webpack_require__(1685);

var _FromEdit2 = _interopRequireDefault(_FromEdit);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
  components: {
    "intro": _Intro2.default,
    "construction": _Construction2.default,
    "roster": _Roster2.default,
    "leader": _Leader2.default,
    "authority": _Authority2.default,
    "information": _Information2.default,
    "charts": _Charts2.default,
    "fromedit": _FromEdit2.default
  },
  data: function data() {
    return {
      isCollapse: false,
      activeTab: "intro",
      treeLoading: false,

      partyListData: [], //组织列表list
      defaultProps: {
        children: 'childrens', //树的配置
        label: 'name'
      },

      partyId: 0 //当前对应的组织代码 默认为顶级 则Id == 0
    };
  },

  watch: {
    partyId: {
      handler: function handler(newV, oldV) {},

      deep: true
    },
    activeTab: {
      handler: function handler(newV, oldV) {
        sessionStorage.setItem("tempPartyTab", newV);
      },

      deep: true
    }
  },
  created: function created() {},
  mounted: function mounted() {
    this.initTree();
    if (sessionStorage.getItem("tempPartyTab")) {
      this.activeTab = sessionStorage.getItem("tempPartyTab");
    }
  },

  methods: {
    /**
     * 重新初始化查询左侧整个树, 并将第一个节点保存为treeId
     * @return {[type]} [description]
     */
    initTree: function initTree() {
      var self = this;
      self.getDataList("/party_orgs/" + JSON.parse(sessionStorage.getItem("orgId")) + "/partyorgtree", "partyListData", false).then(function (response) {
        if (response) {
          self.partyId = response.data.data.id;
        }
      }).catch(function (error) {
        self.partyId = 0;
      });
    },

    /**
     * 获取树形数据
     * @param  {string}  url    请求地址
     * @param  {string}  target 需要保存的数据目标名称
     * @param  {boolean} multi  查询树组还是单个树
     * @return none
     */
    getDataList: function getDataList(url, target, multi) {
      var self = this;
      self.treeLoading = true;

      var config = {
        url: "" + basePath + url,
        method: 'get'
      };
      var p = new _promise2.default(function (resolve, reject) {
        self.$request.requestAxios(config.method, config.url, null, function (response) {
          if (!response.data.data) {
            reject("当前组织信息为空");
            self.treeLoading = false;
            self[target] = [];
          } else {
            self[target] = [];
            multi ? self[target] = response.data.data : self[target].push(response.data.data);
            resolve(response); //传递参数response
            self.treeLoading = false;
          }
        }, function (error) {
          self.treeLoading = false;
        });
      });
      return p;
    },

    /**
     * 点击树节点, 查询组织下对应的数据
     * @param  {object} data 节点数据
     * @return none
     */
    clickPartyTree: function clickPartyTree(data) {
      this.partyId = data.id;
    }
  }
}; //
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

/***/ }),

/***/ 1462:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _promise = __webpack_require__(440);

var _promise2 = _interopRequireDefault(_promise);

var _stringify = __webpack_require__(188);

var _stringify2 = _interopRequireDefault(_stringify);

var _Ueditor = __webpack_require__(1273);

var _Ueditor2 = _interopRequireDefault(_Ueditor);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
  data: function data() {
    var checkTime = function checkTime(rule, value, callback) {
      if (!value) {
        callback();
      } else {
        if (value > new Date().getTime()) {
          callback(new Error('时间必须选当前时间之前'));
        } else {
          callback();
        }
      }
    };
    return {
      loading: false,
      orgId: sessionStorage.getItem("orgId"),
      orgCode: sessionStorage.getItem('orgCode'),
      userData: JSON.parse(sessionStorage.getItem('userData')),
      imgServer: basePath + '/sys/ueditor/file?action=uploadimage',
      token: { "Authorization": 'Bearer ' + JSON.parse(window.sessionStorage.getItem("userData")).token },
      partyForm: { //党组织表单
        createrOrgTime: {
          type: 1,
          date_time: null
        },
        officeStart: {
          date_time: null,
          type: 1
        },
        officeStop: {
          date_time: null,
          type: 1
        }
      },
      companyTree: [], //公司组织的树形结构
      rules: {
        name: [{ required: true, message: '请输入党组织名称', trigger: 'blur' }],
        'createrOrgTime.date_time': [{ validator: checkTime, trigger: 'blur' }, { validator: checkTime, trigger: 'change' }]
      },
      focusStatus: false, //打开对话框后, 开始输入地址的状态,在此状态下动态根据address更新latitude
      relationsData: [], //用户的社会关系列表
      experienceData: [], //用户的个人学历详情列表
      archivesesData: [], //用户的个人荣誉列表

      //分类富文本
      typesList: [],
      operateType: "new",
      activeButton: "intro",
      typeForm: {
        typeName: null
      },
      initFlag: false,
      editorConfig: {
        /*可以在此处定义工具栏的内容*/
        elementPathEnabled: false,
        autoHeightEnabled: false,
        autoFloatEnabled: false, //是否工具栏可浮动
        initialContent: ' ', //初始化编辑器的内容,也可以通过textarea/script给值，看官网例子
        autoClearinitialContent: false,
        //是否自动清除编辑器初始内容，注意：如果focus属性设置为true,这个也为真，那么编辑器一上来就会触发导致初始化的内容看不到了
        initialFrameWidth: null,
        initialFrameHeight: 450,
        BaseUrl: '',
        UEDITOR_HOME_URL: 'static/ueditor/'
      }
    };
  },

  props: {
    treeId: {
      required: true
    }
  },
  components: {
    UEditor: _Ueditor2.default
  },
  watch: {
    "partyForm.address": {
      handler: function handler(newV, oldV) {
        if (this.focusStatus) {
          // 当input聚焦时开启动态验证, 否则不进行验证
          this.checkAddress();
        }
      },

      deep: true
    },
    "treeId": {
      //监听treeId变化, 重复查询
      handler: function handler(newV, oldV) {
        this.getTypeList();
        this.getDetail();
      },

      deep: true
    }
  },
  created: function created() {},
  mounted: function mounted() {
    this.getCompanyList();
    this.getTypeList();
    this.getDetail();
    this.getQueryExperience();
    this.getQueryRelationship();
    this.getQueryArchiveses();
  },


  methods: {
    /**
     * 获取公司组织数据(全部)
     * @return none
     */
    getCompanyList: function getCompanyList() {
      var _this = this;

      var self = this;

      var config = {
        url: basePath + '/org_units/orgunitstree',
        method: 'get'
      };

      self.$request.requestAxios(config.method, config.url, null, function (response) {
        var data = JSON.parse((0, _stringify2.default)(response.data.data));
        data.forEach(function (item, index) {
          _this.$util.traverseTree(item);
        });
        _this.companyTree = data;
      }, function (error) {
        self.$message.error(error.data.meta.message);
      });
    },

    /**
     * 查询type列表
     * @return {[type]} [description]
     */
    getTypeList: function getTypeList() {
      var self = this;

      var config = {
        url: basePath + '/party_orgs_rich_text/rich_text/idandname',
        method: "get",
        params: {
          partyOrgId: self.treeId
        }
      };

      var p = new _promise2.default(function (resolve, reject) {
        self.$request.requestAxios(config.method, config.url, { params: config.params }, function (response) {
          self.typesList = response.data.data;
          resolve(response);
        }, function (error) {
          reject(error);
          self.$message.error(error.data.meta.message);
        });
      });

      return p;
    },

    /**
     * 已有的按钮点击事件
     * @return {[type]} [description]
     */
    typeButtonClicked: function typeButtonClicked(item) {
      this.activeButton = item.id;
      this.typeForm.typeName = item.name;
      this.getTypeDetail(item.id);
    },

    /**
     * 点击新增按钮, 清空当前选中activeButton, 变为新增状态
     */
    addButtonCLicked: function addButtonCLicked() {
      var _this2 = this;

      this.activeButton = null;
      this.typeForm.typeName = null;
      this.$nextTick(function () {
        _this2.$refs.ueditor.setContent(" ");
      });
    },

    /**
     * 获取 某一个分类的详情
     * @return {[type]} [description]
     */
    getTypeDetail: function getTypeDetail(itemId) {
      var self = this;

      var config = {
        url: basePath + '/party_orgs_rich_text/rich_text/details',
        method: "get",
        params: {
          id: itemId
        }
      };

      self.$request.requestAxios(config.method, config.url, { params: config.params }, function (response) {
        self.$nextTick(function () {
          self.$refs.ueditor.setContent(response.data.data.content);
        });
        self.initFlag = true;
      }, function (error) {
        self.$message.error(error.data.meta.message);
      });
    },

    /**
     * 新增或者删除时, 重新查询typeList并设置最后一个为选中状态
     * @return {[type]} [description]
     */
    afterUpdate: function afterUpdate(typeText, itemId) {
      var self = this;
      // 在重新查询新的typesList之前 先获取当前删除的位置index
      var deleteIndex = 0;

      self.typesList.forEach(function (item, index) {
        if (itemId == item.id) {
          deleteIndex = index;
        }
      });

      self.getTypeList().then(function (response) {
        self.$message.success("成功");
        switch (typeText) {
          case "add":
            // 新增完成时将最后一位选中
            var typesLength = self.typesList.length;
            self.activeButton = self.typesList[typesLength - 1].id;
            self.getTypeDetail(self.typesList[deleteIndex - 1]);
            break;
          case "edit":

            break;
          case "delete":
            // 删除完成时将当前位的前一位设置为选中, 若删除首位则选中新list的首位, 若list为空则intro为选中
            if (deleteIndex != 0) {
              self.activeButton = self.typesList[deleteIndex - 1].id;
              self.getTypeDetail(self.typesList[deleteIndex - 1]);
            } else {
              self.activeButton = "intro";
            }

            break;
        }
      });
    },

    /**
     * 删除type
     * @return {[type]} [description]
     */
    deleteType: function deleteType() {
      var self = this;

      var config = {
        url: basePath + '/party_orgs_rich_text/rich_text/delete/' + self.activeButton + '/from_org/' + self.orgCode,
        method: "delete"
      };
      self.$confirm('确认删除?', '提示', {
        confirmButtonText: '确定',
        cancelButtonText: '取消',
        type: 'warning'
      }).then(function () {
        self.$request.requestAxios(config.method, config.url, null, function (response) {
          self.afterUpdate("delete", self.activeButton);
        }, function (error) {
          self.$message.error(error.data.meta.message);
        });
      });
    },

    /**
     * 保存当前的type信息, 连同types和详情一起提交
     * @return {[type]} [description]
     */
    saveType: function saveType(item) {
      var self = this;
      var richTextContent = self.$refs.ueditor.getUEContent();

      var operateText = "add";
      var config = { //默认是新增的状态
        url: basePath + '/party_orgs_rich_text/rich_text/add/from_org/' + self.orgCode,
        method: "post",
        data: {
          name: self.typeForm.typeName,
          content: richTextContent,
          partyOrgId: self.treeId
        }
      };

      if (self.activeButton != null) {
        //编辑的状态
        config.method = "patch";
        config.url = basePath + '/party_orgs_rich_text/rich_text/update/' + self.activeButton + '/from_org/' + self.orgCode;
        config.data.id = self.activeButton;
        operateText = "edit";
      }

      self.$request.requestAxios(config.method, config.url, config.data, function (response) {
        self.afterUpdate(operateText, self.activeButton); //根据不同的类型决定刷新的方式
      }, function (error) {
        self.$message.error(error.data.meta.message);
      });
    },

    /**
     * 根据treeId 查询详情
     * @return {[type]} [description]
     */
    getDetail: function getDetail() {
      var self = this;

      self.loading = true;
      self.focusStatus = false;
      var config = {
        url: basePath + '/party_orgs/' + self.treeId + '/partyorg',
        method: "get"
      };
      self.$request.requestAxios(config.method, config.url, null, function (response) {
        self.partyForm = response.data.data;
        if (!self.partyForm.createrOrgTime) {
          self.partyForm.createrOrgTime = {
            type: 1,
            date_time: null
          };
        }
        if (!self.partyForm.officeStart) {
          self.partyForm.officeStart = {
            type: 1,
            date_time: null
          };
        }
        if (!self.partyForm.officeStop) {
          self.partyForm.officeStop = {
            type: 1,
            date_time: null
          };
        }
        self.loading = false;
        self.$nextTick(function () {
          // 还原表单验证状态
          if (self.$refs.partyForm) {
            self.$refs.partyForm.clearValidate();
          }
        });
      }, function (error) {
        self.loading = false;
        self.$message.error(error.data.meta.message);
      });
    },

    /**
     * 点击确定, 添加/编辑 节点提交 (顶层/子集)
     * @param  {string} formName [description]
     * @return {[type]}          [description]
     */
    submitForm: function submitForm(formName) {
      var self = this;

      var config = {
        url: basePath + '/party_orgs/partyorg/update/' + self.partyForm.id + '/from_org/' + self.orgCode,
        method: "patch",
        data: self.partyForm
      };

      self.$refs[formName].validate(function (valid) {
        if (valid) {
          self.loading = true;

          if (self.partyForm.orgIds && self.partyForm.orgIds != 0) {
            self.partyForm.orgUnitId = self.partyForm.orgIds[self.partyForm.orgIds.length - 1];
            // delete self.partyForm.orgIds
          }

          self.$request.requestAxios(config.method, config.url, config.data, function (response) {
            self.$message.success("成功");

            //重新查询
            self.$nextTick(function () {
              if (self.$refs.partyForm) {
                self.$refs.partyForm.clearValidate();
              }
            });
            self.loading = false;
            self.focusStatus = false;
            self.getDetail();
            self.$emit("treeChanged");
          }, function (error) {
            self.loading = false;
            self.$message.error(error.data.meta.message);
          });
        } else {
          self.$message.error("请检查必填项");
          return false;
        }
      });
    },

    /**
     * 上传成功, 写入img对应的path
     * @param  {[type]} response [description]
     * @param  {[type]} file     [description]
     * @param  {[type]} fileList [description]
     * @return none
     */
    uploadSuccess: function uploadSuccess(response, file, fileList) {
      this.partyForm.headImg = this.$util.fileBasePath + response.data.url;
    },

    /**
     * 地址校验, 根据输入的内容校验经纬度字段
     * @return {[type]} [description]
     */
    checkAddress: function checkAddress() {
      if (this.partyForm.address) {
        this.mapLocation(this.partyForm.address);
      } else {
        this.partyForm.latitude = null;
        this.partyForm.longitude = null;
        this.$refs.partyForm.validateField("latitude");
      }
    },

    /**
     * 根据输入的地址返回经纬度, 并记录到表单对象中
     * @return none
     */
    mapLocation: function mapLocation(address) {
      var self = this;
      // 百度地图API功能
      var map = new BMap.Map("allmap");
      // 创建地址解析器实例
      var myGeo = new BMap.Geocoder();
      // 调用查询(异步)
      myGeo.getPoint(address, function (point) {
        if (point) {
          self.partyForm.latitude = point.lat;
          self.partyForm.longitude = point.lng;
          self.$refs.partyForm.validateField("latitude");
        } else {
          self.partyForm.latitude = null;
          self.partyForm.longitude = null;
          self.$refs.partyForm.validateField("latitude");
        }
      }, "");
    },

    /*
    * 查询用户人际关系
    */
    getQueryRelationship: function getQueryRelationship() {
      // this._getQueryUserManage('/relations/forType/forUser/' + this.orgId + '_' + this.userData.userId, 'relationsData');
    },

    /*
    * 查询用户相关经历
    */
    getQueryExperience: function getQueryExperience() {
      // this._getQueryUserManage('/experience/forType/forUser/' + this.orgId + '_' + this.userData.userId, 'experienceData');
    },

    /*
    * 查询用户获得相关荣誉
    */
    getQueryArchiveses: function getQueryArchiveses() {
      // this._getQueryUserManage('/archiveses/forType/forUser/' + this.orgId + '_' + this.userData.userId, 'archivesesData');
    },

    /*
    * 添加一行用户的社会关系
    */
    addRelationRow: function addRelationRow() {
      this.relationsData.push({
        "otherName": null,
        "otherPosition": null,
        "owner": 1,
        "relationName": null,
        "status": 1,
        "typeId": 1,
        'newAdd': 1, //有此键表示新建
        'isBool': 1 //默认第一次都为1，
      });
    },

    /*
    * 添加用户的社会关系
    * @params {string} type add为新增，update为编辑修改
    * @params {object} row 
    */
    saveRelationship: function saveRelationship(type, row) {
      var self = this;
      if (self._validate(row)) {
        self._add('/relations/create/forUser/' + this.orgId + '_' + this.userData.userId, row, function (res) {
          self.getQueryRelationship();
        });
      }
    },
    _addRelationshipParams: function _addRelationshipParams() {
      return {
        "otherName": "张三",
        "otherPosition": "开发",
        "owner": 1,
        "relationName": "父女",
        "status": 1,
        "typeId": 1
      };
    },


    /*
    * 删除指定ID的一条人际关系
    * @params {number/string} id 不为undefined时，表示不是新增的数据
    * @params {object} rowData 当前行数据
    * @params {number} index 当前行的下标
    */
    delRelationship: function delRelationship(id, rowData, index) {
      var self = this;
      if (id) {
        self._del('/relations/delete/' + id + '/forUser/' + self.orgId + '_' + self.userData.userId, function () {
          self.getQueryRelationship();
        });
      } else {
        self.relationsData.splice(index, 1);
      }
    },

    /*
    * 添加一行用户相关经历      
    */
    addExperienceRow: function addExperienceRow() {
      this.experienceData.push({
        "address": null,
        "beginTime": 1, //默认为1，保存后将数据设置为真实的时间
        "endTime": 1, //默认为1，保存后将数据设置为真实的时间
        'experienceBETime': null,
        "owner": 1,
        "position": null,
        "status": 1,
        "typeId": 1,
        'newAdd': 1, //有此键表示新建
        'isBool': 1 //默认第一次都为1，
      });
    },

    /*
    * 添加用户相关经历
    * @params {string} type add为新增，update为编辑修改
    * @params {object} row 
    */
    saveExperience: function saveExperience(type, row) {
      var self = this;
      if (self._validate(row)) {
        // -------------------------- 给开始结束时间赋值 ----------------------------
        row.beginTime = row.experienceBETime[0], row.endTime = row.experienceBETime[1];

        self._add('/experience/create/forUser/' + self.orgId + '_' + self.userData.userId, row, function () {
          self.getQueryExperience();
        });
      }
    },
    _addExperienceParams: function _addExperienceParams() {
      return {
        "address": "string",
        "beginTime": new Date('2018-08-09').getTime(),
        "endTime": new Date('2018-08-10').getTime(),
        "owner": 1,
        "position": "string",
        "status": 1,
        "typeId": 1
      };
    },

    /*
    * 删除指定ID的一条经历
    * @params {number/string} id 不为undefined时，表示不是新增的数据
    * @params {object} rowData 当前行数据
    * @params {number} index 当前行的下标
    */
    delExperience: function delExperience(id, rowData, index) {
      var self = this;
      if (id) {
        self._del('/experience/delete/' + id + '/forUser/' + self.orgId + '_' + self.userData.userId, function () {
          self.getQueryExperience();
        });
      } else {
        self.experienceData.splice(index, 1);
      }
    },

    /*
    * 添加一行用户获得性结果档案      
    */
    addArchivesesRow: function addArchivesesRow() {
      this.archivesesData.push({
        "address": null,
        "creater": 1,
        "name": null,
        "owner": 1,
        "status": 1,
        "time": null,
        "typeId": 1,
        'newAdd': 1, //有此键表示新建
        'isBool': 1 //默认第一次都为1，
      });
    },

    /*
    * 添加用户的获得性结果档案
    * @params {string} type add为新增，update为编辑修改
    * @params {object} row 
    */
    saveArchiveses: function saveArchiveses(type, row) {
      var self = this;
      if (self._validate(row)) {
        self._add('/archiveses/create/forUser/' + self.orgId + '_' + self.userData.userId, row, function (res) {
          self.getQueryArchiveses();
        });
      }
    },
    _addArchivesesParams: function _addArchivesesParams() {
      return {
        "address": "string",
        "creater": 0,
        "name": "string",
        "owner": 1,
        "status": 1,
        "time": new Date().getTime(),
        "typeId": 1
      };
    },

    /*
    * 删除指定ID的一条荣誉
    * @params {number/string} id 不为undefined时，表示不是新增的数据
    * @params {object} rowData 当前行数据
    * @params {number} index 当前行的下标
    */
    delArchiveses: function delArchiveses(id, rowData, index) {
      var self = this;
      if (id) {
        self._del('/archiveses/delete/' + id + '/forUser/' + self.orgId + '_' + self.userData.userId, function () {
          self.getQueryArchiveses();
        });
      } else {
        self.archivesesData.splice(index, 1);
      }
    },
    _validate: function _validate(row) {
      var bool = true; //为true表示数据都不为null
      $.each(row, function (key, item) {
        if (!item) {
          bool = false;
          // -- 将文本框标红
          row.isBool = 2;
        }
      });
      return bool;
    },

    /*
    * 合并查询列表数据函数
    * @params { string } url 请求地址 
    * @params { string } receiveDataName 接收数据的变量
    */
    _getQueryUserManage: function _getQueryUserManage(url, receiveDataName) {
      var self = this;
      self.$request.requestAxios('get', basePath + url, { params: { typeId: 1 } }, function (response) {
        //请求成功的回调...
        var responseData = response.data;
        self[receiveDataName] = responseData.data;
      }, function (error, status) {
        // 请求失败回调函数...
        status == 200 ? self.$message.error(error.data.meta.message) : self.$message.error(url + ' - 失败');
      });
    },

    /*
    * 合并添加函数
    * @params {string} url 请求地址
    * @params {object} params 请求参数
    * @params {object} success 回调函数
    */
    _add: function _add(url, params, success) {
      var self = this;
      self.$request.requestAxios('post', basePath + url, params, function (response) {
        //请求成功的回调...
        var responseData = response.data;
        success(responseData);
      }, function (error, status) {
        // 请求失败回调函数...
        status == 200 ? self.$message.error(error.data.meta.message) : self.$message.error(url + ' - 失败');
      });
    },

    /*
    * 合并删除函数
    * @params {string} url 请求地址
    * @params {object} success 回调函数
    */
    _del: function _del(url, successs) {
      var self = this;
      self.$request.requestAxios('delete', basePath + url, "", function (response) {
        //请求成功的回调...
        var responseData = response.data;
        setTimeout(function () {
          self.$message('删除成功！！', 20);
          successs();
        }, 20);
      }, function (error, status) {
        // 请求失败回调函数...
        status == 200 ? self.$message.error(error.data.meta.message) : self.$message.error(url + ' - 失败');
      });
    }
  }
}; //
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

/***/ }),

/***/ 1463:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _treeInLevel = __webpack_require__(1660);

var _treeInLevel2 = _interopRequireDefault(_treeInLevel);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
  data: function data() {
    var checkTime = function checkTime(rule, value, callback) {
      if (!value) {
        callback();
      } else {
        if (value > new Date().getTime()) {
          callback(new Error('时间必须选当前时间之前'));
        } else {
          callback();
        }
      }
    };
    return {
      imgServer: basePath + "/sys/ueditor/file?action=uploadimage",
      token: { "Authorization": "Bearer " + JSON.parse(window.sessionStorage.getItem("userData")).token },
      orgCode: sessionStorage.getItem('orgCode'),
      loading: false,

      orgOriginList: [], //原本的公司结构树模板, 仅在新增时使用(使用时需深拷贝)
      orgList: [], //公司结构树, 用于数据传递
      partyListData: [], //党组织的树形结构
      defaultProps: {
        children: 'childrens', //树的配置
        label: 'name'
      },

      //党组织表单
      partyForm: {
        name: null,
        parentId: null,
        description: null,
        positions: [{
          positionsName: null,
          display: false
        }],
        createrOrgTime: {
          type: 1,
          date_time: null
        },
        officeStart: {
          date_time: null,
          type: 1
        },
        officeStop: {
          date_time: null,
          type: 1
        },
        address: null,
        latitude: null,
        longitude: null,
        type: null,
        orgUnitId: null,
        orgIds: []
      },
      orgTree: [], //公司组织树
      rules: { //验证
        'createrOrgTime.date_time': [{ validator: checkTime, trigger: 'blur' }, { validator: checkTime, trigger: 'change' }]
      },
      partyTypesList: [// 党组织类型数组
      {
        type: "1",
        name: "党委"
      }, {
        type: "2",
        name: "党支部"
      }, {
        type: "3",
        name: "党小组"
      }, {
        type: "4",
        name: "职能部门"
      }, {
        type: "5",
        name: "党支部下办公室"
      }, {
        type: "6",
        name: "党总支"
      }, {
        type: "7",
        name: "纪委"
      }],
      typeName: null, //类型input名称
      tempLevel: null, //当前操作的层级 sameLevel本级 childLevel子级 topLevel 顶级
      tempId: null, //鼠标移动到对应的节点, 记录此节点id, 显示对应的操作按钮
      tempOperateType: null, //当前操作模式 new新增 edit编辑
      tempOperateObj: {}, //当前触发操作的data对象
      parentType: null, //父节点的类型, 用于判断 添加或编辑节点的类型
      partyDialogVisible: false,

      focusStatus: false, //打开对话框后, 开始输入地址的状态,在此状态下动态根据address更新latitude

      dictionaryPosition: []
    };
  },

  props: {
    treeId: {
      type: Number,
      required: true
    }
  },
  components: {
    "tree-in-level": _treeInLevel2.default
  },
  mounted: function mounted() {
    if (this.treeId != 0) {
      this.getDataList("/party_orgs/" + this.treeId + "/partyorgtree", "partyListData");
      this.getDataList("/org_units/simpleorgunitstree", "orgTree");
    }
    window.c = this;
    this.getDictionaryData();
  },

  watch: {
    "partyForm.address": {
      handler: function handler(newV, oldV) {
        if (this.focusStatus) {
          // 当input聚焦时开启动态验证, 否则不进行验证
          this.checkAddress();
        }
      },

      deep: true
    },
    treeId: {
      //监听treeId变化, 重复查询
      handler: function handler(newV, oldV) {
        if (newV && newV != 0) {
          this.getDataList("/party_orgs/" + newV + "/partyorgtree", "partyListData");
        }
      },

      deep: true
    }
  },
  methods: {
    /**
     * 获取字典表数据
     * @return {[type]} [description]
     */
    getDictionaryData: function getDictionaryData() {
      var self = this;

      var config = {
        url: basePath + "/contrast/all_contrast_info",
        method: "get"
      };

      self.$request.requestAxios(config.method, config.url, null, function (response) {
        response.data.data.forEach(function (item) {
          switch (item.id) {
            case 8:
              //党组织职位
              self.dictionaryPosition = item.list;
              break;
            default:
              break;
          }
        });
      }, function (error) {
        self.$message.error(error.data.meta.message);
      });
    },

    /**
     * 获取树形数据
     * @param  {string} url    请求地址
     * @param  {string} target 需要保存的数据目标名称
     * @return none
     */
    getDataList: function getDataList(url, target) {
      var self = this;
      self.loading = true;
      self.partyDialogVisible = false;

      self.$request.requestAxios('get', "" + basePath + url, null, function (response) {
        if (target == "partyListData") {
          self[target] = []; //返回数据为对象,需要处理为数组
          self[target].push(response.data.data);
        } else {
          self[target] = response.data.data;
          self[target].forEach(function (item, index) {
            //去掉空白childrens
            self.$util.traverseTree(item);
          });
        }
        self.loading = false;
      }, function (error) {
        self.$message.error(error.data.meta.message);
        self.loading = false;
      });
    },

    /**
     * 点击显示党组织dialog
     * @param {string} typeStr  添加顶层top 或是 添加子集层 child
     * @param {string} operate  当前操作模式
     * @param {object} data     当前点击的对象data
     */
    showPartyDialog: function showPartyDialog(typeStr, operate, data) {
      var self = this;

      if (this.$refs.partyForm) {
        this.$refs.partyForm.resetFields();
      }

      self.tempLevel = typeStr;
      self.tempOperateObj = data; //保存当前操作的data
      self.tempOperateType = operate;

      if (data && data.parentId) {
        //判断父节点type, 没有父节点则为null
        if (self.$refs.partyTree.getNode(data.parentId)) {
          self.parentType = self.$refs.partyTree.getNode(data.parentId).data.type;
        } else {
          self.parentType = null;
        }
      } else {
        self.parentType = null;
      }

      self.loading = true;
      self.focusStatus = false;

      if (operate == "edit") {
        //点击编辑, 查询详情, 使用返回的数据
        self.getPartyDetail(data);
      } else {
        self.partyDialogVisible = true;
        self.$nextTick(function () {
          if (self.$refs.partyForm) {
            self.$refs.partyForm.clearValidate();
          }
        });
        self.resetPartyForm();
      }
      self.loading = false;
    },
    resetPartyForm: function resetPartyForm() {
      if (this.$refs.partyForm) {
        this.$refs.partyForm.resetFields();
      }

      this.partyForm = {
        name: null,
        parentId: null,
        description: null,
        positions: [{
          positionsName: null,
          display: false
        }],
        createrOrgTime: {
          type: 1,
          date_time: null
        },
        officeStart: {
          date_time: null,
          type: 1
        },
        officeStop: {
          date_time: null,
          type: 1
        },
        address: null,
        latitude: null,
        longitude: null,
        type: null,
        orgUnitId: null,
        orgIds: []
      };
    },

    /**
     * 获取党组织详情中的数据(使用promise时需要将promise放在函数中, 否则将会立刻执行)
     * @return {[type]} [description]
     */
    getPartyDetail: function getPartyDetail(item) {
      var self = this;
      //初始化promise对象, 完成异步操作后return此对象, 外部方法链式调用then进行下一步操作
      self.$request.requestAxios("get", basePath + "/party_orgs/" + item.id + "/partyorg", null, function (response) {
        self.partyForm = response.data.data;
        if (!self.partyForm.createrOrgTime) {
          self.partyForm.createrOrgTime = {
            type: 1,
            date_time: null
          };
        }
        if (!self.partyForm.officeStart) {
          self.partyForm.officeStart = {
            type: 1,
            date_time: null
          };
        }
        if (!self.partyForm.officeStop) {
          self.partyForm.officeStop = {
            type: 1,
            date_time: null
          };
        }
        self.loading = false;
        self.partyDialogVisible = true;
        self.$nextTick(function () {
          if (self.$refs.partyForm) {
            self.$refs.partyForm.clearValidate();
          }
        });
      }, function (error) {
        self.loading = false;
        self.$message.error(error.data.meta.message);
      });
    },

    /**
     * 地址校验, 根据输入的内容校验经纬度字段
     * @return {[type]} [description]
     */
    checkAddress: function checkAddress() {
      if (this.partyForm.address) {
        this.mapLocation(this.partyForm.address);
      } else {
        this.partyForm.latitude = null;
        this.partyForm.longitude = null;
        this.$refs.partyForm.validateField("latitude");
      }
    },

    /**
     * 根据输入的地址返回经纬度, 并记录到表单对象中
     * @return none
     */
    mapLocation: function mapLocation(address) {
      var self = this;
      // 百度地图API功能
      var map = new BMap.Map("allmap");
      // 创建地址解析器实例
      var myGeo = new BMap.Geocoder();
      // 调用查询(异步)
      myGeo.getPoint(address, function (point) {
        if (point) {
          self.partyForm.latitude = point.lat;
          self.partyForm.longitude = point.lng;
          self.$refs.partyForm.validateField("latitude");
        } else {
          self.partyForm.latitude = null;
          self.partyForm.longitude = null;
          self.$refs.partyForm.validateField("latitude");
        }
      }, "");
    },

    /**
     * 删除党组织
     * @param  {object} node 节点node
     * @param  {object} data 节点数据
     * @return {[type]}      [description]
     */
    deleteParty: function deleteParty(node, data) {
      var _this = this;

      var self = this;
      self.$confirm(data.id == self.treeId ? "即将删除的是左侧已选中的组织, 确认删除?" : "确定删除吗?", "提示", {
        confirmButtonText: '确定',
        cancelButtonText: '取消',
        type: 'warning'
      }).then(function () {
        self.$request.requestAxios("delete", basePath + "/party_orgs/partyorg/delete/" + data.id + "/from_org/" + self.orgCode, null, function (reponse) {
          self.$message.success("删除成功");
          //重新查询
          if (self.treeId != 0) {
            self.getDataList("/party_orgs/" + _this.treeId + "/partyorgtree", "partyListData");
          }
          if (data.id == self.treeId) {
            //删除当前选中的组织, 通知父组件初始化树图
            self.$emit("treeDeleted");
          } else {
            self.$emit("treeChanged"); // 广播事件通知父组件
          }
        }, function (error) {
          self.$message.error(error.data.meta.message);
        });
      }).catch(function (error) {});
    },

    /**
     * 鼠标浮动, 显示对应的编辑按钮
     * @param  {object} data 当前树节点的数据
     * @return {[type]}      [description]
     */
    showControl: function showControl(data) {
      this.tempId = data.id;
    },
    addPositonItem: function addPositonItem() {
      if (!this.partyForm.positions) {
        this.partyForm.positions = [];
      }
      this.partyForm.positions.push({
        name: null,
        display: false
      });
    },
    deletePositionItem: function deletePositionItem(index) {
      this.partyForm.positions.splice(index, 1);
    },

    /**
     * 点击确定, 添加/编辑 节点提交 (顶层/子集), 提示当前选择的公司数组
     * @param  {string} formName [description]
     * @return {[type]}          [description]
     */
    submitForm: function submitForm(formName) {
      var _this2 = this;

      var self = this;

      var config = {
        url: basePath + "/party_orgs/partyorg/add/from_org/" + self.treeId,
        method: "post",
        data: self.partyForm
      };

      if (self.tempLevel == "sameLevel") {
        //添加同级党组织
        self.partyForm.parentId = self.tempOperateObj.parentId;
      } else if (self.tempLevel == "childLevel") {
        // 添加本级公司的下级党组织
        self.partyForm.parentId = self.tempOperateObj.id;
      } else {
        //点击添加顶层组织
        self.partyForm.parentId = null;
      }

      if (self.tempOperateType == "edit") {
        config.url = basePath + "/party_orgs/partyorg/update/" + self.tempOperateObj.id + "/from_org/" + self.orgCode;
        config.method = "patch";
      }

      //追加选中公司的id数组
      // self.partyForm.companyId = self.$refs.companyEdit.getArray("id")

      self.$refs[formName].validate(function (valid) {
        if (valid) {
          self.loading = true;
          self.partyForm.orgUnitId = self.partyForm.orgIds[self.partyForm.orgIds.length - 1];
          self.$request.requestAxios(config.method, config.url, config.data, function (response) {
            self.$message.success(response.data.meta.message);
            //重新查询
            self.$emit("treeChanged"); // 广播事件通知父组件
            if (self.treeId != 0) {
              self.getDataList("/party_orgs/" + _this2.treeId + "/partyorgtree", "partyListData");
            }
            self.loading = false;
            self.partyDialogVisible = false;
          }, function (error) {
            self.$message.error(error.data.meta.message);
            self.loading = false;
          });
        } else {
          self.$message.error("请检查必填项");
          return false;
        }
      });
    },

    /**
     * 删除职位
     * @param  {[type]} item [description]
     * @return {[type]}      [description]
     */
    deletePosition: function deletePosition(item) {
      var index = this.partyForm.positions.indexOf(item);
      if (index !== -1) {
        this.partyForm.positions.splice(index, 1);
      }
    },

    /**
     * 点击添加一个职位, 默认数据position如果不为[], 则需转换后再操作
     */
    addPosition: function addPosition() {
      if (!this.partyForm.positions) {
        this.partyForm.positions = [];
      }
      this.partyForm.positions.push({
        positionsName: null,
        display: false
      });
    },

    /**
     * 上传成功, 写入img对应的path
     * @param  {[type]} response [description]
     * @param  {[type]} file     [description]
     * @param  {[type]} fileList [description]
     * @return none
     */
    uploadSuccess: function uploadSuccess(response, file, fileList) {
      this.partyForm.headImg = this.$util.fileBasePath + response.data.url;
    }
  }
}; //
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

/***/ }),

/***/ 1464:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _stringify = __webpack_require__(188);

var _stringify2 = _interopRequireDefault(_stringify);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

exports.default = {
  props: {
    treeData: { //树结构的全部数据
      required: true,
      default: []
    }
  },
  components: {},
  data: function data() {
    return {
      treePropData: [], //父组件传递过来的数据
      treeList: [], //层级树的数组
      treeLevel: 0, //树的层级深度

      checkedArray: [] //当前已选中的数据,[----外部调用时直接使用此数据---]
    };
  },
  created: function created() {
    window.tree = this;
    this.treePropData = JSON.parse((0, _stringify2.default)(this.treeData));
    this.treeList = [];
    this.treeList[0] = this.treePropData;
  },

  computed: {},
  mounted: function mounted() {},

  watch: {
    treeData: { //深度监听由父组件传递的数据
      handler: function handler(val, oldVal) {
        this.treePropData = val;
        this.treeList = [];
        this.treeList[0] = this.treePropData;
      },
      deep: false //深度监听会造成更改select的值也会导致重新触发watch
    }
  },
  methods: {
    /**
     * 点击某一项公司<span>, 将其下一层的数据拼接到后方,跨越层级点击时, 删除当前点击index后的数据
     * @param  {object} item  当前点击的对象
     * @param  {number} index 当前点击的index, 用以确定当前点击的层级
     * @return {[type]}       [description]
     */
    clickItem: function clickItem(item, index) {
      if (item.childrens.length > 0) {
        this.treeList.splice(index + 1, this.treeList.length - (index + 1));
        this.treeList.push(item.childrens);
      }
    },

    /**
     * 遍历当前树, 将选中的内容保存至checkedArray
     * @param  {string} param 对应的参数key
     * @return {array}        选中的数组
     */
    getArray: function getArray(param) {
      var self = this;
      //置空,确保每次获取的数组不会重复
      self.checkedArray = [];

      if (self.treePropData) {
        self.traverseTree(self.treePropData, param);
      }
      return self.checkedArray;
    },

    /**
     * 遍历树,根据参数获取对应的数据数组, 并保存至checkedArray
     * @param  {object} node  节点数据
     * @param  {string} param 对应的参数key
     * @return none0
     */
    traverseTree: function traverseTree(node, param) {
      var self = this;

      node.forEach(function (item, index) {
        if (!item.childrens) {
          return false;
        } else {
          //此节点含有子节点, 递归查询
          self.traverseTree(item.childrens, param);
          item.childrens.forEach(function (itemInner, indexInner) {
            console.log(itemInner.select);
          });
        }

        if (item.select && item[param]) {
          self.checkedArray.push(item[param]);
        }
      });
    },

    /**
     * 去重
     * @param  {[type]} array [description]
     * @return {[type]}       [description]
     */
    duplicateRemove: function duplicateRemove(array) {
      var r = [];
      for (var i = 0, l = array.length; i < l; i++) {
        for (var j = i + 1; j < l; j++) {
          if (array[i] === array[j]) j = ++i;
        }r.push(array[i]);
      }
      return r;
    }
  }
};

/***/ }),

/***/ 1465:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _stringify = __webpack_require__(188);

var _stringify2 = _interopRequireDefault(_stringify);

var _jquery = __webpack_require__(1364);

var _jquery2 = _interopRequireDefault(_jquery);

var _ImportPeople = __webpack_require__(1371);

var _ImportPeople2 = _interopRequireDefault(_ImportPeople);

var _My_Message = __webpack_require__(1377);

var _My_Message2 = _interopRequireDefault(_My_Message);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
  components: {
    "import-people": _ImportPeople2.default,
    "roster-detail": _My_Message2.default // 人员详情
  },
  data: function data() {
    return {
      isLoad: true,
      orgCode: sessionStorage.getItem('orgCode'),
      userData: JSON.parse(sessionStorage.getItem('userData')),
      addOrUploadDialogVisible: false, //新建或者修改花名册弹框
      dialogType: 'add', //  add为新增，update为修改
      tableData: [], //花名册数据,
      companyUser: [], //组织下所有公司成员
      orgChlidrensimple: [], //支部数据
      newOrupdateUrl: null,
      lostOptions: [//失联状态
      { label: '是', value: 1 }, { label: '否', value: 0 }],
      mobileOptions: [//失联状态
      { label: '是', value: 1 }, { label: '否', value: 0 }],
      form: { // 新增/修改花名册的筛选条件
        applicationDate: {
          type: 1,
          date_time: null
        },
        "introducer": null,
        joinPartyDate: {
          type: 1,
          date_time: null
        },
        "lost": true,
        lostTime: null,
        "mobile": true,
        "partyOrgIds": [], // 级联的数组
        "partyOrgsId": null, // 最终的目标数据
        qualificationTime: {
          type: 1,
          date_time: null
        },
        "userId": null
      },
      formScreen: { // 查询列表的筛选条件
        partyOrgIdList: [this.treeId],
        name: null,
        account: null,
        minAge: null,
        maxAge: null,
        minPartyAge: null,
        macPartyAge: null,
        lost: 0,
        mobile: 0
      },
      rules: { //验证信息
        userId: [{ required: true, message: '请选择职工', trigger: 'change' }],
        'applicationDate.date_time': [{ required: true, message: '请选择申请时间', trigger: 'change' }],
        introducer: [{ required: true, message: '请输入介绍人', trigger: 'blur' }],
        'joinPartyDate.date_time': [{ required: true, message: '请选择入党时间', trigger: 'change' }],
        'lostTime': [{ required: true, message: '请选择失联时间', trigger: 'change' }],
        'qualificationTime.date_time': [{ required: true, message: '请选择转正时间', trigger: 'change' }]
      },
      total: 0,
      currentPerPage: 5,
      currentPage: 1,
      partyTree: [],

      importPeopleDialogVisible: false,
      detailDialogVisible: false, //详情弹框
      mathRandom: 0, //随机数，用来查看详情使用
      userId: null //当前被查看详情的用户Id
    };
  },

  props: {
    treeId: {
      type: Number,
      required: true
    }
  },
  watch: {
    treeId: {
      //监听treeId变化, 重复查询
      handler: function handler(newV, oldV) {
        if (newV) {
          this.formScreen.partyOrgIdList = [newV];
          this.partyorgMembers();
          this.getCompanyUser();
          this.getQueryOrgList();
        }
      },

      deep: true
    }
  },
  mounted: function mounted() {
    this.getPartyList();
    this.partyorgMembers();
    this.getCompanyUser();
    this.getQueryOrgList();
  },

  methods: {
    // pageLocalRefresh(){
    //   this.partyorgMembers();
    //   this.getCompanyUser();
    //   this.getQueryOrgList();
    // },
    /**
     * 获取党组织数据(全部)
     * @return none
     */
    getPartyList: function getPartyList() {
      var _this = this;

      var self = this;

      var config = {
        url: basePath + "/party_orgs/partyorgstree",
        method: 'get'
      };

      self.$request.requestAxios(config.method, config.url, null, function (response) {
        var data = JSON.parse((0, _stringify2.default)(response.data.data));
        data.forEach(function (item, index) {
          _this.$util.traverseTree(item);
        });
        _this.partyTree = data;
      }, function (error) {
        self.$message.error(error.data.meta.message);
      });
    },

    /*
    * 查询党员花名册
    */
    partyorgMembers: function partyorgMembers() {
      var self = this;
      var form = JSON.parse((0, _stringify2.default)(self.formScreen));
      form.pageNum = self.currentPage;
      form.pageSize = self.currentPerPage;
      //处理数据年龄数据类型
      form.minAge = self.formScreen.minAge ? parseInt(self.formScreen.minAge) : null;
      form.maxAge = self.formScreen.maxAge ? parseInt(self.formScreen.maxAge) : null;
      form.minPartyAge = self.formScreen.minPartyAge ? parseInt(self.formScreen.minPartyAge) : null;
      form.macPartyAge = self.formScreen.macPartyAge ? parseInt(self.formScreen.macPartyAge) : null;
      self.isLoad = true;

      self.$request.requestAxios('post', basePath + '/hr_users/userList', form, function (response) {
        var responseData = response.data;
        if (responseData.meta.code === 0) {
          self.tableData = responseData.data.rows;
          self.total = responseData.data.total;
        } else {
          self.$message(responseData.meta.message, 20);
        }
        self.isLoad = false;
      }, function (error) {
        self.isLoad = false;
        self.$message.error("失败", 20);
      });
    },

    // _formScreenParams(){
    //   let form = new FormData();
    //   form.append('name',       this.formScreen.name);
    //   form.append('account',        this.formScreen.account);
    //   form.append('minAge',       this.formScreen.minAge);
    //   form.append('maxAge',       this.formScreen.maxAge);
    //   form.append('minPartyAge',  this.formScreen.minPartyAge);
    //   form.append('macPartyAge',  this.formScreen.macPartyAge);
    //   form.append('lost',           this.formScreen.lost);
    //   form.append('mobile',         this.formScreen.mobile);
    //   return form;
    // },
    /*
    * 点击查询按钮，查询数据
    */
    onSubmitPartyorgMembers: function onSubmitPartyorgMembers() {
      this.partyorgMembers();
    },

    /*
    * 显示党员花名册弹框
    * @params {string} title 弹框title
    * @params {object} rowData 当前需要修改的数据
    */
    addOrUploadDialogVisibleFun: function addOrUploadDialogVisibleFun(type, rowData) {
      this.dialogType = type;

      this.addOrUploadDialogVisible = true;
      // ---- add 为新增，update为编辑 -----
      if (this.dialogType != 'add') {
        this.getQueryById(rowData);
      } else {
        this._initForm("add");
      }
    },

    /*
    * 查询指定ID的党员花名册
    * @param { object } rowData 当前需要修改的数据
    */
    getQueryById: function getQueryById(rowData) {
      var self = this;
      var config = {
        url: basePath + "/party_member_infos/" + rowData.infoId + "/detail",
        method: "get",
        data: null
      };
      self.$request.requestAxios(config.method, config.url, null, function (response) {
        self.form = response.data.data;
        if (!self.form.applicationDate) {
          self.form.applicationDate = {
            type: 1,
            date_time: null
          };
        }
        if (!self.form.joinPartyDate) {
          self.form.joinPartyDate = {
            type: 1,
            date_time: null
          };
        }
        if (!self.form.qualificationTime) {
          self.form.qualificationTime = {
            type: 1,
            date_time: null
          };
        }
        self.$nextTick(function () {
          self._initForm();
        });
      }, function (error) {
        self.$message.error(error.data.meta.message);
      });
    },

    /*
    * 新建花名册
    * @params {string} formName 表单数据名字
    */
    saveClick: function saveClick(formName) {
      this.dialogType == 'add' ? this._saveAdd(formName) : this._updateAdd(formName);
    },
    _saveAdd: function _saveAdd(formName) {
      var _this2 = this;

      var self = this;
      console.log(this.form.joinPartyDate < this.form.qualificationTime);
      self.$refs[formName].validate(function (valid) {
        console.log;
        if (valid) {
          if (_this2.form.qualificationTime.date_time && _this2.form.joinPartyDate.date_time < _this2.form.qualificationTime.date_time) {
            self.$request.requestAxios('post', basePath + ("/party_member_infos/info/add/from_org/" + self.orgCode), self._saveParams(), function (response) {
              var responseData = response.data;
              if (responseData.meta.code === 0) {
                self.partyorgMembers();
              } else {
                self.$message(responseData.meta.message, 20);
              }
            }, function (error) {
              self.$message.error(error.data.meta.message);
            });

            self.addOrUploadDialogVisible = false;
            self._initForm();
          } else {
            self.$message.error("转正时间不能小于入党时间");
          }
        } else {
          return false;
        }
      });
    },
    _updateAdd: function _updateAdd(formName, row) {
      var _this3 = this;

      var self = this;
      self.$refs[formName].validate(function (valid) {
        if (valid) {
          if (_this3.form.qualificationTime.date_time && _this3.form.joinPartyDate.date_time < _this3.form.qualificationTime.date_time) {
            self.$request.requestAxios('put', basePath + ("/party_member_infos/info/update/" + self.form.id + "/from_org/" + self.orgCode), self._saveParams(), function (response) {
              var responseData = response.data;
              if (responseData.meta.code === 0) {
                self.partyorgMembers();
                self.$message.success(responseData.meta.message, 20);
              } else {
                self.$message(responseData.meta.message, 20);
              }
            }, function (error) {
              self.$message.error(error.data.meta.message);
            });
            self.addOrUploadDialogVisible = false;
            self._initForm();
          } else {
            self.$message.error("转正时间不能小于入党时间");
          }
        } else {
          return false;
        }
      });
    },
    _saveParams: function _saveParams() {
      this.form.partyOrgsId = this.form.partyOrgIds[this.form.partyOrgIds.length - 1];
      return this.form;
    },

    /*
    * 初始化表单数据
    */
    _initForm: function _initForm(addFlag) {
      var _this4 = this;

      this.$nextTick(function () {
        if (addFlag) {
          //新增时清空未被prop控制的数据, 并重置验证
          _this4.form.userId = null;
          _this4.form.lost = true;
          _this4.form.lostTime = null;
          _this4.form.partyOrgIds = [];
          _this4.$refs.form.resetFields();
        } else {
          //编辑时仅需还原验证状态
          _this4.$refs.form.clearValidate();
        }
      });
    },

    /*
    * 删除一条指定ID花名册
    * @params {object} row 当前需要删除的数据
    */
    delClick: function delClick(row) {
      var self = this;
      self.$confirm("删除后需要重新添加", "确认删除?", {
        confirmButtonText: '确定',
        cancelButtonText: '取消',
        type: 'warning' }).then(function () {
        self.$request.requestAxios('delete', basePath + ("/party_member_infos/info/delete/" + row.infoId + "/from_org/" + self.orgCode), "", function (response) {
          var responseData = response.data;
          if (responseData.meta.code === 0) {
            self.partyorgMembers();
          }
          self.$message.success(responseData.meta.message, 20);
        }, function (error) {
          self.$message.error('失败', 20);
        });
      }).catch(function () {});
    },

    /*
    * 查询组织下所有公司成员
    */
    getCompanyUser: function getCompanyUser() {
      var self = this;
      self.$request.requestAxios('get', basePath + ("/party_mem_positions/" + self.treeId + "/company/user"), "", function (response) {
        var responseData = response.data;
        if (responseData.meta.code === 0) {
          self.companyUser = responseData.data;
        } else {
          self.$message(responseData.meta.message, 20);
        }
      }, function (error) {
        self.$message.error('失败', 20);
      });
    },

    /*
    * 查询组织列表数据
    */
    getQueryOrgList: function getQueryOrgList() {
      var self = this;
      self.orgChlidrensimple = [];
      self.$request.requestAxios('get', basePath + '/party_orgs/' + self.treeId + '/partyorgtree', "", function (response) {
        var responseData = response.data;
        if (responseData.meta.code === 0) {

          // -------- 给当前的组织树赋值 -----------
          self._getQueryOrgList(responseData.data);
        } else {
          self.$message.error(responseData.meta.message, 20);
        }
      }, function (error) {
        self.$message.error("失败", 20);
      });
    },

    /*
    * 排除掉不要的数据
    */
    _getQueryOrgList: function _getQueryOrgList(data) {
      var self = this;
      self.orgChlidrensimple.push(data);
      _jquery2.default.each(data.childrens, function (index, item) {
        self.orgChlidrensimple.push(item);
      });
    },

    /*
    * 时间转换
    */
    _convertDate: function _convertDate(date) {
      return new Date(date).getFullYear() + '年' + (new Date(date).getMonth() + 1) + '月' + new Date(date).getDate() + '日';
    },
    handleCascaderChange: function handleCascaderChange(val) {
      console.log(val);
    },

    /*
    * 禁止输入负数
    */
    validateNumber: function validateNumber(evt) {
      if (evt.keyCode == 189 || evt.keyCode == 169 || evt.keyCode == 69 || evt.keyCode == 109 || evt.keyCode == 13) {
        // ---- 禁止输入
        evt.preventDefault();
        (0, _jquery2.default)(evt.target).val('');
      }
    },
    resetForm: function resetForm() {
      this.formScreen = { // 查询列表的筛选条件
        partyOrgIdList: [this.treeId],
        name: null,
        account: null,
        minAge: null,
        maxAge: null,
        minPartyAge: null,
        macPartyAge: null,
        lost: 0,
        mobile: 0
      };
    },
    rosterDialogClosed: function rosterDialogClosed() {
      var _this5 = this;

      this.$nextTick(function () {
        //清空验证
        if (_this5.$refs.form) {
          _this5.$refs.form.resetFields();
        }
      });
    },
    handleSizeChange: function handleSizeChange(val) {
      this.currentPerPage = val;
      this.partyorgMembers();
    },
    handleCurrentChange: function handleCurrentChange(val) {
      this.currentPage = val;
      this.partyorgMembers();
    },
    compareString: function compareString(a, b) {
      return a.localeCompare(b);
    },
    showDetailDialog: function showDetailDialog(item) {
      this.mathRandom++;
      this.userId = item.userId;
      this.detailDialogVisible = true;
    }
  }
}; //
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

// import { request } from '../../../js/utils.js'

/***/ }),

/***/ 1466:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _qs = __webpack_require__(1347);

var _qs2 = _interopRequireDefault(_qs);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
  components: {},
  data: function data() {
    return {
      peopleLoading: false,
      leaderLoading: false,

      leaderListData: [], //领导列表list

      orgCode: sessionStorage.getItem('orgCode'),
      peopleDialogVisible: false,
      positionsListData: [], //职位select的列表
      position: null, //表单中选中的职位信息
      tablePeopleId: null, //当前选中的人员id
      peopleName: "", //表单输入的人员名称
      peopleTableListData: [], //人员表格数据

      resource: JSON.parse(sessionStorage.getItem("resource"))
    };
  },

  //计算权限
  computed: {
    addResource: function addResource() {
      if (this.resource && this.resource.indexOf(16) == -1) {
        return true;
      } else {
        return false;
      }
    },
    deleteResource: function deleteResource() {
      if (this.resource && this.resource.indexOf(18) == -1) {
        return true;
      } else {
        return false;
      }
    }
  },
  props: {
    treeId: {
      type: Number,
      required: true
    }
  },
  created: function created() {},
  mounted: function mounted() {
    this.getLeaderListData();
    this.getPositionsListData();
  },

  watch: {
    treeId: {
      //监听treeId变化, 重复查询
      handler: function handler(newV, oldV) {
        if (newV) {
          this.getLeaderListData();
          this.getPositionsListData();
        }
      },

      deep: true
    }
  },
  methods: {
    /**
     * 获取领导人列表
     * @return {[type]} [description]
     */
    getLeaderListData: function getLeaderListData(id) {
      var self = this;
      self.leaderLoading = true;
      var config = {
        url: basePath + "/party_orgs/leader",
        method: "get",
        params: {
          id: id || self.treeId,
          type: "partyorg"
        }
      };

      self.$request.requestAxios(config.method, config.url, { params: config.params }, function (response) {
        self.leaderListData = response.data.data;
        self.leaderLoading = false;
      }, function (error) {
        self.leaderLoading = false;
        self.$message.error(error.data.meta.message);
      });
    },

    /**
     * 点击添加领导, 清空数据
     */
    addLeaderClicked: function addLeaderClicked() {
      this.position = null;
      this.peopleName = "";
      this.peopleDialogVisible = true;
      this.peopleTableListData = [];
    },

    /**
     * 获取该组织下对应的职位
     * @return {[type]} [description]
     */
    getPositionsListData: function getPositionsListData() {
      var self = this;

      var config = {
        url: basePath + "/party_mem_positions/forOrg/" + self.treeId,
        method: "get"
      };
      self.$request.requestAxios(config.method, config.url, null, function (response) {
        if (response.data.meta.code == 0) {
          self.positionsListData = response.data.data;
        } else {
          throw "失败";
        }
      }, function (error) {
        self.$message.error(error.data.meta.message);
      });
    },
    getPeopleTableListData: function getPeopleTableListData() {
      var self = this;

      var config = {
        url: basePath + "/party_member_infos/forName/like",
        method: "get",
        params: {
          userName: self.peopleName
        }
      };
      self.peopleLoading = true;
      self.$request.requestAxios(config.method, config.url, { params: config.params }, function (response) {
        self.peopleTableListData = response.data.data;
        self.tablePeopleId = null;
        self.peopleLoading = false;
      }, function (error) {
        self.$message.error(error.data.meta.message);
        self.peopleLoading = false;
      });
    },
    clickSingle: function clickSingle(item) {
      this.tablePeopleId = item.infoId;
    },

    /**
     * 确认提交人员
     * @return {[type]} [description]
     */
    submitPeople: function submitPeople() {
      var self = this;

      var config = {
        url: basePath + "/party_mem_positions/partymempos/info_id/add/" + self.tablePeopleId + "/from_org/" + self.orgCode,
        method: "post",
        data: _qs2.default.stringify({
          positionId: self.position.id
        })
      };

      self.peopleLoading = true;
      self.$request.requestAxios(config.method, config.url, config.data, function (response) {
        self.peopleDialogVisible = false;
        self.getLeaderListData(self.treeId);
        self.peopleLoading = false;
        self.$message.success("成功");
      }, function (error) {
        self.$message.error(error.data.meta.message);
        self.peopleLoading = false;
      });
    },

    /**
     * 调离人员
     * @param  {[type]} item [description]
     * @return {[type]}      [description]
     */
    deleteLeader: function deleteLeader(item) {

      var self = this;

      var idList = [];
      idList.push(item.mpId);

      var config = {
        url: basePath + "/party_mem_positions/batch/delete/from_org/" + self.orgCode,
        method: "delete",
        data: {
          list: idList
        }
      };
      self.peopleLoading = true;
      self.$confirm("调离后需要重新添加", "提示", {
        confirmButtonText: '确定',
        cancelButtonText: '取消',
        type: 'warning' }).then(function () {
        self.$request.requestAxios(config.method, config.url, { data: config.data }, function (response) {
          self.$message.success("成功");
          self.getLeaderListData(self.treeId);
          self.peopleLoading = false;
        }, function (error) {
          self.$message.error(error.data.meta.message);
          self.peopleLoading = false;
        });
      }, function (error) {
        self.$message.error(error.data.meta.message);
      });
    },

    /*
     * 根据Id来显示对应的中文（对照表）
     */
    controlTable: function controlTable(id) {
      // debugger
      var data = JSON.parse(sessionStorage.getItem('controlTable')),
          name = void 0;
      $.each(data, function (index, item) {
        if (id == item.key) {
          name = item.value;
        }
      });
      return name;
    }
  }
}; //
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

/***/ }),

/***/ 1467:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

exports.default = {
  components: {},
  data: function data() {
    return {
      authorityLoading: false,
      authorityData: [],
      checkAll: false,
      isIndeterminate: true,
      resource: JSON.parse(sessionStorage.getItem("resource")),
      notResource: false, //是否有操作权限398
      orgCode: sessionStorage.getItem("orgCode")
    };
  },

  props: {
    treeId: {
      type: Number,
      required: true
    }
  },
  watch: {
    authorityData: {
      handler: function handler(data) {},

      deep: true
    },
    treeId: {
      handler: function handler(newV, oldV) {
        this.getQueryAuthorityList();
      },

      deep: true
    }
  },
  mounted: function mounted() {
    if (this.resource && this.resource.indexOf(398) == -1) {
      this.notResource = true;
    } else {
      this.notResource = false;
    }
    this.getQueryAuthorityList();
  },

  methods: {
    /*
    * 查询权限列表
    */
    getQueryAuthorityList: function getQueryAuthorityList() {
      var self = this;
      var config = {
        url: basePath + "/user_resource/matrix_list/partyorg",
        method: "get",
        params: {
          id: self.treeId
        }
      };
      self.showData = false;
      self.authorityLoading = true;
      self.$request.requestAxios(config.method, config.url, { params: config.params }, function (response) {
        self._convertAuthorityList(response.data.data);
        self.authorityLoading = false;
      }, function (error) {
        self.authorityLoading = false;
        self.$message.error(error.data.meta.message);
      });
    },
    _convertAuthorityList: function _convertAuthorityList(data) {
      $.each(data, function (index, item) {
        $.each(item.info, function (indexInfo, itemInfo) {
          itemInfo.checkAll = false;
        });
      });
      this.authorityData = data;
    },


    /*
    * 保存矩阵数据
    */
    save: function save() {
      var self = this;
      var config = {
        url: basePath + "/user_resource/matrix_list/add/" + self.treeId + "/from_org/" + self.orgCode,
        method: "post",
        data: self.authorityData
      };
      self.authorityLoading = true;
      self.$request.requestAxios(config.method, config.url, config.data, function (response) {
        self.$message.success("修改成功");
        self.getQueryAuthorityList();
        self.authorityLoading = false;
      }, function (error) {
        self.$message.error(error.data.meta.message);
        self.authorityLoading = false;
      });
    },
    handleCheckAllChange: function handleCheckAllChange(val, people) {
      this.isIndeterminate = false;
      $.each(this.authorityData, function (index, item) {
        $.each(item.info, function (indexInfo, itemInfo) {
          $.each(itemInfo.list, function (indexCheck, itemCheck) {
            if (people.userId == itemCheck.userId) itemCheck.choice = val;
          });
        });
      });
    },

    /**
     * 将此人的一个资源大类的权限全部设置为选中
     * @param  {booleam} val      checkbox是否勾选
     * @param  {object}  people   人员对应的对象
     * @param  {object}  itemObj  当前资源大类对应的对象
     */
    choosePart: function choosePart(val, people, itemObj) {
      console.log(val, people, itemObj);
      itemObj.info.forEach(function (item, index) {
        item.list.forEach(function (itemInner, indexInner) {
          if (itemInner.userId == people.userId) {
            itemInner.choice = val;
          }
        });
      });
    }
  }
};

/***/ }),

/***/ 1468:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

exports.default = {
  data: function data() {
    return {
      orgCode: sessionStorage.getItem('orgCode')
    };
  },

  props: {
    treeId: {
      type: Number,
      required: true
    }
  },
  mounted: function mounted() {
    this.getChartsData("partyAgeChart");
    this.getChartsData("ageChart");
    this.getChartsData("orgCharts");
    this.getChartsData("peopleCharts");
    this.getChartsData("statusCharts");
    this.getMissionChart();
  },

  methods: {
    getMissionChart: function getMissionChart() {
      var _this = this;

      var self = this;
      var config = {
        url: basePath + "/t_tasks/pie/count",
        method: "post",
        data: {
          types: [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21],
          partyOrgId: this.treeId
        }
      };

      self.$request.requestAxios(config.method, config.url, config.data, function (response) {
        _this.drawPie("missionCharts", response.data.data, "任务数量");
      }, function (error) {
        self.$message.error(error.message);
      });
    },
    getChartsData: function getChartsData(elementId) {
      var _this2 = this;

      var self = this;
      var targetUrl = "";
      var title = "";
      switch (elementId) {
        case "partyAgeChart":
          title = "党龄统计图";
          targetUrl = basePath + "/party_member_infos/chart/partyage/from_org/" + this.orgCode + "?interval=1";
          break;
        case "ageChart":
          title = "年龄统计图";
          targetUrl = basePath + "/party_member_infos/chart/age/from_org/" + this.orgCode + "?interval=2&beginAge=18";
          break;
        case "orgCharts":
          title = "党支部、党小组统计";
          targetUrl = basePath + "/party_orgs/chart/org/from_org/" + this.orgCode;
          break;
        case "peopleCharts":
          title = "党员数目";
          targetUrl = basePath + "/party_orgs/chart/mem/from_org/" + this.orgCode;
          break;
        case "statusCharts":
          title = "党员阶段统计图";
          targetUrl = basePath + "/party_member_infos/chart/stage/from_org/" + this.orgCode;
          break;
        default:
          break;
      }

      var config = {
        url: targetUrl,
        method: "get"
      };

      self.$request.requestAxios(config.method, config.url, null, function (response) {
        if (elementId != "peopleCharts") {
          _this2.drawPie(elementId, response.data.data, title);
        } else {
          _this2.drawLine(elementId, response.data.data, title);
        }
      }, function (error) {
        self.$message.error(error.message);
      });
    },
    drawPie: function drawPie(elementId, data, title) {
      // 基于准备好的dom，初始化echarts实例
      this[elementId] = null; // 清空实例(已创建的情况)
      this[elementId] = this.$echarts.init(document.getElementById(elementId));

      // 绘制图表
      this[elementId].setOption({
        title: {
          text: title,
          x: 'center',
          top: 20
        },
        color: ['#2f4554', '#c23531', '#61a0a8', '#d48265', '#91c7ae', '#749f83', '#ca8622', '#bda29a', '#6e7074', '#546570', '#c4ccd3'],
        tooltip: {
          trigger: 'item',
          formatter: "{a} <br/>{b} : {c} ({d}%)"
        },
        legend: {
          x: 'center',
          y: 'bottom',
          data: this.returnLegend(data)
        },
        calculable: true,
        series: [{
          name: '数量',
          type: 'pie',
          radius: [20, 110],
          // center : ['25%', '50%'],
          roseType: 'radius',
          label: {
            normal: {
              show: false
            },
            emphasis: {
              show: true
            }
          },
          lableLine: {
            normal: {
              show: false
            },
            emphasis: {
              show: true
            }
          },
          data: data
        }]
      });
    },
    drawLine: function drawLine(elementId, data, title) {
      // 基于准备好的dom，初始化echarts实例
      this[elementId] = null; // 清空实例(已创建的情况)
      this[elementId] = this.$echarts.init(document.getElementById(elementId));
      var handledData = this.handleLineData(data);
      // 绘制图表
      this[elementId].setOption({
        title: {
          text: title,
          x: 'center',
          top: 20
        },
        color: ['#2f4554', '#c23531', '#61a0a8', '#d48265', '#91c7ae', '#749f83', '#ca8622', '#bda29a', '#6e7074', '#546570', '#c4ccd3'],
        tooltip: {
          trigger: 'axis',
          axisPointer: { // 坐标轴指示器，坐标轴触发有效
            type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
          },
          formatter: function formatter(params) {
            var tar = params[1];
            return tar.name + '<br/>' + tar.seriesName + ' : ' + tar.value;
          }
        },
        grid: {
          left: '3%',
          right: '4%',
          bottom: '3%',
          containLabel: true
        },
        xAxis: {
          type: 'category',
          splitLine: { show: false },
          data: handledData.xAxis
        },
        yAxis: {
          type: 'value'
        },
        series: [{
          name: '辅助',
          type: 'bar',
          stack: '总量',
          itemStyle: {
            normal: {
              barBorderColor: 'rgba(0,0,0,0)',
              color: 'rgba(0,0,0,0)'
            },
            emphasis: {
              barBorderColor: 'rgba(0,0,0,0)',
              color: 'rgba(0,0,0,0)'
            }
          },
          data: handledData.transparentData
        }, {
          name: '人数',
          type: 'bar',
          stack: '总量',
          label: {
            normal: {
              show: true,
              position: 'inside'
            }
          },
          data: handledData.data
        }]
      });
    },
    handleLineData: function handleLineData(data) {
      var arrays = {
        xAxis: [],
        transparentData: [],
        data: []
      };
      data.forEach(function (item, index) {
        arrays.xAxis.push(item.name);
        arrays.transparentData.push(item.dValue);
        arrays.data.push(item.value);
      });

      return arrays;
    },
    returnLegend: function returnLegend(data) {
      var array = [];

      data.forEach(function (item, index) {
        array.push(item.name);
      });

      return array;
    }
  }
};

/***/ }),

/***/ 1469:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _NoKey_Compontent = __webpack_require__(1688);

var _NoKey_Compontent2 = _interopRequireDefault(_NoKey_Compontent);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
  components: {
    'org-no-key-form-component': _NoKey_Compontent2.default
  },
  data: function data() {
    return {
      checkFromTypeDialog: false,
      orgId: this.type == 'org' ? sessionStorage.getItem('orgId') : JSON.parse(sessionStorage.getItem('userData')).orgId, //党组织id
      userData: JSON.parse(sessionStorage.getItem('userData')), //用户信息
      wrecordTypeData: [],
      activeTypeItem: null, //被选中类型
      hoverTypeItem: null, //浮动被选中的数据
      opearType: 'add', //add添加，edit编辑
      tempAtId: null,
      orgCode: sessionStorage.getItem('orgCode'), //党组织code
      hasKeyComponentList: [], //有key组件库
      comBackStorageKeyArray: [], //组件包含的键数组 
      countNum: 0, //计数器  
      template: null, //添加模板
      fileList: [],
      childrenWrecordTypeData: [],
      childrenShowIds: [], //子节点类型回显数据
      defaultProps: {
        children: 'childrens',
        label: 'name'
      },
      orgForm: {
        name: null,
        childIds: null
      }
    };
  },

  props: {
    treeId: {
      type: Number,
      required: true
    }
  },
  watch: {
    treeId: {
      handler: function handler(newV, oldV) {
        this.getWrecordType();
      },

      deep: true
    }
  },
  mounted: function mounted() {
    this.getWrecordType();
    this.getChildrenWrecordType();
  },

  methods: {
    /*
     * 工作记录类型
     */
    getWrecordType: function getWrecordType() {
      var _this = this;

      this.$request.requestAxios('get', this.$util.basePath + '/wrecord/type/from_org/' + this.orgCode, null, function (response) {
        _this.wrecordTypeData = response.data.data;
        if (!_this.wrecordTypeData) return false;
        _this.activeTypeItem = _this.wrecordTypeData[0];
      }, function (error, status) {
        status == 200 ? _this.$message.error(error.data.meta.message) : _this.$message.error('wrecord/type - get\u5931\u8D25');
      });
    },

    /*
     * 查询所有二级工作记录类型
     */
    getChildrenWrecordType: function getChildrenWrecordType() {
      var _this2 = this;

      this.$request.requestAxios('get', this.$util.basePath + '/wrecord/type/list', null, function (response) {
        _this2.childrenWrecordTypeData = response.data.data;
      }, function (error, status) {
        status == 200 ? _this2.$message.error(error.data.meta.message) : _this2.$message.error('wrecord/type - get\u5931\u8D25');
      });
    },

    /*
     * 获取数据库已经被保存的组件list
     * key 查询的是第一级类型下面的组件，form查询的是第二类型下面的表单
     */
    getComponent: function getComponent(typeId) {
      var _this3 = this;

      this.$request.requestAxios('get', this.$util.basePath + '/wrecord/form/from_org/' + this.orgCode, { params: { "ids": typeId } }, function (response) {
        _this3.template = response.data.data ? response.data.data[0].template : null;
        _this3.hasKeyComponentList = response.data.data ? response.data.data.length ? response.data.data[0].inputs : [] : [];
        _this3.hasKeyComponentList ? _this3._comBackStorageKeyArray(_this3.hasKeyComponentList) : '';
        _this3.countNum++;
      }, function (error, status) {
        status == 200 ? _this3.$message.error(error.data.meta.message) : _this3.$message.error('wrecord/form/from_org - get\u5931\u8D25');
      });
    },

    /*
     * 将有key组件库的键名组装在一个数组中
     */
    _comBackStorageKeyArray: function _comBackStorageKeyArray(data) {
      var _this4 = this;

      this.comBackStorageKeyArray = [];
      data.forEach(function (item, index) {
        _this4.comBackStorageKeyArray.push({
          'keyName': item.backstageKey[0].keyName,
          'transStorIndex': index,
          'id': 0
        });
      });
    },

    /*
     * 左边树点击单个类型，获取类型详情
     */
    handleNodeClick: function handleNodeClick(ev) {
      this.activeTypeItem = ev;
      if (ev.typeId) this.getComponent(ev.typeId);
    },

    /*
     * 保存有key的组件库
     */
    storageDataFun: function storageDataFun(data) {
      this.hasKeyComponentList = data;
    },
    saveCom: function saveCom() {
      var _this5 = this;

      if (this._validateForm()) {
        this.$request.requestAxios('post', this.$util.basePath + '/wrecord/form/from_org/' + this.orgCode, { id: this.activeTypeItem.typeId, form: this.hasKeyComponentList ? this.hasKeyComponentList : [], template: this.template }, function (response) {
          _this5.$message.success(response.data.meta.message);
        }, function (error, status) {
          status == 200 ? _this5.$message.error(error.data.meta.message) : _this5.$message.error('wrecord/form/from_org - post\u5931\u8D25');
        });
      } else {
        this.$message.error('请将组件里面的信息填写完整！');
      }
    },

    /*
     * 有一个组件的键名为null的情况下，都不能保存数据
     */
    _validateForm: function _validateForm() {
      if (!this.hasKeyComponentList) return true;
      var bool = true;
      this.hasKeyComponentList.forEach(function (item) {
        if (!item.backstageKey[0].keyName && item.type != 'inputButton') {
          bool = false;
        }
      });
      return bool;
    },
    handleAvatarSuccess: function handleAvatarSuccess(response, file) {
      this.template = { id: response.data, name: file.name };
      this.$refs.uplode.clearFiles();
    },

    /*
     * 添加类型
     */
    appendType: function appendType(type, data) {
      var _this6 = this;

      this.childrenShowIds = [];
      if (type == 'edit') {
        this.orgForm.name = data.name;
        data.childrens.forEach(function (item) {
          _this6.childrenShowIds.push(item.typeId);
        });
        this.$refs.childTree ? this.$refs.childTree.setCheckedKeys(this.childrenShowIds) : '';
      } else {
        this.orgForm.name = null;
      }
      this.hoverTypeItem = data;
      this.opearType = type;
      this.checkFromTypeDialog = true;
    },
    submitForm: function submitForm(formName) {
      var _this7 = this;

      if (this.opearType == 'edit') {
        this.orgForm.id = this.hoverTypeItem.id;
      } else {
        this.orgForm.id = null;
      }
      this.orgForm.childIds = this.$refs.childTree.getCheckedKeys();
      this.$refs[formName].validate(function (valid) {
        if (valid) {
          _this7.$request.requestAxios('post', _this7.$util.basePath + '/wrecord/type/from_org/' + _this7.orgCode, _this7.orgForm, function (response) {
            _this7.$message.success(response.data.meta.message);
            _this7.getWrecordType();
            _this7.checkFromTypeDialog = false;
            _this7.getChildrenWrecordType();
          }, function (error, status) {
            _this7.checkFromTypeDialog = false;
            status == 200 ? _this7.$message.error(error.data.meta.message) : _this7.$message.error('wrecord/form/from_org - post\u5931\u8D25');
          });
        } else {
          return false;
        }
      });
    },

    /*
     * 删除类型
     */
    deleteType: function deleteType(data) {
      var _this8 = this;

      this.$request.requestAxios('delete', this.$util.basePath + '/wrecord/type/from_org/' + this.orgCode, { data: { id: data.id } }, function (response) {
        _this8.$message.success(response.data.meta.message);
        _this8.getWrecordType();
        _this8.getChildrenWrecordType();
      }, function (error, status) {
        status == 200 ? _this8.$message.error(error.data.meta.message) : _this8.$message.error('wrecord/form/from_org - post\u5931\u8D25');
      });
    }
  }
}; //
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

/***/ }),

/***/ 1470:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _stringify = __webpack_require__(188);

var _stringify2 = _interopRequireDefault(_stringify);

var _jquery = __webpack_require__(1364);

var _jquery2 = _interopRequireDefault(_jquery);

__webpack_require__(1689);

__webpack_require__(1691);

var _vuedraggable = __webpack_require__(1414);

var _vuedraggable2 = _interopRequireDefault(_vuedraggable);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

exports.default = {
  props: {
    processTypeId: { //流程类型ID，当ID为 '2' 时请假组件只能看不能操作
      // required: true,
      default: null,
      type: 'string'
    },
    objProps: { //当流程是编辑状态是会有一个组件数组
      default: null
    },
    countNum: { //用这个中间变量来避免数据重定向
      default: 0
    },
    taskFormDataAFew: {
      default: 'default'
    },
    activeTypeItem: {
      default: null
    },
    deployNode: {
      default: null
    },
    backStorageKeyArray: { //存储键的数组
      default: []
    },
    activeComTypeParentId: { //被选中组织父级Id
      default: null
    }
  },
  components: {
    draggable: _vuedraggable2.default
  },
  watch: {
    //监听数据变化，并广播事件 storageData
    formSetting: {
      handler: function handler(datas) {
        this.$emit('storageData', datas.storageData.length == 0 ? "" : datas.storageData);
      },
      deep: true //深度监听
    },
    //监听数据变化，验证信息是否填写完整
    transferStorage: {
      handler: function handler(datas) {
        // this._verificationKeyName(datas);
      },
      deep: true //深度监听
    },
    //监听操作框中键名提示信息
    "transferStorage.data.value": function transferStorageDataValue(prompt) {
      // console.log("提示信息"+prompt)
    },
    //监听流程类型ID的变化
    "processTypeId": function processTypeId(Id) {
      this._switchProcessType(Id);
    },
    //监听改对象是否有变化，有变化给formSetting.storageData赋值
    countNum: {
      handler: function handler(datas) {
        this.formSetting.storageData = this.objProps ? this.objProps : [];
        this.getComponentKu();
      },
      deep: true //深度监听
    },
    activeTypeItem: function activeTypeItem() {
      // this.getButtonList(this.activeTypeItem.id)
    }
  },
  data: function data() {
    return {
      deployNodeList: [],
      // userData: JSON.parse(sessionstorage.getItem('userData')),
      buttonUrlList: [], //请求地址列表
      buttonUrlTypeList: [], //请求地址类型列表
      activeButtonUrlTypeId: null, //被选中地址类型Id
      activeRequestUrl: null, //被选中的地址
      personnelUrlList: [{ "requestName": "获取党组织党员", "requestMethod": "GET", "requestUrl": "/party_orgs/members" }], //查询人员请求地址数据
      formSetting: { //表单设置
        element: [], //组件库
        storageData: [] //存储数据
      },
      transferStorage: { //转接数据
        data: null,
        direction: false, //false横向;true纵向
        textareaHtmlData: null, //修改选项展示数据
        style: {
          position: 'absolute',
          left: 650,
          top: 0,
          zIndex: 9999
        }
      },
      delComponentIndex: null //需要删除的组件下标 
    };
  },
  created: function created() {
    //页面加载前
    var self = this;
    // 点击其他不在的区域触发事件
    document.addEventListener('click', function (ev) {
      self._clickToolNotClose(ev, 'toolTipPortal');
    });
  },
  mounted: function mounted() {
    //页面加载后 
    this.getButtonList(98);
    this.getPersonnelUrlList(11); //查询人员数据 
    this.formSetting.storageData = this.objProps ? this.objProps : [];
    // this.getComponentKu();
  },
  methods: {
    /*
     * 获取组件库
     */
    getComponentKu: function getComponentKu() {
      var _this = this;

      this.$request.requestAxios('get', this.$util.basePath + '/wrecord/input/input', null, function (response) {
        if (!response.data.data) return false;
        response.data.data.forEach(function (item) {
          item.isProcess = true;
        });
        _this.formSetting.element = response.data.data;
      }, function (error, status) {
        status == 200 ? _this.$message.error(error.data.meta.message) : _this.$message.error('wrecord/input/input - \u5931\u8D25');
      });
    },

    /*
     * 查询表单按钮类型请求地址
     */
    getButtonTypeList: function getButtonTypeList() {
      var _this2 = this;

      this.$request.requestAxios('get', this.$util.basePath + '/t_form_data/button/type', null, function (response) {
        _this2.buttonUrlTypeList = response.data.data;
      }, function (error, status) {
        status == 200 ? _this2.$message.error(error.data.meta.message) : _this2.$message.error('t_form_data/button/type - \u5931\u8D25');
      });
    },

    /*
     * 查询表单按钮请求地址
     */
    getButtonList: function getButtonList(typeId) {
      var _this3 = this;

      this.$request.requestAxios('get', this.$util.basePath + '/t_form_data/button/' + typeId, null, function (response) {
        _this3.buttonUrlList = response.data.data;
        _this3.formSetting.element.forEach(function (item) {
          if (item.type == 'inputButton') {
            item.isDisabled = false;
          }
        });
      }, function (error, status) {
        _this3.buttonUrlList = [];
        _this3.formSetting.element.forEach(function (item) {
          if (item.type == 'inputButton') {
            item.isDisabled = true;
          }
        });
        status == 200 ? _this3.$message.error(error.data.meta.message) : _this3.$message.error('t_form_data/button - \u5931\u8D25');
      });
    },

    /*
    * 查询表单按钮请求地址
    */
    getPersonnelUrlList: function getPersonnelUrlList(typeId) {
      var _this4 = this;

      this.$request.requestAxios('get', this.$util.basePath + '/t_form_data/button/' + typeId, null, function (response) {
        _this4.personnelUrlList = response.data.data;
      }, function (error, status) {
        status == 200 ? _this4.$message.error(error.data.meta.message) : _this4.$message.error('t_form_data/button - \u5931\u8D25');
      });
    },

    /**
     * 验证键名是否填写完整
     * @param {object} datas 被编辑组件数据
     * @return {boolean} bool 为true表示有空的必填项，则不能操作其他操作；为false可以操作其他操作
     */
    _verificationKeyName: function _verificationKeyName(datas) {
      var self = this;
      var dataItem = datas.data,
          bool = false;

      if (dataItem) {

        //当编辑控件已经是关闭状态或者打开状态
        if (!dataItem.toolTipPortal.isShow || dataItem.toolTipPortal.isShow) {
          if (dataItem.isProcess && dataItem.type != 'inputButton') {
            _jquery2.default.each(dataItem.backstageKey, function (index, item) {
              //如果勾选了必填选择框，那么当操作框时，验证文本框中的值是否有填写
              if (!item.keyName) {
                bool = true;
              }

              if (dataItem.isKeyPrompt) {
                bool = true;
              }

              if (!dataItem.title) {
                bool = true;
              }
            });
          } else {
            dataItem.isKeyPrompt = '';
          }
        }
      }

      //满足条件表示有必填项,并且必填项有为空文本框，那么操作框就不能关闭操作框，并且不能执行其他的任何操作
      if (bool) {
        dataItem.toolTipPortal.isShow = true;
      }

      return bool;
    },
    //点击其他空白位置关闭弹框
    _clickToolNotClose: function _clickToolNotClose(ev, name) {
      var self = this;
      if ((0, _jquery2.default)(ev.target).attr('notClose') != name && (0, _jquery2.default)(ev.target).attr('notClose') != 'other') {
        // if ($(ev.target).attr('notClose') != name){
        //返回false取反能操作其他信息
        if (!self._verificationKeyName(self.transferStorage)) {
          _jquery2.default.each(self.formSetting.storageData, function (index, item) {
            item.toolTipPortal.isShow = false;
            item.style.isActive = false;
            if (item.type == 'select') {
              item.optionIsShow = false;
            }
            self._closePopover((0, _jquery2.default)(".se-popover"));
          });
        }
      }
    },
    // 浮动显示文本详情
    _showSinleSub: function _showSinleSub(type, itemElementData) {
      var self = this;
      itemElementData.isShow = true;
    },
    // 移开隐藏文本详情
    _hideSinleSub: function _hideSinleSub(type, itemElementData) {
      var self = this;
      itemElementData.isShow = false;
    },
    /**
     * 点击添加控件
     * @param  {string} type 组件类型
     * @param  {object} ev   元素对象
     */
    clickSinleAdd: function clickSinleAdd(type, ev) {
      var self = this;

      //当前转接组件有数据时,验证编辑框中的数据
      if (self.transferStorage.data) {

        //返回false取反能操作其他信息
        if (!self._verificationKeyName(self.transferStorage)) {
          self._sinleAdd(type, ev);
        }
      } else {
        self._sinleAdd(type, ev);
      }
    },
    /**
     * 添加控件
     * @param  {string} type 组件类型
     * @param  {object} ev   元素对象
     */
    _sinleAdd: function _sinleAdd(type, ev) {
      var self = this,
          data = self._cloneObj(self.formSetting.element[type]);

      //当组件类型为创建选票类型时，再判断组件是否已经被添加过，如果添加了，那么就不能再添加；如果没有添加，就可添加并将禁用状态改为不禁用
      if (type != 'createVote') {
        // 当类型为按钮类型时，只有在按钮有请求地址的情况下才能添加
        if (type == 'inputButton' && this.buttonUrlList.length) {
          self.formSetting.storageData.push(data);
        } else if (type != 'inputButton') {
          self.formSetting.storageData.push(data);
        }
      } else {
        if (!self.formSetting.element[type].isDisabled) {
          self.formSetting.storageData.push(data);
          self.formSetting.element[type].isDisabled = !self.formSetting.element[type].isDisabled;
        }
      }
    },
    //克隆对象，防止添加相同的对象，出现指向相同
    _cloneObj: function _cloneObj(data) {
      return JSON.parse((0, _stringify2.default)(data));
    },

    //删除指定的控件
    _delFormSetting: function _delFormSetting(index, ev) {
      this.delComponentIndex = index;
      (0, _jquery2.default)(".se-popover").css({
        transition: 'all .2s',
        position: 'absolute',
        top: parseInt((0, _jquery2.default)('.setting-body').find('.setting-fix').eq(index).offset().top) - parseInt((0, _jquery2.default)('.form-setting').offset().top) - 20,
        left: parseInt((0, _jquery2.default)('.form-setting').width()) - parseInt((0, _jquery2.default)('.se-popover').width()) - 50,
        opacity: 1,
        visibility: 'visible'
      });
    },
    /**
     * 删除被选中组件
     */
    _delComponentYes: function _delComponentYes() {
      //将组件禁用状态变为开放状态
      // this.formSetting.element[this.formSetting.storageData[this.delComponentIndex].type].isDisabled = false;

      //删除被选中组件数据
      this.formSetting.storageData.splice(this.delComponentIndex, 1);

      //清空转接数据
      this.transferStorage.data = null;

      //关闭弹框
      this._closePopover((0, _jquery2.default)(".se-popover"));
    },
    /**
     * 取消删除被选中组件
     */
    _delComponentNo: function _delComponentNo() {
      this._closePopover((0, _jquery2.default)(".se-popover"));
    },
    /**
     * 关闭弹框
     * @param {object} elObject 元素对象
     */
    _closePopover: function _closePopover(elName) {
      elName.css({
        transition: 'all .2s',
        position: 'absolute',
        opacity: 0,
        visibility: 'hidden'
      });
    },
    /**
     * 点击组件显示组件编辑框
     * @param {object} itemStorageData - json对象
     * @param {number} index - 对象下标
     * @param {object} ev - 元素对象
     */
    clickShowToolTipPortal: function clickShowToolTipPortal(itemStorageData, index, ev) {

      var self = this;

      //当前转接组件有数据时,验证编辑框中的数据
      if (self.transferStorage.data) {

        //返回false取反能操作其他信息
        if (!self._verificationKeyName(self.transferStorage)) {
          self._showToolTipPortal(itemStorageData, index, ev);
        }
      } else {
        self._showToolTipPortal(itemStorageData, index, ev);
      }
    },
    /**
     * 显示组件编辑框
     * @param {object} itemStorageData - json对象
     * @param {number} index - 对象下标
     * @param {object} ev - 元素对象
     */
    _showToolTipPortal: function _showToolTipPortal(itemStorageData, index, ev) {
      var self = this;

      //计算组件编辑框的摆放位置
      self._countToolTipPortalPostion(index, itemStorageData);

      //改变编辑框显示状态
      _jquery2.default.each(self.formSetting.storageData, function (_index, item) {
        if (itemStorageData === item) {
          // ---- 组件为跳过审批按钮不能编辑 ----
          if (itemStorageData.type == 'skipApproval') {
            return false;
          }
          item.toolTipPortal.isShow = item.style.isActive = true;
        } else {
          item.toolTipPortal.isShow = item.style.isActive = false;
        }
      });

      //转接数据赋值
      self.transferStorage.data = itemStorageData;
      self.transferStorage.data.formId = index; //新增一个下标
      //避免视图不能实时刷新，就先行使用jQuery赋值
      if (self.transferStorage.data.hasOwnProperty('option')) {
        (0, _jquery2.default)("#textareaShowFile").val(self._filterOption(self.transferStorage.data.option));
      }
    },
    /**
     * 计算组件编辑框的摆放位置
     * @param {number} index - 对象下标
     * @param {object} itemStorageData- 操作对象
     */
    _countToolTipPortalPostion: function _countToolTipPortalPostion(index, itemStorageData) {
      var self = this;
      self.$nextTick(function () {
        // 计算弹框所在的位置top
        if (itemStorageData.type == 'inputButton') {
          self.transferStorage.style.top = parseInt((0, _jquery2.default)('.se-form-footer').offset().top) - parseInt((0, _jquery2.default)('.form-setting').offset().top);
        } else {
          self.transferStorage.style.top = parseInt((0, _jquery2.default)('.setting-body').find('.setting-fix').eq(index).offset().top) - parseInt((0, _jquery2.default)('.form-setting').offset().top);
        }

        // 计算弹框所在的位置右边空白位置距离（页面总宽度 - (当前点击元素的offset().left + 自身宽度)）
        var bodyRightWidth = (0, _jquery2.default)("body").width() - ((0, _jquery2.default)('.setting-body').find('.setting-fix').offset().left + (0, _jquery2.default)('.form-setting').width());
        if (bodyRightWidth < 515) {
          self.transferStorage.style.left = 45;
          self.transferStorage.style.top = parseInt((0, _jquery2.default)('.setting-body').find('.setting-fix').eq(index).offset().top) - parseInt((0, _jquery2.default)('.form-setting').offset().top) + parseInt((0, _jquery2.default)('.setting-body').find('.setting-fix').eq(index).height());
          self.transferStorage.direction = true;
        }
      });
    },
    /**
     * 改变是否必填的值
     * @param {object} itemStorageData - json对象
     * @param {boolean} bool - json对象
     * @param {object} ev - 元素对象
     */
    _isRequiredFun: function _isRequiredFun(itemStorageData, bool, ev) {
      itemStorageData.isRequired = bool;
    },
    /**
     * 表格：是否允许操作的值
     * @param {object} itemStorageData - json对象
     * @param {boolean} bool - json对象
     * @param {object} ev - 元素对象
     */
    _isOperationFun: function _isOperationFun(itemStorageData, bool, ev) {
      itemStorageData.isOperation = bool;
    },
    /**
     * 表格: 是否只显示表头 
     * @param {object} itemStorageData - json对象
     * @param {boolean} bool - json对象
     * @param {object} ev - 元素对象
     */
    _isShowHeaderFun: function _isShowHeaderFun(itemStorageData, bool, ev) {
      itemStorageData.isShowHeader = bool;
    },
    /**
     * 改变(指定请求地址的下拉)组件是否为多选的值
     * @param {object} itemStorageData - json对象
     * @param {boolean} bool - json对象
     * @param {object} ev - 元素对象
     */
    isMultiSelectionFun: function isMultiSelectionFun(itemStorageData, bool, ev) {
      itemStorageData.isMultiSelection = bool;
    },
    /**
     * 改变(指定请求地址的下拉)组件是否为多选的值
     * @param {object} itemStorageData - json对象
     * @param {boolean} bool - json对象
     * @param {object} ev - 元素对象
     */
    isCheckboxFun: function isCheckboxFun(itemStorageData, bool, ev) {
      itemStorageData.checkboxType = bool;
    },

    /**
     * 单选框选中效果
     * @param {object} itemStorageData - json对象
     * @param {object} itemRadioData - json对象
     * @param {object} ev - 元素对象
     */
    _radioChecked: function _radioChecked(itemStorageData, itemRadioData, ev) {
      _jquery2.default.each(itemStorageData.option, function (index, item) {
        if (itemRadioData === item) {
          item.isChecked = true;
        } else {
          item.isChecked = false;
        }
      });
    },
    /**
     * 复选框选中效果
     * @param {object} itemStorageData - json对象
     * @param {object} itemRadioData - json对象
     * @param {object} ev - 元素对象
     */
    _checkboxChecked: function _checkboxChecked(itemStorageData, itemRadioData, ev) {
      itemRadioData.isChecked = !itemRadioData.isChecked;
    },
    /**
     * 过滤选项，显示在多行文本框中
     * @param {object} optionData - json对象
     * @returns {string} htmlData
     */
    _filterOption: function _filterOption(optionData) {
      var htmlData = "";
      _jquery2.default.each(optionData, function (index, item) {
        htmlData += item.name + "\n";
      });
      return htmlData;
    },
    /**
     * 添加选项/编辑选项
     * @param {object} itemStorageData - json对象
     * @param {number} id - 对象下标
     * @param {object} ev - 元素对象
     */
    _editTextarea: function _editTextarea(itemStorageData, id, ev) {
      var self = this;
      if (ev.keyCode != 13) {
        var options = (0, _jquery2.default)(ev.target).val().split('\n');

        //先清空数据再添加
        itemStorageData.option = [];
        _jquery2.default.each(options, function (index, item) {
          if (item) {
            if (index === 0) {
              //选中第一个选项
              itemStorageData.option.push({ value: 'key' + index, name: item, isChecked: true });
            } else {
              itemStorageData.option.push({ value: 'key' + index, name: item, isChecked: false });
            }
          }
        });
      }
      //计算组件编辑框的摆放位置
      self._countToolTipPortalPostion(id, itemStorageData);
    },
    /**
     * 添加选项
     * @param {object} itemStorageData - json对象
     * @param {number} id - 对象下标
     * @param {object} ev - 元素对象
     */
    _addOption: function _addOption(itemStorageData, id, ev) {
      itemStorageData.option.push({ value: 'key', name: '选项名称', isChecked: false });
    },

    /**
     * 删除指定选项
     * @param {object} itemStorageData - json对象
     * @param {number} index - 需要删除的选项下标
     * @param {object} ev - 元素对象
     */
    _delOption: function _delOption(itemStorageData, index, ev) {
      itemStorageData.option.splice(index, 1);
    },

    /**
     * 选项展示方向
     * @param {object} itemStorageData - json对象
     * @param {boolean} true 表示纵向 ，false表示横向
     * @param {number} id - 对象下标
     * @param {object} ev - 元素对象
     */
    _directionFun: function _directionFun(itemStorageData, bool, id, ev) {
      itemStorageData.direction = bool;

      //计算组件编辑框的摆放位置
      this._countToolTipPortalPostion(id, itemStorageData);
    },
    /**
     * 点击下拉标头显示下拉选项
     * @param {object} itemData - json对象
     * @param {object} ev - 元素对象
     */
    _clickShowSelectDrapdown: function _clickShowSelectDrapdown(itemData, ev) {
      itemData.optionIsShow = !itemData.optionIsShow;
    },
    /**
     * 筛选日期格式
     * @param {object} itemStorageData - json对象
     * @param {object} itemData - json对象
     * @param {object} ev - 元素对象
     */
    _dateFormatScreen: function _dateFormatScreen(itemStorageData, itemData, ev) {
      _jquery2.default.each(itemStorageData.dateType, function (index, item) {
        if (itemData === item) {
          item.isChecked = true;
          itemStorageData.prompt = itemData.value;
          itemStorageData.dateCheckedFormat = itemData.format;
          itemStorageData.dateCheckedFormatFiled = itemData.formatShowField;

          //当组件是请假类型时
          if (itemStorageData.type == 'leave') {
            if (itemData.format == 'yyyy-MM-dd hh:mm:ss') {
              itemStorageData.title['2'] = '时长(小时)';
            } else if (itemData.format == 'yyyy-MM-dd') {
              itemStorageData.title['2'] = '时长(天)';
            }
          }
        } else {
          item.isChecked = false;
        }
      });
    },
    /**
     * 点击下拉选中对应的向
     * @param {object} itemStorageData - json对象
     * @param {object} itemData - json对象
     * @param {object} ev - 元素对象
     */
    _clickSelected: function _clickSelected(itemStorageData, itemData, ev) {
      _jquery2.default.each(itemStorageData.option, function (index, item) {
        if (itemData === item) {
          item.isChecked = true;
        } else {
          item.isChecked = false;
        }
      });
      itemStorageData.optionIsShow = !itemStorageData.optionIsShow;
    },
    /**
     * 命名正则验证
     * @param {number} index 键名下标
     * @param {number} transStorIndex  当前被编辑的组件下标
     * @param {object} ev 文本对象
     */
    _humpNaming: function _humpNaming(index, transStorIndex, ev) {
      var self = this,
          backKey = self.transferStorage.data.backstageKey,
          //组建中存在的键数组
      reg = /^[0-9a-zA-Z_]{1,}$/,
          val = (0, _jquery2.default)(ev.target).val();

      reg.test(val) ? backKey[index].keyName = val : backKey[index].keyName = "";
      (0, _jquery2.default)(ev.target).val(backKey[index].keyName);
      self._validationKeyEqual(self.backStorageKeyArray, index, transStorIndex);
      // self.transferStorage.data.isProcess = !self.transferStorage.data.isProcess;
    },
    /**
     * 验证键名是否重复,不是重复的键可以添加
     * @param {Object} datas 需要循环编辑的数据
     * @param {number} appointIndex 被指定需要需要判断是否相同键的下标
     * @param {number} transStorIndex 当前被编辑的组件下标
     */
    _validationKeyEqual: function _validationKeyEqual(datas, appointIndex, transStorIndex) {
      var self = this;
      var keyIsExist = true,
          //为true表示不是重复的键可以添加
      backKey = self.transferStorage.data.backstageKey; //组建中存在的键数组
      _jquery2.default.each(datas, function (_index, item) {
        //第一步：
        //键名不为空的情况下
        if (backKey[appointIndex].keyName) {
          //第二步：
          //键名相同，组件下标不相同。同时满足这两个条件，表明键名已经存在不能重复添加
          if (backKey[appointIndex].keyName == item.keyName
          // && appointIndex != _index 
          && transStorIndex != item.transStorIndex) {
            self.$set(self.transferStorage.data, 'isKeyPrompt', '键名已存在，请重新填写！');
            keyIsExist = false;

            //键名不相同，组件下标相同。同时满足这两个条件，修改键名
          } else if (backKey[appointIndex].keyName != item.keyName
          // && appointIndex == _index 
          && transStorIndex == item.transStorIndex) {

            item.keyName = backKey[appointIndex].keyName;

            self.$set(self.transferStorage.data, 'isKeyPrompt', '');

            keyIsExist = false;

            //键名相同，组件下标相同。同时满足这两个条件，不做修改
          } else if (backKey[appointIndex].keyName == item.keyName
          // && appointIndex == _index 
          && transStorIndex == item.transStorIndex) {

            keyIsExist = false;
          }
        }
      });

      if (keyIsExist) {
        self.backStorageKeyArray.push({
          'keyName': backKey[appointIndex].keyName,
          'transStorIndex': transStorIndex,
          'id': appointIndex
        });
        self.$set(self.transferStorage.data, 'isKeyPrompt', '');
      }
      self.backStorageKeyArray = datas;

      return keyIsExist;
    },
    /**
     * 勾选多选框指定必须填写键名
     * @param {object} itemStorageData json对象
     * @param {object} ev 文本对象
     */
    _humpNamingRequired: function _humpNamingRequired(itemStorageData, ev) {
      itemStorageData.isProcess = !itemStorageData.isProcess;
    },
    /**
     * 根据流程不同的流程Id做出不同的操作
     * @param  {Numbger/String} processTypeId 流程Id
     */
    _switchProcessType: function _switchProcessType(processTypeId) {
      var self = this,
          isBool = false;
      //为2表示选中的是请假流程
      if (processTypeId == '2') {
        self._sinleAdd("leave");
      }
    },
    /**
     * 添加表格列
     * @param {Object} itemStorageData json对象
     */
    addTableCol: function addTableCol(itemStorageData) {
      itemStorageData.cols.push({ keyName: '', name: '', dataType: 'text' });
    },
    /**
     * 删除指定的列，并给所有列的键重命名
     * @param {Object} colItem   表单列
     * @param {Number} colIndex  表单对应的列下表
     * @param {Object} itemStorageData json对象
     */
    delCol: function delCol(colItem, colIndex, itemStorageData) {
      itemStorageData.cols.splice(colIndex, 1);
      _jquery2.default.each(itemStorageData.cols, function (index, item) {
        item.key = 'col' + (index + 1);
      });
    },
    /**
     *添加表格操作按钮
     *@params {object} itemStorageData json对象
     */
    addOperaBtn: function addOperaBtn(itemStorageData) {

      if (!itemStorageData.isColAddOpera) {
        itemStorageData.cols.push({ key: 'operaBtn', name: '操作', dataType: 'operaBtn' });
      }

      //设置添加操作按钮的权限
      itemStorageData.isColAddOpera = true;

      itemStorageData.colOperaBtn.push({ btnName: null, requestUrl: null });

      //计算组件编辑框的摆放位置
      this._countToolTipPortalPostion(itemStorageData.formId, itemStorageData);
    },
    /**
     *删除操作按钮
     * @param {Object} colOpearItem   操作按钮
     * @param {Number}  colOperaIndex  操作按钮对应下标
     * @param {Object} itemStorageData json对象
     */
    delColOperaBtn: function delColOperaBtn(colOpearItem, colOperaIndex, itemStorageData) {
      itemStorageData.colOperaBtn.splice(colOperaIndex, 1);

      //当没有一个操作按钮的情况下将操作列去掉
      if (!itemStorageData.colOperaBtn.length) {
        var lastIndex = itemStorageData.cols.length - 1;
        //列表类型为操作按钮类型时，就删除最后一列
        if (itemStorageData.cols[lastIndex].dataType == 'operaBtn') {
          itemStorageData.cols.splice(lastIndex, 1);
          //设置添加操作按钮的权限
          itemStorageData.isColAddOpera = false;
        }
      }
      //计算组件编辑框的摆放位置
      this._countToolTipPortalPostion(itemStorageData.formId, itemStorageData);
    },
    /**
     * 添加关联组件
     * @param {Object} itemStorageData json对象
     */
    addRelationComponent: function addRelationComponent(itemStorageData) {
      itemStorageData.components.push({ key: 'col' + itemStorageData.components.length, title: '请填写标题', dataType: 'inputText' });
      //计算组件编辑框的摆放位置
      this._countToolTipPortalPostion(itemStorageData.formId, itemStorageData);
    },
    /**
     * 删除指定的组件，并给所有组件的键重命名
     * @param {Object} compontentItem   表单组件
     * @param {Number} compontentIndex  表单对应的组件下表
     * @param {Object} itemStorageData json对象
     */
    delComponent: function delComponent(compontentItem, compontentIndex, itemStorageData) {
      itemStorageData.components.splice(compontentIndex, 1);
      _jquery2.default.each(itemStorageData.components, function (index, item) {
        item.key = 'component' + (index + 1);
      });
      //计算组件编辑框的摆放位置
      this._countToolTipPortalPostion(itemStorageData.formId, itemStorageData);
    },
    /*
     * 根据选中的按钮地址，获取按钮更多的数据 
     * @params {string} activeRequestUrl 被选中的数据请求地址
     * @params {object} dataName 需要遍历的数据
     */
    reuqestUrlFun: function reuqestUrlFun(activeReuqestUrl, dataName) {
      var _this5 = this;

      _jquery2.default.each(this[dataName], function (index, item) {
        item.requestUrl == activeReuqestUrl ? _this5.transferStorage.data.buttonMess = item : '';
      });
    }
  }
  //格式化日期格式
};
Date.prototype.Format = function (fmt) {
  var o = {
    "M+": this.getMonth() + 1, //月份
    "d+": this.getDate(), //日
    "h+": this.getHours(), //小时
    "m+": this.getMinutes(), //分
    "s+": this.getSeconds(), //秒
    "q+": Math.floor((this.getMonth() + 3) / 3), //季度
    "S": this.getMilliseconds() //毫秒
  };
  if (/(y+)/.test(fmt)) fmt = fmt.replace(RegExp.$1, (this.getFullYear() + "").substr(4 - RegExp.$1.length));
  for (var k in o) {
    if (new RegExp("(" + k + ")").test(fmt)) fmt = fmt.replace(RegExp.$1, RegExp.$1.length == 1 ? o[k] : ("00" + o[k]).substr(("" + o[k]).length));
  }return fmt;
};

/***/ }),

/***/ 1645:
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(1646);
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__(76)("fad2db28", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../node_modules/_css-loader@0.28.11@css-loader/index.js!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-6af5d53e\",\"scoped\":true,\"hasInlineConfig\":false}!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=styles&index=0!./PartyManage.vue", function() {
     var newContent = require("!!../../../node_modules/_css-loader@0.28.11@css-loader/index.js!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-6af5d53e\",\"scoped\":true,\"hasInlineConfig\":false}!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=styles&index=0!./PartyManage.vue");
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ 1646:
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(43)(false);
// imports


// module
exports.push([module.i, "\n.add-top-button-wrap[data-v-6af5d53e] {\n  padding: 10px;\n  background: #fff;\n}\n.tree-list-wrap[data-v-6af5d53e] {\n  padding: 0;\n}\n.tree-list[data-v-6af5d53e] {\n  max-height: calc(100vh - 220px);\n  overflow: auto;\n}\n/*.tree-list {\n  position: fixed;\n  width: 200px;\n  background: #fff;\n  padding: 10px;\n}\n.tree-list li{\n  margin: 5px;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n}\n.tree-list li:hover {\n  cursor: pointer;\n  color: #409EFF;\n}*/\n.no-tree-data[data-v-6af5d53e] {\n  background: #fff;\n  padding: 20px;\n}\n.right-content[data-v-6af5d53e] {\n  width: 100%;\n  height: calc( 100vh - 152px);\n  padding: 10px;\n  margin-right: 0!important;\n  background: #fff;\n}\n.el-tab-pane[data-v-6af5d53e] {\n  overflow-y: auto;\n  max-height: calc( 100vh - 235px);\n  min-height: calc( 100vh - 235px);\n  /*width: calc( 100vw - 698px);*/\n}\n.org-name[data-v-6af5d53e] {\n  position: absolute;\n  top: -45px;\n  left: 10px;\n  font-size: 16px;\n}\n.no-org-data[data-v-6af5d53e] {\n  padding: 20px;\n  margin-top: 20px;\n  background: #fff;\n}\n.el-pagination[data-v-6af5d53e] {\n  display: flex;\n  flex-direction: row;\n}\n", ""]);

// exports


/***/ }),

/***/ 1647:
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(1648);
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__(76)("7db9e8c6", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../node_modules/_css-loader@0.28.11@css-loader/index.js!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-6af5d53e\",\"scoped\":false,\"hasInlineConfig\":false}!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=styles&index=1!./PartyManage.vue", function() {
     var newContent = require("!!../../../node_modules/_css-loader@0.28.11@css-loader/index.js!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-6af5d53e\",\"scoped\":false,\"hasInlineConfig\":false}!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=styles&index=1!./PartyManage.vue");
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ 1648:
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(43)(false);
// imports


// module
exports.push([module.i, "\n.left-margin-50 .el-form-item__content {\n  margin-left: 50px!important;\n}\n.el-tree-node__expand-icon.el-icon-caret-right{\n  font-size: 18px;\n  color: #000;\n}\n.el-tree-node__expand-icon.el-icon-caret-right.is-leaf{\n  color: transparent;\n}\n.text-blue {\n  color: #409EFF;\n}\n", ""]);

// exports


/***/ }),

/***/ 1649:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_Intro_vue__ = __webpack_require__(1462);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_Intro_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_Intro_vue__);
/* harmony namespace reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_Intro_vue__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_Intro_vue__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_13_7_3_vue_loader_lib_template_compiler_index_id_data_v_10bb4bde_hasScoped_true_buble_transforms_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_template_index_0_Intro_vue__ = __webpack_require__(1654);
var disposed = false
function injectStyle (ssrContext) {
  if (disposed) return
  __webpack_require__(1650)
  __webpack_require__(1652)
}
var normalizeComponent = __webpack_require__(42)
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = "data-v-10bb4bde"
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_Intro_vue___default.a,
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_13_7_3_vue_loader_lib_template_compiler_index_id_data_v_10bb4bde_hasScoped_true_buble_transforms_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_template_index_0_Intro_vue__["a" /* default */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "devPkg/components/organization/partyManageComponents/Intro.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-loader/node_modules/vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-10bb4bde", Component.options)
  } else {
    hotAPI.reload("data-v-10bb4bde", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),

/***/ 1650:
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(1651);
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__(76)("934cd33e", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../node_modules/_css-loader@0.28.11@css-loader/index.js!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-10bb4bde\",\"scoped\":true,\"hasInlineConfig\":false}!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=styles&index=0!./Intro.vue", function() {
     var newContent = require("!!../../../../node_modules/_css-loader@0.28.11@css-loader/index.js!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-10bb4bde\",\"scoped\":true,\"hasInlineConfig\":false}!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=styles&index=0!./Intro.vue");
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ 1651:
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(43)(false);
// imports


// module
exports.push([module.i, "\n.form-wrap[data-v-10bb4bde] {\n  padding: 12px;\n}\n.avatar-wrap[data-v-10bb4bde] {\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  border: 1px dashed #ccc;\n  border-radius: 5px;\n}\n.avatar-wrap[data-v-10bb4bde]:hover {\n  border: 1px dashed #409EFF;\n  color: #409EFF;\n}\n.avatar-img[data-v-10bb4bde] {\n  max-width: 100%;\n  max-height: 300px;\n}\n", ""]);

// exports


/***/ }),

/***/ 1652:
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(1653);
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__(76)("8e0b9c82", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../node_modules/_css-loader@0.28.11@css-loader/index.js!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-10bb4bde\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=styles&index=1!./Intro.vue", function() {
     var newContent = require("!!../../../../node_modules/_css-loader@0.28.11@css-loader/index.js!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-10bb4bde\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=styles&index=1!./Intro.vue");
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ 1653:
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(43)(false);
// imports


// module
exports.push([module.i, "\n#intro .left-margin-50 .el-form-item__content {\n  margin-left: 50px!important;\n}\n#intro .el-tree-node__expand-icon.el-icon-caret-right{\n  font-size: 18px;\n  color: #000;\n}\n#intro .el-tree-node__expand-icon.el-icon-caret-right.is-leaf{\n  color: transparent;\n}\n#intro .el-upload.el-upload--text {\n  width: 100%;\n}\n", ""]);

// exports


/***/ }),

/***/ 1654:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    { staticClass: "orgmanage", attrs: { id: "intro" } },
    [
      _c(
        "el-button-group",
        { staticStyle: { "margin-bottom": "10px" } },
        [
          _c(
            "el-button",
            {
              attrs: {
                type: _vm.activeButton == "intro" ? "primary" : "default"
              },
              on: {
                click: function($event) {
                  _vm.activeButton = "intro"
                }
              }
            },
            [_vm._v("简介")]
          ),
          _vm._v(" "),
          _vm._l(_vm.typesList, function(item) {
            return _c(
              "el-button",
              {
                key: item.id,
                attrs: {
                  type: _vm.activeButton == item.id ? "primary" : "default"
                },
                on: {
                  click: function($event) {
                    return _vm.typeButtonClicked(item)
                  }
                }
              },
              [_vm._v(_vm._s(item.name))]
            )
          }),
          _vm._v(" "),
          _c(
            "el-button",
            { attrs: { type: "default" }, on: { click: _vm.addButtonCLicked } },
            [_vm._v("添加+")]
          )
        ],
        2
      ),
      _vm._v(" "),
      _c(
        "div",
        {
          directives: [
            {
              name: "show",
              rawName: "v-show",
              value: _vm.activeButton == "intro",
              expression: "activeButton == 'intro'"
            }
          ],
          attrs: { label: "简介", name: "intro", closable: false }
        },
        [
          _vm.partyForm
            ? _c("div", [
                _c(
                  "div",
                  {
                    directives: [
                      {
                        name: "loading",
                        rawName: "v-loading",
                        value: _vm.loading,
                        expression: "loading"
                      }
                    ],
                    staticClass: "form-wrap"
                  },
                  [
                    _c(
                      "el-form",
                      {
                        ref: "partyForm",
                        attrs: {
                          model: _vm.partyForm,
                          rules: _vm.rules,
                          "label-width": "120px",
                          size: "small"
                        }
                      },
                      [
                        _c(
                          "el-form-item",
                          { attrs: { prop: "name", label: "党组织名称" } },
                          [
                            _c("el-input", {
                              model: {
                                value: _vm.partyForm.name,
                                callback: function($$v) {
                                  _vm.$set(_vm.partyForm, "name", $$v)
                                },
                                expression: "partyForm.name"
                              }
                            })
                          ],
                          1
                        ),
                        _vm._v(" "),
                        _c(
                          "el-form-item",
                          { attrs: { label: "党组织头像" } },
                          [
                            _c(
                              "el-upload",
                              {
                                staticClass: "avatar-wrap",
                                attrs: {
                                  action: _vm.imgServer,
                                  headers: _vm.token,
                                  "show-file-list": false,
                                  "on-success": _vm.uploadSuccess,
                                  name: "upfile"
                                }
                              },
                              [
                                _vm.partyForm.headImg
                                  ? _c("img", {
                                      staticClass: "avatar-img",
                                      attrs: { src: _vm.partyForm.headImg }
                                    })
                                  : _c("i", { staticClass: "el-icon-plus" }, [
                                      _vm._v("上传头像")
                                    ])
                              ]
                            )
                          ],
                          1
                        ),
                        _vm._v(" "),
                        _c(
                          "el-form-item",
                          { attrs: { label: "所属公司组织" } },
                          [
                            _c("el-cascader", {
                              staticClass: "fill-width",
                              attrs: {
                                "change-on-select": "",
                                options: _vm.companyTree,
                                clearable: "",
                                props: {
                                  children: "childrens",
                                  label: "name",
                                  value: "id",
                                  checkStrictly: true
                                }
                              },
                              model: {
                                value: _vm.partyForm.orgIds,
                                callback: function($$v) {
                                  _vm.$set(_vm.partyForm, "orgIds", $$v)
                                },
                                expression: "partyForm.orgIds"
                              }
                            })
                          ],
                          1
                        ),
                        _vm._v(" "),
                        _c(
                          "el-form-item",
                          {
                            attrs: {
                              label: "成立时间",
                              prop: "createrOrgTime.date_time"
                            }
                          },
                          [
                            _c("el-date-picker", {
                              staticClass: "fill-width",
                              attrs: {
                                type: _vm.$util.datePickerType(
                                  _vm.partyForm.createrOrgTime.type
                                ),
                                "value-format": "timestamp",
                                placeholder: "请选择成立时间"
                              },
                              model: {
                                value: _vm.partyForm.createrOrgTime.date_time,
                                callback: function($$v) {
                                  _vm.$set(
                                    _vm.partyForm.createrOrgTime,
                                    "date_time",
                                    $$v
                                  )
                                },
                                expression: "partyForm.createrOrgTime.date_time"
                              }
                            }),
                            _vm._v(" "),
                            _c(
                              "el-select",
                              {
                                staticClass: "date-picker-after",
                                model: {
                                  value: _vm.partyForm.createrOrgTime.type,
                                  callback: function($$v) {
                                    _vm.$set(
                                      _vm.partyForm.createrOrgTime,
                                      "type",
                                      $$v
                                    )
                                  },
                                  expression: "partyForm.createrOrgTime.type"
                                }
                              },
                              _vm._l(_vm.$util.timeType, function(item, index) {
                                return _c("el-option", {
                                  key: "成立时间" + index,
                                  attrs: {
                                    label: item.label,
                                    value: item.value
                                  }
                                })
                              }),
                              1
                            )
                          ],
                          1
                        ),
                        _vm._v(" "),
                        _c(
                          "el-form-item",
                          { attrs: { label: "任期开始时间" } },
                          [
                            _c("el-date-picker", {
                              staticClass: "fill-width",
                              attrs: {
                                type: _vm.$util.datePickerType(
                                  _vm.partyForm.officeStart.type
                                ),
                                "value-format": "timestamp",
                                placeholder: "请选择任期开始时间"
                              },
                              model: {
                                value: _vm.partyForm.officeStart.date_time,
                                callback: function($$v) {
                                  _vm.$set(
                                    _vm.partyForm.officeStart,
                                    "date_time",
                                    $$v
                                  )
                                },
                                expression: "partyForm.officeStart.date_time"
                              }
                            }),
                            _vm._v(" "),
                            _c(
                              "el-select",
                              {
                                staticClass: "date-picker-after",
                                model: {
                                  value: _vm.partyForm.officeStart.type,
                                  callback: function($$v) {
                                    _vm.$set(
                                      _vm.partyForm.officeStart,
                                      "type",
                                      $$v
                                    )
                                  },
                                  expression: "partyForm.officeStart.type"
                                }
                              },
                              _vm._l(_vm.$util.timeType, function(item, index) {
                                return _c("el-option", {
                                  key: "任期开始时间" + index,
                                  attrs: {
                                    label: item.label,
                                    value: item.value
                                  }
                                })
                              }),
                              1
                            )
                          ],
                          1
                        ),
                        _vm._v(" "),
                        _c(
                          "el-form-item",
                          { attrs: { label: "任期结束时间" } },
                          [
                            _c("el-date-picker", {
                              staticClass: "fill-width",
                              attrs: {
                                type: _vm.$util.datePickerType(
                                  _vm.partyForm.officeStop.type
                                ),
                                "value-format": "timestamp",
                                placeholder: "请选择任期结束时间"
                              },
                              model: {
                                value: _vm.partyForm.officeStop.date_time,
                                callback: function($$v) {
                                  _vm.$set(
                                    _vm.partyForm.officeStop,
                                    "date_time",
                                    $$v
                                  )
                                },
                                expression: "partyForm.officeStop.date_time"
                              }
                            }),
                            _vm._v(" "),
                            _c(
                              "el-select",
                              {
                                staticClass: "date-picker-after",
                                model: {
                                  value: _vm.partyForm.officeStop.type,
                                  callback: function($$v) {
                                    _vm.$set(
                                      _vm.partyForm.officeStop,
                                      "type",
                                      $$v
                                    )
                                  },
                                  expression: "partyForm.officeStop.type"
                                }
                              },
                              _vm._l(_vm.$util.timeType, function(item, index) {
                                return _c("el-option", {
                                  key: "任期结束时间" + index,
                                  attrs: {
                                    label: item.label,
                                    value: item.value
                                  }
                                })
                              }),
                              1
                            )
                          ],
                          1
                        ),
                        _vm._v(" "),
                        _c(
                          "el-form-item",
                          {
                            attrs: {
                              prop: "description",
                              label: "党组织描述",
                              rules: {
                                required: true,
                                message: "请输入公司/部门描述",
                                trigger: "blur"
                              }
                            }
                          },
                          [
                            _c("el-input", {
                              attrs: { type: "textarea", rows: 10 },
                              model: {
                                value: _vm.partyForm.description,
                                callback: function($$v) {
                                  _vm.$set(_vm.partyForm, "description", $$v)
                                },
                                expression: "partyForm.description"
                              }
                            })
                          ],
                          1
                        ),
                        _vm._v(" "),
                        _c(
                          "el-form-item",
                          {
                            attrs: {
                              prop: "latitude",
                              label: "地址",
                              rules: {
                                required: true,
                                message: "请输入正确的地址",
                                trigger: "blur"
                              }
                            }
                          },
                          [
                            _c("el-input", {
                              attrs: { type: "text" },
                              on: {
                                blur: _vm.checkAddress,
                                focus: function($event) {
                                  _vm.focusStatus = true
                                }
                              },
                              model: {
                                value: _vm.partyForm.address,
                                callback: function($$v) {
                                  _vm.$set(_vm.partyForm, "address", $$v)
                                },
                                expression: "partyForm.address"
                              }
                            })
                          ],
                          1
                        ),
                        _vm._v(" "),
                        _c(
                          "el-form-item",
                          { attrs: { label: "邮箱" } },
                          [
                            _c("el-input", {
                              attrs: { type: "email" },
                              model: {
                                value: _vm.partyForm.email,
                                callback: function($$v) {
                                  _vm.$set(_vm.partyForm, "email", $$v)
                                },
                                expression: "partyForm.email"
                              }
                            })
                          ],
                          1
                        ),
                        _vm._v(" "),
                        _c(
                          "el-form-item",
                          { attrs: { label: "电话" } },
                          [
                            _c("el-input", {
                              attrs: { type: "number" },
                              model: {
                                value: _vm.partyForm.phoneNum,
                                callback: function($$v) {
                                  _vm.$set(_vm.partyForm, "phoneNum", $$v)
                                },
                                expression: "partyForm.phoneNum"
                              }
                            })
                          ],
                          1
                        ),
                        _vm._v(" "),
                        _c(
                          "el-form-item",
                          [
                            _c(
                              "el-button",
                              {
                                attrs: {
                                  disabled: _vm.loading,
                                  type: "primary"
                                },
                                on: {
                                  click: function($event) {
                                    return _vm.submitForm("partyForm")
                                  }
                                }
                              },
                              [_vm._v("确 定")]
                            )
                          ],
                          1
                        )
                      ],
                      1
                    )
                  ],
                  1
                ),
                _vm._v(" "),
                _c(
                  "div",
                  {
                    staticClass: "personal-wrapper",
                    staticStyle: { display: "none" }
                  },
                  [
                    _c("h1", { staticClass: "title" }, [
                      _vm._v("|| 人际关系 "),
                      _c("i", {
                        staticClass: "el-icon-circle-plus",
                        on: { click: _vm.addRelationRow }
                      })
                    ]),
                    _vm._v(" "),
                    _c(
                      "el-table",
                      {
                        staticStyle: { width: "100%" },
                        attrs: { data: _vm.relationsData }
                      },
                      [
                        _c("el-table-column", {
                          attrs: { align: "left", label: "姓名" },
                          scopedSlots: _vm._u(
                            [
                              {
                                key: "default",
                                fn: function(scope) {
                                  return [
                                    !scope.row.hasOwnProperty("newAdd")
                                      ? _c("span", [
                                          _vm._v(_vm._s(scope.row.otherName))
                                        ])
                                      : _c("el-input", {
                                          class: {
                                            "border-red":
                                              scope.row.hasOwnProperty(
                                                "isBool"
                                              ) &&
                                              scope.row.isBool === 2 &&
                                              !scope.row.otherName
                                          },
                                          model: {
                                            value: scope.row.otherName,
                                            callback: function($$v) {
                                              _vm.$set(
                                                scope.row,
                                                "otherName",
                                                $$v
                                              )
                                            },
                                            expression: "scope.row.otherName"
                                          }
                                        })
                                  ]
                                }
                              }
                            ],
                            null,
                            false,
                            58150197
                          )
                        }),
                        _vm._v(" "),
                        _c("el-table-column", {
                          attrs: { align: "left", label: "职业" },
                          scopedSlots: _vm._u(
                            [
                              {
                                key: "default",
                                fn: function(scope) {
                                  return [
                                    !scope.row.hasOwnProperty("newAdd")
                                      ? _c("span", [
                                          _vm._v(
                                            _vm._s(scope.row.otherPosition)
                                          )
                                        ])
                                      : _c("el-input", {
                                          class: {
                                            "border-red":
                                              scope.row.hasOwnProperty(
                                                "isBool"
                                              ) &&
                                              scope.row.isBool === 2 &&
                                              !scope.row.otherPosition
                                          },
                                          model: {
                                            value: scope.row.otherPosition,
                                            callback: function($$v) {
                                              _vm.$set(
                                                scope.row,
                                                "otherPosition",
                                                $$v
                                              )
                                            },
                                            expression:
                                              "scope.row.otherPosition"
                                          }
                                        })
                                  ]
                                }
                              }
                            ],
                            null,
                            false,
                            3178362571
                          )
                        }),
                        _vm._v(" "),
                        _c("el-table-column", {
                          attrs: { align: "left", label: "关系" },
                          scopedSlots: _vm._u(
                            [
                              {
                                key: "default",
                                fn: function(scope) {
                                  return [
                                    !scope.row.hasOwnProperty("newAdd")
                                      ? _c("span", [
                                          _vm._v(_vm._s(scope.row.relationName))
                                        ])
                                      : _c("el-input", {
                                          class: {
                                            "border-red":
                                              scope.row.hasOwnProperty(
                                                "isBool"
                                              ) &&
                                              scope.row.isBool === 2 &&
                                              !scope.row.relationName
                                          },
                                          model: {
                                            value: scope.row.relationName,
                                            callback: function($$v) {
                                              _vm.$set(
                                                scope.row,
                                                "relationName",
                                                $$v
                                              )
                                            },
                                            expression: "scope.row.relationName"
                                          }
                                        })
                                  ]
                                }
                              }
                            ],
                            null,
                            false,
                            3012089047
                          )
                        }),
                        _vm._v(" "),
                        _c("el-table-column", {
                          attrs: { width: "100px", label: "操作" },
                          scopedSlots: _vm._u(
                            [
                              {
                                key: "default",
                                fn: function(scope) {
                                  return [
                                    scope.row.hasOwnProperty("newAdd")
                                      ? _c("el-button", {
                                          attrs: {
                                            type: "success",
                                            icon: "el-icon-check",
                                            circle: ""
                                          },
                                          on: {
                                            click: function($event) {
                                              return _vm.saveRelationship(
                                                "add",
                                                scope.row
                                              )
                                            }
                                          }
                                        })
                                      : _vm._e(),
                                    _vm._v(" "),
                                    _c("el-button", {
                                      attrs: {
                                        title: "删除",
                                        type: "danger",
                                        icon: "el-icon-delete",
                                        circle: ""
                                      },
                                      on: {
                                        click: function($event) {
                                          return _vm.delRelationship(
                                            scope.row.id,
                                            scope.row,
                                            scope.$index
                                          )
                                        }
                                      }
                                    })
                                  ]
                                }
                              }
                            ],
                            null,
                            false,
                            702098847
                          )
                        })
                      ],
                      1
                    )
                  ],
                  1
                ),
                _vm._v(" "),
                _c(
                  "div",
                  {
                    staticClass: "personal-wrapper",
                    staticStyle: { display: "none" }
                  },
                  [
                    _c("h1", { staticClass: "title" }, [
                      _vm._v("|| 学历详情 "),
                      _c("i", {
                        staticClass: "el-icon-circle-plus",
                        on: { click: _vm.addExperienceRow }
                      })
                    ]),
                    _vm._v(" "),
                    _c(
                      "el-table",
                      {
                        staticStyle: { width: "100%" },
                        attrs: { data: _vm.experienceData }
                      },
                      [
                        _c("el-table-column", {
                          attrs: {
                            align: "left",
                            width: "400px",
                            label: "开始结束时间"
                          },
                          scopedSlots: _vm._u(
                            [
                              {
                                key: "default",
                                fn: function(scope) {
                                  return [
                                    !scope.row.hasOwnProperty("newAdd")
                                      ? _c("span", [
                                          _vm._v(
                                            "\n                " +
                                              _vm._s(
                                                scope.row.beginTime != 1
                                                  ? _vm.$util._convertDate(
                                                      scope.row.beginTime,
                                                      "yyyy年MM月dd日"
                                                    )
                                                  : ""
                                              ) +
                                              " - " +
                                              _vm._s(
                                                scope.row.beginTime != 1
                                                  ? _vm.$util._convertDate(
                                                      scope.row.endTime,
                                                      "yyyy年MM月dd日"
                                                    )
                                                  : ""
                                              ) +
                                              "\n              "
                                          )
                                        ])
                                      : _c("el-date-picker", {
                                          class: {
                                            "border-red":
                                              scope.row.hasOwnProperty(
                                                "isBool"
                                              ) &&
                                              scope.row.isBool === 2 &&
                                              !scope.row.experienceBETime
                                          },
                                          attrs: {
                                            type: "daterange",
                                            "range-separator": "至",
                                            "start-placeholder": "开始日期",
                                            "end-placeholder": "结束日期"
                                          },
                                          model: {
                                            value: scope.row.experienceBETime,
                                            callback: function($$v) {
                                              _vm.$set(
                                                scope.row,
                                                "experienceBETime",
                                                $$v
                                              )
                                            },
                                            expression:
                                              "scope.row.experienceBETime"
                                          }
                                        })
                                  ]
                                }
                              }
                            ],
                            null,
                            false,
                            769082604
                          )
                        }),
                        _vm._v(" "),
                        _c("el-table-column", {
                          attrs: { align: "left", label: "学校名" },
                          scopedSlots: _vm._u(
                            [
                              {
                                key: "default",
                                fn: function(scope) {
                                  return [
                                    !scope.row.hasOwnProperty("newAdd")
                                      ? _c("span", [
                                          _vm._v(_vm._s(scope.row.address))
                                        ])
                                      : _c("el-input", {
                                          class: {
                                            "border-red":
                                              scope.row.hasOwnProperty(
                                                "isBool"
                                              ) &&
                                              scope.row.isBool === 2 &&
                                              !scope.row.address
                                          },
                                          model: {
                                            value: scope.row.address,
                                            callback: function($$v) {
                                              _vm.$set(
                                                scope.row,
                                                "address",
                                                $$v
                                              )
                                            },
                                            expression: "scope.row.address"
                                          }
                                        })
                                  ]
                                }
                              }
                            ],
                            null,
                            false,
                            202749856
                          )
                        }),
                        _vm._v(" "),
                        _c("el-table-column", {
                          attrs: { align: "left", label: "学历" },
                          scopedSlots: _vm._u(
                            [
                              {
                                key: "default",
                                fn: function(scope) {
                                  return [
                                    !scope.row.hasOwnProperty("newAdd")
                                      ? _c("span", [
                                          _vm._v(_vm._s(scope.row.position))
                                        ])
                                      : _c("el-input", {
                                          class: {
                                            "border-red":
                                              scope.row.hasOwnProperty(
                                                "isBool"
                                              ) &&
                                              scope.row.isBool === 2 &&
                                              !scope.row.position
                                          },
                                          model: {
                                            value: scope.row.position,
                                            callback: function($$v) {
                                              _vm.$set(
                                                scope.row,
                                                "position",
                                                $$v
                                              )
                                            },
                                            expression: "scope.row.position"
                                          }
                                        })
                                  ]
                                }
                              }
                            ],
                            null,
                            false,
                            2832260527
                          )
                        }),
                        _vm._v(" "),
                        _c("el-table-column", {
                          attrs: { width: "100px", label: "操作" },
                          scopedSlots: _vm._u(
                            [
                              {
                                key: "default",
                                fn: function(scope) {
                                  return [
                                    scope.row.hasOwnProperty("newAdd")
                                      ? _c("el-button", {
                                          attrs: {
                                            title: "保存",
                                            type: "success",
                                            icon: "el-icon-check",
                                            circle: ""
                                          },
                                          on: {
                                            click: function($event) {
                                              return _vm.saveExperience(
                                                "add",
                                                scope.row
                                              )
                                            }
                                          }
                                        })
                                      : _vm._e(),
                                    _vm._v(" "),
                                    _c("el-button", {
                                      attrs: {
                                        title: "删除",
                                        type: "danger",
                                        icon: "el-icon-delete",
                                        circle: ""
                                      },
                                      on: {
                                        click: function($event) {
                                          return _vm.delExperience(
                                            scope.row.id,
                                            scope.row,
                                            scope.$index
                                          )
                                        }
                                      }
                                    })
                                  ]
                                }
                              }
                            ],
                            null,
                            false,
                            1018235244
                          )
                        })
                      ],
                      1
                    )
                  ],
                  1
                ),
                _vm._v(" "),
                _c(
                  "div",
                  {
                    staticClass: "personal-wrapper",
                    staticStyle: { display: "none" }
                  },
                  [
                    _c("h1", { staticClass: "title" }, [
                      _vm._v("|| 个人荣誉 "),
                      _c("i", {
                        staticClass: "el-icon-circle-plus",
                        on: { click: _vm.addArchivesesRow }
                      })
                    ]),
                    _vm._v(" "),
                    _c(
                      "el-table",
                      {
                        staticStyle: { width: "100%" },
                        attrs: { data: _vm.archivesesData }
                      },
                      [
                        _c("el-table-column", {
                          attrs: {
                            align: "left",
                            width: "250px",
                            label: "得奖日期"
                          },
                          scopedSlots: _vm._u(
                            [
                              {
                                key: "default",
                                fn: function(scope) {
                                  return [
                                    !scope.row.hasOwnProperty("newAdd")
                                      ? _c("span", [
                                          _vm._v(
                                            "\n                " +
                                              _vm._s(
                                                scope.row.time != 1
                                                  ? _vm.$util._convertDate(
                                                      scope.row.time,
                                                      "yyyy年MM月dd日"
                                                    )
                                                  : ""
                                              ) +
                                              "\n              "
                                          )
                                        ])
                                      : _c("el-date-picker", {
                                          class: {
                                            "border-red":
                                              scope.row.hasOwnProperty(
                                                "isBool"
                                              ) &&
                                              scope.row.isBool === 2 &&
                                              !scope.row.time
                                          },
                                          attrs: { type: "date" },
                                          model: {
                                            value: scope.row.time,
                                            callback: function($$v) {
                                              _vm.$set(scope.row, "time", $$v)
                                            },
                                            expression: "scope.row.time"
                                          }
                                        })
                                  ]
                                }
                              }
                            ],
                            null,
                            false,
                            3397191511
                          )
                        }),
                        _vm._v(" "),
                        _c("el-table-column", {
                          attrs: { align: "left", label: "获奖地址" },
                          scopedSlots: _vm._u(
                            [
                              {
                                key: "default",
                                fn: function(scope) {
                                  return [
                                    !scope.row.hasOwnProperty("newAdd")
                                      ? _c("span", [
                                          _vm._v(_vm._s(scope.row.address))
                                        ])
                                      : _c("el-input", {
                                          class: {
                                            "border-red":
                                              scope.row.hasOwnProperty(
                                                "isBool"
                                              ) &&
                                              scope.row.isBool === 2 &&
                                              !scope.row.address
                                          },
                                          model: {
                                            value: scope.row.address,
                                            callback: function($$v) {
                                              _vm.$set(
                                                scope.row,
                                                "address",
                                                $$v
                                              )
                                            },
                                            expression: "scope.row.address"
                                          }
                                        })
                                  ]
                                }
                              }
                            ],
                            null,
                            false,
                            202749856
                          )
                        }),
                        _vm._v(" "),
                        _c("el-table-column", {
                          attrs: { align: "left", label: "奖项名字" },
                          scopedSlots: _vm._u(
                            [
                              {
                                key: "default",
                                fn: function(scope) {
                                  return [
                                    !scope.row.hasOwnProperty("newAdd")
                                      ? _c("span", [
                                          _vm._v(_vm._s(scope.row.name))
                                        ])
                                      : _c("el-input", {
                                          class: {
                                            "border-red":
                                              scope.row.hasOwnProperty(
                                                "isBool"
                                              ) &&
                                              scope.row.isBool === 2 &&
                                              !scope.row.name
                                          },
                                          model: {
                                            value: scope.row.name,
                                            callback: function($$v) {
                                              _vm.$set(scope.row, "name", $$v)
                                            },
                                            expression: "scope.row.name"
                                          }
                                        })
                                  ]
                                }
                              }
                            ],
                            null,
                            false,
                            2451335633
                          )
                        }),
                        _vm._v(" "),
                        _c("el-table-column", {
                          attrs: { width: "100px", label: "" },
                          scopedSlots: _vm._u(
                            [
                              {
                                key: "default",
                                fn: function(scope) {
                                  return [
                                    scope.row.hasOwnProperty("newAdd")
                                      ? _c("el-button", {
                                          attrs: {
                                            title: "保存",
                                            type: "success",
                                            icon: "el-icon-check",
                                            circle: ""
                                          },
                                          on: {
                                            click: function($event) {
                                              return _vm.saveArchiveses(
                                                "add",
                                                scope.row
                                              )
                                            }
                                          }
                                        })
                                      : _vm._e(),
                                    _vm._v(" "),
                                    _c("el-button", {
                                      attrs: {
                                        title: "删除",
                                        type: "danger",
                                        icon: "el-icon-delete",
                                        circle: ""
                                      },
                                      on: {
                                        click: function($event) {
                                          return _vm.delArchiveses(
                                            scope.row.id,
                                            scope.row,
                                            scope.$index
                                          )
                                        }
                                      }
                                    })
                                  ]
                                }
                              }
                            ],
                            null,
                            false,
                            1674326380
                          )
                        })
                      ],
                      1
                    )
                  ],
                  1
                )
              ])
            : _vm._e()
        ]
      ),
      _vm._v(" "),
      _c(
        "div",
        {
          directives: [
            {
              name: "show",
              rawName: "v-show",
              value: _vm.activeButton == null,
              expression: "activeButton == null"
            }
          ]
        },
        [
          _c(
            "el-form",
            {
              ref: "typeForm",
              attrs: { model: _vm.typeForm, "label-width": "80px" },
              nativeOn: {
                submit: function($event) {
                  $event.preventDefault()
                }
              }
            },
            [
              _c(
                "el-form-item",
                { attrs: { label: "类型名称" } },
                [
                  _c("el-input", {
                    attrs: { type: "text", size: "small" },
                    model: {
                      value: _vm.typeForm.typeName,
                      callback: function($$v) {
                        _vm.$set(_vm.typeForm, "typeName", $$v)
                      },
                      expression: "typeForm.typeName"
                    }
                  })
                ],
                1
              )
            ],
            1
          )
        ],
        1
      ),
      _vm._v(" "),
      _c("UEditor", {
        directives: [
          {
            name: "show",
            rawName: "v-show",
            value: _vm.activeButton != "intro",
            expression: "activeButton != 'intro'"
          }
        ],
        ref: "ueditor",
        attrs: { config: _vm.editorConfig }
      }),
      _vm._v(" "),
      _c(
        "div",
        { staticStyle: { margin: "12px 0" } },
        [
          _c(
            "el-button",
            {
              directives: [
                {
                  name: "show",
                  rawName: "v-show",
                  value: _vm.activeButton != "intro",
                  expression: "activeButton != 'intro'"
                }
              ],
              staticClass: "fill-width",
              attrs: {
                disabled: _vm.activeButton == null && !_vm.typeForm.typeName,
                type: "primary"
              },
              on: { click: _vm.saveType }
            },
            [_vm._v("保存")]
          )
        ],
        1
      ),
      _vm._v(" "),
      _c(
        "div",
        [
          _c(
            "el-button",
            {
              directives: [
                {
                  name: "show",
                  rawName: "v-show",
                  value:
                    _vm.activeButton != "intro" && _vm.activeButton != null,
                  expression: "activeButton != 'intro' && activeButton != null"
                }
              ],
              staticClass: "fill-width",
              attrs: { type: "danger" },
              on: { click: _vm.deleteType }
            },
            [_vm._v("删除")]
          )
        ],
        1
      )
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ __webpack_exports__["a"] = (esExports);
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-loader/node_modules/vue-hot-reload-api")      .rerender("data-v-10bb4bde", esExports)
  }
}

/***/ }),

/***/ 1655:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_Construction_vue__ = __webpack_require__(1463);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_Construction_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_Construction_vue__);
/* harmony namespace reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_Construction_vue__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_Construction_vue__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_13_7_3_vue_loader_lib_template_compiler_index_id_data_v_2fe6033c_hasScoped_true_buble_transforms_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_template_index_0_Construction_vue__ = __webpack_require__(1664);
var disposed = false
function injectStyle (ssrContext) {
  if (disposed) return
  __webpack_require__(1656)
  __webpack_require__(1658)
}
var normalizeComponent = __webpack_require__(42)
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = "data-v-2fe6033c"
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_Construction_vue___default.a,
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_13_7_3_vue_loader_lib_template_compiler_index_id_data_v_2fe6033c_hasScoped_true_buble_transforms_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_template_index_0_Construction_vue__["a" /* default */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "devPkg/components/organization/partyManageComponents/Construction.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-loader/node_modules/vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-2fe6033c", Component.options)
  } else {
    hotAPI.reload("data-v-2fe6033c", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),

/***/ 1656:
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(1657);
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__(76)("548c3eaa", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../node_modules/_css-loader@0.28.11@css-loader/index.js!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-2fe6033c\",\"scoped\":true,\"hasInlineConfig\":false}!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=styles&index=0!./Construction.vue", function() {
     var newContent = require("!!../../../../node_modules/_css-loader@0.28.11@css-loader/index.js!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-2fe6033c\",\"scoped\":true,\"hasInlineConfig\":false}!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=styles&index=0!./Construction.vue");
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ 1657:
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(43)(false);
// imports


// module
exports.push([module.i, "\n.fill-width[data-v-2fe6033c] {\n  width: 100%;\n}\n.button-group[data-v-2fe6033c] {\n  padding: 10px;\n  background: #fff;\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n}\n.custom-tree-node[data-v-2fe6033c] {\n  flex: 1;\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  font-size: 14px;\n}\n.custom-tree-node .tree-right-operate[data-v-2fe6033c] {\n  margin-left: 15px;\n}\n.position-wrap[data-v-2fe6033c] {\n  position:  relative;\n  max-height: 400px;\n  overflow-y: auto;\n  overflow-x: hidden;\n}\n.position-title[data-v-2fe6033c] {\n  position: absolute;\n  top: -30px;\n  margin: 0 0 0 50px;\n  text-align: center;\n  font-size: 14px;\n}\n/*上传头像*/\n.avatar-wrap[data-v-2fe6033c] {\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  border: 1px dashed #ccc;\n  border-radius: 5px;\n}\n.avatar-wrap[data-v-2fe6033c]:hover {\n  border: 1px dashed #409EFF;\n  color: #409EFF;\n}\n.avatar-img[data-v-2fe6033c] {\n  max-width: 100%;\n}\n", ""]);

// exports


/***/ }),

/***/ 1658:
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(1659);
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__(76)("763c399d", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../node_modules/_css-loader@0.28.11@css-loader/index.js!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-2fe6033c\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=styles&index=1!./Construction.vue", function() {
     var newContent = require("!!../../../../node_modules/_css-loader@0.28.11@css-loader/index.js!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-2fe6033c\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=styles&index=1!./Construction.vue");
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ 1659:
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(43)(false);
// imports


// module
exports.push([module.i, "\n#construction .left-margin-50 .el-form-item__content {\n  margin-left: 50px!important;\n}\n", ""]);

// exports


/***/ }),

/***/ 1660:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_treeInLevel_vue__ = __webpack_require__(1464);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_treeInLevel_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_treeInLevel_vue__);
/* harmony namespace reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_treeInLevel_vue__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_treeInLevel_vue__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_13_7_3_vue_loader_lib_template_compiler_index_id_data_v_cf2dcf68_hasScoped_true_buble_transforms_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_template_index_0_treeInLevel_vue__ = __webpack_require__(1663);
var disposed = false
function injectStyle (ssrContext) {
  if (disposed) return
  __webpack_require__(1661)
}
var normalizeComponent = __webpack_require__(42)
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = "data-v-cf2dcf68"
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_treeInLevel_vue___default.a,
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_13_7_3_vue_loader_lib_template_compiler_index_id_data_v_cf2dcf68_hasScoped_true_buble_transforms_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_template_index_0_treeInLevel_vue__["a" /* default */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "devPkg/components/common/treeInLevel.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-loader/node_modules/vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-cf2dcf68", Component.options)
  } else {
    hotAPI.reload("data-v-cf2dcf68", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),

/***/ 1661:
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(1662);
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__(76)("1cefb3c1", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../node_modules/_css-loader@0.28.11@css-loader/index.js!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-cf2dcf68\",\"scoped\":true,\"hasInlineConfig\":false}!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=styles&index=0!./treeInLevel.vue", function() {
     var newContent = require("!!../../../node_modules/_css-loader@0.28.11@css-loader/index.js!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-cf2dcf68\",\"scoped\":true,\"hasInlineConfig\":false}!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=styles&index=0!./treeInLevel.vue");
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ 1662:
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(43)(false);
// imports


// module
exports.push([module.i, "\n.tree-container[data-v-cf2dcf68] {\n}\n.tree-level-wrap[data-v-cf2dcf68] {\n  display: -webkit-box;\n  overflow-x: auto;\n  -webkit-overflow-scrolling:touch;\n}\n.tree-item-wrap[data-v-cf2dcf68] {\n  width: 200px;\n  height: 200px;\n  overflow-y: auto;\n  border:1px solid #dcdfe6;\n  border-radius: 5px;\n  margin-right: 30px;\n  margin-bottom: 20px;\n}\n.tree-item-wrap ul[data-v-cf2dcf68] {\n  list-style: none;\n  padding-left: 15px;\n}\n.tree-item-wrap ul li[data-v-cf2dcf68]{\n  height: 30px;\n}\n.tree-item-wrap span[data-v-cf2dcf68] {\n  width: 100px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n.tree-item-wrap span[data-v-cf2dcf68]:hover {\n  cursor: default;\n}\n.tree-item-wrap span.has-child-span[data-v-cf2dcf68]:hover{\n  cursor: pointer;\n}\n", ""]);

// exports


/***/ }),

/***/ 1663:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", { staticClass: "tree-container" }, [
    _c(
      "div",
      { staticClass: "tree-level-wrap" },
      _vm._l(_vm.treeList, function(item, index) {
        return _vm.treePropData && _vm.treePropData.length > 0
          ? _c("div", { key: index, staticClass: "tree-item-wrap" }, [
              _c(
                "ul",
                _vm._l(item, function(itemInner, indexInner) {
                  return _c(
                    "li",
                    { key: itemInner.id },
                    [
                      _c("el-checkbox", {
                        on: {
                          click: function($event) {
                            return _vm.getArray()
                          }
                        },
                        model: {
                          value: itemInner.select,
                          callback: function($$v) {
                            _vm.$set(itemInner, "select", $$v)
                          },
                          expression: "itemInner.select"
                        }
                      }),
                      _vm._v(" "),
                      _c(
                        "span",
                        {
                          class: {
                            "has-child-span":
                              itemInner.childrens &&
                              itemInner.childrens.length > 0
                          },
                          on: {
                            click: function($event) {
                              return _vm.clickItem(itemInner, index)
                            }
                          }
                        },
                        [_vm._v(_vm._s(itemInner.name))]
                      ),
                      _vm._v(" "),
                      itemInner.childrens && itemInner.childrens.length > 0
                        ? _c("i", { staticClass: "el-icon-caret-right" })
                        : _vm._e()
                    ],
                    1
                  )
                }),
                0
              )
            ])
          : _c("span", [_vm._v(" 当前没有公司组织 ")])
      }),
      0
    )
  ])
}
var staticRenderFns = []
render._withStripped = true
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ __webpack_exports__["a"] = (esExports);
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-loader/node_modules/vue-hot-reload-api")      .rerender("data-v-cf2dcf68", esExports)
  }
}

/***/ }),

/***/ 1664:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    { staticClass: "content-area", attrs: { id: "construction" } },
    [
      _vm.partyListData
        ? _c("el-tree", {
            directives: [
              {
                name: "loading",
                rawName: "v-loading",
                value: _vm.loading,
                expression: "loading"
              }
            ],
            ref: "partyTree",
            attrs: {
              data: _vm.partyListData,
              "node-key": "id",
              props: _vm.defaultProps,
              "expand-on-click-node": false
            },
            scopedSlots: _vm._u(
              [
                {
                  key: "default",
                  fn: function(ref) {
                    var node = ref.node
                    var data = ref.data
                    return _c(
                      "span",
                      {
                        staticClass: "custom-tree-node",
                        on: {
                          mouseover: function($event) {
                            return _vm.showControl(data)
                          },
                          mouseout: function($event) {
                            _vm.tempId = null
                          }
                        }
                      },
                      [
                        _c("span", [
                          _vm._v(" " + _vm._s(node.label) + " "),
                          data.type == "4"
                            ? _c("i", {
                                staticClass: "fa fa-star text-yellow",
                                attrs: { "aria-hidden": "true" }
                              })
                            : _vm._e()
                        ]),
                        _vm._v(" "),
                        _c(
                          "span",
                          {
                            directives: [
                              {
                                name: "show",
                                rawName: "v-show",
                                value: _vm.tempId == data.id,
                                expression: "tempId == data.id"
                              }
                            ],
                            staticClass: "tree-right-operate"
                          },
                          [
                            data.type == "1" || data.type == "2"
                              ? _c(
                                  "el-button",
                                  {
                                    attrs: { type: "text", size: "mini" },
                                    on: {
                                      click: function($event) {
                                        return _vm.showPartyDialog(
                                          "childLevel",
                                          "new",
                                          data
                                        )
                                      }
                                    }
                                  },
                                  [_vm._v("\n            添加下级\n          ")]
                                )
                              : _vm._e(),
                            _vm._v(" "),
                            _c(
                              "el-button",
                              {
                                attrs: { type: "text", size: "mini" },
                                on: {
                                  click: function($event) {
                                    return _vm.showPartyDialog(
                                      "sameLevel",
                                      "edit",
                                      data
                                    )
                                  }
                                }
                              },
                              [_vm._v("\n            编辑\n          ")]
                            ),
                            _vm._v(" "),
                            data.childrens && data.childrens.length <= 0
                              ? _c(
                                  "el-button",
                                  {
                                    attrs: { type: "text", size: "mini" },
                                    on: {
                                      click: function() {
                                        return _vm.deleteParty(node, data)
                                      }
                                    }
                                  },
                                  [_vm._v("\n            删除\n          ")]
                                )
                              : _vm._e()
                          ],
                          1
                        )
                      ]
                    )
                  }
                }
              ],
              null,
              false,
              573806841
            )
          })
        : _c(
            "el-button",
            {
              attrs: { type: "primary", size: "mini" },
              on: {
                click: function($event) {
                  return _vm.showPartyDialog("topLevel", "new", null)
                }
              }
            },
            [_vm._v("\n    开始构建\n  ")]
          ),
      _vm._v(" "),
      _c(
        "el-dialog",
        {
          attrs: {
            title: _vm.tempOperateType == "new" ? "新增" : "编辑",
            visible: _vm.partyDialogVisible,
            "close-on-click-modal": false,
            width: "80%",
            top: "5vh"
          },
          on: {
            "update:visible": function($event) {
              _vm.partyDialogVisible = $event
            },
            "before-close": function($event) {
              _vm.focusStatus = false
            },
            close: _vm.resetPartyForm
          }
        },
        [
          _c(
            "div",
            {
              directives: [
                {
                  name: "loading",
                  rawName: "v-loading",
                  value: _vm.loading,
                  expression: "loading"
                }
              ]
            },
            [
              _c(
                "el-form",
                {
                  ref: "partyForm",
                  attrs: {
                    model: _vm.partyForm,
                    rules: _vm.rules,
                    "label-width": "120px",
                    size: "small"
                  }
                },
                [
                  _c(
                    "el-row",
                    [
                      _c(
                        "el-col",
                        { attrs: { span: 12 } },
                        [
                          _c(
                            "el-form-item",
                            {
                              attrs: {
                                prop: "name",
                                label: "党组织名称",
                                rules: {
                                  required: true,
                                  message: "请输入党组织名称",
                                  trigger: "blur"
                                }
                              }
                            },
                            [
                              _c("el-input", {
                                model: {
                                  value: _vm.partyForm.name,
                                  callback: function($$v) {
                                    _vm.$set(_vm.partyForm, "name", $$v)
                                  },
                                  expression: "partyForm.name"
                                }
                              })
                            ],
                            1
                          ),
                          _vm._v(" "),
                          _c(
                            "el-form-item",
                            { attrs: { label: "党组织头像" } },
                            [
                              _c(
                                "el-upload",
                                {
                                  staticClass: "avatar-wrap",
                                  attrs: {
                                    action: _vm.imgServer,
                                    headers: _vm.token,
                                    "show-file-list": false,
                                    "on-success": _vm.uploadSuccess,
                                    name: "upfile"
                                  }
                                },
                                [
                                  _vm.partyForm.headImg
                                    ? _c("img", {
                                        staticClass: "avatar-img",
                                        attrs: { src: _vm.partyForm.headImg }
                                      })
                                    : _c("i", { staticClass: "el-icon-plus" }, [
                                        _vm._v("上传头像")
                                      ])
                                ]
                              )
                            ],
                            1
                          ),
                          _vm._v(" "),
                          _c(
                            "el-form-item",
                            {
                              attrs: {
                                prop: "description",
                                label: "党组织描述",
                                rules: {
                                  required: true,
                                  message: "请输入党组织描述",
                                  trigger: "blur"
                                }
                              }
                            },
                            [
                              _c("el-input", {
                                attrs: { type: "textarea", rows: 10 },
                                model: {
                                  value: _vm.partyForm.description,
                                  callback: function($$v) {
                                    _vm.$set(_vm.partyForm, "description", $$v)
                                  },
                                  expression: "partyForm.description"
                                }
                              })
                            ],
                            1
                          ),
                          _vm._v(" "),
                          _vm.orgTree && _vm.orgTree.length > 0
                            ? _c(
                                "el-form-item",
                                { attrs: { label: "所属公司组织" } },
                                [
                                  _c("el-cascader", {
                                    staticClass: "fill-width",
                                    attrs: {
                                      "change-on-select": "",
                                      options: _vm.orgTree,
                                      clearable: "",
                                      props: {
                                        children: "childrens",
                                        label: "name",
                                        value: "id",
                                        checkStrictly: true
                                      }
                                    },
                                    model: {
                                      value: _vm.partyForm.orgIds,
                                      callback: function($$v) {
                                        _vm.$set(_vm.partyForm, "orgIds", $$v)
                                      },
                                      expression: "partyForm.orgIds"
                                    }
                                  })
                                ],
                                1
                              )
                            : _vm._e(),
                          _vm._v(" "),
                          _c(
                            "el-form-item",
                            {
                              attrs: {
                                prop: "latitude",
                                label: "所在地",
                                rules: {
                                  required: true,
                                  message: "请输入正确的地址",
                                  trigger: "blur"
                                }
                              }
                            },
                            [
                              _c("el-input", {
                                attrs: { type: "text" },
                                on: {
                                  blur: _vm.checkAddress,
                                  focus: function($event) {
                                    _vm.focusStatus = true
                                  }
                                },
                                model: {
                                  value: _vm.partyForm.address,
                                  callback: function($$v) {
                                    _vm.$set(_vm.partyForm, "address", $$v)
                                  },
                                  expression: "partyForm.address"
                                }
                              })
                            ],
                            1
                          ),
                          _vm._v(" "),
                          _c(
                            "el-form-item",
                            {
                              attrs: {
                                prop: "type",
                                label: "类型",
                                rules: {
                                  required: true,
                                  message: "请选择组织类型",
                                  trigger: "change"
                                }
                              }
                            },
                            [
                              _c(
                                "el-select",
                                {
                                  staticClass: "fill-width",
                                  model: {
                                    value: _vm.partyForm.type,
                                    callback: function($$v) {
                                      _vm.$set(_vm.partyForm, "type", $$v)
                                    },
                                    expression: "partyForm.type"
                                  }
                                },
                                _vm._l(_vm.partyTypesList, function(item) {
                                  return _c("el-option", {
                                    key: "类型" + item.type,
                                    attrs: {
                                      value: item.type,
                                      label: item.name
                                    }
                                  })
                                }),
                                1
                              )
                            ],
                            1
                          ),
                          _vm._v(" "),
                          _c(
                            "el-form-item",
                            {
                              attrs: {
                                label: "成立时间",
                                prop: "createrOrgTime.date_time"
                              }
                            },
                            [
                              _c("el-date-picker", {
                                staticClass: "fill-width",
                                attrs: {
                                  type: _vm.$util.datePickerType(
                                    _vm.partyForm.createrOrgTime.type
                                  ),
                                  "value-format": "timestamp",
                                  placeholder: "请选择成立时间"
                                },
                                model: {
                                  value: _vm.partyForm.createrOrgTime.date_time,
                                  callback: function($$v) {
                                    _vm.$set(
                                      _vm.partyForm.createrOrgTime,
                                      "date_time",
                                      $$v
                                    )
                                  },
                                  expression:
                                    "partyForm.createrOrgTime.date_time"
                                }
                              }),
                              _vm._v(" "),
                              _c(
                                "el-select",
                                {
                                  staticClass: "date-picker-after",
                                  model: {
                                    value: _vm.partyForm.createrOrgTime.type,
                                    callback: function($$v) {
                                      _vm.$set(
                                        _vm.partyForm.createrOrgTime,
                                        "type",
                                        $$v
                                      )
                                    },
                                    expression: "partyForm.createrOrgTime.type"
                                  }
                                },
                                _vm._l(_vm.$util.timeType, function(
                                  item,
                                  index
                                ) {
                                  return _c("el-option", {
                                    key: "成立时间" + index,
                                    attrs: {
                                      label: item.label,
                                      value: item.value
                                    }
                                  })
                                }),
                                1
                              )
                            ],
                            1
                          ),
                          _vm._v(" "),
                          _c(
                            "el-form-item",
                            { attrs: { label: "任期开始时间" } },
                            [
                              _c("el-date-picker", {
                                staticClass: "fill-width",
                                attrs: {
                                  type: _vm.$util.datePickerType(
                                    _vm.partyForm.officeStart.type
                                  ),
                                  "value-format": "timestamp",
                                  placeholder: "请选择任期开始时间"
                                },
                                model: {
                                  value: _vm.partyForm.officeStart.date_time,
                                  callback: function($$v) {
                                    _vm.$set(
                                      _vm.partyForm.officeStart,
                                      "date_time",
                                      $$v
                                    )
                                  },
                                  expression: "partyForm.officeStart.date_time"
                                }
                              }),
                              _vm._v(" "),
                              _c(
                                "el-select",
                                {
                                  staticClass: "date-picker-after",
                                  model: {
                                    value: _vm.partyForm.officeStart.type,
                                    callback: function($$v) {
                                      _vm.$set(
                                        _vm.partyForm.officeStart,
                                        "type",
                                        $$v
                                      )
                                    },
                                    expression: "partyForm.officeStart.type"
                                  }
                                },
                                _vm._l(_vm.$util.timeType, function(
                                  item,
                                  index
                                ) {
                                  return _c("el-option", {
                                    key: "任期开始时间" + index,
                                    attrs: {
                                      label: item.label,
                                      value: item.value
                                    }
                                  })
                                }),
                                1
                              )
                            ],
                            1
                          ),
                          _vm._v(" "),
                          _c(
                            "el-form-item",
                            { attrs: { label: "任期结束时间" } },
                            [
                              _c("el-date-picker", {
                                staticClass: "fill-width",
                                attrs: {
                                  type: _vm.$util.datePickerType(
                                    _vm.partyForm.officeStop.type
                                  ),
                                  "value-format": "timestamp",
                                  placeholder: "请选择任期结束时间"
                                },
                                model: {
                                  value: _vm.partyForm.officeStop.date_time,
                                  callback: function($$v) {
                                    _vm.$set(
                                      _vm.partyForm.officeStop,
                                      "date_time",
                                      $$v
                                    )
                                  },
                                  expression: "partyForm.officeStop.date_time"
                                }
                              }),
                              _vm._v(" "),
                              _c(
                                "el-select",
                                {
                                  staticClass: "date-picker-after",
                                  model: {
                                    value: _vm.partyForm.officeStop.type,
                                    callback: function($$v) {
                                      _vm.$set(
                                        _vm.partyForm.officeStop,
                                        "type",
                                        $$v
                                      )
                                    },
                                    expression: "partyForm.officeStop.type"
                                  }
                                },
                                _vm._l(_vm.$util.timeType, function(
                                  item,
                                  index
                                ) {
                                  return _c("el-option", {
                                    key: "任期结束时间" + index,
                                    attrs: {
                                      label: item.label,
                                      value: item.value
                                    }
                                  })
                                }),
                                1
                              )
                            ],
                            1
                          )
                        ],
                        1
                      ),
                      _vm._v(" "),
                      _c("el-col", { attrs: { span: 12 } }, [
                        _c("h5", { staticClass: "position-title" }, [
                          _vm._v("组织职务"),
                          _c("small", [_vm._v("（不会保存重复添加的职务）")])
                        ]),
                        _vm._v(" "),
                        _c(
                          "div",
                          { staticClass: "position-wrap" },
                          [
                            _vm._l(_vm.partyForm.positions, function(
                              item,
                              index
                            ) {
                              return _vm.partyForm.positions
                                ? _c(
                                    "el-form-item",
                                    {
                                      key: "职务" + index,
                                      staticClass: "left-margin-50",
                                      attrs: {
                                        prop:
                                          "positions." +
                                          index +
                                          ".positionsName",
                                        rules: {
                                          required: true,
                                          message: "职位名称不能为空",
                                          trigger: "change"
                                        }
                                      }
                                    },
                                    [
                                      _c(
                                        "el-row",
                                        { attrs: { gutter: 15 } },
                                        [
                                          _c(
                                            "el-col",
                                            { attrs: { span: 18 } },
                                            [
                                              _c(
                                                "el-select",
                                                {
                                                  staticClass: "fill-width",
                                                  model: {
                                                    value: item.positionsName,
                                                    callback: function($$v) {
                                                      _vm.$set(
                                                        item,
                                                        "positionsName",
                                                        $$v
                                                      )
                                                    },
                                                    expression:
                                                      "item.positionsName"
                                                  }
                                                },
                                                _vm._l(
                                                  _vm.dictionaryPosition,
                                                  function(itemInner) {
                                                    return _c("el-option", {
                                                      key:
                                                        index + itemInner.key,
                                                      attrs: {
                                                        label: itemInner.value,
                                                        value: itemInner.key
                                                      }
                                                    })
                                                  }
                                                ),
                                                1
                                              )
                                            ],
                                            1
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "el-col",
                                            { attrs: { span: 4 } },
                                            [
                                              _c(
                                                "el-button",
                                                {
                                                  attrs: { type: "danger" },
                                                  on: {
                                                    click: function($event) {
                                                      $event.preventDefault()
                                                      return _vm.deletePosition(
                                                        item
                                                      )
                                                    }
                                                  }
                                                },
                                                [_vm._v("删除")]
                                              )
                                            ],
                                            1
                                          )
                                        ],
                                        1
                                      )
                                    ],
                                    1
                                  )
                                : _vm._e()
                            }),
                            _vm._v(" "),
                            _c(
                              "el-form-item",
                              { staticClass: "left-margin-50" },
                              [
                                _c(
                                  "el-button",
                                  { on: { click: _vm.addPosition } },
                                  [_vm._v("新增职位")]
                                )
                              ],
                              1
                            )
                          ],
                          2
                        )
                      ])
                    ],
                    1
                  )
                ],
                1
              )
            ],
            1
          ),
          _vm._v(" "),
          _c(
            "span",
            {
              staticClass: "dialog-footer",
              attrs: { slot: "footer" },
              slot: "footer"
            },
            [
              _c(
                "el-button",
                {
                  attrs: { disabled: _vm.loading },
                  on: {
                    click: function($event) {
                      _vm.partyDialogVisible = false
                    }
                  }
                },
                [_vm._v("取 消")]
              ),
              _vm._v(" "),
              _c(
                "el-button",
                {
                  attrs: { disabled: _vm.loading, type: "primary" },
                  on: {
                    click: function($event) {
                      return _vm.submitForm("partyForm")
                    }
                  }
                },
                [_vm._v("确 定")]
              )
            ],
            1
          )
        ]
      ),
      _vm._v(" "),
      _c("div", { attrs: { id: "allmap" } })
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ __webpack_exports__["a"] = (esExports);
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-loader/node_modules/vue-hot-reload-api")      .rerender("data-v-2fe6033c", esExports)
  }
}

/***/ }),

/***/ 1665:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_Roster_vue__ = __webpack_require__(1465);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_Roster_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_Roster_vue__);
/* harmony namespace reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_Roster_vue__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_Roster_vue__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_13_7_3_vue_loader_lib_template_compiler_index_id_data_v_1bfaae36_hasScoped_true_buble_transforms_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_template_index_0_Roster_vue__ = __webpack_require__(1668);
var disposed = false
function injectStyle (ssrContext) {
  if (disposed) return
  __webpack_require__(1666)
}
var normalizeComponent = __webpack_require__(42)
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = "data-v-1bfaae36"
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_Roster_vue___default.a,
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_13_7_3_vue_loader_lib_template_compiler_index_id_data_v_1bfaae36_hasScoped_true_buble_transforms_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_template_index_0_Roster_vue__["a" /* default */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "devPkg/components/organization/partyManageComponents/Roster.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-loader/node_modules/vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-1bfaae36", Component.options)
  } else {
    hotAPI.reload("data-v-1bfaae36", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),

/***/ 1666:
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(1667);
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__(76)("11c7ce24", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../node_modules/_css-loader@0.28.11@css-loader/index.js!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-1bfaae36\",\"scoped\":true,\"hasInlineConfig\":false}!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=styles&index=0!./Roster.vue", function() {
     var newContent = require("!!../../../../node_modules/_css-loader@0.28.11@css-loader/index.js!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-1bfaae36\",\"scoped\":true,\"hasInlineConfig\":false}!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=styles&index=0!./Roster.vue");
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ 1667:
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(43)(false);
// imports


// module
exports.push([module.i, "\n.input-range[data-v-1bfaae36] {\n  display: flex;\n  flex-direction: row;\n}\n.button-group[data-v-1bfaae36] {\n  display: flex;\n  margin-bottom: 20px;\n  flex-direction: row;\n  justify-content: flex-end;\n  align-items: center;\n}\n.el-footer[data-v-1bfaae36] {\n  display: flex;\n  align-items: center;\n}\n", ""]);

// exports


/***/ }),

/***/ 1668:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    { staticStyle: { width: "100%", padding: "10px" } },
    [
      _c(
        "div",
        { staticClass: "mart20" },
        [
          _c(
            "el-form",
            {
              staticClass: "demo-form-inline",
              attrs: { "label-width": "100px" }
            },
            [
              _c(
                "el-row",
                [
                  _c(
                    "el-col",
                    { attrs: { span: 8 } },
                    [
                      _c(
                        "el-form-item",
                        { attrs: { label: "姓名:" } },
                        [
                          _c("el-input", {
                            model: {
                              value: _vm.formScreen.name,
                              callback: function($$v) {
                                _vm.$set(_vm.formScreen, "name", $$v)
                              },
                              expression: "formScreen.name"
                            }
                          })
                        ],
                        1
                      )
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c(
                    "el-col",
                    { attrs: { span: 8 } },
                    [
                      _c(
                        "el-form-item",
                        { attrs: { label: "账号:" } },
                        [
                          _c("el-input", {
                            model: {
                              value: _vm.formScreen.account,
                              callback: function($$v) {
                                _vm.$set(_vm.formScreen, "account", $$v)
                              },
                              expression: "formScreen.account"
                            }
                          })
                        ],
                        1
                      )
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c(
                    "el-col",
                    { attrs: { span: 8 } },
                    [
                      _c(
                        "el-form-item",
                        { attrs: { label: "失联党员:" } },
                        [
                          _c(
                            "el-select",
                            {
                              staticClass: "fill-width",
                              attrs: { placeholder: "请选择" },
                              model: {
                                value: _vm.formScreen.lost,
                                callback: function($$v) {
                                  _vm.$set(_vm.formScreen, "lost", $$v)
                                },
                                expression: "formScreen.lost"
                              }
                            },
                            _vm._l(_vm.lostOptions, function(item) {
                              return _c("el-option", {
                                key: item.value,
                                attrs: { label: item.label, value: item.value }
                              })
                            }),
                            1
                          )
                        ],
                        1
                      )
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c(
                    "el-col",
                    { attrs: { span: 8 } },
                    [
                      _c(
                        "el-form-item",
                        { attrs: { label: "流动党员:" } },
                        [
                          _c(
                            "el-select",
                            {
                              staticClass: "fill-width",
                              attrs: { placeholder: "请选择" },
                              model: {
                                value: _vm.formScreen.mobile,
                                callback: function($$v) {
                                  _vm.$set(_vm.formScreen, "mobile", $$v)
                                },
                                expression: "formScreen.mobile"
                              }
                            },
                            _vm._l(_vm.mobileOptions, function(item) {
                              return _c("el-option", {
                                key: item.value,
                                attrs: { label: item.label, value: item.value }
                              })
                            }),
                            1
                          )
                        ],
                        1
                      )
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c(
                    "el-col",
                    { attrs: { span: 8 } },
                    [
                      _c("el-form-item", { attrs: { label: "党龄:" } }, [
                        _c("div", { staticClass: "el-form-item__content" }, [
                          _c("div", { staticClass: "input-range" }, [
                            _c("input", {
                              directives: [
                                {
                                  name: "model",
                                  rawName: "v-model",
                                  value: _vm.formScreen.minPartyAge,
                                  expression: "formScreen.minPartyAge"
                                }
                              ],
                              staticClass: "el-input__inner",
                              attrs: {
                                type: "number",
                                min: "0",
                                autocomplete: "off"
                              },
                              domProps: { value: _vm.formScreen.minPartyAge },
                              on: {
                                keyup: function($event) {
                                  return _vm.validateNumber($event)
                                },
                                input: function($event) {
                                  if ($event.target.composing) {
                                    return
                                  }
                                  _vm.$set(
                                    _vm.formScreen,
                                    "minPartyAge",
                                    $event.target.value
                                  )
                                }
                              }
                            }),
                            _vm._v(" ~\n                  "),
                            _c("input", {
                              directives: [
                                {
                                  name: "model",
                                  rawName: "v-model",
                                  value: _vm.formScreen.macPartyAge,
                                  expression: "formScreen.macPartyAge"
                                }
                              ],
                              staticClass: "el-input__inner",
                              attrs: {
                                type: "number",
                                min: "0",
                                autocomplete: "off"
                              },
                              domProps: { value: _vm.formScreen.macPartyAge },
                              on: {
                                keyup: function($event) {
                                  return _vm.validateNumber($event)
                                },
                                input: function($event) {
                                  if ($event.target.composing) {
                                    return
                                  }
                                  _vm.$set(
                                    _vm.formScreen,
                                    "macPartyAge",
                                    $event.target.value
                                  )
                                }
                              }
                            })
                          ])
                        ])
                      ])
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c(
                    "el-col",
                    { attrs: { span: 8 } },
                    [
                      _c("el-form-item", { attrs: { label: "年龄:" } }, [
                        _c("div", { staticClass: "el-form-item__content" }, [
                          _c("div", { staticClass: "input-range" }, [
                            _c("input", {
                              directives: [
                                {
                                  name: "model",
                                  rawName: "v-model",
                                  value: _vm.formScreen.minAge,
                                  expression: "formScreen.minAge"
                                }
                              ],
                              staticClass: "el-input__inner",
                              attrs: {
                                type: "number",
                                min: "0",
                                autocomplete: "off"
                              },
                              domProps: { value: _vm.formScreen.minAge },
                              on: {
                                keyup: function($event) {
                                  return _vm.validateNumber($event)
                                },
                                input: function($event) {
                                  if ($event.target.composing) {
                                    return
                                  }
                                  _vm.$set(
                                    _vm.formScreen,
                                    "minAge",
                                    $event.target.value
                                  )
                                }
                              }
                            }),
                            _vm._v(" ~\n                  "),
                            _c("input", {
                              directives: [
                                {
                                  name: "model",
                                  rawName: "v-model",
                                  value: _vm.formScreen.maxAge,
                                  expression: "formScreen.maxAge"
                                }
                              ],
                              staticClass: "el-input__inner",
                              attrs: {
                                type: "number",
                                min: "0",
                                autocomplete: "off"
                              },
                              domProps: { value: _vm.formScreen.maxAge },
                              on: {
                                keyup: function($event) {
                                  return _vm.validateNumber($event)
                                },
                                input: function($event) {
                                  if ($event.target.composing) {
                                    return
                                  }
                                  _vm.$set(
                                    _vm.formScreen,
                                    "maxAge",
                                    $event.target.value
                                  )
                                }
                              }
                            })
                          ])
                        ])
                      ])
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c(
                    "el-col",
                    { staticClass: "button-group", attrs: { span: 24 } },
                    [
                      _c(
                        "el-button",
                        {
                          attrs: {
                            disabled: _vm.companyUser.length == 0,
                            size: "small",
                            type: "default"
                          },
                          on: {
                            click: function($event) {
                              _vm.addOrUploadDialogVisibleFun("add")
                            }
                          }
                        },
                        [_vm._v("新增")]
                      ),
                      _vm._v(" "),
                      _c(
                        "el-button",
                        {
                          attrs: { type: "primary", size: "small" },
                          on: { click: _vm.onSubmitPartyorgMembers }
                        },
                        [_vm._v("查询")]
                      ),
                      _vm._v(" "),
                      _c(
                        "el-button",
                        {
                          attrs: { size: "small", type: "default" },
                          on: {
                            click: function($event) {
                              _vm.importPeopleDialogVisible = true
                            }
                          }
                        },
                        [_vm._v("导入")]
                      ),
                      _vm._v(" "),
                      _c(
                        "el-button",
                        {
                          attrs: { size: "small", type: "default" },
                          on: { click: _vm.resetForm }
                        },
                        [_vm._v("重置")]
                      )
                    ],
                    1
                  )
                ],
                1
              )
            ],
            1
          )
        ],
        1
      ),
      _vm._v(" "),
      _c(
        "el-table",
        {
          directives: [
            {
              name: "loading",
              rawName: "v-loading",
              value: _vm.isLoad,
              expression: "isLoad"
            }
          ],
          staticClass: "mart20",
          attrs: { stripe: "", border: "", data: _vm.tableData }
        },
        [
          _c("el-table-column", {
            attrs: { type: "index", label: "序号", width: "50" }
          }),
          _vm._v(" "),
          _c("el-table-column", {
            attrs: {
              prop: "account",
              label: "账号",
              sortable: "",
              width: "150",
              "show-overflow-tooltip": ""
            }
          }),
          _vm._v(" "),
          _c("el-table-column", { attrs: { prop: "name", label: "姓名" } }),
          _vm._v(" "),
          _c("el-table-column", {
            attrs: { prop: "sex", label: "性别" },
            scopedSlots: _vm._u([
              {
                key: "default",
                fn: function(scope) {
                  return [
                    _vm._v(
                      "\n          " +
                        _vm._s(_vm.$util.controlTable(scope.row.sex)) +
                        "\n        "
                    )
                  ]
                }
              }
            ])
          }),
          _vm._v(" "),
          _c("el-table-column", {
            attrs: { prop: "nation", label: "民族" },
            scopedSlots: _vm._u([
              {
                key: "default",
                fn: function(scope) {
                  return [
                    _vm._v(
                      "\n          " +
                        _vm._s(_vm.$util.controlTable(scope.row.nation)) +
                        "\n        "
                    )
                  ]
                }
              }
            ])
          }),
          _vm._v(" "),
          _c("el-table-column", {
            attrs: {
              prop: "nationPlace",
              label: "籍贯",
              "show-overflow-tooltip": ""
            },
            scopedSlots: _vm._u([
              {
                key: "default",
                fn: function(scope) {
                  return [
                    _vm._v(
                      "\n          " +
                        _vm._s(_vm.$util.controlTable(scope.row.nationPlace)) +
                        "\n        "
                    )
                  ]
                }
              }
            ])
          }),
          _vm._v(" "),
          _c("el-table-column", {
            attrs: {
              prop: "workBirthFormat",
              label: "出生年月",
              width: "130",
              "show-overflow-tooltip": ""
            },
            scopedSlots: _vm._u([
              {
                key: "default",
                fn: function(scope) {
                  return [
                    _vm._v(" " + _vm._s(_vm.$util.showDate(scope.row.borthday)))
                  ]
                }
              }
            ])
          }),
          _vm._v(" "),
          _c("el-table-column", {
            attrs: { prop: "education", label: "最高学位" },
            scopedSlots: _vm._u([
              {
                key: "default",
                fn: function(scope) {
                  return [
                    _vm._v(
                      "\n          " +
                        _vm._s(_vm.$util.controlTable(scope.row.education)) +
                        "\n        "
                    )
                  ]
                }
              }
            ])
          }),
          _vm._v(" "),
          _c("el-table-column", {
            attrs: {
              prop: "partyJob",
              label: "党内职务",
              "show-overflow-tooltip": ""
            },
            scopedSlots: _vm._u([
              {
                key: "default",
                fn: function(scope) {
                  return [
                    _vm._v(
                      " \n          " +
                        _vm._s(scope.row.partyJob || "无") +
                        "\n        "
                    )
                  ]
                }
              }
            ])
          }),
          _vm._v(" "),
          _c("el-table-column", {
            attrs: {
              prop: "administrationJob",
              label: "行政职务",
              "show-overflow-tooltip": ""
            },
            scopedSlots: _vm._u([
              {
                key: "default",
                fn: function(scope) {
                  return [
                    _vm._v(
                      "\n          " +
                        _vm._s(scope.row.administrationJob || "无") +
                        "\n        "
                    )
                  ]
                }
              }
            ])
          }),
          _vm._v(" "),
          _c("el-table-column", {
            attrs: { prop: "tPost", label: "技术职称", width: "120" },
            scopedSlots: _vm._u([
              {
                key: "default",
                fn: function(scope) {
                  return [
                    _vm._v(
                      "\n          " +
                        _vm._s(_vm.$util.controlTable(scope.row.tPost)) +
                        "\n        "
                    )
                  ]
                }
              }
            ])
          }),
          _vm._v(" "),
          _c("el-table-column", {
            attrs: {
              prop: "partyCommitteeName",
              label: "所属党委",
              width: "150",
              "show-overflow-tooltip": ""
            }
          }),
          _vm._v(" "),
          _c("el-table-column", {
            attrs: {
              prop: "partyBranchName",
              label: "所属支部",
              width: "150",
              "show-overflow-tooltip": ""
            }
          }),
          _vm._v(" "),
          _c("el-table-column", {
            attrs: {
              prop: "partyGroupName",
              label: "所属党小组",
              width: "150",
              "show-overflow-tooltip": ""
            }
          }),
          _vm._v(" "),
          _c("el-table-column", {
            attrs: {
              prop: "workBorth",
              label: "参加工作时间",
              width: "130",
              "show-overflow-tooltip": ""
            },
            scopedSlots: _vm._u([
              {
                key: "default",
                fn: function(scope) {
                  return [
                    _vm._v(
                      " " + _vm._s(_vm.$util.showDate(scope.row.workBorth))
                    )
                  ]
                }
              }
            ])
          }),
          _vm._v(" "),
          _c("el-table-column", {
            attrs: {
              prop: "partyBorth",
              label: "入党时间",
              width: "130",
              "show-overflow-tooltip": ""
            },
            scopedSlots: _vm._u([
              {
                key: "default",
                fn: function(scope) {
                  return [
                    _vm._v(
                      " " + _vm._s(_vm.$util.showDate(scope.row.partyBorth))
                    )
                  ]
                }
              }
            ])
          }),
          _vm._v(" "),
          _c("el-table-column", {
            attrs: { label: "操作", fixed: "right", width: "200" },
            scopedSlots: _vm._u([
              {
                key: "default",
                fn: function(scope) {
                  return [
                    _c(
                      "el-tooltip",
                      {
                        attrs: {
                          enterable: false,
                          content: "查看",
                          placement: "top-start"
                        }
                      },
                      [
                        _c(
                          "el-button",
                          {
                            attrs: { type: "primary", size: "mini" },
                            on: {
                              click: function($event) {
                                return _vm.showDetailDialog(scope.row)
                              }
                            }
                          },
                          [_c("i", { staticClass: "fa fa-eye" })]
                        )
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "el-tooltip",
                      {
                        attrs: {
                          enterable: false,
                          content: "编辑",
                          placement: "top-start"
                        }
                      },
                      [
                        _c(
                          "el-button",
                          {
                            attrs: { type: "default", size: "mini" },
                            on: {
                              click: function($event) {
                                return _vm.addOrUploadDialogVisibleFun(
                                  "update",
                                  scope.row
                                )
                              }
                            }
                          },
                          [_c("i", { staticClass: "fa el-icon-edit" })]
                        )
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "el-tooltip",
                      {
                        attrs: {
                          enterable: false,
                          content: "删除",
                          placement: "top-start"
                        }
                      },
                      [
                        _c(
                          "el-button",
                          {
                            attrs: { type: "danger", size: "mini" },
                            on: {
                              click: function($event) {
                                return _vm.delClick(scope.row)
                              }
                            }
                          },
                          [_c("i", { staticClass: "el-icon-delete" })]
                        )
                      ],
                      1
                    )
                  ]
                }
              }
            ])
          })
        ],
        1
      ),
      _vm._v(" "),
      _c(
        "el-footer",
        [
          _c("el-pagination", {
            attrs: {
              "current-page": _vm.currentPage,
              "page-sizes": [5, 10, 20],
              "page-size": _vm.currentPerPage,
              layout: "total, sizes, prev, pager, next, jumper",
              total: _vm.total
            },
            on: {
              "size-change": _vm.handleSizeChange,
              "current-change": _vm.handleCurrentChange
            }
          })
        ],
        1
      ),
      _vm._v(" "),
      _c(
        "el-dialog",
        {
          staticClass: "dialog",
          attrs: {
            title: "党员花名册",
            visible: _vm.addOrUploadDialogVisible,
            width: "700px"
          },
          on: {
            "update:visible": function($event) {
              _vm.addOrUploadDialogVisible = $event
            },
            close: _vm.rosterDialogClosed
          }
        },
        [
          _c(
            "div",
            [
              _c(
                "el-form",
                {
                  ref: "form",
                  staticClass: "demo-ruleForm add-task-left",
                  attrs: {
                    model: _vm.form,
                    rules: _vm.rules,
                    "label-width": "120px"
                  }
                },
                [
                  _c(
                    "el-form-item",
                    { attrs: { label: "职工:" } },
                    [
                      _vm.dialogType != "update"
                        ? _c(
                            "el-select",
                            {
                              staticClass: "fill-width",
                              attrs: { placeholder: "请选择" },
                              model: {
                                value: _vm.form.userId,
                                callback: function($$v) {
                                  _vm.$set(_vm.form, "userId", $$v)
                                },
                                expression: "form.userId"
                              }
                            },
                            _vm._l(_vm.companyUser, function(item) {
                              return _c("el-option", {
                                key: item.userId,
                                attrs: { label: item.name },
                                model: {
                                  value: item.userId,
                                  callback: function($$v) {
                                    _vm.$set(item, "userId", $$v)
                                  },
                                  expression: "item.userId"
                                }
                              })
                            }),
                            1
                          )
                        : _c("span", [_vm._v(_vm._s(_vm.form.name))])
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c(
                    "el-form-item",
                    {
                      directives: [
                        {
                          name: "show",
                          rawName: "v-show",
                          value: _vm.partyTree && _vm.partyTree.length > 0,
                          expression: "partyTree && partyTree.length > 0"
                        }
                      ],
                      attrs: { label: "所属组织:" }
                    },
                    [
                      _c("el-cascader", {
                        staticClass: "fill-width",
                        attrs: {
                          "change-on-select": "",
                          options: _vm.partyTree,
                          props: {
                            children: "childrens",
                            label: "name",
                            value: "id"
                          }
                        },
                        model: {
                          value: _vm.form.partyOrgIds,
                          callback: function($$v) {
                            _vm.$set(_vm.form, "partyOrgIds", $$v)
                          },
                          expression: "form.partyOrgIds"
                        }
                      })
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c(
                    "el-form-item",
                    {
                      attrs: {
                        label: "申请时间:",
                        prop: "applicationDate.date_time"
                      }
                    },
                    [
                      _c("el-date-picker", {
                        staticClass: "fill-width",
                        attrs: {
                          "value-format": "timestamp",
                          type: _vm.$util.datePickerType(
                            _vm.form.applicationDate.type
                          ),
                          placeholder: "选择日期"
                        },
                        model: {
                          value: _vm.form.applicationDate.date_time,
                          callback: function($$v) {
                            _vm.$set(_vm.form.applicationDate, "date_time", $$v)
                          },
                          expression: "form.applicationDate.date_time"
                        }
                      }),
                      _vm._v(" "),
                      _c(
                        "el-select",
                        {
                          staticClass: "date-picker-after",
                          model: {
                            value: _vm.form.applicationDate.type,
                            callback: function($$v) {
                              _vm.$set(_vm.form.applicationDate, "type", $$v)
                            },
                            expression: "form.applicationDate.type"
                          }
                        },
                        _vm._l(_vm.$util.timeType, function(item, index) {
                          return _c("el-option", {
                            key: "申请时间" + index,
                            attrs: { label: item.label, value: item.value }
                          })
                        }),
                        1
                      )
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c(
                    "el-form-item",
                    {
                      staticClass: "no-border",
                      attrs: { label: "介绍者:", prop: "introducer" }
                    },
                    [
                      _c("el-input", {
                        attrs: { placeholder: "请输入介绍者" },
                        model: {
                          value: _vm.form.introducer,
                          callback: function($$v) {
                            _vm.$set(_vm.form, "introducer", $$v)
                          },
                          expression: "form.introducer"
                        }
                      })
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c(
                    "el-form-item",
                    {
                      staticClass: "no-border",
                      attrs: {
                        label: "入党时间:",
                        prop: "joinPartyDate.date_time"
                      }
                    },
                    [
                      _c("el-date-picker", {
                        staticClass: "fill-width",
                        attrs: {
                          "value-format": "timestamp",
                          type: _vm.$util.datePickerType(
                            _vm.form.joinPartyDate.type
                          ),
                          placeholder: "选择入党时间"
                        },
                        model: {
                          value: _vm.form.joinPartyDate.date_time,
                          callback: function($$v) {
                            _vm.$set(_vm.form.joinPartyDate, "date_time", $$v)
                          },
                          expression: "form.joinPartyDate.date_time"
                        }
                      }),
                      _vm._v(" "),
                      _c(
                        "el-select",
                        {
                          staticClass: "date-picker-after",
                          model: {
                            value: _vm.form.joinPartyDate.type,
                            callback: function($$v) {
                              _vm.$set(_vm.form.joinPartyDate, "type", $$v)
                            },
                            expression: "form.joinPartyDate.type"
                          }
                        },
                        _vm._l(_vm.$util.timeType, function(item, index) {
                          return _c("el-option", {
                            key: "入党时间" + index,
                            attrs: { label: item.label, value: item.value }
                          })
                        }),
                        1
                      )
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c(
                    "el-form-item",
                    { staticClass: "no-border", attrs: { label: "是否失联:" } },
                    [
                      _c(
                        "el-radio-group",
                        {
                          model: {
                            value: _vm.form.lost,
                            callback: function($$v) {
                              _vm.$set(_vm.form, "lost", $$v)
                            },
                            expression: "form.lost"
                          }
                        },
                        [
                          _c("el-radio", { attrs: { label: true } }, [
                            _vm._v("是")
                          ]),
                          _vm._v(" "),
                          _c("el-radio", { attrs: { label: false } }, [
                            _vm._v("否")
                          ])
                        ],
                        1
                      )
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _vm.form.lost
                    ? _c(
                        "el-form-item",
                        {
                          staticClass: "no-border",
                          attrs: { label: "失联时间:", prop: "lostTime" }
                        },
                        [
                          _c("el-date-picker", {
                            staticClass: "fill-width",
                            attrs: {
                              "value-format": "timestamp",
                              type: "date",
                              placeholder: "选择失联时间"
                            },
                            model: {
                              value: _vm.form.lostTime,
                              callback: function($$v) {
                                _vm.$set(_vm.form, "lostTime", $$v)
                              },
                              expression: "form.lostTime"
                            }
                          })
                        ],
                        1
                      )
                    : _vm._e(),
                  _vm._v(" "),
                  _c(
                    "el-form-item",
                    {
                      staticClass: "no-border",
                      attrs: { label: "是否是流动党员:" }
                    },
                    [
                      _c(
                        "el-radio-group",
                        {
                          model: {
                            value: _vm.form.mobile,
                            callback: function($$v) {
                              _vm.$set(_vm.form, "mobile", $$v)
                            },
                            expression: "form.mobile"
                          }
                        },
                        [
                          _c("el-radio", { attrs: { label: true } }, [
                            _vm._v("是")
                          ]),
                          _vm._v(" "),
                          _c("el-radio", { attrs: { label: false } }, [
                            _vm._v("否")
                          ])
                        ],
                        1
                      )
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c(
                    "el-form-item",
                    {
                      staticClass: "no-border",
                      attrs: { label: "转正时间:", prop: "qualificationTime" }
                    },
                    [
                      _c("el-date-picker", {
                        staticClass: "fill-width",
                        attrs: {
                          "value-format": "timestamp",
                          type: _vm.$util.datePickerType(
                            _vm.form.qualificationTime.type
                          ),
                          placeholder: "选择转正时间"
                        },
                        model: {
                          value: _vm.form.qualificationTime.date_time,
                          callback: function($$v) {
                            _vm.$set(
                              _vm.form.qualificationTime,
                              "date_time",
                              $$v
                            )
                          },
                          expression: "form.qualificationTime.date_time"
                        }
                      }),
                      _vm._v(" "),
                      _c(
                        "el-select",
                        {
                          staticClass: "date-picker-after",
                          model: {
                            value: _vm.form.qualificationTime.type,
                            callback: function($$v) {
                              _vm.$set(_vm.form.qualificationTime, "type", $$v)
                            },
                            expression: "form.qualificationTime.type"
                          }
                        },
                        _vm._l(_vm.$util.timeType, function(item, index) {
                          return _c("el-option", {
                            key: "转正时间" + index,
                            attrs: { label: item.label, value: item.value }
                          })
                        }),
                        1
                      )
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c(
                    "el-form-item",
                    { staticClass: "no-border text-right marr20" },
                    [
                      _c(
                        "el-button",
                        {
                          attrs: { type: "primary" },
                          on: {
                            click: function($event) {
                              return _vm.saveClick("form")
                            }
                          }
                        },
                        [_vm._v("保存")]
                      )
                    ],
                    1
                  )
                ],
                1
              )
            ],
            1
          )
        ]
      ),
      _vm._v(" "),
      _c(
        "el-dialog",
        {
          staticClass: "dialog",
          attrs: {
            title: "导入人员",
            visible: _vm.importPeopleDialogVisible,
            width: "700px"
          },
          on: {
            "update:visible": function($event) {
              _vm.importPeopleDialogVisible = $event
            }
          }
        },
        [
          _c(
            "div",
            [
              _c("import-people", {
                attrs: { importType: "party" },
                on: {
                  uploadSuccess: function($event) {
                    _vm.importPeopleDialogVisible = false
                  }
                }
              })
            ],
            1
          )
        ]
      ),
      _vm._v(" "),
      _c(
        "el-dialog",
        {
          staticClass: "task-detail-dialog dialog",
          attrs: {
            title: "用户详情",
            visible: _vm.detailDialogVisible,
            width: "75%"
          },
          on: {
            "update:visible": function($event) {
              _vm.detailDialogVisible = $event
            }
          }
        },
        [
          _c("roster-detail", {
            attrs: { mathRandom: _vm.mathRandom, afferentUserId: _vm.userId }
          })
        ],
        1
      )
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ __webpack_exports__["a"] = (esExports);
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-loader/node_modules/vue-hot-reload-api")      .rerender("data-v-1bfaae36", esExports)
  }
}

/***/ }),

/***/ 1669:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_Leader_vue__ = __webpack_require__(1466);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_Leader_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_Leader_vue__);
/* harmony namespace reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_Leader_vue__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_Leader_vue__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_13_7_3_vue_loader_lib_template_compiler_index_id_data_v_09465498_hasScoped_true_buble_transforms_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_template_index_0_Leader_vue__ = __webpack_require__(1674);
var disposed = false
function injectStyle (ssrContext) {
  if (disposed) return
  __webpack_require__(1670)
  __webpack_require__(1672)
}
var normalizeComponent = __webpack_require__(42)
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = "data-v-09465498"
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_Leader_vue___default.a,
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_13_7_3_vue_loader_lib_template_compiler_index_id_data_v_09465498_hasScoped_true_buble_transforms_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_template_index_0_Leader_vue__["a" /* default */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "devPkg/components/organization/partyManageComponents/Leader.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-loader/node_modules/vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-09465498", Component.options)
  } else {
    hotAPI.reload("data-v-09465498", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),

/***/ 1670:
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(1671);
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__(76)("6288b06a", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../node_modules/_css-loader@0.28.11@css-loader/index.js!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-09465498\",\"scoped\":true,\"hasInlineConfig\":false}!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=styles&index=0!./Leader.vue", function() {
     var newContent = require("!!../../../../node_modules/_css-loader@0.28.11@css-loader/index.js!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-09465498\",\"scoped\":true,\"hasInlineConfig\":false}!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=styles&index=0!./Leader.vue");
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ 1671:
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(43)(false);
// imports


// module
exports.push([module.i, "\n.add-button[data-v-09465498] {\n  margin-bottom: 15px;\n}\n.warning-icon[data-v-09465498] {\n  margin-right: 10px;\n  color: #E6A23C;\n}\n.leader-wrap[data-v-09465498] {\n  height: calc( 100vh - 290px);\n  overflow-y: auto;\n}\n.party-name[data-v-09465498] {\n  position: absolute;\n  top: -45px;\n  left: 10px;\n  font-size: 16px;\n}\n.leader-list-row[data-v-09465498] {\n  width: 100%;\n}\n.el-card[data-v-09465498] {\n  margin-bottom: 20px;\n}\n.leader-picture[data-v-09465498] {\n  width: 100px;\n  height: 100px;\n}\n.leader-title[data-v-09465498] {\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  align-items: flex-end;\n}\n.leave-button[data-v-09465498] {\n  float: right;\n}\n.leader-name[data-v-09465498] {\n  font-size: 24px;\n  margin: 0 10px;\n}\n.leader-position[data-v-09465498] {\n  font-size: 16px;\n}\n.leader-description[data-v-09465498] {\n  margin-top: 20px;\n  max-height: 200px;\n  overflow-y: auto;\n}\n.search-name-wrap[data-v-09465498] {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  align-items: center;\n}\n.no-data-div[data-v-09465498] {\n  padding: 20px;\n  margin-top: 20px;\n  background: #fff;\n}\n", ""]);

// exports


/***/ }),

/***/ 1672:
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(1673);
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__(76)("5bce729e", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../node_modules/_css-loader@0.28.11@css-loader/index.js!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-09465498\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=styles&index=1!./Leader.vue", function() {
     var newContent = require("!!../../../../node_modules/_css-loader@0.28.11@css-loader/index.js!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-09465498\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=styles&index=1!./Leader.vue");
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ 1673:
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(43)(false);
// imports


// module
exports.push([module.i, "\n#leader .left-margin-50 .el-form-item__content {\n  margin-left: 50px!important;\n}\n#leader .el-tree-node__expand-icon.el-icon-caret-right{\n  font-size: 18px;\n  color: #000;\n}\n#leader .el-tree-node__expand-icon.el-icon-caret-right.is-leaf{\n  color: transparent;\n}\n", ""]);

// exports


/***/ }),

/***/ 1674:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    { attrs: { id: "leader" } },
    [
      _c(
        "div",
        [
          _c(
            "el-button",
            {
              staticClass: "fill-width add-button",
              attrs: { disabled: _vm.addResource, type: "primary" },
              on: { click: _vm.addLeaderClicked }
            },
            [_vm._v("添加 +")]
          )
        ],
        1
      ),
      _vm._v(" "),
      _c(
        "div",
        {
          directives: [
            {
              name: "loading",
              rawName: "v-loading",
              value: _vm.leaderLoading,
              expression: "leaderLoading"
            }
          ],
          staticClass: "leader-wrap"
        },
        _vm._l(_vm.leaderListData, function(item, index) {
          return _c(
            "el-card",
            { key: index + "leader" },
            [
              _c(
                "el-button",
                {
                  staticClass: "leave-button",
                  attrs: {
                    disabled: _vm.deleteResource,
                    type: "danger",
                    size: "mini"
                  },
                  on: {
                    click: function($event) {
                      return _vm.deleteLeader(item)
                    }
                  }
                },
                [_vm._v("调离")]
              ),
              _vm._v(" "),
              _c("p", { staticClass: "leader-title" }, [
                _c("img", {
                  staticClass: "leader-picture",
                  attrs: { src: item.picture, alt: "头像" }
                }),
                _vm._v(" "),
                _c("span", { staticClass: "leader-name" }, [
                  _vm._v(_vm._s(item.name))
                ]),
                _vm._v(" "),
                _c("span", { staticClass: "leader-position" }, [
                  _vm._v(_vm._s(_vm.controlTable(item.positionName)))
                ])
              ]),
              _vm._v(" "),
              _c("p", { staticClass: "leader-description" }, [
                _vm._v(_vm._s(item.description))
              ])
            ],
            1
          )
        }),
        1
      ),
      _vm._v(" "),
      _c(
        "el-dialog",
        {
          attrs: {
            title: "添加领导",
            "close-on-click-modal": false,
            visible: _vm.peopleDialogVisible,
            width: "40vw"
          },
          on: {
            "update:visible": function($event) {
              _vm.peopleDialogVisible = $event
            }
          }
        },
        [
          _c(
            "el-form",
            {
              ref: "leaderForm",
              attrs: { "label-width": "80px", size: "small" }
            },
            [
              _c(
                "el-form-item",
                { attrs: { label: "职位", required: "" } },
                [
                  _c(
                    "el-select",
                    {
                      staticClass: "fill-width",
                      attrs: {
                        type: "text",
                        "value-key": "id",
                        palceholder: "请选择职位"
                      },
                      model: {
                        value: _vm.position,
                        callback: function($$v) {
                          _vm.position = $$v
                        },
                        expression: "position"
                      }
                    },
                    _vm._l(_vm.positionsListData, function(option, index) {
                      return _c("el-option", {
                        key: "position" + index,
                        attrs: {
                          value: option,
                          label: _vm.controlTable(option.name)
                        }
                      })
                    }),
                    1
                  )
                ],
                1
              ),
              _vm._v(" "),
              _c("el-form-item", { attrs: { label: "姓名" } }, [
                _c(
                  "div",
                  { staticClass: "search-name-wrap" },
                  [
                    _c("el-input", {
                      attrs: { type: "text", palceholder: "请输入人员姓名" },
                      nativeOn: {
                        keyup: function($event) {
                          if (
                            !$event.type.indexOf("key") &&
                            _vm._k(
                              $event.keyCode,
                              "enter",
                              13,
                              $event.key,
                              "Enter"
                            )
                          ) {
                            return null
                          }
                          return _vm.getPeopleTableListData($event)
                        }
                      },
                      model: {
                        value: _vm.peopleName,
                        callback: function($$v) {
                          _vm.peopleName = $$v
                        },
                        expression: "peopleName"
                      }
                    }),
                    _vm._v(" "),
                    _c(
                      "el-button",
                      {
                        attrs: { type: "primary" },
                        on: { click: _vm.getPeopleTableListData }
                      },
                      [_vm._v("搜索")]
                    )
                  ],
                  1
                )
              ])
            ],
            1
          ),
          _vm._v(" "),
          _c("span", { staticClass: "tip-text" }, [
            _vm._v("搜索人员之后需要点击将其选中")
          ]),
          _vm._v(" "),
          _c(
            "el-table",
            {
              directives: [
                {
                  name: "loading",
                  rawName: "v-loading",
                  value: _vm.peopleLoading,
                  expression: "peopleLoading"
                }
              ],
              ref: "peopleTable",
              staticStyle: {
                width: "100%",
                "max-height": "386px",
                "overflow-y": "auto"
              },
              attrs: {
                stripe: "",
                data: _vm.peopleTableListData,
                "tooltip-effect": "dark"
              },
              on: { "cell-click": _vm.clickSingle }
            },
            [
              _c("el-table-column", {
                attrs: { prop: "name", label: "姓名", width: "120" }
              }),
              _vm._v(" "),
              _c("el-table-column", {
                attrs: {
                  prop: "partyOrgName",
                  label: "支部",
                  "show-overflow-tooltip": ""
                }
              }),
              _vm._v(" "),
              _c("el-table-column", {
                attrs: { width: "100" },
                scopedSlots: _vm._u(
                  [
                    {
                      key: "default",
                      fn: function(scope) {
                        return _vm.tablePeopleId == scope.row.infoId
                          ? [
                              _c("span", { staticClass: "text-blue" }, [
                                _vm._v("已选择 "),
                                _c("i", { staticClass: "el-icon-success" })
                              ])
                            ]
                          : undefined
                      }
                    }
                  ],
                  null,
                  true
                )
              })
            ],
            1
          ),
          _vm._v(" "),
          _c(
            "span",
            { attrs: { slot: "footer" }, slot: "footer" },
            [
              _c(
                "el-button",
                {
                  on: {
                    click: function($event) {
                      _vm.peopleDialogVisible = false
                    }
                  }
                },
                [_vm._v("取 消")]
              ),
              _vm._v(" "),
              _c(
                "el-button",
                {
                  attrs: {
                    type: "primary",
                    disabled: !_vm.tablePeopleId || !_vm.position
                  },
                  on: { click: _vm.submitPeople }
                },
                [_vm._v("确 定")]
              )
            ],
            1
          )
        ],
        1
      )
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ __webpack_exports__["a"] = (esExports);
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-loader/node_modules/vue-hot-reload-api")      .rerender("data-v-09465498", esExports)
  }
}

/***/ }),

/***/ 1675:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_Authority_vue__ = __webpack_require__(1467);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_Authority_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_Authority_vue__);
/* harmony namespace reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_Authority_vue__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_Authority_vue__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_13_7_3_vue_loader_lib_template_compiler_index_id_data_v_6a5468e8_hasScoped_true_buble_transforms_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_template_index_0_Authority_vue__ = __webpack_require__(1680);
var disposed = false
function injectStyle (ssrContext) {
  if (disposed) return
  __webpack_require__(1676)
  __webpack_require__(1678)
}
var normalizeComponent = __webpack_require__(42)
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = "data-v-6a5468e8"
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_Authority_vue___default.a,
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_13_7_3_vue_loader_lib_template_compiler_index_id_data_v_6a5468e8_hasScoped_true_buble_transforms_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_template_index_0_Authority_vue__["a" /* default */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "devPkg/components/organization/partyManageComponents/Authority.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-loader/node_modules/vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-6a5468e8", Component.options)
  } else {
    hotAPI.reload("data-v-6a5468e8", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),

/***/ 1676:
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(1677);
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__(76)("3748b5a0", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../node_modules/_css-loader@0.28.11@css-loader/index.js!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-6a5468e8\",\"scoped\":true,\"hasInlineConfig\":false}!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=styles&index=0!./Authority.vue", function() {
     var newContent = require("!!../../../../node_modules/_css-loader@0.28.11@css-loader/index.js!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-6a5468e8\",\"scoped\":true,\"hasInlineConfig\":false}!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=styles&index=0!./Authority.vue");
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ 1677:
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(43)(false);
// imports


// module
exports.push([module.i, "\n.top-btn-group[data-v-6a5468e8] {\n  min-width: 125px;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n}\n.btn-group[data-v-6a5468e8] {\n  margin: 0 10px;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n}\n.authority-wrap[data-v-6a5468e8] {\n  height: calc( 100vh - 290px);\n  overflow-y: auto;\n}\n.save-button[data-v-6a5468e8] {\n  margin-bottom: 15px;\n}\n.authority-title[data-v-6a5468e8] {\n  height: 50px;\n  background: #eee;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n}\n.top-people-list[data-v-6a5468e8] {\n  display: flex;\n  padding-left: 200px;\n  flex-direction: row;\n  justify-content: space-around;\n  border-bottom: 1px solid #eee;\n}\n.top-people-list .el-button[data-v-6a5468e8] {\n  margin-left: 0;\n}\n.list-item[data-v-6a5468e8] {\n  height: 40px;\n  min-width: 100px;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n}\n.authority-content .people-list[data-v-6a5468e8] {\n  display: flex;\n  padding-left: 200px;\n  flex-direction: row;\n  justify-content: space-around;\n  border-bottom: 1px solid #eee;\n}\n.authority-content .authority-list[data-v-6a5468e8] {\n  display: flex;\n  border-bottom: 1px solid #eee;\n}\n.authority-content .authority-list .authority-list-content[data-v-6a5468e8] {\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  align-items: center;\n}\n.authority-content .authority-list .resource-name[data-v-6a5468e8] {\n  margin: 0;\n  width: 200px;\n  line-height: 40px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n.authority-content .authority-list .checkbox-list[data-v-6a5468e8] {\n  display: inline-block;\n  width: calc( 100% - 200px );\n}\n.authority-content .authority-list .checkbox-list .checkbox-wrap[data-v-6a5468e8] {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  align-items: center;\n}\n.authority-list:nth-child(odd) .checkbox-wrap[data-v-6a5468e8],\n.authority-list:nth-child(odd) .resource-name[data-v-6a5468e8] {\n  background: #f7f7f7!important;\n}\n.el-checkbox[data-v-6a5468e8] {\n  margin: 0;\n}\n", ""]);

// exports


/***/ }),

/***/ 1678:
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(1679);
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__(76)("0cc5367e", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../node_modules/_css-loader@0.28.11@css-loader/index.js!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-6a5468e8\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../node_modules/_less-loader@4.1.0@less-loader/dist/cjs.js!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=styles&index=1!./Authority.vue", function() {
     var newContent = require("!!../../../../node_modules/_css-loader@0.28.11@css-loader/index.js!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-6a5468e8\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../node_modules/_less-loader@4.1.0@less-loader/dist/cjs.js!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=styles&index=1!./Authority.vue");
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ 1679:
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(43)(false);
// imports


// module
exports.push([module.i, "\n.authority-content .el-checkbox__input.is-indeterminate .el-checkbox__inner {\n  background-color: #fff;\n  border-color: #dcdfe6;\n}\n#authority {\n  /*定义滚动条高宽及背景 高宽分别对应横竖滚动条的尺寸*/\n  /*定义滚动条轨道 内阴影+圆角*/\n  /*定义滑块 内阴影+圆角*/\n}\n#authority ::-webkit-scrollbar {\n  width: 10px!important;\n  height: 8px;\n  background-color: rgba(255, 255, 255, 0.1);\n}\n#authority ::-webkit-scrollbar-track {\n  -webkit-box-shadow: inset 0 0 6px rgba(128, 128, 128, 0.8);\n  border-radius: 10px;\n  background-color: rgba(255, 255, 255, 0.1);\n}\n#authority ::-webkit-scrollbar-thumb {\n  border-radius: 10px;\n  -webkit-box-shadow: inset 0 0 6px rgba(128, 128, 128, 0.8);\n  background-color: #808080;\n}\n", ""]);

// exports


/***/ }),

/***/ 1680:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    {
      directives: [
        {
          name: "loading",
          rawName: "v-loading",
          value: _vm.authorityLoading,
          expression: "authorityLoading"
        }
      ],
      attrs: { id: "authority" }
    },
    [
      _c(
        "div",
        [
          _c(
            "el-button",
            {
              staticClass: "save-button fill-width",
              attrs: {
                disabled: _vm.authorityLoading || _vm.notResource,
                type: "primary",
                loading: _vm.authorityLoading
              },
              on: { click: _vm.save }
            },
            [_vm._v("保存")]
          )
        ],
        1
      ),
      _vm._v(" "),
      _vm.authorityData && _vm.authorityData.length > 0
        ? _c(
            "div",
            { staticClass: "top-people-list" },
            _vm._l(_vm.authorityData[0].info[0].list, function(
              people,
              childIndex
            ) {
              return _c(
                "span",
                { key: "人员" + people.userId, staticClass: "text-center" },
                [
                  _c("el-tooltip", { attrs: { placement: "top" } }, [
                    people.positionList && people.positionList.length > 0
                      ? _c(
                          "span",
                          { attrs: { slot: "content" }, slot: "content" },
                          _vm._l(people.positionList, function(item, index) {
                            return _c("span", { key: "" + index + item.id }, [
                              _vm._v(_vm._s(item.name) + " ")
                            ])
                          }),
                          0
                        )
                      : _c("span", [_vm._v("暂无职位信息")]),
                    _vm._v(" "),
                    _c("span", [_vm._v(_vm._s(people.name) + " ")])
                  ]),
                  _vm._v(" "),
                  _c(
                    "div",
                    { staticClass: "top-btn-group" },
                    [
                      !_vm.index
                        ? _c(
                            "el-button",
                            {
                              attrs: {
                                size: "small",
                                indeterminate: _vm.isIndeterminate
                              },
                              on: {
                                click: function($event) {
                                  return _vm.handleCheckAllChange(true, people)
                                }
                              },
                              model: {
                                value: people.checkAll,
                                callback: function($$v) {
                                  _vm.$set(people, "checkAll", $$v)
                                },
                                expression: "people.checkAll"
                              }
                            },
                            [_vm._v("全选")]
                          )
                        : _vm._e(),
                      _vm._v(" "),
                      !_vm.index
                        ? _c(
                            "el-button",
                            {
                              staticClass: "warning-text",
                              attrs: {
                                size: "small",
                                type: "default",
                                indeterminate: _vm.isIndeterminate
                              },
                              on: {
                                click: function($event) {
                                  return _vm.handleCheckAllChange(false, people)
                                }
                              },
                              model: {
                                value: people.checkAll,
                                callback: function($$v) {
                                  _vm.$set(people, "checkAll", $$v)
                                },
                                expression: "people.checkAll"
                              }
                            },
                            [_vm._v("清空")]
                          )
                        : _vm._e()
                    ],
                    1
                  )
                ],
                1
              )
            }),
            0
          )
        : _vm._e(),
      _vm._v(" "),
      _c(
        "div",
        { staticClass: "authority-wrap" },
        _vm._l(_vm.authorityData, function(item, index) {
          return _c("div", { key: "资源大类" + index }, [
            _c("div", { staticClass: "authority-title" }, [
              _vm._v(_vm._s(item.typeName))
            ]),
            _vm._v(" "),
            _c(
              "div",
              { staticClass: "authority-content" },
              [
                item.info
                  ? _c(
                      "div",
                      { staticClass: "people-list" },
                      _vm._l(item.info[0].list, function(itemInner, index) {
                        return _c(
                          "div",
                          {
                            key: "按钮组" + item.userId,
                            staticClass: "btn-group"
                          },
                          [
                            _c(
                              "el-button",
                              {
                                attrs: {
                                  size: "mini",
                                  indeterminate: _vm.isIndeterminate
                                },
                                on: {
                                  click: function($event) {
                                    return _vm.choosePart(true, itemInner, item)
                                  }
                                }
                              },
                              [_vm._v("全选")]
                            ),
                            _vm._v(" "),
                            _c(
                              "el-button",
                              {
                                staticClass: "warning-text",
                                attrs: {
                                  size: "mini",
                                  type: "default",
                                  indeterminate: _vm.isIndeterminate
                                },
                                on: {
                                  click: function($event) {
                                    return _vm.choosePart(
                                      false,
                                      itemInner,
                                      item
                                    )
                                  }
                                }
                              },
                              [_vm._v("清空")]
                            )
                          ],
                          1
                        )
                      }),
                      0
                    )
                  : _vm._e(),
                _vm._v(" "),
                _vm._l(item.info, function(infoItem, index) {
                  return _c(
                    "div",
                    { key: "资源小类" + index, staticClass: "authority-list" },
                    [
                      _c(
                        "el-tooltip",
                        {
                          attrs: {
                            effect: "light",
                            content: infoItem.resourceName,
                            placement: "left-start"
                          }
                        },
                        [
                          _c("span", { staticClass: "resource-name" }, [
                            _vm._v(
                              "\n              " +
                                _vm._s(infoItem.resourceName) +
                                "\n            "
                            )
                          ])
                        ]
                      ),
                      _vm._v(" "),
                      _c("span", { staticClass: "checkbox-list" }, [
                        _c(
                          "div",
                          { staticClass: "checkbox-wrap" },
                          _vm._l(infoItem.list, function(peopleItem, index) {
                            return _c("el-checkbox", {
                              key: "选择框" + index,
                              staticClass: "list-item",
                              model: {
                                value: peopleItem.choice,
                                callback: function($$v) {
                                  _vm.$set(peopleItem, "choice", $$v)
                                },
                                expression: "peopleItem.choice"
                              }
                            })
                          }),
                          1
                        )
                      ])
                    ],
                    1
                  )
                })
              ],
              2
            )
          ])
        }),
        0
      )
    ]
  )
}
var staticRenderFns = []
render._withStripped = true
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ __webpack_exports__["a"] = (esExports);
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-loader/node_modules/vue-hot-reload-api")      .rerender("data-v-6a5468e8", esExports)
  }
}

/***/ }),

/***/ 1681:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_Charts_vue__ = __webpack_require__(1468);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_Charts_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_Charts_vue__);
/* harmony namespace reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_Charts_vue__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_Charts_vue__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_13_7_3_vue_loader_lib_template_compiler_index_id_data_v_1fd32f00_hasScoped_false_buble_transforms_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_template_index_0_Charts_vue__ = __webpack_require__(1684);
var disposed = false
function injectStyle (ssrContext) {
  if (disposed) return
  __webpack_require__(1682)
}
var normalizeComponent = __webpack_require__(42)
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_Charts_vue___default.a,
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_13_7_3_vue_loader_lib_template_compiler_index_id_data_v_1fd32f00_hasScoped_false_buble_transforms_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_template_index_0_Charts_vue__["a" /* default */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "devPkg/components/organization/partyManageComponents/Charts.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-loader/node_modules/vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-1fd32f00", Component.options)
  } else {
    hotAPI.reload("data-v-1fd32f00", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),

/***/ 1682:
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(1683);
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__(76)("e453f534", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../node_modules/_css-loader@0.28.11@css-loader/index.js!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-1fd32f00\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=styles&index=0!./Charts.vue", function() {
     var newContent = require("!!../../../../node_modules/_css-loader@0.28.11@css-loader/index.js!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-1fd32f00\",\"scoped\":false,\"hasInlineConfig\":false}!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=styles&index=0!./Charts.vue");
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ 1683:
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(43)(false);
// imports


// module
exports.push([module.i, "\n.col-content {\n  box-sizing: border-box;\n  border: 1px solid #eee;\n}\n", ""]);

// exports


/***/ }),

/***/ 1684:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    { staticClass: "content-area" },
    [
      _c(
        "el-row",
        { attrs: { gutter: "20px" } },
        [
          _c("el-col", { staticClass: "col-content", attrs: { span: 12 } }, [
            _c("div", {
              style: { width: "100%", height: "500px" },
              attrs: { id: "partyAgeChart" }
            })
          ]),
          _vm._v(" "),
          _c("el-col", { staticClass: "col-content", attrs: { span: 12 } }, [
            _c("div", {
              style: { width: "100%", height: "500px" },
              attrs: { id: "ageChart" }
            })
          ]),
          _vm._v(" "),
          _c("el-col", { staticClass: "col-content", attrs: { span: 12 } }, [
            _c("div", {
              style: { width: "100%", height: "500px" },
              attrs: { id: "orgCharts" }
            })
          ]),
          _vm._v(" "),
          _c("el-col", { staticClass: "col-content", attrs: { span: 12 } }, [
            _c("div", {
              style: { width: "100%", height: "500px" },
              attrs: { id: "statusCharts" }
            })
          ]),
          _vm._v(" "),
          _c("el-col", { staticClass: "col-content", attrs: { span: 24 } }, [
            _c("div", {
              style: { width: "100%", height: "500px" },
              attrs: { id: "peopleCharts" }
            })
          ]),
          _vm._v(" "),
          _c("el-col", { staticClass: "col-content", attrs: { span: 12 } }, [
            _c("div", {
              style: { width: "100%", height: "500px" },
              attrs: { id: "missionCharts" }
            })
          ])
        ],
        1
      )
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ __webpack_exports__["a"] = (esExports);
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-loader/node_modules/vue-hot-reload-api")      .rerender("data-v-1fd32f00", esExports)
  }
}

/***/ }),

/***/ 1685:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_FromEdit_vue__ = __webpack_require__(1469);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_FromEdit_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_FromEdit_vue__);
/* harmony namespace reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_FromEdit_vue__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_FromEdit_vue__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_13_7_3_vue_loader_lib_template_compiler_index_id_data_v_0f126f3f_hasScoped_true_buble_transforms_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_template_index_0_FromEdit_vue__ = __webpack_require__(1694);
var disposed = false
function injectStyle (ssrContext) {
  if (disposed) return
  __webpack_require__(1686)
}
var normalizeComponent = __webpack_require__(42)
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = "data-v-0f126f3f"
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_FromEdit_vue___default.a,
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_13_7_3_vue_loader_lib_template_compiler_index_id_data_v_0f126f3f_hasScoped_true_buble_transforms_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_template_index_0_FromEdit_vue__["a" /* default */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "devPkg/components/organization/partyManageComponents/FromEdit.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-loader/node_modules/vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-0f126f3f", Component.options)
  } else {
    hotAPI.reload("data-v-0f126f3f", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),

/***/ 1686:
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(1687);
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__(76)("72f8d1cf", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../../../node_modules/_css-loader@0.28.11@css-loader/index.js!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-0f126f3f\",\"scoped\":true,\"hasInlineConfig\":false}!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=styles&index=0!./FromEdit.vue", function() {
     var newContent = require("!!../../../../node_modules/_css-loader@0.28.11@css-loader/index.js!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-0f126f3f\",\"scoped\":true,\"hasInlineConfig\":false}!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=styles&index=0!./FromEdit.vue");
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ 1687:
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(43)(false);
// imports


// module
exports.push([module.i, "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", ""]);

// exports


/***/ }),

/***/ 1688:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_NoKey_Compontent_vue__ = __webpack_require__(1470);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_NoKey_Compontent_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_NoKey_Compontent_vue__);
/* harmony namespace reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_NoKey_Compontent_vue__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_NoKey_Compontent_vue__[key]; }) }(__WEBPACK_IMPORT_KEY__));
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_13_7_3_vue_loader_lib_template_compiler_index_id_data_v_283b66b1_hasScoped_false_buble_transforms_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_template_index_0_NoKey_Compontent_vue__ = __webpack_require__(1693);
var disposed = false
var normalizeComponent = __webpack_require__(42)
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_NoKey_Compontent_vue___default.a,
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_13_7_3_vue_loader_lib_template_compiler_index_id_data_v_283b66b1_hasScoped_false_buble_transforms_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_template_index_0_NoKey_Compontent_vue__["a" /* default */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "devPkg/components/organization/partyManageComponents/NoKey_Compontent.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-loader/node_modules/vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-283b66b1", Component.options)
  } else {
    hotAPI.reload("data-v-283b66b1", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),

/***/ 1689:
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(1690);
if(typeof content === 'string') content = [[module.i, content, '']];
// Prepare cssTransformation
var transform;

var options = {"hmr":true}
options.transform = transform
// add the styles to the DOM
var update = __webpack_require__(143)(content, options);
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(false) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("!!../../node_modules/_css-loader@0.28.11@css-loader/index.js!../../node_modules/_less-loader@4.1.0@less-loader/dist/cjs.js!./custom_form.less", function() {
			var newContent = require("!!../../node_modules/_css-loader@0.28.11@css-loader/index.js!../../node_modules/_less-loader@4.1.0@less-loader/dist/cjs.js!./custom_form.less");
			if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ 1690:
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(43)(false);
// imports


// module
exports.push([module.i, ".show-display {\n  opacity: 1;\n  transition: all .5s;\n  visibility: visible;\n}\n.hide-display {\n  opacity: 0;\n  transition: all .5s;\n  visibility: hidden;\n}\n.border-red {\n  border-color: red!important;\n}\n.font-red {\n  color: red;\n}\n.mar20 {\n  margin: 20px;\n}\n#new_process {\n  font-size: 14px;\n  color: #333;\n}\n#new_process a {\n  cursor: pointer;\n}\n#new_process input,\n#new_process select {\n  border-color: #e9e9e9;\n}\n#new_process a:hover {\n  text-decoration: none;\n}\n#new_process form {\n  margin-left: 5px;\n}\n#new_process form > .form-group {\n  margin: 0 0 15px 0;\n}\n#new_process form > .form-group > .label-control {\n  text-align: justify;\n  text-align-last: justify;\n  line-height: 34px;\n  /*font-weight:700;*/\n  /*margin-top: 8px;*/\n  min-width: 115px;\n}\n#new_process form .form-col-xs-5 {\n  max-width: 680px;\n  min-width: 680px;\n}\n#new_process form .require-label:before {\n  position: absolute;\n  /*top: 5px;*/\n  content: \"*\";\n  font-size: 10px;\n  color: red;\n}\n#new_process form .form-control {\n  border-radius: 0;\n  height: 34px;\n  line-height: 34px;\n}\n#new_process form .add-process-type {\n  color: #427dd1;\n  margin-left: 10px;\n  margin-top: 8px;\n  display: block;\n}\n#new_process form .numbered-example {\n  font-size: 12px;\n  color: #8a8a8a;\n  margin-left: 5px;\n  line-height: 34px;\n}\n#new_process form .numbered-example i {\n  font-style: normal;\n}\n#new_process form .numbered-example input {\n  display: inline;\n  width: 100px;\n}\n/* 表单设置 */\n.form-setting {\n  width: 660px;\n  position: relative;\n}\n.form-setting .setting-header {\n  width: 100%;\n  background: #f7f7f7;\n  padding: 20px 35px;\n  border: 1px solid #e9e9e9;\n}\n.form-setting .setting-header .single-sub {\n  position: relative;\n  display: inline-flex;\n}\n.form-setting .setting-header .single-sub .single-sub-fix {\n  display: inline-block;\n  width: 110px;\n  padding: 0 8px;\n  height: 34px;\n  background: #fff;\n  font-size: 12px;\n  color: #808080;\n  line-height: 34px;\n  margin-right: 11px;\n  margin-bottom: 11px;\n  cursor: pointer;\n}\n.form-setting .setting-header .single-sub .single-sub-fix .title {\n  float: left;\n}\n.form-setting .setting-header .single-sub .single-sub-fix .icon-apply {\n  float: right;\n  margin: 0;\n  color: #808080;\n}\n.form-setting .setting-header .single-sub .single-sub-disabled {\n  background: #e2e2e2;\n  cursor: not-allowed;\n}\n.form-setting .setting-header .single-sub .hover-check-form {\n  position: absolute;\n  top: calc(92%);\n  left: 50px;\n  padding: 15px;\n  border: 1px solid #e9e9e9;\n  background: #fff;\n  z-index: 100;\n  width: 300px;\n  font-size: 12px;\n  color: #808080;\n}\n.form-setting .setting-header .single-sub .hover-check-form .form-group {\n  margin: 5px 0;\n}\n.form-setting .setting-header .single-sub .hover-check-form .form-group > .label-control {\n  font-weight: 100;\n  margin-bottom: 0;\n}\n.form-setting .setting-header .single-sub .hover-check-form .form-group > textarea {\n  resize: none;\n  min-height: 45px!important;\n}\n.form-setting .setting-header .single-sub .hover-check-form .hover-option-wrapper {\n  color: #808080;\n}\n.form-setting .setting-header .single-sub .hover-check-form::before {\n  position: absolute;\n  content: \"\";\n  height: 0;\n  width: 0;\n  border: 7px solid #e9e9e9;\n  border-color: transparent transparent #e9e9e9 transparent;\n  top: -15px;\n  left: 20px;\n}\n.form-setting .setting-header .single-sub .hover-check-form::after {\n  position: absolute;\n  content: \"\";\n  height: 0;\n  width: 0;\n  border: 7px solid #fff;\n  border-color: transparent transparent #fff transparent;\n  top: -14px;\n  left: 20px;\n}\n.form-setting .setting-header .single-sub-leave {\n  display: block;\n  border-top: 1px dashed #e9e9e9;\n  padding-top: 10px;\n}\n.form-setting .setting-header .single-sub-leave .label-control {\n  width: 64px;\n  text-align-last: justify;\n}\n.form-setting .setting-body {\n  font-size: 12px;\n  min-height: 230px;\n  width: 100%;\n  border: 1px solid #e9e9e9;\n  border-top: none;\n  padding: 20px 35px;\n}\n.form-setting .setting-body .setting-fix {\n  margin-top: 20px;\n}\n.form-setting .setting-body .setting-fix .setting-fix-sub {\n  position: relative;\n}\n.form-setting .setting-body .setting-fix .setting-fix-sub .se-icon-alertoff-black {\n  display: none;\n  position: absolute;\n  right: -6px;\n  top: -7px;\n  font-style: inherit;\n  background: red;\n  border-radius: 18px;\n  height: 15px;\n  width: 15px;\n  color: #fff;\n  font-weight: 500;\n  text-align: center;\n  line-height: 13px;\n  font-size: 12px;\n  z-index: 1;\n  cursor: pointer;\n}\n.form-setting .setting-body .setting-fix .setting-fix-sub .se-tags {\n  position: relative;\n  border: 1px dashed #ccc;\n  padding: 10px 15px;\n  background: #fafafa;\n  cursor: pointer;\n}\n.form-setting .setting-body .setting-fix .setting-fix-sub .se-tags .se-form-no-colon {\n  padding: 5px 0;\n}\n.form-setting .setting-body .setting-fix .setting-fix-sub .se-tags .se-form-no-colon .se-form-item-label {\n  width: 120px;\n  color: #808080;\n  font-size: 12px;\n  display: inline-block;\n  text-align: right;\n  line-height: 34px;\n  vertical-align: top;\n}\n.form-setting .setting-body .setting-fix .setting-fix-sub .se-tags .se-form-no-colon .se-form-item-label .label-control {\n  font-weight: 100;\n  margin-bottom: 0;\n}\n.form-setting .setting-body .setting-fix .setting-fix-sub .se-tags .se-form-no-colon .se-form-item-label .se-form-item-required:before {\n  position: relative;\n  top: -1px;\n  display: inline-block;\n  margin-right: 4px;\n  content: \"*\";\n  font-family: SimSun;\n  font-size: 12px;\n  color: #f50;\n  line-height: 10px;\n}\n.form-setting .setting-body .setting-fix .setting-fix-sub .se-tags .se-form-no-colon .se-form-item-wrapper {\n  display: inline-block;\n  width: calc(100% - 135px);\n}\n.form-setting .setting-body .setting-fix .setting-fix-sub .se-tags .se-form-no-colon .se-form-item-wrapper .se-form-item-control .input-text {\n  width: 100%;\n}\n.form-setting .setting-body .setting-fix .setting-fix-sub:hover .se-tags {\n  border-color: #427dd1;\n}\n.form-setting .setting-body .setting-fix .setting-fix-sub:hover .se-icon-alertoff-black {\n  display: block;\n}\n.form-setting .setting-body .se-fix-active .setting-fix-sub .se-tags {\n  background: #ffffe5;\n  border-color: #427dd1;\n}\n.form-setting .setting-body .se-fix-active .setting-fix-sub .se-icon-alertoff-black {\n  display: block;\n}\n.form-setting .setting-body .se-form-explain {\n  color: #999;\n  margin-top: 3px;\n  line-height: 1.5;\n}\n.form-setting .setting-body .se-form-footer {\n  margin-top: 30px;\n  display: flex;\n}\n.form-setting .setting-body .se-form-footer .se-form-footer-btn {\n  margin-right: 15px;\n  position: relative;\n}\n.form-setting .setting-body .se-form-footer .se-form-footer-btn > i {\n  position: absolute;\n  right: -6px;\n  top: -7px;\n  font-style: inherit;\n  background: red;\n  border-radius: 18px;\n  height: 15px;\n  width: 15px;\n  color: #fff;\n  font-weight: 500;\n  text-align: center;\n  line-height: 13px;\n  font-size: 12px;\n  z-index: 1;\n  cursor: pointer;\n}\n/**********************弹框*******************/\n.ToolTipPortal {\n  /*position: absolute;*/\n  /*right: -15px;*/\n  /*top: 0;*/\n}\n.ToolTipPortal label {\n  font-size: 12px;\n  font-weight: 100;\n}\n.ToolTipPortal .ToolTipPortal-fix {\n  position: absolute;\n  padding: 5px;\n  background: #ffffff;\n  box-shadow: rgba(100, 100, 100, 0.2) 0px 1px 6px;\n  border-radius: 3px;\n  transition: all 0.03s ease-in-out, visibility 0.03s ease-in-out;\n  opacity: 1;\n  visibility: visible;\n  z-index: 96;\n  top: 0;\n  left: 0;\n  border: 1px solid #cccccc;\n  width: 555px;\n  overflow-x: auto;\n  max-height: 560px;\n}\n.ToolTipPortal .ToolTipPortal-fix > h2 {\n  padding: 15px 0px 0px 16px;\n  font-size: 14px;\n  color: #333333;\n  margin: 0;\n}\n.ToolTipPortal .ToolTipPortal-fix .se-row {\n  display: table;\n  width: 100%;\n}\n.ToolTipPortal .ToolTipPortal-fix .se-form-item {\n  margin: 10px 0;\n}\n.ToolTipPortal .ToolTipPortal-fix .se-form-item .se-form-item-label {\n  float: left;\n  width: 100px;\n  display: inline-block;\n  padding: 0;\n}\n.ToolTipPortal .ToolTipPortal-fix .se-form-item .se-form-item-label label {\n  display: block;\n  line-height: 20px;\n  padding: 6px 0;\n  color: #666;\n  font-weight: 100;\n  font-size: 12px;\n  text-align: right;\n}\n.ToolTipPortal .ToolTipPortal-fix .se-form-item .se-form-item-label .se-form-item-required:before {\n  position: relative;\n  top: -1px;\n  display: inline-block;\n  margin-right: 4px;\n  content: \"*\";\n  font-family: SimSun;\n  font-size: 12px;\n  color: #f50;\n  line-height: 10px;\n}\n.ToolTipPortal .ToolTipPortal-fix .se-form-item .se-form-item-label label:after {\n  content: \":\";\n  margin: 0 8px 0 2px;\n  position: relative;\n  top: -0.5px;\n}\n.ToolTipPortal .ToolTipPortal-fix .se-form-item .se-form-item-wrapper {\n  text-align: left;\n  padding: 0 10px 0 100px;\n}\n.ToolTipPortal .ToolTipPortal-fix .se-form-item .se-form-item-wrapper .se-form-item-control {\n  line-height: 32px;\n}\n.ToolTipPortal .ToolTipPortal-fix .se-form-item .se-form-item-wrapper .se-form-item-control .se-textarea-wrapper {\n  display: block;\n  line-height: 14px;\n}\n.ToolTipPortal .ToolTipPortal-fix .se-form-item .se-form-item-wrapper .se-form-item-control .se-textarea-wrapper textarea {\n  height: 120px;\n  line-height: 24px;\n  padding: 5px 10px;\n}\n.ToolTipPortal .ToolTipPortal-horizontal::before {\n  position: absolute;\n  content: \"\";\n  height: 0;\n  width: 0;\n  border: 10px solid #e9e9e9;\n  border-color: transparent #e9e9e9 transparent transparent;\n  top: 16px;\n  left: -21px;\n  z-index: 100;\n}\n.ToolTipPortal .ToolTipPortal-horizontal::after {\n  position: absolute;\n  content: \"\";\n  height: 0;\n  width: 0;\n  border: 10px solid #fff;\n  border-color: transparent #fff transparent transparent;\n  top: 16px;\n  left: -18px;\n  z-index: 100;\n}\n.ToolTipPortal .ToolTipPortal-longitudinal::before {\n  display: none;\n  position: absolute;\n  content: \"\";\n  height: 0;\n  width: 0;\n  border: 10px solid #e9e9e9;\n  border-color: transparent #e9e9e9 transparent transparent;\n  top: 16px;\n  left: -21px;\n  z-index: 100;\n}\n.ToolTipPortal .ToolTipPortal-longitudinal::after {\n  display: none;\n  position: absolute;\n  content: \"\";\n  height: 0;\n  width: 0;\n  border: 10px solid #fff;\n  border-color: transparent #fff transparent transparent;\n  top: 16px;\n  left: -18px;\n  z-index: 100;\n}\n/**************日期***************/\n.se-input-date-wrapper {\n  position: relative;\n  margin-right: 4px;\n  display: inline-block;\n}\n.se-input-date-wrapper .se-input-date {\n  width: 100%;\n  font-size: 12px;\n  color: #e5e5e5;\n  display: block;\n}\n.se-input-date-wrapper .se-input-date-inner {\n  position: absolute;\n  right: 5px;\n  top: 0;\n  line-height: 34px;\n  font-size: 14px;\n  color: #808080;\n}\n/**************附件***************/\n.se-input-fils-wrapper {\n  position: relative;\n  margin-right: 4px;\n  display: inline-block;\n}\n.se-input-fils-wrapper .se-input-fils {\n  width: 100%;\n  font-size: 12px;\n  color: #e5e5e5;\n}\n.se-input-fils-wrapper .se-input-fils-inner {\n  position: absolute;\n  right: 5px;\n  top: 0;\n  line-height: 34px;\n  font-size: 14px;\n  color: #808080;\n}\n/*弹框*/\n.se-popover {\n  position: absolute;\n  transition: all .2s;\n  opacity: 0;\n  width: max-content;\n  max-width: 100%;\n  min-width: 177px;\n  z-index: 99;\n}\n.se-popover .se-popover-content {\n  color: #666;\n}\n.se-popover .se-popover-content .se-popover-arrow {\n  position: relative;\n}\n.se-popover .se-popover-content .se-popover-arrow::before {\n  position: absolute;\n  content: \"\";\n  height: 0;\n  width: 0;\n  border: 5px solid #e9e9e9;\n  border-color: transparent transparent transparent #e9e9e9;\n  top: 16px;\n  right: -10px;\n  z-index: 100;\n}\n.se-popover .se-popover-content .se-popover-arrow::after {\n  position: absolute;\n  content: \"\";\n  height: 0;\n  width: 0;\n  border: 5px solid #fff;\n  border-color: transparent transparent transparent #fff;\n  top: 16px;\n  right: -8px;\n  z-index: 100;\n}\n.se-popover .se-popover-content .se-popover-inner {\n  background-color: #fff;\n  background-clip: padding-box;\n  width: 100%;\n  border: 1px solid #ccc;\n  border-radius: 0;\n  box-shadow: 0 1px 6px rgba(99, 99, 99, 0.2);\n}\n.se-popover .se-popover-content .se-popover-inner .se-popover-inner-content {\n  padding: 8px 16px;\n  color: #666;\n}\n.se-popover .se-popover-content .se-popover-inner .se-popover-inner-content .se-popover-message {\n  padding: 8px 0 16px;\n  font-size: 12px;\n  color: #666;\n}\n.se-popover .se-popover-content .se-popover-inner .se-popover-inner-content .se-popover-message .jgicon-exclamation-circle {\n  position: relative;\n}\n.se-popover .se-popover-content .se-popover-inner .se-popover-inner-content .se-popover-message .jgicon-exclamation-circle:before {\n  content: \"!\";\n  background: #ff7e43;\n  line-height: 17px;\n  position: absolute;\n  width: 17px;\n  height: 17px;\n  display: block;\n  font-style: initial;\n  color: #fff;\n  text-align: center;\n  font-weight: 700;\n  border-radius: 50%;\n}\n.se-popover .se-popover-content .se-popover-inner .se-popover-inner-content .se-popover-message .se-popover-message-title {\n  margin-left: 25px;\n}\n.se-popover .se-popover-content .se-popover-inner .se-popover-inner-content .se-popover-buttons {\n  text-align: right;\n  margin-bottom: 8px;\n}\n.se-popover .se-popover-content .se-popover-inner .se-popover-inner-content .se-popover-buttons .se-btn {\n  font-size: 12px;\n}\n.se-popover .se-popover-content .se-popover-inner .se-popover-inner-content .se-popover-buttons .se-btn-ghost {\n  background-color: #fff;\n}\n#process-preview-modal .modal-body {\n  max-height: calc(50vh);\n  overflow: auto;\n}\n/*表格*/\n.se-table-wrapper {\n  position: relative;\n  display: table;\n  width: 100%;\n}\n.se-table-wrapper .col-xs-12 {\n  width: 100%;\n}\n.se-table-wrapper .col-xs-1 {\n  width: 8.3333%;\n  float: left;\n  padding: 5px;\n  box-sizing: border-box;\n}\n.se-table-wrapper .col-xs-2 {\n  width: 16.66666%;\n  float: left;\n  padding: 5px;\n  box-sizing: border-box;\n}\n.se-table-wrapper .col-xs-3 {\n  width: 20%;\n  float: left;\n  padding: 5px;\n  box-sizing: border-box;\n}\n.se-table-wrapper .col-xs-4 {\n  width: 25.2%;\n  float: left;\n  padding: 5px;\n  box-sizing: border-box;\n}\n.se-table-wrapper .col-xs-5 {\n  width: 41.6%;\n  float: left;\n  padding: 5px;\n  box-sizing: border-box;\n}\n.se-table-wrapper .se-table-control {\n  margin: 0!important;\n  padding: 0!important;\n  margin-bottom: 10px!important;\n}\n.se-table-wrapper .se-table-control .se-table-item-label {\n  margin: 0!important;\n  padding: 0!important;\n  text-align-last: justify;\n}\n.se-table-wrapper .se-table-control .se-table-item-label .label-control:after {\n  content: \":\";\n  margin: 0 8px 0 2px;\n  position: relative;\n  top: -0.5px;\n}\n.se-table-wrapper .btn-del {\n  position: absolute;\n  right: -11px;\n  top: 8px;\n  font-style: inherit;\n  background: red;\n  border-radius: 18px;\n  height: 15px;\n  width: 15px;\n  color: #fff;\n  font-weight: 500;\n  text-align: center;\n  line-height: 13px;\n  font-size: 12px;\n  z-index: 1;\n  cursor: pointer;\n}\n.se-table-wrapper .btn-del i {\n  font-style: inherit;\n}\n.se-table-tab table th {\n  text-align: center;\n  border: 1px solid #e9e9e9;\n  border-bottom: none;\n  padding: 8px 0;\n}\n", ""]);

// exports


/***/ }),

/***/ 1691:
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(1692);
if(typeof content === 'string') content = [[module.i, content, '']];
// Prepare cssTransformation
var transform;

var options = {"hmr":true}
options.transform = transform
// add the styles to the DOM
var update = __webpack_require__(143)(content, options);
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(false) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("!!../../node_modules/_css-loader@0.28.11@css-loader/index.js!../../node_modules/_less-loader@4.1.0@less-loader/dist/cjs.js!./component.less", function() {
			var newContent = require("!!../../node_modules/_css-loader@0.28.11@css-loader/index.js!../../node_modules/_less-loader@4.1.0@less-loader/dist/cjs.js!./component.less");
			if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ 1692:
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(43)(false);
// imports


// module
exports.push([module.i, ".form-control {\n  display: block;\n  width: 100%;\n  height: 32px;\n  line-height: 32px;\n  padding: 0 12px;\n  font-size: 14px;\n  line-height: 1.42857143;\n  color: #555;\n  background-color: #fff;\n  background-image: none;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);\n  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);\n  -webkit-transition: border-color ease-in-out 0.15s, -webkit-box-shadow ease-in-out 0.15s;\n  -o-transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s;\n  transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s;\n  box-sizing: border-box;\n}\n/**********************单选-多选按钮*******************/\n.se-radio-group {\n  color: #333;\n  font-weight: 100;\n  line-height: 21px;\n}\n.se-radio-group span.se-radio + * {\n  margin-left: 8px;\n  margin-right: 8px;\n  font-size: 12px;\n}\n.se-radio-group .se-radio-wrapper {\n  vertical-align: sub;\n  display: inline-block;\n  position: relative;\n  white-space: nowrap;\n  cursor: pointer;\n  font-weight: 100;\n  line-height: 34px;\n  margin-bottom: 0;\n}\n.se-radio-group .se-radio-wrapper .se-radio {\n  vertical-align: middle;\n  display: inline-block;\n  position: relative;\n  white-space: nowrap;\n  outline: none;\n  line-height: 1;\n  cursor: pointer;\n}\n.se-radio-group .se-radio-wrapper .se-radio .se-radio-inner {\n  position: relative;\n  top: 0;\n  left: 0;\n  display: inline-block;\n  width: 14px;\n  height: 14px;\n  border-radius: 14px;\n  border: 1px solid #ccc;\n  background-color: #fff;\n  transition: all 0.2s cubic-bezier(0.78, 0.14, 0.15, 0.86);\n}\n.se-radio-group .se-radio-wrapper .se-radio .se-radio-inner:after {\n  position: absolute;\n  width: 6px;\n  height: 6px;\n  left: 4px;\n  top: 4px;\n  border-radius: 50%;\n  display: table;\n  border-top: 0;\n  border-left: 0;\n  content: \" \";\n  background-color: #24a4ff;\n  opacity: 0;\n  transform: scale(0);\n  transition: all 0.2s cubic-bezier(0.78, 0.14, 0.15, 0.86);\n}\n.se-radio-group .se-radio-wrapper .se-radio .se-radio-input {\n  width: 14px;\n  height: 14px;\n  position: absolute;\n  left: 0;\n  z-index: 1;\n  cursor: pointer;\n  opacity: 0;\n  top: 0;\n  bottom: 0;\n  right: 0;\n}\n.se-radio-group .se-radio-wrapper .se-radio-checked .se-radio-inner::after,\n.se-radio-group .se-radio-wrapper .se-radio-group-horizontal .se-radio-inner::after,\n.se-radio-group .se-radio-wrapper .se-radio-group-longitudinal .se-radio-inner::after {\n  position: absolute;\n  width: 6px;\n  height: 6px;\n  left: 4px;\n  top: 4px;\n  border-radius: 50%;\n  display: table;\n  border-top: 0;\n  border-left: 0;\n  content: \" \";\n  background-color: #24a4ff;\n  opacity: 1;\n  transform: scale(1);\n  transition: all 0.2s cubic-bezier(0.78, 0.14, 0.15, 0.86);\n}\n.se-radio-group-horizontal .se-radio-wrapper {\n  display: inline-block;\n  margin-right: 30px;\n}\n.se-radio-group-longitudinal .se-radio-wrapper {\n  display: block;\n}\n.se-checkbox-group {\n  color: #333;\n  font-weight: 100;\n  line-height: 28px;\n}\n.se-checkbox-group span.se-checkbox + * {\n  margin-left: 8px;\n  margin-right: 8px;\n  font-size: 12px;\n}\n.se-checkbox-group .se-checkbox-wrapper {\n  vertical-align: sub;\n  display: inline-block;\n  position: relative;\n  white-space: nowrap;\n  cursor: pointer;\n  font-weight: 100;\n  line-height: 34px;\n  margin-bottom: 0;\n}\n.se-checkbox-group .se-checkbox-wrapper .se-checkbox {\n  vertical-align: middle;\n  display: inline-block;\n  position: relative;\n  white-space: nowrap;\n  outline: none;\n  line-height: 1;\n  cursor: pointer;\n}\n.se-checkbox-group .se-checkbox-wrapper .se-checkbox .se-checkbox-inner {\n  position: relative;\n  top: 0;\n  left: 0;\n  display: inline-block;\n  width: 14px;\n  height: 14px;\n  border: 1px solid #ccc;\n  background-color: #fff;\n  transition: all 0.2s cubic-bezier(0.78, 0.14, 0.15, 0.86);\n}\n.se-checkbox-group .se-checkbox-wrapper .se-checkbox .se-checkbox-inner::after {\n  transform: rotate(45deg) scale(0);\n  position: absolute;\n  left: 4px;\n  top: 1px;\n  display: table;\n  width: 5px;\n  height: 8px;\n  border: 2px solid #fff;\n  border-top: 0;\n  border-left: 0;\n  content: \" \";\n  transition: all 0.2s cubic-bezier(0.12, 0.4, 0.29, 1.46) 0.1s;\n}\n.se-checkbox-group .se-checkbox-wrapper .se-checkbox .se-checkbox-input {\n  width: 14px;\n  height: 14px;\n  position: absolute;\n  left: 0;\n  z-index: 1;\n  cursor: pointer;\n  opacity: 0;\n  top: -3px;\n  bottom: 0;\n  right: 0;\n}\n.se-checkbox-group .se-checkbox-wrapper .se-checkbox-checked .se-checkbox-inner,\n.se-checkbox-group .se-checkbox-wrapper .se-checkbox-group-horizontal .se-checkbox-inner,\n.se-checkbox-group .se-checkbox-wrapper .se-checkbox-group-longitudinal .se-checkbox-inner {\n  background: #24a4ff;\n  border: 1px solid #24a4ff;\n}\n.se-checkbox-group .se-checkbox-wrapper .se-checkbox-checked .se-checkbox-inner::after,\n.se-checkbox-group .se-checkbox-wrapper .se-checkbox-group-horizontal .se-checkbox-inner::after,\n.se-checkbox-group .se-checkbox-wrapper .se-checkbox-group-longitudinal .se-checkbox-inner::after {\n  transform: rotate(45deg) scale(1);\n  position: absolute;\n  left: 4px;\n  top: 1px;\n  display: table;\n  width: 5px;\n  height: 8px;\n  border: 2px solid #fff;\n  border-top: 0;\n  border-left: 0;\n  content: \" \";\n  transition: all 0.2s cubic-bezier(0.12, 0.4, 0.29, 1.46) 0.1s;\n}\n.se-checkbox-group-horizontal .se-checkbox-wrapper {\n  display: inline-block;\n  margin-right: 30px;\n}\n.se-checkbox-group-longitudinal .se-checkbox-wrapper {\n  display: block;\n}\n.se-input-wrapper {\n  width: 200px;\n}\n/**********************下拉**********************/\n.se-select {\n  box-sizing: border-box;\n  display: inline-block;\n  vertical-align: middle;\n  color: #666;\n  font-size: 12px;\n  width: 200px;\n  position: relative;\n}\n.se-select .se-select-selection {\n  position: relative;\n  outline: none;\n  user-select: none;\n  box-sizing: border-box;\n  display: block;\n  background-color: #fff;\n  border-radius: 0;\n  border: 1px solid #ccc;\n  transition: all 0.3s cubic-bezier(0.645, 0.045, 0.355, 1);\n  width: 100%;\n  height: 34px;\n}\n.se-select .se-select-selection .se-select-selection-rendered {\n  height: 26px;\n  display: block;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  padding-left: 8px;\n  padding-right: 24px;\n  line-height: 34px;\n}\n.se-select .se-select-selection .se-select-selection-rendered .se-select-selection-selected-value {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n.se-select .se-select-selection .se-select-arrow {\n  position: absolute;\n  right: 10px;\n  top: calc(42%);\n  border: 5px solid transparent;\n  border-top-color: gray;\n}\n.se-select .se-select-dropdown {\n  width: 100%;\n  background-color: #fff;\n  border: 1px solid #ccc;\n  box-shadow: 0 1px 6px rgba(99, 99, 99, 0.2);\n  border-radius: 0;\n  box-sizing: border-box;\n  z-index: 1050;\n  left: 0;\n  top: 107%;\n  position: absolute;\n  outline: none;\n  overflow: hidden;\n  font-size: 12px;\n}\n.se-select .se-select-dropdown .se-select-dropdown-menu {\n  outline: none;\n  margin-bottom: 0;\n  padding-left: 0;\n  list-style: none;\n  max-height: 250px;\n  overflow: auto;\n}\n.se-select .se-select-dropdown .se-select-dropdown-menu .se-select-dropdown-menu-item {\n  position: relative;\n  display: block;\n  padding: 7px 15px;\n  font-weight: 400;\n  color: #666;\n  cursor: pointer;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  transition: background .3s ease;\n  line-height: 24px;\n}\n.se-select-open .se-select-selection {\n  border-color: #50b6ff;\n  outline: 0;\n  box-shadow: 0 0 0 2px rgba(36, 164, 255, 0.2);\n}\n", ""]);

// exports


/***/ }),

/***/ 1693:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", { ref: "formSettingR", staticClass: "form-setting" }, [
    _c(
      "div",
      { staticClass: "setting-header" },
      _vm._l(_vm.formSetting.element, function(itemElement, key) {
        return _c("div", { key: key, staticClass: "single-sub" }, [
          _c(
            "div",
            {
              staticClass: "single-sub-fix",
              class: {
                "single-sub-disabled": itemElement.isDisabled,
                "single-sub-disabled": itemElement.isDisabled
              },
              on: {
                click: function($event) {
                  return _vm.clickSinleAdd(key, $event)
                }
              }
            },
            [
              _c("div", [
                _c("span", { staticClass: "title" }, [
                  _vm._v(_vm._s(itemElement.title))
                ]),
                _vm._v(" "),
                _c("i", {
                  staticClass: "iconfont icon-apply",
                  class: itemElement.style.iconFontClass
                })
              ])
            ]
          ),
          _vm._v(" "),
          _c(
            "div",
            {
              staticClass: "hover-check-form form-inline",
              class: {
                "show-display": itemElement.isShow,
                "hide-display": !itemElement.isShow
              },
              style: { width: itemElement.style.hoverChoice.width + "px" },
              on: {
                mouseover: function($event) {
                  return _vm._showSinleSub(key, itemElement)
                },
                mouseout: function($event) {
                  return _vm._hideSinleSub(key, itemElement)
                }
              }
            },
            [
              _c("div", [
                _c("div", { staticClass: "form-group" }, [
                  _c("label", { staticClass: "label-control" }, [
                    _vm._v(_vm._s(itemElement.title) + "：")
                  ])
                ]),
                _vm._v(" "),
                itemElement.type == "inputText"
                  ? _c("div", { staticClass: "form-group" }, [
                      _c("input", {
                        staticClass: "form-control",
                        attrs: { type: "text" }
                      })
                    ])
                  : _vm._e(),
                _vm._v(" "),
                itemElement.type == "textarea"
                  ? _c("div", { staticClass: "form-group" }, [
                      _c("textarea", { staticClass: "form-control" })
                    ])
                  : _vm._e(),
                _vm._v(" "),
                itemElement.type == "inputNumber"
                  ? _c("div", { staticClass: "form-group" }, [
                      _c("input", {
                        staticClass: "form-control",
                        attrs: { type: "number" }
                      })
                    ])
                  : _vm._e(),
                _vm._v(" "),
                itemElement.type == "inputRadio"
                  ? _c(
                      "div",
                      {
                        staticClass:
                          "form-group se-radio-group se-radio-group-large se-radio-group-horizontal "
                      },
                      [
                        _vm._m(0, true),
                        _vm._v(" "),
                        _vm._m(1, true),
                        _vm._v(" "),
                        _vm._m(2, true)
                      ]
                    )
                  : _vm._e(),
                _vm._v(" "),
                itemElement.type == "inputCheckBox"
                  ? _c(
                      "div",
                      {
                        staticClass:
                          "form-group se-checkbox-group se-checkbox-group-large se-checkbox-group-horizontal "
                      },
                      [
                        _vm._m(3, true),
                        _vm._v(" "),
                        _vm._m(4, true),
                        _vm._v(" "),
                        _vm._m(5, true)
                      ]
                    )
                  : _vm._e(),
                _vm._v(" "),
                itemElement.type == "select"
                  ? _c("div", { staticClass: "form-group" }, [
                      _c("div", { staticClass: "se-select" }, [
                        _c(
                          "div",
                          {
                            staticClass: "se-select-selection",
                            on: {
                              click: function($event) {
                                return _vm._clickShowSelectDrapdown(
                                  itemElement,
                                  $event
                                )
                              }
                            }
                          },
                          [
                            _c(
                              "div",
                              { staticClass: "se-select-selection-rendered" },
                              _vm._l(itemElement.option, function(itemSelect) {
                                return _c(
                                  "div",
                                  {
                                    directives: [
                                      {
                                        name: "show",
                                        rawName: "v-show",
                                        value: itemSelect.isChecked,
                                        expression: "itemSelect.isChecked"
                                      }
                                    ],
                                    staticClass:
                                      "se-select-selection-selected-value",
                                    attrs: { title: "itemSelect.name" }
                                  },
                                  [_vm._v(_vm._s(itemSelect.name))]
                                )
                              }),
                              0
                            ),
                            _vm._v(" "),
                            _c("span", { staticClass: "se-select-arrow" })
                          ]
                        ),
                        _vm._v(" "),
                        _c(
                          "div",
                          {
                            directives: [
                              {
                                name: "show",
                                rawName: "v-show",
                                value: itemElement.optionIsShow,
                                expression: "itemElement.optionIsShow"
                              }
                            ],
                            staticClass: "se-select-dropdown"
                          },
                          [
                            _c("div", [
                              _c(
                                "ul",
                                { staticClass: "se-select-dropdown-menu" },
                                _vm._l(itemElement.option, function(
                                  itemSelect
                                ) {
                                  return _c(
                                    "li",
                                    {
                                      staticClass:
                                        "se-select-dropdown-menu-item",
                                      attrs: { title: itemSelect.name },
                                      on: {
                                        click: function($event) {
                                          return _vm._clickSelected(
                                            itemElement,
                                            itemSelect,
                                            $event
                                          )
                                        }
                                      }
                                    },
                                    [_vm._v(_vm._s(itemSelect.name))]
                                  )
                                }),
                                0
                              )
                            ])
                          ]
                        )
                      ])
                    ])
                  : _vm._e(),
                _vm._v(" "),
                itemElement.type == "date"
                  ? _c("div", { staticClass: "form-group" }, [
                      _c("div", { staticClass: "se-input-date-wrapper" }, [
                        _c("input", {
                          staticClass: "se-input-date form-control",
                          attrs: { type: "text", readonly: "readonly" }
                        }),
                        _vm._v(" "),
                        _c("i", {
                          staticClass:
                            "se-input-date-inner iconfont icon-apply",
                          class: itemElement.style.iconFontClass
                        })
                      ])
                    ])
                  : _vm._e(),
                _vm._v(" "),
                itemElement.type == "dateRange"
                  ? _c("div", { staticClass: "form-group" }, [
                      _c("div", { staticClass: "se-input-date-wrapper" }, [
                        _c("input", {
                          staticClass: "se-input-date form-control",
                          style: {
                            width:
                              itemElement.style.hoverChoice.inputStyle.width +
                              "px"
                          },
                          attrs: {
                            type: "text",
                            readonly: "readonly",
                            placeholder: "开始日期"
                          }
                        }),
                        _vm._v(" "),
                        _c("i", {
                          staticClass:
                            "se-input-date-inner iconfont icon-apply",
                          class: itemElement.style.iconFontClass
                        })
                      ]),
                      _vm._v("~\n            "),
                      _c("div", { staticClass: "se-input-date-wrapper" }, [
                        _c("input", {
                          staticClass: "se-input-date form-control",
                          style: {
                            width:
                              itemElement.style.hoverChoice.inputStyle.width +
                              "px"
                          },
                          attrs: {
                            type: "text",
                            readonly: "readonly",
                            placeholder: "结束日期"
                          }
                        }),
                        _vm._v(" "),
                        _c("i", {
                          staticClass:
                            "se-input-date-inner iconfont icon-apply",
                          class: itemElement.style.iconFontClass
                        })
                      ])
                    ])
                  : _vm._e(),
                _vm._v(" "),
                itemElement.type == "payCode"
                  ? _c("div", { staticClass: "form-group" }, [
                      _c("div", { staticClass: "se-input-date-wrapper" }, [
                        _c("img", { attrs: { src: itemElement.codeUrl } })
                      ])
                    ])
                  : _vm._e()
              ])
            ]
          )
        ])
      }),
      0
    ),
    _vm._v(" "),
    _c(
      "div",
      { ref: "settingBodyREF", staticClass: "setting-body" },
      [
        _c(
          "draggable",
          {
            attrs: { options: { group: "people" } },
            on: {
              start: function($event) {
                _vm.drag = true
              },
              end: function($event) {
                _vm.drag = false
              }
            },
            model: {
              value: _vm.formSetting.storageData,
              callback: function($$v) {
                _vm.$set(_vm.formSetting, "storageData", $$v)
              },
              expression: "formSetting.storageData"
            }
          },
          _vm._l(_vm.formSetting.storageData, function(itemStorageData, index) {
            return _c(
              "div",
              {
                key: index,
                ref: "storageRef" + index,
                refInFor: true,
                staticClass: "setting-fix",
                class: { "se-fix-active": itemStorageData.style.isActive }
              },
              [
                itemStorageData.type != "inputButton"
                  ? _c("div", { staticClass: "setting-fix-sub" }, [
                      _c(
                        "i",
                        {
                          staticClass: "se-icon-alertoff-black",
                          on: {
                            click: function($event) {
                              $event.stopPropagation()
                              if ($event.target !== $event.currentTarget) {
                                return null
                              }
                              return _vm._delFormSetting(index, $event)
                            }
                          }
                        },
                        [_vm._v("x")]
                      ),
                      _vm._v(" "),
                      _c(
                        "div",
                        {
                          staticClass: "se-tags",
                          on: {
                            click: function($event) {
                              $event.stopPropagation()
                              return _vm.clickShowToolTipPortal(
                                itemStorageData,
                                index,
                                $event
                              )
                            }
                          }
                        },
                        [
                          _c("div", { staticClass: "se-form-no-colon" }, [
                            _c("div", { staticClass: "se-form-item-label" }, [
                              _c(
                                "label",
                                {
                                  staticClass: "label-control",
                                  class: {
                                    "se-form-item-required":
                                      itemStorageData.isRequired
                                  }
                                },
                                [
                                  _vm._v(
                                    "\n                  " +
                                      _vm._s(itemStorageData.title) +
                                      "：\n                  "
                                  ),
                                  _c("br"),
                                  _vm._v(
                                    "\n                  ( " +
                                      _vm._s(
                                        itemStorageData.backstageKey[0].keyName
                                      ) +
                                      " )\n                "
                                  )
                                ]
                              )
                            ]),
                            _vm._v(" "),
                            _c("div", { staticClass: "se-form-item-wrapper" }, [
                              _c(
                                "div",
                                { staticClass: "se-form-item-control" },
                                [
                                  itemStorageData.type == "inputText" ||
                                  itemStorageData.type == "textarea" ||
                                  itemStorageData.type == "inputNumber" ||
                                  itemStorageData.type == "ueditor" ||
                                  itemStorageData.type == "tree"
                                    ? _c("input", {
                                        directives: [
                                          {
                                            name: "model",
                                            rawName: "v-model",
                                            value: itemStorageData.prompt,
                                            expression: "itemStorageData.prompt"
                                          }
                                        ],
                                        staticClass: "form-control input-text",
                                        attrs: {
                                          placeholder: itemStorageData.prompt,
                                          type: "text"
                                        },
                                        domProps: {
                                          value: itemStorageData.prompt
                                        },
                                        on: {
                                          input: function($event) {
                                            if ($event.target.composing) {
                                              return
                                            }
                                            _vm.$set(
                                              itemStorageData,
                                              "prompt",
                                              $event.target.value
                                            )
                                          }
                                        }
                                      })
                                    : _vm._e(),
                                  _vm._v(" "),
                                  itemStorageData.type == "inputRadio"
                                    ? _c(
                                        "div",
                                        {
                                          staticClass:
                                            "se-radio-group se-radio-group-large ",
                                          class: {
                                            "se-radio-group-horizontal": !itemStorageData.direction,
                                            "se-radio-group-longitudinal":
                                              itemStorageData.direction
                                          }
                                        },
                                        _vm._l(itemStorageData.option, function(
                                          itemRadio
                                        ) {
                                          return _c(
                                            "label",
                                            {
                                              staticClass: "se-radio-wrapper",
                                              on: {
                                                click: function($event) {
                                                  return _vm._radioChecked(
                                                    itemStorageData,
                                                    itemRadio,
                                                    $event
                                                  )
                                                }
                                              }
                                            },
                                            [
                                              _c(
                                                "span",
                                                {
                                                  staticClass: "se-radio",
                                                  class: {
                                                    "se-radio-checked":
                                                      itemRadio.isChecked
                                                  }
                                                },
                                                [
                                                  _c("span", {
                                                    staticClass:
                                                      "se-radio-inner"
                                                  })
                                                ]
                                              ),
                                              _vm._v(" "),
                                              _c("span", [
                                                _vm._v(_vm._s(itemRadio.name))
                                              ])
                                            ]
                                          )
                                        }),
                                        0
                                      )
                                    : _vm._e(),
                                  _vm._v(" "),
                                  itemStorageData.type == "inputCheckBox"
                                    ? _c(
                                        "div",
                                        {
                                          staticClass:
                                            "se-checkbox-group se-checkbox-group-large ",
                                          class: {
                                            "se-checkbox-group-horizontal": !itemStorageData.direction,
                                            "se-checkbox-group-longitudinal":
                                              itemStorageData.direction
                                          }
                                        },
                                        _vm._l(itemStorageData.option, function(
                                          itemCheckbox
                                        ) {
                                          return _c(
                                            "label",
                                            {
                                              staticClass:
                                                "se-checkbox-wrapper",
                                              on: {
                                                click: function($event) {
                                                  return _vm._checkboxChecked(
                                                    itemStorageData,
                                                    itemCheckbox,
                                                    $event
                                                  )
                                                }
                                              }
                                            },
                                            [
                                              _c(
                                                "span",
                                                {
                                                  staticClass: "se-checkbox",
                                                  class: {
                                                    "se-checkbox-checked":
                                                      itemCheckbox.isChecked
                                                  }
                                                },
                                                [
                                                  _c("span", {
                                                    staticClass:
                                                      "se-checkbox-inner"
                                                  })
                                                ]
                                              ),
                                              _vm._v(" "),
                                              _c("span", [
                                                _vm._v(
                                                  _vm._s(itemCheckbox.name)
                                                )
                                              ])
                                            ]
                                          )
                                        }),
                                        0
                                      )
                                    : _vm._e(),
                                  _vm._v(" "),
                                  itemStorageData.type == "select"
                                    ? _c("div", { staticClass: "se-select" }, [
                                        _c(
                                          "div",
                                          {
                                            staticClass: "se-select-selection",
                                            on: {
                                              click: function($event) {
                                                return _vm._clickShowSelectDrapdown(
                                                  itemStorageData,
                                                  $event
                                                )
                                              }
                                            }
                                          },
                                          [
                                            _c(
                                              "div",
                                              {
                                                staticClass:
                                                  "se-select-selection-rendered"
                                              },
                                              _vm._l(
                                                itemStorageData.option,
                                                function(itemSelect) {
                                                  return _c(
                                                    "div",
                                                    {
                                                      directives: [
                                                        {
                                                          name: "show",
                                                          rawName: "v-show",
                                                          value:
                                                            itemSelect.isChecked,
                                                          expression:
                                                            "itemSelect.isChecked"
                                                        }
                                                      ],
                                                      staticClass:
                                                        "se-select-selection-selected-value",
                                                      attrs: {
                                                        title: itemSelect.name
                                                      }
                                                    },
                                                    [
                                                      _vm._v(
                                                        _vm._s(
                                                          itemSelect.name
                                                        ) +
                                                          "\n                        "
                                                      )
                                                    ]
                                                  )
                                                }
                                              ),
                                              0
                                            ),
                                            _vm._v(" "),
                                            _c("span", {
                                              staticClass: "se-select-arrow"
                                            })
                                          ]
                                        ),
                                        _vm._v(" "),
                                        _c(
                                          "div",
                                          {
                                            directives: [
                                              {
                                                name: "show",
                                                rawName: "v-show",
                                                value:
                                                  itemStorageData.optionIsShow,
                                                expression:
                                                  "itemStorageData.optionIsShow"
                                              }
                                            ],
                                            staticClass: "se-select-dropdown"
                                          },
                                          [
                                            _c("div", [
                                              _c(
                                                "ul",
                                                {
                                                  staticClass:
                                                    "se-select-dropdown-menu"
                                                },
                                                _vm._l(
                                                  itemStorageData.option,
                                                  function(itemSelect) {
                                                    return _c(
                                                      "li",
                                                      {
                                                        staticClass:
                                                          "se-select-dropdown-menu-item",
                                                        attrs: {
                                                          title: itemSelect.name
                                                        },
                                                        on: {
                                                          click: function(
                                                            $event
                                                          ) {
                                                            return _vm._clickSelected(
                                                              itemStorageData,
                                                              itemSelect,
                                                              $event
                                                            )
                                                          }
                                                        }
                                                      },
                                                      [
                                                        _vm._v(
                                                          _vm._s(
                                                            itemSelect.name
                                                          )
                                                        )
                                                      ]
                                                    )
                                                  }
                                                ),
                                                0
                                              )
                                            ])
                                          ]
                                        )
                                      ])
                                    : _vm._e(),
                                  _vm._v(" "),
                                  itemStorageData.type == "date"
                                    ? _c("div", [
                                        _c(
                                          "div",
                                          {
                                            staticClass: "se-input-date-wrapper"
                                          },
                                          [
                                            _c("input", {
                                              staticClass:
                                                "se-input-date form-control",
                                              attrs: {
                                                type: "text",
                                                readonly: "readonly",
                                                placeholder:
                                                  itemStorageData.prompt
                                              }
                                            }),
                                            _vm._v(" "),
                                            _c("i", {
                                              staticClass:
                                                "se-input-date-inner iconfont icon-apply",
                                              class:
                                                itemStorageData.style
                                                  .iconFontClass
                                            })
                                          ]
                                        )
                                      ])
                                    : _vm._e(),
                                  _vm._v(" "),
                                  itemStorageData.type == "dateRange"
                                    ? _c("div", [
                                        _c(
                                          "div",
                                          {
                                            staticClass: "se-input-date-wrapper"
                                          },
                                          [
                                            _c("input", {
                                              staticClass:
                                                "se-input-date form-control",
                                              attrs: {
                                                type: "text",
                                                readonly: "readonly",
                                                placeholder:
                                                  itemStorageData.prompt
                                              }
                                            }),
                                            _vm._v(" "),
                                            _c("i", {
                                              staticClass:
                                                "se-input-date-inner iconfont icon-apply",
                                              class:
                                                itemStorageData.style
                                                  .iconFontClass
                                            })
                                          ]
                                        ),
                                        _vm._v("~\n                    "),
                                        _c(
                                          "div",
                                          {
                                            staticClass: "se-input-date-wrapper"
                                          },
                                          [
                                            _c("input", {
                                              staticClass:
                                                "se-input-date form-control",
                                              attrs: {
                                                type: "text",
                                                readonly: "readonly",
                                                placeholder:
                                                  itemStorageData.prompt
                                              }
                                            }),
                                            _vm._v(" "),
                                            _c("i", {
                                              staticClass:
                                                "se-input-date-inner iconfont icon-apply",
                                              class:
                                                itemStorageData.style
                                                  .iconFontClass
                                            })
                                          ]
                                        )
                                      ])
                                    : _vm._e(),
                                  _vm._v(" "),
                                  itemStorageData.type == "payCode"
                                    ? _c("div", [
                                        _c(
                                          "div",
                                          {
                                            staticClass: "se-input-date-wrapper"
                                          },
                                          [
                                            _c("img", {
                                              attrs: {
                                                src: itemStorageData.codeUrl
                                              }
                                            })
                                          ]
                                        )
                                      ])
                                    : _vm._e(),
                                  _vm._v(" "),
                                  itemStorageData.type == "inputFile" ||
                                  itemStorageData.type == "editFile"
                                    ? _c("div", [
                                        _c(
                                          "div",
                                          {
                                            staticClass: "se-input-date-wrapper"
                                          },
                                          [
                                            _c("input", {
                                              staticClass:
                                                "se-input-date form-control",
                                              attrs: {
                                                type: "file",
                                                readonly: "readonly",
                                                placeholder:
                                                  itemStorageData.prompt
                                              }
                                            }),
                                            _vm._v(" "),
                                            _c("i", {
                                              staticClass:
                                                "se-input-date-inner iconfont icon-apply",
                                              class:
                                                itemStorageData.style
                                                  .iconFontClass
                                            })
                                          ]
                                        )
                                      ])
                                    : _vm._e(),
                                  _vm._v(" "),
                                  itemStorageData.type == "appointSelect"
                                    ? _c("div", { staticClass: "se-select" }, [
                                        _c(
                                          "div",
                                          {
                                            staticClass: "se-select-selection"
                                          },
                                          [
                                            _c(
                                              "div",
                                              {
                                                staticClass:
                                                  "se-select-selection-rendered"
                                              },
                                              _vm._l(
                                                itemStorageData.option,
                                                function(itemSelect) {
                                                  return _c(
                                                    "div",
                                                    {
                                                      directives: [
                                                        {
                                                          name: "show",
                                                          rawName: "v-show",
                                                          value:
                                                            itemSelect.isChecked,
                                                          expression:
                                                            "itemSelect.isChecked"
                                                        }
                                                      ],
                                                      staticClass:
                                                        "se-select-selection-selected-value",
                                                      attrs: {
                                                        title: itemSelect.name
                                                      }
                                                    },
                                                    [
                                                      _vm._v(
                                                        _vm._s(
                                                          itemSelect.name
                                                        ) +
                                                          "\n                        "
                                                      )
                                                    ]
                                                  )
                                                }
                                              ),
                                              0
                                            ),
                                            _vm._v(" "),
                                            _c("span", {
                                              staticClass: "se-select-arrow"
                                            })
                                          ]
                                        )
                                      ])
                                    : _vm._e(),
                                  _vm._v(" "),
                                  itemStorageData.type == "table"
                                    ? _c(
                                        "div",
                                        { staticClass: "se-table-tab" },
                                        [
                                          _c("table", [
                                            _c("thead", [
                                              _c(
                                                "tr",
                                                _vm._l(
                                                  itemStorageData.cols,
                                                  function(colItem) {
                                                    return _c("th", [
                                                      _vm._v(
                                                        _vm._s(colItem.name)
                                                      )
                                                    ])
                                                  }
                                                ),
                                                0
                                              )
                                            ]),
                                            _vm._v(" "),
                                            _c("tbody", [
                                              _c(
                                                "tr",
                                                _vm._l(
                                                  itemStorageData.cols,
                                                  function(colItem) {
                                                    return _c("td", [
                                                      _c("input", {
                                                        staticClass:
                                                          "form-control",
                                                        attrs: { type: "text" }
                                                      })
                                                    ])
                                                  }
                                                ),
                                                0
                                              )
                                            ])
                                          ])
                                        ]
                                      )
                                    : _vm._e(),
                                  _vm._v(" "),
                                  itemStorageData.type == "createVote"
                                    ? _c(
                                        "el-button",
                                        {
                                          attrs: {
                                            type: "primary",
                                            size: "mini"
                                          }
                                        },
                                        [
                                          _vm._v(
                                            _vm._s(itemStorageData.btnName)
                                          )
                                        ]
                                      )
                                    : _vm._e(),
                                  _vm._v(" "),
                                  itemStorageData.type == "exportResult"
                                    ? _c(
                                        "el-button",
                                        {
                                          attrs: {
                                            type: "primary",
                                            size: "mini"
                                          }
                                        },
                                        [_vm._v("导出结果")]
                                      )
                                    : _vm._e(),
                                  _vm._v(" "),
                                  itemStorageData.type == "skipApproval"
                                    ? _c(
                                        "div",
                                        {
                                          staticClass:
                                            "se-checkbox-group se-checkbox-group-large "
                                        },
                                        [
                                          _c(
                                            "label",
                                            {
                                              staticClass: "se-checkbox-wrapper"
                                            },
                                            [
                                              _c(
                                                "span",
                                                { staticClass: "se-checkbox" },
                                                [
                                                  _c("span", {
                                                    staticClass:
                                                      "se-checkbox-inner"
                                                  })
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    : _vm._e()
                                ],
                                1
                              )
                            ])
                          ])
                        ]
                      )
                    ])
                  : _vm._e()
              ]
            )
          }),
          0
        ),
        _vm._v(" "),
        _c("hr"),
        _vm._v(" "),
        _c(
          "div",
          { staticClass: "se-form-footer" },
          _vm._l(_vm.formSetting.storageData, function(itemStorageData, index) {
            return itemStorageData.type == "inputButton"
              ? _c(
                  "div",
                  {
                    key: index,
                    ref: "storageRef" + index,
                    refInFor: true,
                    staticClass: "se-form-footer-btn",
                    class: { "se-fix-active": itemStorageData.style.isActive }
                  },
                  [
                    _c(
                      "i",
                      {
                        staticClass: "se-icon-alertoff-black",
                        on: {
                          click: function($event) {
                            $event.stopPropagation()
                            if ($event.target !== $event.currentTarget) {
                              return null
                            }
                            return _vm._delFormSetting(index, $event)
                          }
                        }
                      },
                      [_vm._v("x")]
                    ),
                    _vm._v(" "),
                    _c(
                      "el-button",
                      {
                        on: {
                          click: function($event) {
                            $event.stopPropagation()
                            return _vm.clickShowToolTipPortal(
                              itemStorageData,
                              index,
                              $event
                            )
                          }
                        }
                      },
                      [_vm._v(_vm._s(itemStorageData.title))]
                    )
                  ],
                  1
                )
              : _vm._e()
          }),
          0
        )
      ],
      1
    ),
    _vm._v(" "),
    _vm.transferStorage.data
      ? _c(
          "div",
          {
            directives: [
              {
                name: "show",
                rawName: "v-show",
                value: _vm.transferStorage.data.toolTipPortal.isShow,
                expression: "transferStorage.data.toolTipPortal.isShow"
              }
            ],
            staticClass: "ToolTipPortal",
            style: {
              position: _vm.transferStorage.style.position,
              left: _vm.transferStorage.style.left + "px",
              top: _vm.transferStorage.style.top + "px"
            },
            attrs: { notClose: "toolTipPortal" }
          },
          [
            _c(
              "div",
              {
                staticClass: "ToolTipPortal-fix",
                class: {
                  "ToolTipPortal-horizontal": !_vm.transferStorage.direction,
                  "ToolTipPortal-longitudinal": _vm.transferStorage.direction
                },
                attrs: { notClose: "toolTipPortal" }
              },
              [
                _c("h2", { attrs: { notClose: "toolTipPortal" } }, [
                  _vm._v("编辑控件")
                ]),
                _vm._v(" "),
                _c(
                  "div",
                  {
                    staticClass: "se-row se-form-item",
                    attrs: { notClose: "toolTipPortal" }
                  },
                  [
                    _vm._m(6),
                    _vm._v(" "),
                    _c(
                      "div",
                      {
                        staticClass: "se-form-item-wrapper",
                        attrs: { notClose: "toolTipPortal" }
                      },
                      [
                        _c(
                          "div",
                          {
                            staticClass: "se-form-item-control",
                            attrs: { notClose: "toolTipPortal" }
                          },
                          [
                            _c(
                              "span",
                              {
                                staticClass: "se-input-wrapper",
                                attrs: { notClose: "toolTipPortal" }
                              },
                              [
                                _c("input", {
                                  directives: [
                                    {
                                      name: "model",
                                      rawName: "v-model",
                                      value: _vm.transferStorage.data.title,
                                      expression: "transferStorage.data.title"
                                    }
                                  ],
                                  staticClass: "se-input form-control",
                                  attrs: {
                                    maxlength: "8",
                                    notClose: "toolTipPortal",
                                    type: "text",
                                    placeholder: "标题"
                                  },
                                  domProps: {
                                    value: _vm.transferStorage.data.title
                                  },
                                  on: {
                                    input: function($event) {
                                      if ($event.target.composing) {
                                        return
                                      }
                                      _vm.$set(
                                        _vm.transferStorage.data,
                                        "title",
                                        $event.target.value
                                      )
                                    }
                                  }
                                })
                              ]
                            )
                          ]
                        )
                      ]
                    )
                  ]
                ),
                _vm._v(" "),
                _vm.transferStorage.data.type != "inputButton" &&
                _vm.transferStorage.data.type != "exportResult"
                  ? _c(
                      "div",
                      {
                        staticClass: "se-row se-form-item",
                        attrs: { notClose: "toolTipPortal" }
                      },
                      [
                        _c(
                          "div",
                          {
                            staticClass: "se-form-item-label",
                            attrs: { notClose: "toolTipPortal" }
                          },
                          [
                            _c(
                              "label",
                              {
                                class: {
                                  "se-form-item-required":
                                    _vm.transferStorage.data.isProcess
                                },
                                attrs: {
                                  notClose: "toolTipPortal",
                                  for: "label"
                                }
                              },
                              [_vm._v("字段名")]
                            )
                          ]
                        ),
                        _vm._v(" "),
                        _c(
                          "div",
                          {
                            staticClass: "se-form-item-wrapper",
                            attrs: { notClose: "toolTipPortal" }
                          },
                          [
                            _vm._l(
                              _vm.transferStorage.data.backstageKey,
                              function(itemBackKey, index) {
                                return _c(
                                  "div",
                                  {
                                    staticClass: "se-form-item-control",
                                    attrs: { notClose: "toolTipPortal" }
                                  },
                                  [
                                    _c(
                                      "span",
                                      {
                                        staticClass: "se-input-wrapper",
                                        attrs: { notClose: "toolTipPortal" }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model",
                                              value: itemBackKey.keyName,
                                              expression: "itemBackKey.keyName"
                                            }
                                          ],
                                          staticClass: "se-input form-control",
                                          class: {
                                            "border-red":
                                              !itemBackKey.keyName &&
                                              itemBackKey.isRequired
                                          },
                                          attrs: {
                                            notClose: "toolTipPortal",
                                            type: "text",
                                            placeholder:
                                              "只能填写英文数字下划线"
                                          },
                                          domProps: {
                                            value: itemBackKey.keyName
                                          },
                                          on: {
                                            blur: function($event) {
                                              return _vm._humpNaming(
                                                index,
                                                _vm.transferStorage.data.formId,
                                                $event
                                              )
                                            },
                                            input: function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                itemBackKey,
                                                "keyName",
                                                $event.target.value
                                              )
                                            }
                                          }
                                        })
                                      ]
                                    )
                                  ]
                                )
                              }
                            ),
                            _vm._v(" "),
                            _c(
                              "div",
                              {
                                staticClass:
                                  "form-group se-checkbox-group se-checkbox-group-large se-checkbox-group-horizontal ",
                                attrs: { notClose: "toolTipPortal" }
                              },
                              [
                                _c(
                                  "span",
                                  {
                                    class: {
                                      "font-red":
                                        _vm.transferStorage.data.isKeyPrompt
                                    }
                                  },
                                  [
                                    _vm._v(
                                      " " +
                                        _vm._s(
                                          _vm.transferStorage.data.isKeyPrompt
                                        ) +
                                        " "
                                    )
                                  ]
                                )
                              ]
                            )
                          ],
                          2
                        )
                      ]
                    )
                  : _vm._e(),
                _vm._v(" "),
                _vm.transferStorage.data.type == "inputText" ||
                _vm.transferStorage.data.type == "textarea" ||
                _vm.transferStorage.data.type == "inputNumber"
                  ? _c(
                      "div",
                      {
                        staticClass: "se-row se-form-item",
                        attrs: { notClose: "toolTipPortal" }
                      },
                      [
                        _vm._m(7),
                        _vm._v(" "),
                        _c(
                          "div",
                          {
                            staticClass: "se-form-item-wrapper",
                            attrs: { notClose: "toolTipPortal" }
                          },
                          [
                            _c(
                              "div",
                              {
                                staticClass: "se-form-item-control ",
                                attrs: { notClose: "toolTipPortal" }
                              },
                              [
                                _c(
                                  "span",
                                  {
                                    staticClass: "se-input-wrapper",
                                    attrs: { notClose: "toolTipPortal" }
                                  },
                                  [
                                    _c("input", {
                                      directives: [
                                        {
                                          name: "model",
                                          rawName: "v-model",
                                          value:
                                            _vm.transferStorage.data.prompt,
                                          expression:
                                            "transferStorage.data.prompt"
                                        }
                                      ],
                                      staticClass: "se-input form-control",
                                      attrs: {
                                        notClose: "toolTipPortal",
                                        type: "text",
                                        placeholder: "请输入提示文字",
                                        maxlength: "64"
                                      },
                                      domProps: {
                                        value: _vm.transferStorage.data.prompt
                                      },
                                      on: {
                                        input: function($event) {
                                          if ($event.target.composing) {
                                            return
                                          }
                                          _vm.$set(
                                            _vm.transferStorage.data,
                                            "prompt",
                                            $event.target.value
                                          )
                                        }
                                      }
                                    })
                                  ]
                                )
                              ]
                            )
                          ]
                        )
                      ]
                    )
                  : _vm._e(),
                _vm._v(" "),
                _vm.transferStorage.data.type == "inputRadio" ||
                _vm.transferStorage.data.type == "inputCheckBox" ||
                _vm.transferStorage.data.type == "select"
                  ? _c(
                      "div",
                      {
                        staticClass: "se-row se-form-item",
                        attrs: { notClose: "toolTipPortal" }
                      },
                      [
                        _vm._m(8),
                        _vm._v(" "),
                        _c(
                          "div",
                          {
                            staticClass: "se-form-item-wrapper",
                            attrs: { notClose: "toolTipPortal" }
                          },
                          [
                            _vm._l(_vm.transferStorage.data.option, function(
                              optionItem,
                              optionIndex
                            ) {
                              return _c(
                                "div",
                                {
                                  staticClass: "se-form-item-control ",
                                  staticStyle: {
                                    height: "40px",
                                    position: "relative"
                                  },
                                  attrs: { notClose: "toolTipPortal" }
                                },
                                [
                                  _c(
                                    "span",
                                    {
                                      staticClass: "se-textarea-wrapper",
                                      staticStyle: { width: "100%" },
                                      attrs: { notClose: "toolTipPortal" }
                                    },
                                    [
                                      _vm._m(9, true),
                                      _vm._v(" "),
                                      _c("input", {
                                        directives: [
                                          {
                                            name: "model",
                                            rawName: "v-model",
                                            value: optionItem.name,
                                            expression: "optionItem.name"
                                          }
                                        ],
                                        staticClass: "se-input form-control",
                                        staticStyle: {
                                          width: "210px",
                                          float: "left"
                                        },
                                        attrs: {
                                          notClose: "toolTipPortal",
                                          type: "text",
                                          placeholder: "展示名字",
                                          maxlength: "64"
                                        },
                                        domProps: { value: optionItem.name },
                                        on: {
                                          input: function($event) {
                                            if ($event.target.composing) {
                                              return
                                            }
                                            _vm.$set(
                                              optionItem,
                                              "name",
                                              $event.target.value
                                            )
                                          }
                                        }
                                      }),
                                      _vm._v(" "),
                                      _vm._m(10, true),
                                      _vm._v(" "),
                                      _c("input", {
                                        directives: [
                                          {
                                            name: "model",
                                            rawName: "v-model",
                                            value: optionItem.value,
                                            expression: "optionItem.value"
                                          }
                                        ],
                                        staticClass: "se-input form-control",
                                        staticStyle: {
                                          width: "120px",
                                          float: "left"
                                        },
                                        attrs: {
                                          notClose: "toolTipPortal",
                                          type: "text",
                                          placeholder: "键名",
                                          maxlength: "64"
                                        },
                                        domProps: { value: optionItem.value },
                                        on: {
                                          input: function($event) {
                                            if ($event.target.composing) {
                                              return
                                            }
                                            _vm.$set(
                                              optionItem,
                                              "value",
                                              $event.target.value
                                            )
                                          }
                                        }
                                      })
                                    ]
                                  ),
                                  _vm._v(" "),
                                  _c(
                                    "i",
                                    {
                                      staticClass: "se-icon-alertoff-black",
                                      staticStyle: {
                                        position: "absolute",
                                        background: "red",
                                        color: "#fff",
                                        width: "14px",
                                        height: "14px",
                                        "line-height": "10px",
                                        "border-radius": "16px",
                                        "font-size": "12px",
                                        "text-align": "center",
                                        "font-style": "inherit",
                                        cursor: "pointer"
                                      },
                                      on: {
                                        click: function($event) {
                                          $event.stopPropagation()
                                          if (
                                            $event.target !==
                                            $event.currentTarget
                                          ) {
                                            return null
                                          }
                                          return _vm._delOption(
                                            _vm.transferStorage.data,
                                            optionIndex,
                                            $event
                                          )
                                        }
                                      }
                                    },
                                    [_vm._v("x")]
                                  )
                                ]
                              )
                            }),
                            _vm._v(" "),
                            _c(
                              "div",
                              {
                                staticClass: "se-form-item-control ",
                                attrs: { notClose: "toolTipPortal" }
                              },
                              [
                                _c(
                                  "button",
                                  {
                                    attrs: { notClose: "toolTipPortal" },
                                    on: {
                                      click: function($event) {
                                        $event.stopPropagation()
                                        if (
                                          $event.target !== $event.currentTarget
                                        ) {
                                          return null
                                        }
                                        return _vm._addOption(
                                          _vm.transferStorage.data,
                                          _vm.transferStorage.data.formId,
                                          $event
                                        )
                                      }
                                    }
                                  },
                                  [_vm._v("添加选项")]
                                ),
                                _vm._v(
                                  "(每个key都必填，并且不能相同)\n          "
                                )
                              ]
                            )
                          ],
                          2
                        )
                      ]
                    )
                  : _vm._e(),
                _vm._v(" "),
                _vm.transferStorage.data.type == "inputRadio" ||
                _vm.transferStorage.data.type == "inputCheckBox"
                  ? _c(
                      "div",
                      {
                        staticClass: "se-row se-form-item",
                        attrs: { notClose: "toolTipPortal" }
                      },
                      [
                        _vm._m(11),
                        _vm._v(" "),
                        _c(
                          "div",
                          {
                            staticClass: "se-form-item-wrapper",
                            attrs: { notClose: "toolTipPortal" }
                          },
                          [
                            _c(
                              "div",
                              {
                                staticClass: "se-form-item-control ",
                                attrs: { notClose: "toolTipPortal" }
                              },
                              [
                                _c(
                                  "div",
                                  {
                                    staticClass:
                                      "se-radio-group se-radio-group-large",
                                    attrs: { notClose: "toolTipPortal" }
                                  },
                                  [
                                    _c(
                                      "label",
                                      {
                                        staticClass: "se-radio-wrapper",
                                        attrs: { notClose: "toolTipPortal" },
                                        on: {
                                          click: function($event) {
                                            return _vm._directionFun(
                                              _vm.transferStorage.data,
                                              false,
                                              _vm.transferStorage.data.formId,
                                              $event
                                            )
                                          }
                                        }
                                      },
                                      [
                                        _c(
                                          "span",
                                          {
                                            staticClass: "se-radio",
                                            class: {
                                              "se-radio-group-horizontal": !_vm
                                                .transferStorage.data.direction
                                            },
                                            attrs: { notClose: "toolTipPortal" }
                                          },
                                          [
                                            _c("span", {
                                              staticClass: "se-radio-inner",
                                              attrs: {
                                                notClose: "toolTipPortal"
                                              }
                                            }),
                                            _vm._v(" "),
                                            _c("input", {
                                              staticClass: "se-radio-input",
                                              attrs: {
                                                notClose: "toolTipPortal",
                                                type: "radio",
                                                value: "on"
                                              }
                                            })
                                          ]
                                        ),
                                        _vm._v(" "),
                                        _c(
                                          "span",
                                          {
                                            attrs: { notClose: "toolTipPortal" }
                                          },
                                          [_vm._v("横向")]
                                        )
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "label",
                                      {
                                        staticClass: "se-radio-wrapper",
                                        attrs: { notClose: "toolTipPortal" },
                                        on: {
                                          click: function($event) {
                                            return _vm._directionFun(
                                              _vm.transferStorage.data,
                                              true,
                                              _vm.transferStorage.data.formId,
                                              $event
                                            )
                                          }
                                        }
                                      },
                                      [
                                        _c(
                                          "span",
                                          {
                                            staticClass: "se-radio",
                                            class: {
                                              "se-radio-group-longitudinal":
                                                _vm.transferStorage.data
                                                  .direction
                                            },
                                            attrs: { notClose: "toolTipPortal" }
                                          },
                                          [
                                            _c("span", {
                                              staticClass: "se-radio-inner",
                                              attrs: {
                                                notClose: "toolTipPortal"
                                              }
                                            }),
                                            _vm._v(" "),
                                            _c("input", {
                                              staticClass: "se-radio-input",
                                              attrs: {
                                                notClose: "toolTipPortal",
                                                type: "radio",
                                                value: "on"
                                              }
                                            })
                                          ]
                                        ),
                                        _vm._v(" "),
                                        _c(
                                          "span",
                                          {
                                            attrs: { notClose: "toolTipPortal" }
                                          },
                                          [_vm._v("纵向")]
                                        )
                                      ]
                                    )
                                  ]
                                )
                              ]
                            )
                          ]
                        )
                      ]
                    )
                  : _vm._e(),
                _vm._v(" "),
                _vm.transferStorage.data.type == "date" ||
                _vm.transferStorage.data.type == "dateRange" ||
                _vm.transferStorage.data.type == "leave"
                  ? _c(
                      "div",
                      {
                        staticClass: "se-row se-form-item",
                        attrs: { notClose: "toolTipPortal" }
                      },
                      [
                        _vm._m(12),
                        _vm._v(" "),
                        _c(
                          "div",
                          {
                            staticClass: "se-form-item-wrapper",
                            attrs: { notClose: "toolTipPortal" }
                          },
                          [
                            _c(
                              "div",
                              {
                                staticClass: "se-form-item-control ",
                                attrs: { notClose: "toolTipPortal" }
                              },
                              [
                                _c(
                                  "div",
                                  {
                                    staticClass:
                                      "se-radio-group se-radio-group-large se-radio-group-longitudinal",
                                    attrs: { notClose: "toolTipPortal" }
                                  },
                                  _vm._l(
                                    _vm.transferStorage.data.dateType,
                                    function(itemDate) {
                                      return _c(
                                        "label",
                                        {
                                          staticClass: "se-radio-wrapper",
                                          attrs: { notClose: "toolTipPortal" },
                                          on: {
                                            click: function($event) {
                                              return _vm._dateFormatScreen(
                                                _vm.transferStorage.data,
                                                itemDate,
                                                $event
                                              )
                                            }
                                          }
                                        },
                                        [
                                          _c(
                                            "span",
                                            {
                                              staticClass: "se-radio",
                                              class: {
                                                "se-radio-checked":
                                                  itemDate.isChecked
                                              },
                                              attrs: {
                                                notClose: "toolTipPortal"
                                              }
                                            },
                                            [
                                              _c("span", {
                                                staticClass: "se-radio-inner",
                                                attrs: {
                                                  notClose: "toolTipPortal"
                                                }
                                              }),
                                              _vm._v(" "),
                                              _c("input", {
                                                staticClass: "se-radio-input",
                                                attrs: {
                                                  notClose: "toolTipPortal",
                                                  type: "radio",
                                                  value: "on"
                                                }
                                              })
                                            ]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "span",
                                            {
                                              attrs: {
                                                notClose: "toolTipPortal"
                                              }
                                            },
                                            [
                                              _vm._v(
                                                _vm._s(itemDate.formatShowField)
                                              )
                                            ]
                                          )
                                        ]
                                      )
                                    }
                                  ),
                                  0
                                )
                              ]
                            )
                          ]
                        )
                      ]
                    )
                  : _vm._e(),
                _vm._v(" "),
                _vm.transferStorage.data.type == "date" ||
                _vm.transferStorage.data.type == "dateRange" ||
                _vm.transferStorage.data.type == "leave"
                  ? _c(
                      "div",
                      {
                        staticClass: "se-row se-form-item",
                        attrs: { notClose: "toolTipPortal" }
                      },
                      [
                        _vm._m(13),
                        _vm._v(" "),
                        _c(
                          "div",
                          {
                            staticClass: "se-form-item-wrapper",
                            attrs: { notClose: "toolTipPortal" }
                          },
                          [
                            _c(
                              "div",
                              {
                                staticClass: "se-form-item-control ",
                                attrs: { notClose: "toolTipPortal" }
                              },
                              [
                                _c(
                                  "el-select",
                                  {
                                    attrs: { placeholder: "请选择" },
                                    model: {
                                      value:
                                        _vm.transferStorage.data.selectionRange,
                                      callback: function($$v) {
                                        _vm.$set(
                                          _vm.transferStorage.data,
                                          "selectionRange",
                                          $$v
                                        )
                                      },
                                      expression:
                                        "transferStorage.data.selectionRange"
                                    }
                                  },
                                  [
                                    _c("el-option", {
                                      attrs: { label: "不限", value: "1" }
                                    }),
                                    _vm._v(" "),
                                    _c("el-option", {
                                      attrs: {
                                        label: "大于当前时间",
                                        value: "2"
                                      }
                                    }),
                                    _vm._v(" "),
                                    _c("el-option", {
                                      attrs: {
                                        label: "大于等于当前时间",
                                        value: "3"
                                      }
                                    })
                                  ],
                                  1
                                )
                              ],
                              1
                            )
                          ]
                        )
                      ]
                    )
                  : _vm._e(),
                _vm._v(" "),
                _vm.transferStorage.data.type == "table"
                  ? _c(
                      "div",
                      {
                        staticClass: "se-row se-form-item",
                        attrs: { notClose: "toolTipPortal" }
                      },
                      [
                        _vm._m(14),
                        _vm._v(" "),
                        _c(
                          "div",
                          {
                            staticClass: "se-form-item-wrapper ",
                            attrs: { notClose: "toolTipPortal" }
                          },
                          [
                            _c(
                              "div",
                              {
                                staticClass: "se-form-item-control ",
                                attrs: { notClose: "toolTipPortal" }
                              },
                              [
                                _vm._l(_vm.transferStorage.data.cols, function(
                                  colItem,
                                  index
                                ) {
                                  return _c(
                                    "div",
                                    {
                                      staticClass: "se-table-wrapper",
                                      attrs: { notClose: "toolTipPortal" }
                                    },
                                    [
                                      _c(
                                        "div",
                                        {
                                          staticClass:
                                            "col-xs-12 se-table-control",
                                          attrs: { notClose: "toolTipPortal" }
                                        },
                                        [
                                          _c(
                                            "div",
                                            {
                                              staticClass:
                                                "col-xs-1 se-table-item-label",
                                              attrs: {
                                                notClose: "toolTipPortal"
                                              }
                                            },
                                            [
                                              _c(
                                                "label",
                                                {
                                                  staticClass: "label-control ",
                                                  attrs: {
                                                    notClose: "toolTipPortal"
                                                  }
                                                },
                                                [_vm._v(_vm._s(index + 1))]
                                              )
                                            ]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "div",
                                            {
                                              staticClass: "col-xs-4",
                                              attrs: {
                                                notClose: "toolTipPortal"
                                              }
                                            },
                                            [
                                              _c("input", {
                                                directives: [
                                                  {
                                                    name: "model",
                                                    rawName: "v-model",
                                                    value: colItem.name,
                                                    expression: "colItem.name"
                                                  }
                                                ],
                                                staticClass: "form-control",
                                                attrs: {
                                                  notClose: "toolTipPortal",
                                                  placeholder: "请填写列名",
                                                  type: "text",
                                                  name: ""
                                                },
                                                domProps: {
                                                  value: colItem.name
                                                },
                                                on: {
                                                  input: function($event) {
                                                    if (
                                                      $event.target.composing
                                                    ) {
                                                      return
                                                    }
                                                    _vm.$set(
                                                      colItem,
                                                      "name",
                                                      $event.target.value
                                                    )
                                                  }
                                                }
                                              })
                                            ]
                                          ),
                                          _vm._v(" "),
                                          _c(
                                            "div",
                                            {
                                              staticClass: "col-xs-4",
                                              attrs: {
                                                notClose: "toolTipPortal"
                                              }
                                            },
                                            [
                                              _c("input", {
                                                directives: [
                                                  {
                                                    name: "model",
                                                    rawName: "v-model",
                                                    value: colItem.keyName,
                                                    expression:
                                                      "colItem.keyName"
                                                  }
                                                ],
                                                staticClass: "form-control",
                                                attrs: {
                                                  notClose: "toolTipPortal",
                                                  placeholder: "请填写键名",
                                                  type: "text",
                                                  name: ""
                                                },
                                                domProps: {
                                                  value: colItem.keyName
                                                },
                                                on: {
                                                  input: function($event) {
                                                    if (
                                                      $event.target.composing
                                                    ) {
                                                      return
                                                    }
                                                    _vm.$set(
                                                      colItem,
                                                      "keyName",
                                                      $event.target.value
                                                    )
                                                  }
                                                }
                                              })
                                            ]
                                          ),
                                          _vm._v(" "),
                                          _vm._m(15, true),
                                          _vm._v(" "),
                                          _c(
                                            "div",
                                            {
                                              staticClass: "col-xs-3",
                                              attrs: {
                                                notClose: "toolTipPortal"
                                              }
                                            },
                                            [
                                              _c(
                                                "select",
                                                {
                                                  directives: [
                                                    {
                                                      name: "model",
                                                      rawName: "v-model",
                                                      value: colItem.dataType,
                                                      expression:
                                                        "colItem.dataType"
                                                    }
                                                  ],
                                                  staticClass: "form-control",
                                                  attrs: {
                                                    disabled:
                                                      colItem.dataType ==
                                                      "operaBtn",
                                                    notClose: "toolTipPortal"
                                                  },
                                                  on: {
                                                    change: function($event) {
                                                      var $$selectedVal = Array.prototype.filter
                                                        .call(
                                                          $event.target.options,
                                                          function(o) {
                                                            return o.selected
                                                          }
                                                        )
                                                        .map(function(o) {
                                                          var val =
                                                            "_value" in o
                                                              ? o._value
                                                              : o.value
                                                          return val
                                                        })
                                                      _vm.$set(
                                                        colItem,
                                                        "dataType",
                                                        $event.target.multiple
                                                          ? $$selectedVal
                                                          : $$selectedVal[0]
                                                      )
                                                    }
                                                  }
                                                },
                                                [
                                                  _c(
                                                    "option",
                                                    {
                                                      attrs: {
                                                        notClose:
                                                          "toolTipPortal",
                                                        value: "text"
                                                      }
                                                    },
                                                    [_vm._v("文本")]
                                                  ),
                                                  _vm._v(" "),
                                                  _c(
                                                    "option",
                                                    {
                                                      attrs: {
                                                        notClose:
                                                          "toolTipPortal",
                                                        value: "controlTable"
                                                      }
                                                    },
                                                    [_vm._v("对照表")]
                                                  ),
                                                  _vm._v(" "),
                                                  _c(
                                                    "option",
                                                    {
                                                      attrs: {
                                                        notClose:
                                                          "toolTipPortal",
                                                        value: "text"
                                                      }
                                                    },
                                                    [_vm._v("文本")]
                                                  ),
                                                  _vm._v(" "),
                                                  _c(
                                                    "option",
                                                    {
                                                      attrs: {
                                                        notClose:
                                                          "toolTipPortal",
                                                        value:
                                                          "yyyy年MM月dd日 hh:mm:ss"
                                                      }
                                                    },
                                                    [_vm._v("年月日 时分秒")]
                                                  ),
                                                  _vm._v(" "),
                                                  _c(
                                                    "option",
                                                    {
                                                      attrs: {
                                                        notClose:
                                                          "toolTipPortal",
                                                        value: "yyyy年MM月dd日"
                                                      }
                                                    },
                                                    [_vm._v("年月日")]
                                                  ),
                                                  _vm._v(" "),
                                                  _c(
                                                    "option",
                                                    {
                                                      attrs: {
                                                        notClose:
                                                          "toolTipPortal",
                                                        value: "yyyy年MM月"
                                                      }
                                                    },
                                                    [_vm._v("年月")]
                                                  ),
                                                  _vm._v(" "),
                                                  _c(
                                                    "option",
                                                    {
                                                      attrs: {
                                                        notClose:
                                                          "toolTipPortal",
                                                        value: "yyyy年"
                                                      }
                                                    },
                                                    [_vm._v("年")]
                                                  )
                                                ]
                                              )
                                            ]
                                          )
                                        ]
                                      ),
                                      _vm._v(" "),
                                      _c(
                                        "div",
                                        {
                                          staticClass: "btn-del",
                                          attrs: { notClose: "toolTipPortal" },
                                          on: {
                                            click: function($event) {
                                              return _vm.delCol(
                                                colItem,
                                                index,
                                                _vm.transferStorage.data
                                              )
                                            }
                                          }
                                        },
                                        [
                                          _c(
                                            "i",
                                            {
                                              attrs: {
                                                notClose: "toolTipPortal"
                                              }
                                            },
                                            [_vm._v("x")]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                }),
                                _vm._v(" "),
                                _c(
                                  "div",
                                  { attrs: { notClose: "toolTipPortal" } },
                                  [
                                    _c(
                                      "button",
                                      {
                                        staticClass: "btn btn-primary",
                                        attrs: { notClose: "toolTipPortal" },
                                        on: {
                                          click: function($event) {
                                            return _vm.addTableCol(
                                              _vm.transferStorage.data
                                            )
                                          }
                                        }
                                      },
                                      [_vm._v("添加列")]
                                    )
                                  ]
                                )
                              ],
                              2
                            )
                          ]
                        ),
                        _vm._v(" "),
                        _c("hr"),
                        _vm._v(" "),
                        !_vm.transferStorage.data.isShowHeader
                          ? _c(
                              "div",
                              {
                                staticClass: "se-form-item-label",
                                attrs: { notClose: "toolTipPortal" }
                              },
                              [
                                _c(
                                  "label",
                                  {
                                    staticClass: "se-form-item-required",
                                    attrs: { notClose: "toolTipPortal" }
                                  },
                                  [_vm._v("请求地址")]
                                )
                              ]
                            )
                          : _vm._e(),
                        _vm._v(" "),
                        !_vm.transferStorage.data.isShowHeader
                          ? _c(
                              "div",
                              {
                                staticClass: "se-form-item-wrapper",
                                attrs: { notClose: "toolTipPortal" }
                              },
                              [
                                _c(
                                  "div",
                                  {
                                    staticClass: "se-form-item-control ",
                                    attrs: { notClose: "toolTipPortal" }
                                  },
                                  [
                                    _c(
                                      "div",
                                      {
                                        staticClass:
                                          "col-xs-12 se-table-control",
                                        attrs: { notClose: "toolTipPortal" }
                                      },
                                      [
                                        _c(
                                          "div",
                                          {
                                            staticClass: "col-xs-6",
                                            attrs: { notClose: "toolTipPortal" }
                                          },
                                          [
                                            _c("input", {
                                              directives: [
                                                {
                                                  name: "model",
                                                  rawName: "v-model",
                                                  value:
                                                    _vm.transferStorage.data
                                                      .requestUrl,
                                                  expression:
                                                    "transferStorage.data.requestUrl"
                                                }
                                              ],
                                              staticClass: "form-control",
                                              attrs: {
                                                notClose: "toolTipPortal",
                                                placeholder:
                                                  "请填写操作请求地址",
                                                type: "text",
                                                name: ""
                                              },
                                              domProps: {
                                                value:
                                                  _vm.transferStorage.data
                                                    .requestUrl
                                              },
                                              on: {
                                                input: function($event) {
                                                  if ($event.target.composing) {
                                                    return
                                                  }
                                                  _vm.$set(
                                                    _vm.transferStorage.data,
                                                    "requestUrl",
                                                    $event.target.value
                                                  )
                                                }
                                              }
                                            })
                                          ]
                                        )
                                      ]
                                    )
                                  ]
                                )
                              ]
                            )
                          : _vm._e(),
                        _vm._v(" "),
                        !_vm.transferStorage.data.isShowHeader
                          ? _c(
                              "div",
                              {
                                staticClass: "se-row se-form-item",
                                attrs: { notClose: "toolTipPortal" }
                              },
                              [
                                _vm._m(16),
                                _vm._v(" "),
                                _c(
                                  "div",
                                  {
                                    staticClass: "se-form-item-wrapper",
                                    staticStyle: {
                                      width: "170px",
                                      "padding-left": "0",
                                      display: "inline-block"
                                    },
                                    attrs: { notClose: "toolTipPortal" }
                                  },
                                  [
                                    _c(
                                      "div",
                                      {
                                        staticClass: "se-form-item-control ",
                                        attrs: { notClose: "toolTipPortal" }
                                      },
                                      [
                                        _c(
                                          "div",
                                          {
                                            staticClass:
                                              "se-radio-group se-radio-group-large se-radio-group-horizontal",
                                            attrs: { notClose: "toolTipPortal" }
                                          },
                                          [
                                            _c(
                                              "label",
                                              {
                                                staticClass: "se-radio-wrapper",
                                                attrs: {
                                                  notClose: "toolTipPortal"
                                                },
                                                on: {
                                                  click: function($event) {
                                                    return _vm._isOperationFun(
                                                      _vm.transferStorage.data,
                                                      true,
                                                      $event
                                                    )
                                                  }
                                                }
                                              },
                                              [
                                                _c(
                                                  "span",
                                                  {
                                                    staticClass: "se-radio",
                                                    class: {
                                                      "se-radio-checked":
                                                        _vm.transferStorage.data
                                                          .isOperation
                                                    },
                                                    attrs: {
                                                      notClose: "toolTipPortal"
                                                    }
                                                  },
                                                  [
                                                    _c("span", {
                                                      staticClass:
                                                        "se-radio-inner",
                                                      attrs: {
                                                        notClose:
                                                          "toolTipPortal"
                                                      }
                                                    }),
                                                    _vm._v(" "),
                                                    _c("input", {
                                                      staticClass:
                                                        "se-radio-input",
                                                      attrs: {
                                                        notClose:
                                                          "toolTipPortal",
                                                        type: "radio",
                                                        value: "on"
                                                      }
                                                    })
                                                  ]
                                                ),
                                                _vm._v(" "),
                                                _c(
                                                  "span",
                                                  {
                                                    attrs: {
                                                      notClose: "toolTipPortal"
                                                    }
                                                  },
                                                  [_vm._v("是")]
                                                )
                                              ]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "label",
                                              {
                                                staticClass: "se-radio-wrapper",
                                                attrs: {
                                                  notClose: "toolTipPortal"
                                                },
                                                on: {
                                                  click: function($event) {
                                                    return _vm._isOperationFun(
                                                      _vm.transferStorage.data,
                                                      false,
                                                      $event
                                                    )
                                                  }
                                                }
                                              },
                                              [
                                                _c(
                                                  "span",
                                                  {
                                                    staticClass: "se-radio",
                                                    class: {
                                                      "se-radio-checked": !_vm
                                                        .transferStorage.data
                                                        .isOperation
                                                    },
                                                    attrs: {
                                                      notClose: "toolTipPortal"
                                                    }
                                                  },
                                                  [
                                                    _c("span", {
                                                      staticClass:
                                                        "se-radio-inner",
                                                      attrs: {
                                                        notClose:
                                                          "toolTipPortal"
                                                      }
                                                    }),
                                                    _vm._v(" "),
                                                    _c("input", {
                                                      staticClass:
                                                        "se-radio-input",
                                                      attrs: {
                                                        notClose:
                                                          "toolTipPortal",
                                                        type: "radio",
                                                        value: "on"
                                                      }
                                                    })
                                                  ]
                                                ),
                                                _vm._v(" "),
                                                _c(
                                                  "span",
                                                  {
                                                    attrs: {
                                                      notClose: "toolTipPortal"
                                                    }
                                                  },
                                                  [_vm._v("否")]
                                                )
                                              ]
                                            )
                                          ]
                                        )
                                      ]
                                    )
                                  ]
                                ),
                                _vm._v(" "),
                                _c(
                                  "label",
                                  { attrs: { notClose: "toolTipPortal" } },
                                  [_vm._v("操作类型：")]
                                ),
                                _vm._v(" "),
                                _c(
                                  "div",
                                  {
                                    staticStyle: {
                                      width: "100px",
                                      display: "inline-block"
                                    },
                                    attrs: { notClose: "toolTipPortal" }
                                  },
                                  [
                                    _c(
                                      "select",
                                      {
                                        directives: [
                                          {
                                            name: "model",
                                            rawName: "v-model",
                                            value: _vm.transferStorage.dataType,
                                            expression:
                                              "transferStorage.dataType"
                                          }
                                        ],
                                        staticClass: "form-control",
                                        attrs: { notClose: "toolTipPortal" },
                                        on: {
                                          change: function($event) {
                                            var $$selectedVal = Array.prototype.filter
                                              .call(
                                                $event.target.options,
                                                function(o) {
                                                  return o.selected
                                                }
                                              )
                                              .map(function(o) {
                                                var val =
                                                  "_value" in o
                                                    ? o._value
                                                    : o.value
                                                return val
                                              })
                                            _vm.$set(
                                              _vm.transferStorage,
                                              "dataType",
                                              $event.target.multiple
                                                ? $$selectedVal
                                                : $$selectedVal[0]
                                            )
                                          }
                                        }
                                      },
                                      [
                                        _c(
                                          "option",
                                          {
                                            attrs: {
                                              notClose: "toolTipPortal",
                                              value: "radio"
                                            }
                                          },
                                          [_vm._v("单选")]
                                        ),
                                        _vm._v(" "),
                                        _c(
                                          "option",
                                          {
                                            attrs: {
                                              notClose: "toolTipPortal",
                                              value: "checkbox"
                                            }
                                          },
                                          [_vm._v("多选")]
                                        )
                                      ]
                                    )
                                  ]
                                )
                              ]
                            )
                          : _vm._e(),
                        _vm._v(" "),
                        _c(
                          "div",
                          {
                            staticClass: "se-row se-form-item",
                            attrs: { notClose: "toolTipPortal" }
                          },
                          [
                            _vm._m(17),
                            _vm._v(" "),
                            _c(
                              "div",
                              {
                                staticClass: "se-form-item-wrapper",
                                staticStyle: {
                                  width: "170px",
                                  "padding-left": "0",
                                  display: "inline-block"
                                },
                                attrs: { notClose: "toolTipPortal" }
                              },
                              [
                                _c(
                                  "div",
                                  {
                                    staticClass: "se-form-item-control ",
                                    attrs: { notClose: "toolTipPortal" }
                                  },
                                  [
                                    _c(
                                      "div",
                                      {
                                        staticClass:
                                          "se-radio-group se-radio-group-large se-radio-group-horizontal",
                                        attrs: { notClose: "toolTipPortal" }
                                      },
                                      [
                                        _c(
                                          "label",
                                          {
                                            staticClass: "se-radio-wrapper",
                                            attrs: {
                                              notClose: "toolTipPortal"
                                            },
                                            on: {
                                              click: function($event) {
                                                return _vm._isShowHeaderFun(
                                                  _vm.transferStorage.data,
                                                  true,
                                                  $event
                                                )
                                              }
                                            }
                                          },
                                          [
                                            _c(
                                              "span",
                                              {
                                                staticClass: "se-radio",
                                                class: {
                                                  "se-radio-checked":
                                                    _vm.transferStorage.data
                                                      .isShowHeader
                                                },
                                                attrs: {
                                                  notClose: "toolTipPortal"
                                                }
                                              },
                                              [
                                                _c("span", {
                                                  staticClass: "se-radio-inner",
                                                  attrs: {
                                                    notClose: "toolTipPortal"
                                                  }
                                                }),
                                                _vm._v(" "),
                                                _c("input", {
                                                  staticClass: "se-radio-input",
                                                  attrs: {
                                                    notClose: "toolTipPortal",
                                                    type: "radio",
                                                    value: "on"
                                                  }
                                                })
                                              ]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "span",
                                              {
                                                attrs: {
                                                  notClose: "toolTipPortal"
                                                }
                                              },
                                              [_vm._v("是")]
                                            )
                                          ]
                                        ),
                                        _vm._v(" "),
                                        _c(
                                          "label",
                                          {
                                            staticClass: "se-radio-wrapper",
                                            attrs: {
                                              notClose: "toolTipPortal"
                                            },
                                            on: {
                                              click: function($event) {
                                                return _vm._isShowHeaderFun(
                                                  _vm.transferStorage.data,
                                                  false,
                                                  $event
                                                )
                                              }
                                            }
                                          },
                                          [
                                            _c(
                                              "span",
                                              {
                                                staticClass: "se-radio",
                                                class: {
                                                  "se-radio-checked": !_vm
                                                    .transferStorage.data
                                                    .isShowHeader
                                                },
                                                attrs: {
                                                  notClose: "toolTipPortal"
                                                }
                                              },
                                              [
                                                _c("span", {
                                                  staticClass: "se-radio-inner",
                                                  attrs: {
                                                    notClose: "toolTipPortal"
                                                  }
                                                }),
                                                _vm._v(" "),
                                                _c("input", {
                                                  staticClass: "se-radio-input",
                                                  attrs: {
                                                    notClose: "toolTipPortal",
                                                    type: "radio",
                                                    value: "on"
                                                  }
                                                })
                                              ]
                                            ),
                                            _vm._v(" "),
                                            _c(
                                              "span",
                                              {
                                                attrs: {
                                                  notClose: "toolTipPortal"
                                                }
                                              },
                                              [_vm._v("否")]
                                            )
                                          ]
                                        )
                                      ]
                                    )
                                  ]
                                )
                              ]
                            )
                          ]
                        )
                      ]
                    )
                  : _vm._e(),
                _vm._v(" "),
                _vm.transferStorage.data.type == "inputButton"
                  ? _c(
                      "div",
                      {
                        staticClass: "se-row se-form-item",
                        attrs: { notClose: "toolTipPortal" }
                      },
                      [
                        _vm._m(18),
                        _vm._v(" "),
                        _c(
                          "div",
                          {
                            staticClass: "se-form-item-wrapper",
                            staticStyle: { display: "none" },
                            attrs: { notClose: "toolTipPortal" }
                          },
                          [
                            _c(
                              "div",
                              {
                                staticClass: "se-form-item-control ",
                                attrs: { notClose: "toolTipPortal" }
                              },
                              [
                                _c(
                                  "span",
                                  {
                                    staticClass: "se-input-wrapper",
                                    attrs: { notClose: "toolTipPortal" }
                                  },
                                  [
                                    _c(
                                      "select",
                                      {
                                        directives: [
                                          {
                                            name: "model",
                                            rawName: "v-model",
                                            value:
                                              _vm.transferStorage.data
                                                .requestUrlTypeId,
                                            expression:
                                              "transferStorage.data.requestUrlTypeId"
                                          }
                                        ],
                                        staticStyle: {
                                          height: "34px",
                                          "border-radius": "5px",
                                          border: "1px solid #ccc",
                                          width: "100%"
                                        },
                                        attrs: { notClose: "toolTipPortal" },
                                        on: {
                                          change: [
                                            function($event) {
                                              var $$selectedVal = Array.prototype.filter
                                                .call(
                                                  $event.target.options,
                                                  function(o) {
                                                    return o.selected
                                                  }
                                                )
                                                .map(function(o) {
                                                  var val =
                                                    "_value" in o
                                                      ? o._value
                                                      : o.value
                                                  return val
                                                })
                                              _vm.$set(
                                                _vm.transferStorage.data,
                                                "requestUrlTypeId",
                                                $event.target.multiple
                                                  ? $$selectedVal
                                                  : $$selectedVal[0]
                                              )
                                            },
                                            function($event) {
                                              return _vm.getButtonList(
                                                _vm.transferStorage.data
                                                  .requestUrlTypeId
                                              )
                                            }
                                          ]
                                        }
                                      },
                                      _vm._l(_vm.buttonUrlTypeList, function(
                                        itemTUrl,
                                        indexTurl
                                      ) {
                                        return _c("option", {
                                          key: indexTurl,
                                          attrs: {
                                            notClose: "toolTipPortal",
                                            label: itemTUrl.name
                                          },
                                          domProps: { value: itemTUrl.id }
                                        })
                                      }),
                                      0
                                    )
                                  ]
                                )
                              ]
                            )
                          ]
                        ),
                        _vm._v(" "),
                        _vm._m(19),
                        _vm._v(" "),
                        _c(
                          "div",
                          {
                            staticClass: "se-form-item-wrapper",
                            staticStyle: { "margin-top": "10px" },
                            attrs: { notClose: "toolTipPortal" }
                          },
                          [
                            _c(
                              "div",
                              {
                                staticClass: "se-form-item-control ",
                                attrs: { notClose: "toolTipPortal" }
                              },
                              [
                                _c(
                                  "span",
                                  {
                                    staticClass: "se-input-wrapper",
                                    attrs: { notClose: "toolTipPortal" }
                                  },
                                  [
                                    _c(
                                      "select",
                                      {
                                        directives: [
                                          {
                                            name: "model",
                                            rawName: "v-model",
                                            value:
                                              _vm.transferStorage.data
                                                .requestUrl,
                                            expression:
                                              "transferStorage.data.requestUrl"
                                          }
                                        ],
                                        staticStyle: {
                                          height: "34px",
                                          "border-radius": "5px",
                                          border: "1px solid #ccc",
                                          width: "100%"
                                        },
                                        attrs: { notClose: "toolTipPortal" },
                                        on: {
                                          change: [
                                            function($event) {
                                              var $$selectedVal = Array.prototype.filter
                                                .call(
                                                  $event.target.options,
                                                  function(o) {
                                                    return o.selected
                                                  }
                                                )
                                                .map(function(o) {
                                                  var val =
                                                    "_value" in o
                                                      ? o._value
                                                      : o.value
                                                  return val
                                                })
                                              _vm.$set(
                                                _vm.transferStorage.data,
                                                "requestUrl",
                                                $event.target.multiple
                                                  ? $$selectedVal
                                                  : $$selectedVal[0]
                                              )
                                            },
                                            function($event) {
                                              return _vm.reuqestUrlFun(
                                                _vm.transferStorage.data
                                                  .requestUrl,
                                                "buttonUrlList",
                                                _vm.transferStorage.data
                                              )
                                            }
                                          ]
                                        }
                                      },
                                      _vm._l(_vm.buttonUrlList, function(
                                        itemUrl,
                                        indexUrl
                                      ) {
                                        return _c("option", {
                                          key: indexUrl,
                                          attrs: {
                                            notClose: "toolTipPortal",
                                            label: itemUrl.requestName
                                          },
                                          domProps: {
                                            value: itemUrl.requestUrl
                                          }
                                        })
                                      }),
                                      0
                                    )
                                  ]
                                )
                              ]
                            )
                          ]
                        )
                      ]
                    )
                  : _vm._e(),
                _vm._v(" "),
                _vm.transferStorage.data.type == "appointSelect"
                  ? _c(
                      "div",
                      {
                        staticClass: "se-row se-form-item",
                        attrs: { notClose: "toolTipPortal" }
                      },
                      [
                        _vm._m(20),
                        _vm._v(" "),
                        _c(
                          "div",
                          {
                            staticClass: "se-form-item-wrapper",
                            attrs: { notClose: "toolTipPortal" }
                          },
                          [
                            _c(
                              "div",
                              {
                                staticClass: "se-form-item-control ",
                                attrs: { notClose: "toolTipPortal" }
                              },
                              [
                                _c(
                                  "span",
                                  {
                                    staticClass: "se-input-wrapper",
                                    attrs: { notClose: "toolTipPortal" }
                                  },
                                  [
                                    _c(
                                      "select",
                                      {
                                        directives: [
                                          {
                                            name: "model",
                                            rawName: "v-model",
                                            value:
                                              _vm.transferStorage.data
                                                .requestUrl,
                                            expression:
                                              "transferStorage.data.requestUrl"
                                          }
                                        ],
                                        staticStyle: {
                                          height: "34px",
                                          "border-radius": "5px",
                                          border: "1px solid #ccc",
                                          width: "100%"
                                        },
                                        attrs: { notClose: "toolTipPortal" },
                                        on: {
                                          change: [
                                            function($event) {
                                              var $$selectedVal = Array.prototype.filter
                                                .call(
                                                  $event.target.options,
                                                  function(o) {
                                                    return o.selected
                                                  }
                                                )
                                                .map(function(o) {
                                                  var val =
                                                    "_value" in o
                                                      ? o._value
                                                      : o.value
                                                  return val
                                                })
                                              _vm.$set(
                                                _vm.transferStorage.data,
                                                "requestUrl",
                                                $event.target.multiple
                                                  ? $$selectedVal
                                                  : $$selectedVal[0]
                                              )
                                            },
                                            function($event) {
                                              return _vm.reuqestUrlFun(
                                                _vm.transferStorage.data
                                                  .requestUrl,
                                                "personnelUrlList",
                                                _vm.transferStorage.data
                                              )
                                            }
                                          ]
                                        }
                                      },
                                      _vm._l(_vm.personnelUrlList, function(
                                        itemUrl,
                                        indexUrl
                                      ) {
                                        return _c("option", {
                                          key: indexUrl,
                                          attrs: {
                                            notClose: "toolTipPortal",
                                            label: itemUrl.requestName
                                          },
                                          domProps: {
                                            value: itemUrl.requestUrl
                                          }
                                        })
                                      }),
                                      0
                                    )
                                  ]
                                )
                              ]
                            )
                          ]
                        )
                      ]
                    )
                  : _vm._e(),
                _vm._v(" "),
                _vm.transferStorage.data.type == "editFile" ||
                _vm.transferStorage.data.type == "exportResult" ||
                _vm.transferStorage.data.type == "payCode" ||
                _vm.transferStorage.data.type == "tree"
                  ? _c(
                      "div",
                      {
                        staticClass: "se-row se-form-item",
                        attrs: { notClose: "toolTipPortal" }
                      },
                      [
                        _vm._m(21),
                        _vm._v(" "),
                        _c(
                          "div",
                          {
                            staticClass: "se-form-item-wrapper",
                            attrs: { notClose: "toolTipPortal" }
                          },
                          [
                            _c(
                              "div",
                              {
                                staticClass: "se-form-item-control ",
                                attrs: { notClose: "toolTipPortal" }
                              },
                              [
                                _c(
                                  "div",
                                  {
                                    staticClass: "col-xs-12 se-table-control",
                                    attrs: { notClose: "toolTipPortal" }
                                  },
                                  [
                                    _c(
                                      "div",
                                      {
                                        staticClass: "col-xs-6",
                                        attrs: { notClose: "toolTipPortal" }
                                      },
                                      [
                                        _c("input", {
                                          directives: [
                                            {
                                              name: "model",
                                              rawName: "v-model",
                                              value:
                                                _vm.transferStorage.data
                                                  .requestUrl,
                                              expression:
                                                "transferStorage.data.requestUrl"
                                            }
                                          ],
                                          staticClass: "form-control",
                                          attrs: {
                                            notClose: "toolTipPortal",
                                            placeholder: "请填写操作请求地址",
                                            type: "text",
                                            name: ""
                                          },
                                          domProps: {
                                            value:
                                              _vm.transferStorage.data
                                                .requestUrl
                                          },
                                          on: {
                                            input: function($event) {
                                              if ($event.target.composing) {
                                                return
                                              }
                                              _vm.$set(
                                                _vm.transferStorage.data,
                                                "requestUrl",
                                                $event.target.value
                                              )
                                            }
                                          }
                                        })
                                      ]
                                    )
                                  ]
                                )
                              ]
                            )
                          ]
                        ),
                        _vm._v(" "),
                        _vm._m(22),
                        _vm._v(" "),
                        _c(
                          "div",
                          {
                            staticClass: "se-form-item-wrapper",
                            attrs: { notClose: "toolTipPortal" }
                          },
                          [
                            _c(
                              "div",
                              {
                                staticClass: "se-form-item-control ",
                                attrs: { notClose: "toolTipPortal" }
                              },
                              [
                                _c(
                                  "div",
                                  {
                                    staticClass:
                                      "se-radio-group se-radio-group-large se-radio-group-horizontal",
                                    attrs: { notClose: "toolTipPortal" }
                                  },
                                  [
                                    _c(
                                      "label",
                                      {
                                        staticClass: "se-radio-wrapper",
                                        attrs: { notClose: "toolTipPortal" },
                                        on: {
                                          click: function($event) {
                                            return _vm.isCheckboxFun(
                                              _vm.transferStorage.data,
                                              true,
                                              $event
                                            )
                                          }
                                        }
                                      },
                                      [
                                        _c(
                                          "span",
                                          {
                                            staticClass: "se-radio",
                                            class: {
                                              "se-radio-checked":
                                                _vm.transferStorage.data
                                                  .checkboxType
                                            },
                                            attrs: { notClose: "toolTipPortal" }
                                          },
                                          [
                                            _c("span", {
                                              staticClass: "se-radio-inner",
                                              attrs: {
                                                notClose: "toolTipPortal"
                                              }
                                            }),
                                            _vm._v(" "),
                                            _c("input", {
                                              staticClass: "se-radio-input",
                                              attrs: {
                                                notClose: "toolTipPortal",
                                                type: "radio",
                                                value: "on"
                                              }
                                            })
                                          ]
                                        ),
                                        _vm._v(" "),
                                        _c(
                                          "span",
                                          {
                                            attrs: { notClose: "toolTipPortal" }
                                          },
                                          [_vm._v("是")]
                                        )
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "label",
                                      {
                                        staticClass: "se-radio-wrapper",
                                        attrs: { notClose: "toolTipPortal" },
                                        on: {
                                          click: function($event) {
                                            return _vm.isCheckboxFun(
                                              _vm.transferStorage.data,
                                              false,
                                              $event
                                            )
                                          }
                                        }
                                      },
                                      [
                                        _c(
                                          "span",
                                          {
                                            staticClass: "se-radio",
                                            class: {
                                              "se-radio-checked": !_vm
                                                .transferStorage.data
                                                .checkboxType
                                            },
                                            attrs: { notClose: "toolTipPortal" }
                                          },
                                          [
                                            _c("span", {
                                              staticClass: "se-radio-inner",
                                              attrs: {
                                                notClose: "toolTipPortal"
                                              }
                                            }),
                                            _vm._v(" "),
                                            _c("input", {
                                              staticClass: "se-radio-input",
                                              attrs: {
                                                notClose: "toolTipPortal",
                                                type: "radio",
                                                value: "on"
                                              }
                                            })
                                          ]
                                        ),
                                        _vm._v(" "),
                                        _c(
                                          "span",
                                          {
                                            attrs: { notClose: "toolTipPortal" }
                                          },
                                          [_vm._v("否")]
                                        )
                                      ]
                                    )
                                  ]
                                )
                              ]
                            )
                          ]
                        )
                      ]
                    )
                  : _vm._e(),
                _vm._v(" "),
                _c(
                  "div",
                  {
                    directives: [
                      {
                        name: "show",
                        rawName: "v-show",
                        value: _vm.transferStorage.data.type == "appointSelect",
                        expression:
                          "transferStorage.data.type == 'appointSelect'"
                      }
                    ],
                    staticClass: "se-row se-form-item",
                    attrs: { notClose: "toolTipPortal" }
                  },
                  [
                    _vm._m(23),
                    _vm._v(" "),
                    _c(
                      "div",
                      {
                        staticClass: "se-form-item-wrapper",
                        attrs: { notClose: "toolTipPortal" }
                      },
                      [
                        _c(
                          "div",
                          {
                            staticClass: "se-form-item-control ",
                            attrs: { notClose: "toolTipPortal" }
                          },
                          [
                            _c(
                              "div",
                              {
                                staticClass:
                                  "se-radio-group se-radio-group-large se-radio-group-horizontal",
                                attrs: { notClose: "toolTipPortal" }
                              },
                              [
                                _c(
                                  "label",
                                  {
                                    staticClass: "se-radio-wrapper",
                                    attrs: { notClose: "toolTipPortal" },
                                    on: {
                                      click: function($event) {
                                        return _vm.isMultiSelectionFun(
                                          _vm.transferStorage.data,
                                          true,
                                          $event
                                        )
                                      }
                                    }
                                  },
                                  [
                                    _c(
                                      "span",
                                      {
                                        staticClass: "se-radio",
                                        class: {
                                          "se-radio-checked":
                                            _vm.transferStorage.data
                                              .isMultiSelection
                                        },
                                        attrs: { notClose: "toolTipPortal" }
                                      },
                                      [
                                        _c("span", {
                                          staticClass: "se-radio-inner",
                                          attrs: { notClose: "toolTipPortal" }
                                        }),
                                        _vm._v(" "),
                                        _c("input", {
                                          staticClass: "se-radio-input",
                                          attrs: {
                                            notClose: "toolTipPortal",
                                            type: "radio",
                                            value: "on"
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "span",
                                      { attrs: { notClose: "toolTipPortal" } },
                                      [_vm._v("是")]
                                    )
                                  ]
                                ),
                                _vm._v(" "),
                                _c(
                                  "label",
                                  {
                                    staticClass: "se-radio-wrapper",
                                    attrs: { notClose: "toolTipPortal" },
                                    on: {
                                      click: function($event) {
                                        return _vm.isMultiSelectionFun(
                                          _vm.transferStorage.data,
                                          false,
                                          $event
                                        )
                                      }
                                    }
                                  },
                                  [
                                    _c(
                                      "span",
                                      {
                                        staticClass: "se-radio",
                                        class: {
                                          "se-radio-checked": !_vm
                                            .transferStorage.data
                                            .isMultiSelection
                                        },
                                        attrs: { notClose: "toolTipPortal" }
                                      },
                                      [
                                        _c("span", {
                                          staticClass: "se-radio-inner",
                                          attrs: { notClose: "toolTipPortal" }
                                        }),
                                        _vm._v(" "),
                                        _c("input", {
                                          staticClass: "se-radio-input",
                                          attrs: {
                                            notClose: "toolTipPortal",
                                            type: "radio",
                                            value: "on"
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "span",
                                      { attrs: { notClose: "toolTipPortal" } },
                                      [_vm._v("否")]
                                    )
                                  ]
                                )
                              ]
                            )
                          ]
                        )
                      ]
                    )
                  ]
                ),
                _vm._v(" "),
                _c(
                  "div",
                  {
                    directives: [
                      {
                        name: "show",
                        rawName: "v-show",
                        value:
                          _vm.transferStorage.data.type != "inputButton" &&
                          _vm.transferStorage.data.type != "payCode" &&
                          (_vm.transferStorage.data.type == "table"
                            ? _vm.transferStorage.data.isOperation
                            : true),
                        expression:
                          "transferStorage.data.type != 'inputButton'  \n                  && transferStorage.data.type !='payCode' \n                  && (transferStorage.data.type == 'table' ? transferStorage.data.isOperation : true)"
                      }
                    ],
                    staticClass: "se-row se-form-item",
                    attrs: { notClose: "toolTipPortal" }
                  },
                  [
                    _vm._m(24),
                    _vm._v(" "),
                    _c(
                      "div",
                      {
                        staticClass: "se-form-item-wrapper",
                        attrs: { notClose: "toolTipPortal" }
                      },
                      [
                        _c(
                          "div",
                          {
                            staticClass: "se-form-item-control ",
                            attrs: { notClose: "toolTipPortal" }
                          },
                          [
                            _c(
                              "div",
                              {
                                staticClass:
                                  "se-radio-group se-radio-group-large se-radio-group-horizontal",
                                attrs: { notClose: "toolTipPortal" }
                              },
                              [
                                _c(
                                  "label",
                                  {
                                    staticClass: "se-radio-wrapper",
                                    attrs: { notClose: "toolTipPortal" },
                                    on: {
                                      click: function($event) {
                                        return _vm._isRequiredFun(
                                          _vm.transferStorage.data,
                                          true,
                                          $event
                                        )
                                      }
                                    }
                                  },
                                  [
                                    _c(
                                      "span",
                                      {
                                        staticClass: "se-radio",
                                        class: {
                                          "se-radio-checked":
                                            _vm.transferStorage.data.isRequired
                                        },
                                        attrs: { notClose: "toolTipPortal" }
                                      },
                                      [
                                        _c("span", {
                                          staticClass: "se-radio-inner",
                                          attrs: { notClose: "toolTipPortal" }
                                        }),
                                        _vm._v(" "),
                                        _c("input", {
                                          staticClass: "se-radio-input",
                                          attrs: {
                                            notClose: "toolTipPortal",
                                            type: "radio",
                                            value: "on"
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "span",
                                      { attrs: { notClose: "toolTipPortal" } },
                                      [_vm._v("是")]
                                    )
                                  ]
                                ),
                                _vm._v(" "),
                                _c(
                                  "label",
                                  {
                                    staticClass: "se-radio-wrapper",
                                    attrs: { notClose: "toolTipPortal" },
                                    on: {
                                      click: function($event) {
                                        return _vm._isRequiredFun(
                                          _vm.transferStorage.data,
                                          false,
                                          $event
                                        )
                                      }
                                    }
                                  },
                                  [
                                    _c(
                                      "span",
                                      {
                                        staticClass: "se-radio",
                                        class: {
                                          "se-radio-checked": !_vm
                                            .transferStorage.data.isRequired
                                        },
                                        attrs: { notClose: "toolTipPortal" }
                                      },
                                      [
                                        _c("span", {
                                          staticClass: "se-radio-inner",
                                          attrs: { notClose: "toolTipPortal" }
                                        }),
                                        _vm._v(" "),
                                        _c("input", {
                                          staticClass: "se-radio-input",
                                          attrs: {
                                            notClose: "toolTipPortal",
                                            type: "radio",
                                            value: "on"
                                          }
                                        })
                                      ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                      "span",
                                      { attrs: { notClose: "toolTipPortal" } },
                                      [_vm._v("否")]
                                    )
                                  ]
                                )
                              ]
                            )
                          ]
                        )
                      ]
                    )
                  ]
                )
              ]
            )
          ]
        )
      : _vm._e(),
    _vm._v(" "),
    _c(
      "div",
      {
        ref: "numm",
        staticClass: "se-popover",
        staticStyle: {
          left: "775px",
          top: "538px",
          "transform-origin": "206px 50% 0px"
        }
      },
      [
        _c("div", { staticClass: "se-popover-content" }, [
          _c("div", { staticClass: "se-popover-arrow" }),
          _vm._v(" "),
          _c("div", { staticClass: "se-popover-inner" }, [
            _c("div", { staticClass: "se-popover-inner-content" }, [
              _vm._m(25),
              _vm._v(" "),
              _c("div", { staticClass: "se-popover-buttons" }, [
                _c(
                  "button",
                  {
                    staticClass: "se-btn se-btn-ghost btn",
                    attrs: { type: "button" },
                    on: { click: _vm._delComponentNo }
                  },
                  [_c("span", [_vm._v("取 消")])]
                ),
                _vm._v(" "),
                _c(
                  "button",
                  {
                    staticClass: "se-btn se-btn-primary btn btn-primary",
                    attrs: { type: "button" },
                    on: { click: _vm._delComponentYes }
                  },
                  [_c("span", [_vm._v("确 定")])]
                )
              ])
            ])
          ])
        ])
      ]
    )
  ])
}
var staticRenderFns = [
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c(
      "label",
      { staticClass: "se-radio-wrapper hover-option-wrapper" },
      [
        _c("span", { staticClass: "se-radio" }, [
          _c("span", { staticClass: "se-radio-inner" }),
          _vm._v(" "),
          _c("input", {
            staticClass: "se-radio-input",
            attrs: { type: "radio", value: "on" }
          })
        ]),
        _vm._v(" "),
        _c("span", [_vm._v("选项一")])
      ]
    )
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c(
      "label",
      { staticClass: "se-radio-wrapper hover-option-wrapper" },
      [
        _c("span", { staticClass: "se-radio" }, [
          _c("span", { staticClass: "se-radio-inner" }),
          _vm._v(" "),
          _c("input", {
            staticClass: "se-radio-input",
            attrs: { type: "radio", value: "on" }
          })
        ]),
        _vm._v(" "),
        _c("span", [_vm._v("选项二")])
      ]
    )
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c(
      "label",
      { staticClass: "se-radio-wrapper hover-option-wrapper" },
      [
        _c("span", { staticClass: "se-radio" }, [
          _c("span", { staticClass: "se-radio-inner" }),
          _vm._v(" "),
          _c("input", {
            staticClass: "se-radio-input",
            attrs: { type: "radio", value: "on" }
          })
        ]),
        _vm._v(" "),
        _c("span", [_vm._v("选项三")])
      ]
    )
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c(
      "label",
      { staticClass: "se-checkbox-wrapper hover-option-wrapper" },
      [
        _c("span", { staticClass: "se-checkbox" }, [
          _c("span", { staticClass: "se-checkbox-inner" }),
          _vm._v(" "),
          _c("input", {
            staticClass: "se-checkbox-input",
            attrs: { type: "checkbox", value: "on" }
          })
        ]),
        _vm._v(" "),
        _c("span", [_vm._v("选项一")])
      ]
    )
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c(
      "label",
      { staticClass: "se-checkbox-wrapper hover-option-wrapper" },
      [
        _c("span", { staticClass: "se-checkbox" }, [
          _c("span", { staticClass: "se-checkbox-inner" }),
          _vm._v(" "),
          _c("input", {
            staticClass: "se-checkbox-input",
            attrs: { type: "checkbox", value: "on" }
          })
        ]),
        _vm._v(" "),
        _c("span", [_vm._v("选项二")])
      ]
    )
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c(
      "label",
      { staticClass: "se-checkbox-wrapper hover-option-wrapper" },
      [
        _c("span", { staticClass: "se-checkbox" }, [
          _c("span", { staticClass: "se-checkbox-inner" }),
          _vm._v(" "),
          _c("input", {
            staticClass: "se-checkbox-input",
            attrs: { type: "checkbox", value: "on" }
          })
        ]),
        _vm._v(" "),
        _c("span", [_vm._v("选项三")])
      ]
    )
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c(
      "div",
      {
        staticClass: "se-form-item-label",
        attrs: { notClose: "toolTipPortal" }
      },
      [
        _c(
          "label",
          {
            staticClass: "se-form-item-required",
            attrs: { notClose: "toolTipPortal", for: "label" }
          },
          [_vm._v("标题")]
        )
      ]
    )
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c(
      "div",
      {
        staticClass: "se-form-item-label",
        attrs: { notClose: "toolTipPortal" }
      },
      [
        _c("label", { attrs: { notClose: "toolTipPortal" } }, [
          _vm._v("提示文字")
        ])
      ]
    )
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c(
      "div",
      {
        staticClass: "se-form-item-label",
        attrs: { notClose: "toolTipPortal" }
      },
      [
        _c(
          "label",
          {
            staticClass: "se-form-item-required",
            attrs: { notClose: "toolTipPortal" }
          },
          [_vm._v("选项设置")]
        )
      ]
    )
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c(
      "div",
      {
        staticClass: "se-form-item-label",
        staticStyle: { width: "50px", float: "left" },
        attrs: { notClose: "toolTipPortal" }
      },
      [_c("label", { attrs: { notClose: "toolTipPortal" } }, [_vm._v("label")])]
    )
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c(
      "div",
      {
        staticClass: "se-form-item-label",
        staticStyle: { width: "60px", float: "left" },
        attrs: { notClose: "toolTipPortal" }
      },
      [_c("label", { attrs: { notClose: "toolTipPortal" } }, [_vm._v("key")])]
    )
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c(
      "div",
      {
        staticClass: "se-form-item-label",
        attrs: { notClose: "toolTipPortal" }
      },
      [
        _c("label", { attrs: { notClose: "toolTipPortal" } }, [
          _vm._v("排列方式")
        ])
      ]
    )
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c(
      "div",
      {
        staticClass: "se-form-item-label",
        attrs: { notClose: "toolTipPortal" }
      },
      [
        _c("label", { attrs: { notClose: "toolTipPortal" } }, [
          _vm._v("时间格式")
        ])
      ]
    )
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c(
      "div",
      {
        staticClass: "se-form-item-label",
        attrs: { notClose: "toolTipPortal" }
      },
      [
        _c("label", { attrs: { notClose: "toolTipPortal" } }, [
          _vm._v("开始时间")
        ])
      ]
    )
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c(
      "div",
      {
        staticClass: "se-form-item-label",
        attrs: { notClose: "toolTipPortal" }
      },
      [_c("label", { attrs: { notClose: "toolTipPortal" } }, [_vm._v("表头")])]
    )
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c(
      "div",
      {
        staticClass: " col-xs-2 se-table-item-label ",
        attrs: { notClose: "toolTipPortal" }
      },
      [
        _c(
          "label",
          {
            staticClass: "label-control",
            attrs: { notClose: "toolTipPortal" }
          },
          [_vm._v("值类型")]
        )
      ]
    )
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c(
      "div",
      {
        staticClass: "se-form-item-label",
        attrs: { notClose: "toolTipPortal" }
      },
      [
        _c("label", { attrs: { notClose: "toolTipPortal" } }, [
          _vm._v("是否允许操作")
        ])
      ]
    )
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c(
      "div",
      {
        staticClass: "se-form-item-label",
        attrs: { notClose: "toolTipPortal" }
      },
      [
        _c("label", { attrs: { notClose: "toolTipPortal" } }, [
          _vm._v("是否只显示表头")
        ])
      ]
    )
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c(
      "div",
      {
        staticClass: "se-form-item-label",
        staticStyle: { display: "none" },
        attrs: { notClose: "toolTipPortal" }
      },
      [
        _c(
          "label",
          {
            staticClass: "se-form-item-required",
            attrs: { notClose: "toolTipPortal" }
          },
          [_vm._v("请求地址类型")]
        )
      ]
    )
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c(
      "div",
      {
        staticClass: "se-form-item-label",
        staticStyle: { "margin-top": "10px" },
        attrs: { notClose: "toolTipPortal" }
      },
      [
        _c(
          "label",
          {
            staticClass: "se-form-item-required",
            attrs: { notClose: "toolTipPortal" }
          },
          [_vm._v("请求地址")]
        )
      ]
    )
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c(
      "div",
      {
        staticClass: "se-form-item-label",
        attrs: { notClose: "toolTipPortal" }
      },
      [
        _c(
          "label",
          {
            staticClass: "se-form-item-required",
            attrs: { notClose: "toolTipPortal" }
          },
          [_vm._v("请求地址")]
        )
      ]
    )
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c(
      "div",
      {
        staticClass: "se-form-item-label",
        attrs: { notClose: "toolTipPortal" }
      },
      [
        _c(
          "label",
          {
            staticClass: "se-form-item-required",
            attrs: { notClose: "toolTipPortal" }
          },
          [_vm._v("请求地址")]
        )
      ]
    )
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c(
      "div",
      {
        staticClass: "se-form-item-label",
        attrs: { notClose: "toolTipPortal" }
      },
      [
        _c("label", { attrs: { notClose: "toolTipPortal" } }, [
          _vm._v("是否能全选")
        ])
      ]
    )
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c(
      "div",
      {
        staticClass: "se-form-item-label",
        attrs: { notClose: "toolTipPortal" }
      },
      [
        _c("label", { attrs: { notClose: "toolTipPortal" } }, [
          _vm._v("是否允许多选")
        ])
      ]
    )
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c(
      "div",
      {
        staticClass: "se-form-item-label",
        attrs: { notClose: "toolTipPortal" }
      },
      [
        _c("label", { attrs: { notClose: "toolTipPortal" } }, [
          _vm._v("是否必填")
        ])
      ]
    )
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "se-popover-message" }, [
      _c("i", {
        staticClass: "jgicon  jgicon-exclamation-circle",
        attrs: { type: "exclamation-circle" }
      }),
      _vm._v(" "),
      _c("div", { staticClass: "se-popover-message-title" }, [
        _vm._v("您确定要删除这个控件吗？")
      ])
    ])
  }
]
render._withStripped = true
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ __webpack_exports__["a"] = (esExports);
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-loader/node_modules/vue-hot-reload-api")      .rerender("data-v-283b66b1", esExports)
  }
}

/***/ }),

/***/ 1694:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    {
      staticStyle: { height: "100%", padding: "10px" },
      attrs: { id: "task-flowchart" }
    },
    [
      _c(
        "el-container",
        [
          _c(
            "el-aside",
            {
              staticStyle: {
                "background-color": "rgb(238, 241, 246)",
                "margin-top": "20px"
              },
              attrs: { width: "300px" }
            },
            [
              _c(
                "el-button",
                {
                  attrs: { type: "text", size: "small" },
                  on: {
                    click: function() {
                      return _vm.appendType("add")
                    }
                  }
                },
                [_vm._v("\n        新增分类\n      ")]
              ),
              _vm._v(" "),
              _c("el-tree", {
                attrs: {
                  "expand-on-click-node": false,
                  "node-key": "id",
                  data: _vm.wrecordTypeData,
                  props: _vm.defaultProps
                },
                on: { "node-click": _vm.handleNodeClick },
                scopedSlots: _vm._u([
                  {
                    key: "default",
                    fn: function(ref) {
                      var node = ref.node
                      var data = ref.data
                      return _c(
                        "span",
                        {
                          staticClass: "fill-width",
                          on: {
                            mouseover: function($event) {
                              _vm.tempAtId = data.id
                            },
                            mouseout: function($event) {
                              _vm.tempAtId = null
                            }
                          }
                        },
                        [
                          _c(
                            "span",
                            {
                              class: {
                                "text-blue":
                                  data.id ==
                                  (_vm.activeTypeItem
                                    ? _vm.activeTypeItem.id
                                    : "")
                              }
                            },
                            [_vm._v(_vm._s(node.label))]
                          ),
                          _vm._v(" "),
                          _c(
                            "span",
                            {
                              directives: [
                                {
                                  name: "show",
                                  rawName: "v-show",
                                  value:
                                    _vm.tempAtId == data.id && !data.parentId,
                                  expression:
                                    "tempAtId == data.id && !data.parentId"
                                }
                              ],
                              staticClass: "tree-right-operate"
                            },
                            [
                              _c(
                                "el-button",
                                {
                                  attrs: { type: "text", size: "mini" },
                                  on: {
                                    click: function($event) {
                                      return _vm.appendType("edit", data)
                                    }
                                  }
                                },
                                [_vm._v("\n              编辑\n            ")]
                              ),
                              _vm._v(" "),
                              _c(
                                "el-button",
                                {
                                  attrs: { type: "text", size: "mini" },
                                  on: {
                                    click: function() {
                                      return _vm.deleteType(data)
                                    }
                                  }
                                },
                                [_vm._v("\n              删除\n            ")]
                              )
                            ],
                            1
                          )
                        ]
                      )
                    }
                  }
                ])
              })
            ],
            1
          ),
          _vm._v(" "),
          (_vm.activeTypeItem
          ? _vm.activeTypeItem.parentId
          : "")
            ? _c(
                "el-container",
                { staticClass: "mar20" },
                [
                  _c(
                    "el-main",
                    [
                      _c("org-no-key-form-component", {
                        ref: "formComponent",
                        attrs: {
                          objProps: _vm.hasKeyComponentList,
                          countNum: _vm.countNum,
                          backStorageKeyArray: _vm.comBackStorageKeyArray
                        },
                        on: { storageData: _vm.storageDataFun }
                      }),
                      _vm._v(" "),
                      _c(
                        "div",
                        { staticClass: "marb20" },
                        [
                          _c(
                            "el-upload",
                            {
                              ref: "uplode",
                              staticClass: "upload-demo mart20",
                              attrs: {
                                headers: {
                                  Authorization: "Bearer " + _vm.userData.token
                                },
                                action:
                                  _vm.$util.basePath +
                                  "/file/" +
                                  _vm.orgId +
                                  "/uplode",
                                "on-preview": _vm.handlePreview,
                                "on-remove": _vm.handleRemove,
                                "on-success": _vm.handleAvatarSuccess,
                                "show-file-list": false,
                                limit: 1,
                                "on-exceed": _vm.handleExceed,
                                "file-list": _vm.fileList
                              }
                            },
                            [
                              _c(
                                "el-button",
                                { attrs: { size: "small", type: "primary" } },
                                [_vm._v("添加模板")]
                              )
                            ],
                            1
                          ),
                          _vm._v(" "),
                          _vm.template
                            ? _c(
                                "div",
                                [
                                  _c(
                                    "el-button",
                                    {
                                      staticClass: "el-button-ma",
                                      staticStyle: { padding: "0" },
                                      attrs: { type: "text" }
                                    },
                                    [
                                      _c(
                                        "span",
                                        {
                                          on: {
                                            click: function($event) {
                                              return _vm.$util.downloadFile(
                                                _vm.template.id
                                              )
                                            }
                                          }
                                        },
                                        [_vm._v(_vm._s(_vm.template.name))]
                                      )
                                    ]
                                  )
                                ],
                                1
                              )
                            : _vm._e()
                        ],
                        1
                      ),
                      _vm._v(" "),
                      _c(
                        "div",
                        {},
                        [
                          _c(
                            "el-row",
                            [
                              _c(
                                "el-button",
                                {
                                  attrs: { size: "small", type: "primary" },
                                  on: { click: _vm.saveCom }
                                },
                                [_vm._v("保存组件")]
                              )
                            ],
                            1
                          )
                        ],
                        1
                      )
                    ],
                    1
                  )
                ],
                1
              )
            : _vm._e()
        ],
        1
      ),
      _vm._v(" "),
      _c(
        "el-dialog",
        {
          staticClass: "add-task-dialog dialog",
          attrs: {
            title: _vm.opearType == "add" ? "新增类型" : "编辑类型",
            visible: _vm.checkFromTypeDialog,
            width: "50%"
          },
          on: {
            "update:visible": function($event) {
              _vm.checkFromTypeDialog = $event
            }
          }
        },
        [
          _c(
            "div",
            { staticClass: "mart20" },
            [
              _c(
                "el-form",
                {
                  ref: "orgForm",
                  attrs: {
                    model: _vm.orgForm,
                    "label-width": "120px",
                    size: "small"
                  }
                },
                [
                  _c(
                    "el-form-item",
                    {
                      attrs: {
                        prop: "name",
                        label: "一级名称",
                        rules: {
                          required: true,
                          message: "请输入组织名称",
                          trigger: "blur"
                        }
                      }
                    },
                    [
                      _c("el-input", {
                        model: {
                          value: _vm.orgForm.name,
                          callback: function($$v) {
                            _vm.$set(_vm.orgForm, "name", $$v)
                          },
                          expression: "orgForm.name"
                        }
                      })
                    ],
                    1
                  ),
                  _vm._v(" "),
                  _c(
                    "el-form-item",
                    {
                      attrs: {
                        prop: "childIds",
                        label: "二级类型",
                        rules: {
                          required: true,
                          message: "请添加二级",
                          trigger: "blur"
                        }
                      }
                    },
                    [
                      _c("el-tree", {
                        ref: "childTree",
                        attrs: {
                          "show-checkbox": "",
                          "expand-on-click-node": false,
                          "node-key": "id",
                          data: _vm.childrenWrecordTypeData,
                          "default-checked-keys": _vm.childrenShowIds,
                          props: _vm.defaultProps
                        }
                      })
                    ],
                    1
                  )
                ],
                1
              )
            ],
            1
          ),
          _vm._v(" "),
          _c(
            "span",
            {
              staticClass: "dialog-footer",
              attrs: { slot: "footer" },
              slot: "footer"
            },
            [
              _c(
                "el-button",
                {
                  on: {
                    click: function($event) {
                      _vm.checkFromTypeDialog = false
                    }
                  }
                },
                [_vm._v("取 消")]
              ),
              _vm._v(" "),
              _c(
                "el-button",
                {
                  attrs: { type: "primary" },
                  on: {
                    click: function($event) {
                      return _vm.submitForm("orgForm")
                    }
                  }
                },
                [_vm._v("确 定")]
              )
            ],
            1
          )
        ]
      )
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ __webpack_exports__["a"] = (esExports);
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-loader/node_modules/vue-hot-reload-api")      .rerender("data-v-0f126f3f", esExports)
  }
}

/***/ }),

/***/ 1695:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    [
      _c(
        "el-container",
        [
          _c(
            "el-aside",
            {
              directives: [
                {
                  name: "show",
                  rawName: "v-show",
                  value: _vm.isCollapse,
                  expression: "isCollapse"
                },
                {
                  name: "loading",
                  rawName: "v-loading",
                  value: _vm.treeLoading,
                  expression: "treeLoading"
                }
              ],
              staticClass: "tree-list-wrap",
              attrs: { width: "350px" }
            },
            [
              _vm.partyListData && _vm.partyListData.length > 0
                ? _c("el-tree", {
                    ref: "typeTree",
                    staticClass: "tree-list",
                    attrs: {
                      data: _vm.partyListData,
                      "node-key": "id",
                      props: _vm.defaultProps,
                      "expand-on-click-node": false
                    },
                    on: { "node-click": _vm.clickPartyTree },
                    scopedSlots: _vm._u(
                      [
                        {
                          key: "default",
                          fn: function(ref) {
                            var node = ref.node
                            var data = ref.data
                            return _c(
                              "span",
                              { staticClass: "custom-tree-node fill-width" },
                              [
                                _c(
                                  "el-tooltip",
                                  {
                                    attrs: {
                                      enterable: false,
                                      content: node.label,
                                      placement: "right-start"
                                    }
                                  },
                                  [
                                    _c("div", [
                                      data.id == _vm.partyId
                                        ? _c("i", {
                                            staticClass:
                                              "el-icon-circle-check text-blue"
                                          })
                                        : _vm._e(),
                                      _vm._v(" "),
                                      _c(
                                        "span",
                                        {
                                          class: {
                                            "text-blue": data.id == _vm.partyId
                                          }
                                        },
                                        [_vm._v(_vm._s(node.label))]
                                      ),
                                      _vm._v(" "),
                                      data.type == "4"
                                        ? _c("i", {
                                            staticClass:
                                              "fa fa-star text-yellow",
                                            attrs: { "aria-hidden": "true" }
                                          })
                                        : _vm._e()
                                    ])
                                  ]
                                )
                              ],
                              1
                            )
                          }
                        }
                      ],
                      null,
                      false,
                      1270458067
                    )
                  })
                : _c("div", { staticClass: "no-tree-data" }, [
                    _c("i", { staticClass: "el-icon-warning warning-icon" }),
                    _vm._v("当前没有任何组织结构\n      ")
                  ])
            ],
            1
          ),
          _vm._v(" "),
          _c(
            "el-container",
            { staticStyle: { position: "relative" } },
            [
              _c("div", [
                _vm.isCollapse
                  ? _c("i", {
                      staticClass: "el-icon-s-fold icon-fold",
                      attrs: { title: "收起" },
                      on: {
                        click: function($event) {
                          _vm.isCollapse = false
                        }
                      }
                    })
                  : _vm._e(),
                _vm._v(" "),
                !_vm.isCollapse
                  ? _c("i", {
                      staticClass: "el-icon-s-unfold icon-fold",
                      attrs: { title: "展开" },
                      on: {
                        click: function($event) {
                          _vm.isCollapse = true
                        }
                      }
                    })
                  : _vm._e()
              ]),
              _vm._v(" "),
              _c(
                "el-row",
                { staticClass: "right-content", attrs: { gutter: 20 } },
                [
                  _c(
                    "el-col",
                    [
                      _c(
                        "el-tabs",
                        {
                          attrs: { type: "card" },
                          model: {
                            value: _vm.activeTab,
                            callback: function($$v) {
                              _vm.activeTab = $$v
                            },
                            expression: "activeTab"
                          }
                        },
                        [
                          _vm.partyId
                            ? _c(
                                "el-tab-pane",
                                { attrs: { label: "组织简介", name: "intro" } },
                                [
                                  _vm.activeTab == "intro"
                                    ? _c("intro", {
                                        attrs: { treeId: _vm.partyId }
                                      })
                                    : _vm._e()
                                ],
                                1
                              )
                            : _vm._e(),
                          _vm._v(" "),
                          _c(
                            "el-tab-pane",
                            {
                              attrs: { label: "组织架构", name: "construction" }
                            },
                            [
                              _c("construction", {
                                ref: "partyConstruction",
                                attrs: { treeId: _vm.partyId || 0 },
                                on: {
                                  treeChanged: _vm.initTree,
                                  treeDeleted: _vm.initTree
                                }
                              })
                            ],
                            1
                          ),
                          _vm._v(" "),
                          _vm.partyId
                            ? _c(
                                "el-tab-pane",
                                {
                                  attrs: { label: "党员花名册", name: "roster" }
                                },
                                [
                                  _vm.activeTab == "roster"
                                    ? _c("roster", {
                                        attrs: { treeId: _vm.partyId }
                                      })
                                    : _vm._e()
                                ],
                                1
                              )
                            : _vm._e(),
                          _vm._v(" "),
                          _vm.partyId
                            ? _c(
                                "el-tab-pane",
                                {
                                  attrs: { label: "班子管理", name: "leader" }
                                },
                                [
                                  _vm.activeTab == "leader"
                                    ? _c("leader", {
                                        attrs: { treeId: _vm.partyId }
                                      })
                                    : _vm._e()
                                ],
                                1
                              )
                            : _vm._e(),
                          _vm._v(" "),
                          _vm.partyId
                            ? _c(
                                "el-tab-pane",
                                {
                                  attrs: {
                                    label: "权限管理",
                                    name: "authority"
                                  }
                                },
                                [
                                  _vm.activeTab == "authority"
                                    ? _c("authority", {
                                        attrs: { treeId: _vm.partyId }
                                      })
                                    : _vm._e()
                                ],
                                1
                              )
                            : _vm._e(),
                          _vm._v(" "),
                          _vm.partyId
                            ? _c(
                                "el-tab-pane",
                                { attrs: { label: "统计图", name: "charts" } },
                                [
                                  _vm.activeTab == "charts"
                                    ? _c("charts", {
                                        attrs: { treeId: _vm.partyId }
                                      })
                                    : _vm._e()
                                ],
                                1
                              )
                            : _vm._e(),
                          _vm._v(" "),
                          _vm.partyId
                            ? _c(
                                "el-tab-pane",
                                {
                                  attrs: { label: "表单调整", name: "fromEdit" }
                                },
                                [
                                  _vm.activeTab == "fromEdit"
                                    ? _c("fromedit", {
                                        attrs: { treeId: _vm.partyId }
                                      })
                                    : _vm._e()
                                ],
                                1
                              )
                            : _vm._e()
                        ],
                        1
                      )
                    ],
                    1
                  )
                ],
                1
              )
            ],
            1
          )
        ],
        1
      )
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ __webpack_exports__["a"] = (esExports);
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-loader/node_modules/vue-hot-reload-api")      .rerender("data-v-6af5d53e", esExports)
  }
}

/***/ })

});